var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.529,1,1.205]],["body/components/AppComponent.html",[0,0.863,1,2.095,2,1.903,3,0.126,4,0.088,5,1.469,6,1.469,7,1.469,8,0.101,9,4.023,10,1.427,11,2.844,12,2.608,13,3.26,14,1.959,15,6.113,16,0.32,17,1.355,18,7.337,19,1.355,20,3.653,21,3.458,22,5.91,23,6.394,24,2.647,25,4.284,26,6.394,27,3.833,28,3.606,29,1.361,30,3.47,31,1.245,32,4.584,33,0.988,34,0.011,35,0.48,36,0.305,37,0.882,38,4.584,39,0.988,40,1.309,41,0.227,42,0.575,43,1.657,44,1.657,45,1.709,46,1.883,47,1.105,48,3.253,49,3.653,50,4.023,51,3.653,52,4.023,53,2.555,54,2.253,55,2.345,56,4.023,57,2.445,58,0.126,59,0.537,60,2.498,61,4.584,62,4.584,63,7.643,64,2.445,65,2.345,66,2.445,67,4.584,68,2.352,69,4.871,70,4.584,71,4.584,72,4.584,73,4.023,74,4.023,75,0.537,76,4.208,77,2.972,78,3.653,79,4.584,80,4.584,81,4.584,82,2.445,83,4.584,84,4.502,85,4.023,86,4.023,87,4.584,88,4.584,89,4.584,90,0.351,91,1.959,92,1.959,93,1.469,94,2.351,95,1.469,96,1.469,97,1.309,98,1.469,99,1.469,100,1.309,101,1.469,102,1.469,103,1.309,104,1.959,105,1.309,106,1.469,107,1.309,108,0.537,109,1.469,110,1.309,111,1.469,112,1.469,113,1.309,114,1.427,115,1.386,116,2.204,117,1.309,118,1.427,119,1.469,120,1.309,121,1.469,122,1.309,123,1.559,124,0.691,125,1.959,126,1.347,127,0.664,128,1.309,129,1.272,130,1.469,131,1.309,132,1.469,133,1.309,134,1.959,135,1.309,136,0.556,137,1.309,138,1.469,139,1.309,140,1.469,141,1.309,142,2.204,143,1.309,144,1.309,145,1.469,146,1.272,147,1.469,148,1.309,149,1.469,150,1.347,151,1.309,152,1.959,153,1.309,154,1.309,155,1.469,156,1.309,157,1.469,158,1.469,159,0.006,160,0.008,161,0.006]],["title/modules/AppModule.html",[162,1.139,163,3.109]],["body/modules/AppModule.html",[1,2.401,3,0.121,4,0.085,8,0.148,22,4.377,23,4.735,26,4.735,34,0.011,41,0.245,42,0.551,43,2.148,44,1.588,47,1.06,48,3.978,49,3.502,50,3.857,51,3.502,52,3.857,56,3.857,58,0.185,59,0.515,84,3.237,90,0.336,113,2.305,115,1.797,117,2.305,135,2.305,137,2.305,154,2.305,159,0.005,160,0.007,161,0.005,162,1.186,163,6.423,164,1.691,165,1.805,166,2.962,167,2.962,168,2.766,169,1.805,170,3.857,171,3.857,172,3.857,173,3.857,174,3.857,175,5.346,176,5.034,177,2.362,178,1.867,179,1.867,180,3.502,181,5.215,182,2.525,183,5.943,184,4.959,185,5.943,186,2.344,187,2.525,188,5.943,189,5.215,190,3.026,191,5.943,192,4.395,193,5.943,194,1.588,195,4.091,196,3.857,197,3.857,198,4.091,199,3.857,200,3.026,201,2.16,202,5.943,203,5.943,204,4.395,205,4.395,206,1.867,207,4.395,208,4.395,209,2.16,210,5.943,211,4.395,212,3.857,213,3.649,214,3.853,215,3.502,216,3.853,217,3.502,218,4.377,219,3.237,220,3.502,221,4.395,222,5.215,223,3.857,224,4.395,225,5.215,226,3.502,227,3.857,228,5.215,229,3.502,230,3.857,231,5.215,232,4.395,233,4.395,234,3.502,235,5.215,236,3.857,237,4.395,238,4.377,239,3.857,240,4.091,241,2.849,242,3.026,243,4.395,244,4.395,245,4.395,246,3.857,247,3.237,248,5.215,249,3.857,250,3.237,251,4.395,252,4.395,253,3.502,254,4.395,255,4.395,256,3.502,257,4.395,258,4.735,259,3.857,260,2.148,261,1.933,262,4.395,263,4.395,264,4.395,265,3.857,266,2.849,267,4.395,268,3.857,269,4.395,270,4.395,271,3.857,272,4.395,273,4.395,274,2.525,275,4.395,276,3.502,277,4.395,278,6.733,279,4.395,280,3.502,281,4.395,282,4.395,283,5.943,284,4.395]],["title/modules/AppRoutingModule.html",[162,1.139,175,2.906]],["body/modules/AppRoutingModule.html",[3,0.168,4,0.118,8,0.135,12,2.156,34,0.011,41,0.202,42,0.767,58,0.168,59,0.717,159,0.008,160,0.009,161,0.008,164,2.354,169,2.513,175,5.052,182,2.599,187,3.118,194,2.211,274,3.464,285,6.117,286,6.117,287,3.914,288,4.193,289,1.56,290,5.199,291,5.368,292,5.368,293,3.756,294,7.318,295,6.117,296,6.117,297,8.154,298,6.006,299,8.154,300,6.117,301,1.601,302,1.82,303,7.339,304,6.117,305,1.372,306,6.117,307,6.117,308,6.117,309,6.117]],["title/injectables/CacheService.html",[310,1.48,311,2.906]],["body/injectables/CacheService.html",[3,0.124,4,0.087,8,0.099,13,2.412,16,0.316,17,1.343,19,1.002,31,1.655,33,1.639,34,0.011,35,0.477,36,0.558,37,1.314,39,1.305,41,0.201,42,0.567,58,0.124,59,0.53,60,2.562,68,2.331,75,0.892,82,3.23,159,0.006,160,0.008,161,0.006,184,5.374,186,2.412,260,2.469,261,3.005,289,1.153,310,2.123,311,4.17,312,2.52,313,3.968,314,0.686,315,5.814,316,2.279,317,8.128,318,6.831,319,6.831,320,7.608,321,6.831,322,3.603,323,6.058,324,5.031,325,6.058,326,1.102,327,4.702,328,4.522,329,5.316,330,1.031,331,1.832,332,4.522,333,7.297,334,1.364,335,4.522,336,2.777,337,2.865,338,2.3,339,4.522,340,0.948,341,6.058,342,4.522,343,4.827,344,6.403,345,4.827,346,4.522,347,4.932,348,4.522,349,2.932,350,1.74,351,2.777,352,4.522,353,6.058,354,4.522,355,5.023,356,2.52,357,2.52,358,6.058,359,2.52,360,4.522,361,4.522,362,4.522,363,5.994,364,4.522,365,4.522,366,4.522,367,4.522,368,6.831,369,6.058,370,6.831,371,7.297,372,6.058,373,6.058,374,4.522,375,3.603,376,4.522,377,4.522,378,4.522,379,4.522,380,1.22,381,4.522,382,4.522,383,6.831,384,4.522,385,4.522,386,3.968,387,6.831,388,6.058,389,4.522,390,4.522,391,6.831,392,3.968,393,4.522,394,4.522,395,4.522,396,3.331,397,4.522,398,4.522,399,1.186,400,3.968,401,4.522,402,4.522,403,4.522,404,4.522,405,2.932,406,2.932,407,3.968,408,4.522,409,4.522]],["title/components/CollapsibleListComponent.html",[0,0.529,97,1.205]],["body/components/CollapsibleListComponent.html",[0,0.841,1,1.245,2,1.84,3,0.12,4,0.084,5,1.397,6,1.397,7,1.397,8,0.096,10,1.357,11,2.835,12,2.599,14,1.894,16,0.305,17,1.31,19,1.486,31,1.711,34,0.011,35,0.413,36,0.527,39,1.274,40,1.688,41,0.12,42,0.547,58,0.12,59,0.511,68,2.275,75,0.881,90,0.334,91,1.894,92,1.894,93,1.397,94,2.304,95,1.397,96,1.397,97,2.053,98,2.583,99,1.397,100,1.245,101,1.397,102,1.397,103,1.245,104,1.894,105,1.245,106,1.397,107,1.245,108,0.511,109,1.397,110,1.245,111,1.397,112,1.397,113,1.245,114,1.357,115,1.318,116,2.149,117,1.245,118,1.357,119,1.397,120,1.245,121,1.397,122,1.245,123,1.507,124,0.677,125,1.894,126,1.281,127,0.651,128,1.245,129,1.21,130,1.397,131,1.245,132,1.397,133,1.245,134,1.894,135,1.245,136,0.529,137,1.245,138,1.397,139,1.245,140,1.397,141,1.245,142,2.149,143,1.245,144,1.245,145,1.397,146,1.21,147,1.397,148,1.245,149,1.397,150,1.281,151,1.245,152,1.894,153,1.245,154,1.245,155,1.397,156,1.245,157,1.397,158,1.397,159,0.005,160,0.007,161,0.005,314,0.669,316,2.266,326,0.963,329,6.798,338,2.272,410,1.439,411,7.419,412,6.737,413,3.827,414,1.84,415,3.057,416,4.069,417,4.354,418,3.832,419,1.951,420,6.706,421,5.911,422,6.706,423,6.706,424,7.748,425,2.953,426,7.189,427,2.796,428,2.027,429,6.706,430,6.706,431,3.737,432,6.706,433,2.027,434,5.911,435,4.361,436,4.71,437,4.361,438,7.189,439,4.361,440,4.361,441,6.706,442,4.361,443,4.361,444,4.361,445,4.361,446,4.361,447,4.361,448,2.275,449,3.748,450,3.002,451,6.706,452,4.361,453,4.361,454,4.361,455,5.911,456,4.361,457,4.361,458,4.361]],["title/components/ConnectErrorComponent.html",[0,0.529,100,1.205]],["body/components/ConnectErrorComponent.html",[0,0.885,1,1.379,2,1.97,3,0.133,4,0.093,5,1.548,6,1.548,7,1.548,8,0.106,10,1.504,11,2.854,12,2.616,14,2.028,16,0.337,19,1.564,31,1.625,34,0.011,35,0.442,36,0.322,41,0.133,42,0.606,58,0.133,59,0.566,75,0.878,90,0.37,91,2.028,92,2.028,93,1.548,94,2.4,95,1.548,96,1.548,97,1.379,98,1.548,99,1.548,100,2.138,101,2.643,102,1.548,103,1.379,104,2.028,105,1.379,106,1.548,107,1.379,108,0.566,109,1.548,110,1.379,111,1.548,112,1.548,113,1.379,114,1.504,115,1.461,116,2.262,117,1.379,118,1.504,119,1.548,120,1.379,121,1.548,122,1.379,123,1.614,124,0.705,125,2.028,126,1.419,127,0.678,128,1.379,129,1.341,130,1.548,131,1.379,132,1.548,133,1.379,134,2.028,135,1.379,136,0.586,137,1.379,138,1.548,139,1.379,140,1.548,141,1.379,142,2.262,143,1.379,144,1.379,145,1.548,146,1.341,147,1.548,148,1.379,149,1.548,150,1.419,151,1.379,152,2.028,153,1.379,154,1.379,155,1.548,156,1.379,157,1.548,158,1.548,159,0.006,160,0.008,161,0.006,261,2.125,316,2.098,338,2.265,347,4.576,410,1.595,419,2.089,427,2.994,449,3.678,459,7.133,460,6.477,461,4.24,462,3.886,463,7.059,464,6.329,465,7.775,466,1.875,467,5.156,468,1.928,469,4.357,470,7.059,471,6.329,472,4.832,473,4.832,474,4.832,475,4.832,476,4.357,477,3.696,478,3.132,479,4.832]],["title/interfaces/ContainsFilter.html",[480,0.461,481,1.077]],["body/interfaces/ContainsFilter.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.696,34,0.011,35,0.565,36,0.576,41,0.164,58,0.24,75,0.412,90,0.389,108,0.813,124,0.616,127,0.675,136,0.616,159,0.004,160,0.006,161,0.004,301,0.716,302,0.871,305,1.116,314,0.865,326,1.204,330,1.158,331,1.607,334,0.95,340,1.394,380,1.371,399,1.333,428,0.948,433,0.948,466,0.847,468,1.622,480,0.951,481,1.296,482,0.948,483,0.922,484,1.823,485,1.639,486,1.872,487,1.925,488,1.925,489,1.925,490,2.081,491,2.099,492,1.656,493,1.72,494,0.922,495,0.975,496,1.439,497,0.801,498,0.801,499,0.824,500,1.897,501,1.126,502,1.565,503,0.975,504,1.41,505,1.61,506,1.296,507,1.61,508,1.951,509,1.897,510,1.333,511,1.815,512,1.79,513,1.656,514,1.41,515,1.41,516,1.41,517,1.095,518,1.925,519,1.41,520,1.6,521,1.371,522,1.41,523,1.41,524,1.41,525,1.371,526,1.41,527,1.439,528,1.41,529,1.41,530,1.371,531,1.158,532,1.333,533,1.371,534,2.062,535,0.975,536,0.975,537,1.41,538,0.975,539,0.975,540,1.371,541,0.975,542,0.975,543,0.975,544,0.975,545,0.975,546,0.975,547,0.975,548,1.41,549,1.371,550,1.565,551,1.371,552,1.191,553,0.847,554,0.801,555,0.896,556,0.975,557,0.847,558,1.41,559,1.191,560,0.847,561,0.847,562,0.975,563,1.225,564,0.896,565,1.399,566,0.975,567,0.948,568,1.439,569,1.48,570,0.922,571,0.896,572,1.26,573,1.48,574,1.333,575,1.361,576,0.847,577,0.975,578,1.844,579,0.975,580,0.948,581,0.948,582,0.948,583,0.948,584,0.948,585,0.948,586,0.948,587,0.948,588,0.975,589,0.948,590,0.975,591,0.975,592,0.871,593,0.948,594,1.225,595,1.191,596,0.896,597,0.736,598,0.948,599,0.871]],["title/modules/CustomPipesModule.html",[162,1.139,600,2.737]],["body/modules/CustomPipesModule.html",[3,0.177,4,0.124,8,0.142,34,0.011,41,0.208,42,0.808,58,0.177,59,0.755,90,0.493,159,0.008,160,0.009,161,0.008,162,1.737,164,2.478,165,2.645,166,3.534,167,2.832,168,2.645,169,3.301,177,3.007,178,2.736,179,2.736,182,2.736,187,3.215,600,5.606,601,5.65,602,5.65,603,5.65,604,6.098,605,6.439,606,6.439,607,6.439,608,6.439]],["title/interfaces/DataSetting.html",[480,0.461,563,1.018]],["body/interfaces/DataSetting.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.697,34,0.011,35,0.579,36,0.575,41,0.164,58,0.24,75,0.413,90,0.39,108,0.767,124,0.617,127,0.676,136,0.617,159,0.004,160,0.006,161,0.004,301,0.717,302,0.873,305,1.117,314,0.865,326,1.205,330,1.16,331,1.608,334,0.951,340,1.394,380,1.373,399,1.335,428,0.95,433,0.95,466,0.849,468,1.623,480,0.952,481,0.898,482,0.95,483,0.924,484,1.81,485,1.639,486,1.612,487,1.658,488,1.658,489,1.658,490,2.082,491,2.1,492,1.658,493,1.722,494,0.924,495,0.977,496,1.441,497,0.803,498,0.803,499,0.826,500,1.898,501,1.128,502,1.567,503,0.977,504,1.412,505,1.612,506,1.298,507,1.612,508,1.952,509,1.898,510,1.335,511,1.817,512,1.791,513,1.658,514,1.412,515,1.412,516,1.412,517,1.097,518,1.927,519,1.412,520,1.6,521,1.373,522,1.412,523,1.412,524,1.412,525,1.373,526,1.412,527,1.441,528,1.412,529,1.412,530,1.373,531,1.16,532,1.335,533,1.373,534,2.098,535,0.977,536,0.977,537,1.412,538,0.977,539,0.977,540,1.373,541,0.977,542,0.977,543,0.977,544,0.977,545,0.977,546,0.977,547,0.977,548,1.412,549,1.373,550,1.567,551,1.873,552,1.193,553,0.849,554,0.803,555,0.898,556,0.977,557,0.849,558,1.412,559,1.193,560,0.849,561,0.849,562,0.977,563,1.441,564,0.898,565,1.401,566,0.977,567,0.95,568,1.441,569,1.482,570,0.924,571,0.898,572,1.262,573,1.482,574,1.335,575,1.362,576,0.849,577,0.977,578,1.845,579,0.977,580,0.95,581,0.95,582,0.95,583,0.95,584,0.95,585,0.95,586,0.95,587,0.95,588,0.977,589,0.95,590,0.977,591,0.977,592,0.873,593,0.95,594,1.227,595,1.193,596,0.898,597,0.738,598,0.95,599,0.873]],["title/interfaces/Filter.html",[108,0.495,480,0.461]],["body/interfaces/Filter.html",[3,0.095,4,0.067,8,0.076,16,0.242,29,0.685,34,0.011,35,0.577,36,0.58,41,0.163,58,0.239,75,0.406,90,0.385,108,0.808,124,0.612,127,0.672,136,0.61,159,0.004,160,0.006,161,0.004,301,0.705,302,0.858,305,1.106,314,0.861,326,1.206,330,1.146,331,1.599,334,0.939,340,1.393,380,1.356,399,1.318,428,1.752,433,1.752,466,0.834,468,1.61,480,0.95,481,0.882,482,0.934,483,0.908,484,1.804,485,1.636,486,1.596,487,1.642,488,1.642,489,1.642,490,2.075,491,2.091,492,1.642,493,1.71,494,0.908,495,0.96,496,1.427,497,0.789,498,0.789,499,0.811,500,1.887,501,1.114,502,1.552,503,0.96,504,1.395,505,1.596,506,1.281,507,1.596,508,1.941,509,1.887,510,1.318,511,1.802,512,1.783,513,1.642,514,1.395,515,1.395,516,1.395,517,1.083,518,1.914,519,1.395,520,1.593,521,1.356,522,1.395,523,1.395,524,1.395,525,1.356,526,1.395,527,1.427,528,1.395,529,1.395,530,1.356,531,1.146,532,1.318,533,1.356,534,2.056,535,0.96,536,0.96,537,1.395,538,0.96,539,0.96,540,1.356,541,0.96,542,0.96,543,0.96,544,0.96,545,0.96,546,0.96,547,0.96,548,1.395,549,1.752,550,1.809,551,1.86,552,1.522,553,0.834,554,0.789,555,0.882,556,0.96,557,0.834,558,1.395,559,1.178,560,0.834,561,0.834,562,0.96,563,1.212,564,0.882,565,1.387,566,0.96,567,0.934,568,1.427,569,1.467,570,0.908,571,0.882,572,1.246,573,1.467,574,1.318,575,1.349,576,0.834,577,0.96,578,1.834,579,0.96,580,0.934,581,0.934,582,0.934,583,0.934,584,0.934,585,0.934,586,0.934,587,0.934,588,0.96,589,0.934,590,0.96,591,0.96,592,0.858,593,0.934,594,1.212,595,1.178,596,0.882,597,0.725,598,0.934,599,0.858]],["title/components/FilterComponent.html",[0,0.529,103,1.205]],["body/components/FilterComponent.html",[0,0.864,1,1.126,2,1.717,3,0.108,4,0.076,5,1.264,6,1.264,7,1.264,8,0.087,10,1.228,11,2.815,12,2.581,14,1.768,16,0.276,17,1.223,19,0.874,24,2.123,31,1.682,33,1.371,34,0.011,35,0.506,36,0.539,37,1.224,39,1.563,40,2.145,41,0.199,42,0.495,45,1.471,46,1.621,47,0.951,58,0.108,59,0.463,66,3.393,75,0.647,90,0.302,91,1.768,92,1.768,93,1.264,94,2.324,95,1.264,96,1.264,97,1.126,98,1.264,99,1.264,100,1.126,101,1.264,102,1.264,103,1.967,104,1.768,105,1.126,106,1.264,107,1.126,108,0.982,109,1.264,110,1.126,111,1.264,112,1.264,113,1.126,114,1.228,115,1.193,116,2.039,117,1.126,118,1.228,119,1.264,120,1.126,121,1.264,122,1.126,123,1.407,124,0.649,125,1.768,126,1.159,127,0.624,128,1.126,129,1.095,130,1.264,131,1.126,132,1.264,133,1.126,134,1.768,135,1.126,136,0.479,137,1.126,138,1.264,139,1.126,140,1.264,141,1.817,142,2.208,143,1.126,144,1.126,145,1.264,146,1.095,147,1.264,148,1.126,149,1.264,150,1.159,151,1.126,152,1.768,153,1.126,154,1.126,155,1.264,156,1.126,157,1.264,158,1.264,159,0.005,160,0.007,161,0.005,260,1.426,261,2.427,266,3.577,289,1.757,293,2.422,301,1.124,314,0.625,316,2.334,326,0.923,337,2.61,338,2.272,347,4.701,359,2.199,410,1.302,414,1.717,415,2.9,419,1.821,425,2.83,427,2.61,449,3.01,469,3.798,476,4.38,477,2.304,520,0.827,552,1.492,557,1.661,559,1.294,597,1.443,609,3.462,610,6.363,611,5.583,612,4.842,613,5.583,614,6.905,615,6.89,616,3.546,617,6.89,618,5.518,619,5.583,620,6.363,621,5.583,622,2.906,623,3.843,624,3.946,625,3.946,626,3.946,627,3.946,628,3.946,629,3.946,630,3.946,631,3.946,632,5.518,633,3.946,634,3.144,635,3.946,636,3.946,637,5.518,638,3.946,639,3.946,640,1.264,641,2.716,642,2.906,643,3.462,644,5.518,645,3.946,646,2.906,647,3.462,648,2.906,649,2.906,650,2.906,651,3.462,652,2.422,653,2.558,654,2.906,655,3.144,656,5.518,657,3.946,658,3.946,659,3.946,660,3.144,661,3.946,662,3.946,663,3.946,664,4.842,665,5.518,666,5.518,667,3.946,668,3.462,669,3.946]],["title/injectables/FilterTreksService.html",[310,1.48,670,2.737]],["body/injectables/FilterTreksService.html",[3,0.102,4,0.072,8,0.082,13,1.979,16,0.259,17,1.171,19,0.823,29,1.046,30,3.172,31,1.648,33,1.723,34,0.011,35,0.558,36,0.538,37,1.538,39,1.699,41,0.202,42,0.466,57,1.979,58,0.102,59,0.435,60,2.627,68,2.58,75,0.435,77,2.406,82,3.928,108,1.02,123,0.947,124,0.714,159,0.005,160,0.007,161,0.005,260,3.088,274,1.577,289,1.71,310,1.852,312,2.069,314,0.598,316,2.09,331,1.67,334,1.494,336,2.279,340,1.299,350,1.428,356,2.069,357,2.069,359,2.069,448,2.034,481,1.878,490,1.933,493,0.92,499,1.572,501,1.851,507,1.001,520,1.405,549,1.001,550,0.974,553,1.951,554,1.205,555,1.933,564,2.01,576,1.274,640,1.189,646,3.892,670,3.426,671,6.51,672,5.297,673,2.555,674,6.154,675,7.565,676,5.285,677,5.285,678,6.154,679,5.285,680,5.285,681,6.706,682,3.712,683,3.712,684,3.712,685,3.712,686,3.712,687,3.712,688,5.285,689,3.712,690,5.285,691,3.712,692,3.712,693,3.712,694,5.285,695,3.712,696,5.285,697,3.712,698,5.285,699,3.257,700,3.712,701,5.647,702,3.712,703,3.712,704,4.211,705,2.957,706,4.236,707,2.957,708,6.154,709,3.712,710,4.637,711,3.712,712,3.712,713,5.285,714,3.712,715,3.712,716,3.712,717,3.257,718,5.285,719,3.712,720,5.285,721,3.712,722,5.285,723,5.285,724,3.712,725,3.712,726,3.712,727,3.712,728,3.712,729,3.712,730,5.4,731,3.712,732,3.712,733,3.712,734,4.211,735,2.555,736,6.154,737,5.285,738,3.712,739,1.898,740,3.712,741,3.712,742,4.637,743,5.285,744,5.285,745,3.712,746,3.712,747,3.712,748,3.712,749,3.712,750,3.712,751,3.712,752,3.712,753,3.712,754,2.406,755,3.712,756,3.712,757,3.257,758,3.257,759,3.712]],["title/interfaces/FilterValue.html",[480,0.461,552,0.99]],["body/interfaces/FilterValue.html",[3,0.095,4,0.067,8,0.076,16,0.241,29,0.683,34,0.011,35,0.577,36,0.577,37,1.382,41,0.162,58,0.239,75,0.405,90,0.384,108,0.76,124,0.611,127,0.671,136,0.608,159,0.004,160,0.006,161,0.004,301,0.703,302,0.856,305,1.104,314,0.86,326,1.205,330,1.143,331,1.598,334,0.937,340,1.397,380,1.353,399,1.315,428,0.931,433,0.931,466,0.832,468,1.608,480,0.95,481,0.88,482,0.931,483,0.905,484,1.803,485,1.635,486,1.594,487,1.639,488,1.639,489,1.639,490,2.074,491,2.09,492,1.639,493,1.708,494,0.905,495,0.958,496,1.424,497,0.787,498,0.787,499,0.809,500,1.885,501,1.112,502,1.549,503,0.958,504,1.392,505,1.594,506,1.279,507,1.594,508,1.939,509,1.885,510,1.315,511,1.8,512,1.781,513,1.639,514,1.392,515,1.392,516,1.392,517,1.081,518,1.912,519,1.392,520,1.648,521,1.353,522,1.392,523,1.392,524,1.392,525,1.353,526,1.392,527,1.424,528,1.392,529,1.392,530,1.353,531,1.143,532,1.315,533,1.353,534,2.055,535,0.958,536,0.958,537,1.392,538,0.958,539,0.958,540,1.353,541,0.958,542,0.958,543,0.958,544,0.958,545,0.958,546,0.958,547,0.958,548,1.392,549,1.353,550,1.885,551,1.353,552,1.385,553,0.832,554,0.787,555,0.88,556,0.958,557,1.563,558,1.912,559,1.615,560,0.832,561,0.832,562,0.958,563,1.209,564,0.88,565,1.385,566,0.958,567,0.931,568,1.424,569,1.465,570,0.905,571,0.88,572,1.244,573,1.465,574,1.315,575,1.347,576,0.832,577,0.958,578,1.833,579,0.958,580,0.931,581,0.931,582,0.931,583,0.931,584,0.931,585,0.931,586,0.931,587,0.931,588,0.958,589,0.931,590,0.958,591,0.958,592,0.856,593,0.931,594,1.209,595,1.176,596,0.88,597,0.723,598,0.931,599,0.856]],["title/components/FilterValueComponent.html",[0,0.529,107,1.205]],["body/components/FilterValueComponent.html",[0,0.88,1,1.362,2,1.954,3,0.131,4,0.092,5,1.529,6,1.529,7,1.529,8,0.105,10,1.485,11,2.852,12,2.614,14,2.012,16,0.333,17,1.391,19,1.555,31,1.619,33,1.028,34,0.011,35,0.49,36,0.496,37,0.918,39,1.353,40,1.792,41,0.173,42,0.599,58,0.131,59,0.559,90,0.365,91,2.012,92,2.012,93,1.529,94,2.389,95,1.529,96,1.529,97,1.362,98,1.529,99,1.529,100,1.362,101,1.529,102,1.529,103,1.362,104,2.012,105,1.362,106,1.529,107,2.128,108,0.964,109,1.529,110,1.362,111,1.529,112,1.529,113,1.362,114,1.485,115,1.443,116,2.248,117,1.362,118,1.485,119,1.529,120,1.362,121,1.529,122,1.362,123,1.601,124,0.702,125,2.012,126,1.402,127,0.675,128,1.362,129,1.324,130,1.529,131,1.362,132,1.529,133,1.362,134,2.012,135,1.362,136,0.579,137,1.362,138,1.529,139,1.362,140,1.529,141,1.362,142,2.248,143,1.362,144,1.362,145,1.529,146,1.324,147,1.529,148,1.362,149,1.529,150,1.402,151,1.362,152,2.012,153,1.362,154,1.362,155,1.529,156,1.362,157,1.529,158,1.529,159,0.006,160,0.008,161,0.006,261,2.099,316,2.011,326,0.841,338,2.539,347,4.548,410,1.575,414,1.954,415,3.198,419,2.072,425,3.062,427,2.969,449,3.318,469,4.321,476,4.321,552,1.864,557,1.15,597,1.47,621,6.156,640,1.529,647,4.187,760,7.112,761,6.458,762,4.187,763,7.016,764,6.278,765,6.278,766,4.772,767,4.772,768,4.772,769,4.772,770,4.772,771,6.278,772,7.016,773,4.772,774,2.545,775,4.772,776,6.278,777,3.802,778,3.802,779,3.802,780,2.345,781,3.285]],["title/components/FiltersComponent.html",[0,0.529,105,1.205]],["body/components/FiltersComponent.html",[0,0.694,1,0.881,2,1.437,3,0.085,4,0.06,5,0.989,6,0.989,7,0.989,8,0.068,10,0.96,11,2.758,12,2.528,14,1.48,16,0.429,17,1.023,19,1.023,21,3.148,24,2.656,27,3.084,28,3.019,29,1.302,30,3.111,31,1.714,33,1.417,34,0.011,35,0.5,36,0.535,37,1.265,39,1.716,40,2.384,41,0.207,42,0.387,47,0.744,53,1.72,54,1.516,55,2.83,57,1.646,58,0.085,59,0.362,60,2.227,68,2.129,75,0.541,82,2.463,90,0.236,91,1.48,92,2.455,93,0.989,94,1.969,95,0.989,96,0.989,97,0.881,98,0.989,99,0.989,100,0.881,101,0.989,102,0.989,103,0.881,104,1.48,105,1.754,106,0.989,107,0.881,108,0.979,109,0.989,110,0.881,111,0.989,112,0.989,113,0.881,114,0.96,115,0.933,116,1.773,117,0.881,118,0.96,119,0.989,120,0.881,121,0.989,122,0.881,123,1.178,124,0.674,125,1.48,126,0.907,127,0.556,128,0.881,129,0.856,130,0.989,131,0.881,132,0.989,133,0.881,134,1.48,135,0.881,136,0.374,137,0.881,138,0.989,139,0.881,140,0.989,141,0.881,142,1.773,143,0.881,144,0.881,145,0.989,146,0.856,147,0.989,148,0.881,149,0.989,150,0.907,151,0.881,152,1.48,153,0.881,154,0.881,155,0.989,156,0.881,157,0.989,158,0.989,159,0.004,160,0.006,161,0.004,213,2.835,260,1.669,261,2.031,289,1.76,293,1.895,314,0.523,316,2.358,326,0.924,334,1.337,337,2.184,338,1.989,340,1.12,350,1.187,410,1.018,414,1.437,415,2.523,419,1.524,425,2.939,427,2.184,431,1.72,448,1.187,449,2.184,466,0.744,477,1.802,478,2.994,484,1.023,499,1.083,520,1.378,552,1.618,564,1.76,597,1.159,623,3.142,634,2.459,640,0.989,646,2.273,652,1.895,660,2.459,670,2,672,2,704,2.459,734,2.459,735,2.124,757,2.708,774,1.646,780,3.233,782,2.708,783,3.392,784,3.232,785,5.534,786,4.618,787,5.534,788,6.578,789,7.156,790,2.573,791,2.573,792,6.143,793,4.229,794,6.143,795,5.534,796,4.618,797,4.229,798,3.66,799,4.618,800,4.618,801,6.143,802,4.409,803,2.273,804,3.232,805,3.423,806,4.618,807,3.401,808,3.086,809,3.086,810,3.086,811,3.086,812,3.086,813,5.534,814,4.618,815,3.086,816,3.086,817,3.086,818,3.086,819,4.618,820,3.086,821,4.618,822,3.086,823,3.086,824,3.232,825,1.802,826,1.802,827,3.086,828,3.086,829,2.8,830,3.086,831,3.086,832,3.086,833,3.588,834,3.086,835,1.802,836,1.895,837,2.459,838,1.802,839,1.646,840,1.802,841,2.124,842,4.618,843,3.086,844,3.086,845,3.086,846,3.086,847,4.618,848,3.086,849,3.086,850,3.086,851,1.802,852,2.459,853,2.708,854,3.086,855,3.086,856,3.086,857,3.086,858,5.534,859,3.086,860,4.618,861,4.618,862,2.708,863,3.086,864,3.086,865,3.086,866,2.459,867,5.534,868,4.618,869,3.086,870,3.086,871,3.086,872,3.086,873,4.618,874,3.086,875,3.086,876,3.086,877,2.708,878,2.273,879,4.052,880,3.086,881,2.273,882,4.618,883,4.052,884,4.618,885,4.618,886,4.618,887,4.618,888,4.618,889,4.076,890,2,891,2,892,1.646,893,1.895,894,2.273,895,2.994,896,2,897,2,898,2.273,899,2,900,2.459,901,2.459,902,2.459,903,2.273,904,2.273,905,2.124,906,3.086,907,2.708,908,3.086,909,3.086]],["title/modules/FiltersComponentModule.html",[162,1.139,910,2.906]],["body/modules/FiltersComponentModule.html",[3,0.175,4,0.123,8,0.14,34,0.011,41,0.232,42,0.8,43,2.306,44,2.306,47,1.539,58,0.175,59,0.748,90,0.488,159,0.008,160,0.009,161,0.008,162,1.722,164,2.456,165,2.621,166,2.807,167,2.807,168,2.621,169,2.621,177,2.991,178,2.711,179,2.711,182,3.198,187,3.198,201,3.699,206,2.711,209,3.136,910,5.885,911,5.6,912,5.6,913,5.885,914,6.382,915,3.699,916,3.727,917,6.382,918,3.264]],["title/components/GeolocateNotificationsComponent.html",[0,0.529,110,1.205]],["body/components/GeolocateNotificationsComponent.html",[0,0.708,1,0.912,2,1.475,3,0.088,4,0.062,5,1.023,6,1.023,7,1.023,8,0.07,10,0.994,11,2.767,12,2.536,14,1.518,16,0.223,17,1.05,19,1.05,20,2.545,21,3.34,24,2.785,25,3.649,31,1.7,33,1.217,34,0.011,35,0.488,36,0.528,37,1.086,39,1.602,40,2.168,41,0.212,42,0.401,43,1.154,44,1.154,45,1.191,46,1.312,47,1.142,48,1.511,58,0.088,59,0.374,60,2.077,64,2.527,65,2.423,66,3.859,68,1.229,69,3.775,75,0.555,82,1.703,90,0.244,91,1.518,92,1.518,93,1.023,94,2.002,95,1.023,96,1.023,97,0.912,98,1.023,99,1.023,100,0.912,101,1.023,102,1.023,103,0.912,104,1.518,105,0.912,106,1.023,107,0.912,108,0.374,109,1.023,110,1.784,111,2.512,112,1.023,113,0.912,114,0.994,115,0.966,116,1.81,117,0.912,118,0.994,119,1.023,120,0.912,121,1.023,122,0.912,123,1.208,124,0.588,125,1.518,126,0.938,127,0.566,128,0.912,129,0.886,130,1.023,131,0.912,132,1.023,133,0.912,134,1.518,135,0.912,136,0.575,137,0.912,138,1.023,139,0.912,140,1.023,141,0.912,142,1.81,143,0.912,144,0.912,145,1.023,146,0.886,147,1.023,148,0.912,149,1.023,150,0.938,151,0.912,152,1.518,153,0.912,154,0.912,155,1.023,156,0.912,157,1.023,158,1.023,159,0.004,160,0.006,161,0.004,225,6.78,226,2.545,227,2.803,261,1.405,274,3.283,289,1.895,301,0.965,314,0.536,316,2.048,326,0.634,327,3.261,338,1.432,340,0.884,345,2.545,347,3.662,350,1.229,410,1.054,414,1.475,415,2.575,419,1.564,425,2.567,427,2.241,448,2.568,449,2.672,467,3.261,468,0.792,469,3.261,476,3.261,485,1.086,490,1.208,493,0.792,509,1.243,565,1.324,616,3.896,640,1.023,653,2.071,705,2.545,706,2.199,707,2.545,784,3.298,798,3.196,829,3.042,919,6.683,920,6.177,921,2.545,922,4.5,923,4.157,924,5.648,925,4.738,926,6.156,927,5.648,928,5.648,929,4.5,930,5.648,931,6.248,932,4.738,933,6.248,934,6.248,935,3.775,936,6.248,937,4.956,938,5.648,939,4.956,940,4.301,941,4.738,942,3.194,943,3.194,944,3.194,945,3.194,946,4.738,947,3.194,948,4.738,949,3.194,950,3.194,951,3.775,952,4.979,953,3.194,954,2.545,955,3.194,956,3.194,957,3.194,958,3.194,959,3.194,960,3.194,961,3.194,962,3.194,963,3.194,964,4.157,965,2.803,966,3.194,967,4.738,968,4.738,969,4.738,970,4.738,971,4.738,972,4.738,973,4.738,974,4.738,975,4.738,976,4.738,977,3.194,978,3.194,979,2.803,980,3.194,981,4.157,982,2.545,983,3.194,984,3.194,985,3.194,986,3.194,987,3.194,988,2.803,989,3.194,990,4.738,991,3.194,992,3.194,993,2.803,994,3.194,995,4.738,996,4.738,997,6.248,998,3.194,999,3.194,1000,3.194,1001,4.738,1002,3.194,1003,4.738,1004,3.194,1005,3.194,1006,3.194,1007,3.194,1008,3.194,1009,3.194,1010,3.194,1011,3.194,1012,3.194,1013,3.194,1014,3.194,1015,3.194,1016,3.194,1017,3.194,1018,3.194,1019,4.738,1020,4.738,1021,3.888,1022,3.194,1023,3.194,1024,3.194,1025,3.194,1026,2.352,1027,3.194,1028,3.194,1029,3.194,1030,2.803,1031,3.194,1032,2.545,1033,1.961,1034,3.194,1035,2.545,1036,3.194,1037,2.545,1038,3.194,1039,2.803,1040,2.199,1041,2.803,1042,3.194,1043,2.803,1044,3.194,1045,3.194,1046,4.738,1047,4.738]],["title/injectables/GeolocateService.html",[310,1.48,940,2.906]],["body/injectables/GeolocateService.html",[3,0.125,4,0.088,8,0.1,13,2.431,16,0.318,17,1.35,19,1.35,21,3.664,24,2.639,25,4.275,31,1.711,33,1.313,34,0.011,35,0.425,36,0.508,37,1.172,39,1.727,40,1.958,41,0.216,42,0.572,43,1.648,44,1.648,45,1.7,46,1.873,47,1.099,48,2.156,58,0.125,59,0.534,60,1.419,64,3.248,65,3.115,66,4.186,68,2.344,75,0.534,159,0.006,160,0.008,161,0.006,190,3.138,218,6.073,219,3.358,220,3.633,260,2.479,261,2.679,274,3.335,289,1.945,310,2.135,312,2.541,314,0.69,316,2.224,326,0.98,334,0.852,338,1.378,350,1.754,357,2.541,448,1.754,462,4.684,616,4.714,833,4.447,929,5.465,940,4.193,1026,3.358,1030,4.001,1048,4.001,1049,7.321,1050,7.321,1051,7.321,1052,7.321,1053,7.321,1054,6.091,1055,7.321,1056,4.559,1057,6.091,1058,4.559,1059,4.559,1060,4.559,1061,4.559,1062,4.559,1063,6.091,1064,4.559,1065,6.091,1066,4.559,1067,4.559,1068,4.853,1069,4.559,1070,6.091,1071,4.559,1072,4.559,1073,4.193,1074,6.091,1075,4.559,1076,4.559,1077,6.091,1078,4.559,1079,3.633,1080,4.559,1081,4.559,1082,4.559,1083,4.559,1084,3.633,1085,4.559,1086,4.559,1087,4.559,1088,4.559,1089,4.559,1090,6.091,1091,4.559,1092,5.465,1093,7.032,1094,5.345,1095,5.345,1096,4.486,1097,5.345,1098,4.001,1099,5.345,1100,6.091,1101,5.345,1102,5.345,1103,5.465,1104,6.091,1105,4.559,1106,4.559,1107,4.559,1108,4.559,1109,4.559,1110,4.559,1111,2.799,1112,4.559,1113,4.559,1114,4.559,1115,4.559,1116,4.559,1117,4.559,1118,4.559,1119,4.559,1120,4.559]],["title/interfaces/HydratedTrek.html",[480,0.461,531,0.962]],["body/interfaces/HydratedTrek.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.697,34,0.011,35,0.565,36,0.579,41,0.164,58,0.24,75,0.413,90,0.39,108,0.767,124,0.617,127,0.676,136,0.617,159,0.004,160,0.006,161,0.004,301,0.717,302,0.873,305,1.117,314,0.906,326,1.204,330,1.16,331,1.608,334,0.951,337,2.407,340,1.394,380,1.373,399,1.335,428,0.95,433,0.95,466,0.849,468,1.623,480,0.952,481,0.898,482,0.95,483,0.924,484,1.824,485,1.62,486,1.612,487,1.658,488,1.658,489,1.658,490,2.098,491,2.1,492,1.658,493,1.722,494,0.924,495,0.977,496,1.441,497,0.803,498,0.803,499,0.826,500,1.898,501,1.128,502,1.567,503,0.977,504,1.412,505,1.612,506,1.298,507,1.612,508,2.1,509,1.898,510,1.335,511,1.817,512,1.791,513,1.658,514,1.412,515,1.412,516,1.412,517,1.097,518,1.927,519,1.412,520,1.6,521,1.373,522,1.412,523,1.412,524,1.412,525,1.373,526,1.412,527,1.441,528,1.412,529,1.412,530,1.373,531,1.362,532,1.717,533,1.373,534,2.063,535,0.977,536,0.977,537,1.412,538,0.977,539,0.977,540,1.373,541,0.977,542,0.977,543,0.977,544,0.977,545,0.977,546,0.977,547,0.977,548,1.412,549,1.373,550,1.567,551,1.373,552,1.193,553,0.849,554,0.803,555,0.898,556,0.977,557,0.849,558,1.412,559,1.193,560,0.849,561,0.849,562,0.977,563,1.227,564,0.898,565,1.401,566,0.977,567,0.95,568,1.441,569,1.482,570,0.924,571,0.898,572,1.262,573,1.482,574,1.335,575,1.362,576,0.849,577,0.977,578,1.845,579,0.977,580,0.95,581,0.95,582,0.95,583,0.95,584,0.95,585,0.95,586,0.95,587,0.95,588,0.977,589,0.95,590,0.977,591,0.977,592,0.873,593,0.95,594,1.227,595,1.193,596,0.898,597,0.738,598,0.95,599,0.873]],["title/interfaces/HydratedTrekProperties.html",[480,0.461,532,1.107]],["body/interfaces/HydratedTrekProperties.html",[3,0.084,4,0.059,8,0.067,16,0.214,29,0.607,34,0.011,35,0.565,36,0.589,37,1.413,41,0.152,58,0.237,75,0.36,90,0.352,108,0.718,124,0.649,127,0.647,136,0.558,159,0.004,160,0.006,161,0.004,301,0.625,302,0.76,305,1.03,314,0.832,326,1.205,330,1.048,331,1.539,334,0.859,340,1.395,380,1.24,399,1.206,428,0.827,433,0.827,466,0.739,468,1.519,480,0.94,481,0.782,482,0.827,483,0.804,484,1.763,485,1.612,486,1.858,487,1.911,488,1.911,489,1.911,490,2.028,491,2.026,492,1.53,493,1.627,494,0.804,495,0.851,496,1.329,497,0.699,498,0.699,499,0.719,500,1.806,501,1.019,502,1.446,503,0.851,504,1.276,505,1.858,506,1.673,507,1.858,508,1.858,509,1.806,510,1.206,511,1.982,512,1.793,513,1.911,514,1.821,515,1.821,516,1.821,517,1.414,518,2.038,519,1.821,520,1.602,521,1.77,522,1.821,523,1.821,524,1.821,525,1.77,526,1.821,527,1.582,528,1.821,529,1.821,530,1.77,531,1.048,532,1.446,533,1.77,534,2.193,535,1.7,536,1.7,537,1.821,538,1.7,539,1.7,540,1.24,541,0.851,542,0.851,543,0.851,544,0.851,545,0.851,546,0.851,547,0.851,548,1.276,549,1.24,550,1.446,551,1.24,552,1.078,553,0.739,554,0.699,555,0.782,556,0.851,557,0.739,558,1.276,559,1.078,560,0.739,561,0.739,562,0.851,563,1.108,564,0.782,565,1.293,566,0.851,567,0.827,568,1.329,569,1.367,570,0.804,571,0.782,572,1.14,573,1.367,574,1.206,575,1.257,576,0.739,577,0.851,578,1.756,579,0.851,580,0.827,581,0.827,582,0.827,583,0.827,584,0.827,585,0.827,586,0.827,587,0.827,588,0.851,589,0.827,590,0.851,591,0.851,592,0.76,593,0.827,594,1.108,595,1.078,596,0.782,597,0.642,598,0.827,599,0.76]],["title/interfaces/InformationDesk.html",[480,0.461,527,1.018]],["body/interfaces/InformationDesk.html",[3,0.092,4,0.064,8,0.073,16,0.233,29,0.659,34,0.011,35,0.573,36,0.585,41,0.159,58,0.239,75,0.391,90,0.374,108,0.748,124,0.601,127,0.664,136,0.593,159,0.004,160,0.006,161,0.004,301,0.678,302,0.826,305,1.082,314,0.852,326,1.207,330,1.114,331,1.581,334,0.914,340,1.396,380,1.319,399,1.282,428,0.899,433,0.899,466,0.803,468,1.581,480,0.947,481,0.85,482,0.899,483,0.874,484,1.791,485,1.628,486,1.562,487,1.607,488,1.607,489,1.607,490,2.061,491,2.071,492,1.607,493,1.684,494,0.874,495,0.925,496,1.396,497,0.759,498,0.759,499,0.781,500,1.862,501,1.083,502,1.518,503,0.925,504,1.356,505,1.562,506,1.246,507,1.562,508,1.915,509,1.862,510,1.282,511,1.77,512,1.855,513,1.607,514,1.356,515,1.356,516,1.356,517,1.053,518,2.088,519,1.356,520,1.576,521,1.319,522,1.356,523,1.356,524,1.356,525,1.319,526,1.356,527,1.538,528,1.356,529,1.356,530,1.319,531,1.114,532,1.282,533,1.319,534,2.079,535,0.925,536,0.925,537,1.356,538,0.925,539,0.925,540,1.832,541,1.77,542,1.77,543,1.77,544,1.77,545,1.77,546,1.77,547,1.77,548,1.885,549,1.319,550,1.518,551,1.319,552,1.146,553,0.803,554,0.759,555,0.85,556,0.925,557,0.803,558,1.356,559,1.146,560,0.803,561,0.803,562,0.925,563,1.178,564,0.85,565,1.357,566,0.925,567,0.899,568,1.396,569,1.435,570,0.874,571,0.85,572,1.212,573,1.435,574,1.282,575,1.32,576,0.803,577,0.925,578,1.81,579,0.925,580,0.899,581,0.899,582,0.899,583,0.899,584,0.899,585,0.899,586,0.899,587,0.899,588,0.925,589,0.899,590,0.925,591,0.925,592,0.826,593,0.899,594,1.178,595,1.146,596,0.85,597,0.698,598,0.899,599,0.826]],["title/components/InformationDeskDetailsComponent.html",[0,0.529,113,1.205]],["body/components/InformationDeskDetailsComponent.html",[0,0.849,1,1.267,2,1.862,3,0.122,4,0.086,5,1.422,6,1.422,7,1.422,8,0.098,10,1.381,11,2.838,12,2.602,14,1.917,16,0.31,17,1.326,19,0.984,24,2.302,31,1.648,33,0.956,34,0.011,35,0.472,36,0.503,37,0.854,39,1.289,40,1.932,41,0.199,42,0.557,45,1.655,46,1.823,47,1.07,58,0.122,59,0.52,75,0.701,90,0.34,91,1.917,92,1.917,93,1.422,94,2.32,95,1.422,96,1.422,97,1.267,98,1.422,99,1.422,100,1.267,101,1.422,102,1.422,103,1.267,104,1.917,105,1.267,106,1.422,107,1.267,108,0.52,109,1.422,110,1.267,111,1.422,112,1.422,113,2.067,114,2.519,115,2.664,116,2.168,117,1.267,118,1.381,119,1.422,120,1.267,121,1.422,122,1.267,123,1.525,124,0.682,125,1.917,126,1.304,127,0.656,128,1.267,129,1.232,130,1.422,131,1.267,132,1.422,133,1.267,134,1.917,135,1.267,136,0.538,137,1.267,138,1.422,139,1.267,140,1.422,141,1.267,142,2.168,143,1.267,144,1.267,145,1.422,146,1.232,147,1.422,148,1.267,149,1.422,150,1.304,151,1.267,152,1.917,153,1.267,154,1.267,155,1.422,156,1.267,157,1.422,158,1.422,159,0.006,160,0.007,161,0.006,250,6.04,314,0.677,316,2.039,326,0.594,338,1.809,410,1.465,419,1.974,527,1.878,540,1.614,623,3.866,640,1.422,793,4.985,803,3.269,807,5.333,878,3.269,1121,7.196,1122,3.536,1123,5.249,1124,5.937,1125,5.249,1126,5.391,1127,6.766,1128,5.705,1129,4.694,1130,5.982,1131,4.438,1132,3.894,1133,3.878,1134,4.438,1135,4.438,1136,5.249,1137,3.894,1138,5.982,1139,4.438,1140,4.438,1141,4.438,1142,4.438,1143,5.982,1144,5.982,1145,5.982,1146,5.982,1147,5.982]],["title/interfaces/InformationIntro.html",[480,0.461,560,1.018]],["body/interfaces/InformationIntro.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.7,34,0.011,35,0.565,36,0.574,41,0.165,58,0.24,75,0.415,90,0.391,108,0.769,124,0.618,127,0.677,136,0.619,159,0.004,160,0.006,161,0.004,301,0.721,302,0.877,305,1.12,314,0.866,326,1.205,330,1.164,331,1.61,334,0.955,340,1.396,380,1.378,399,1.339,428,0.955,433,0.955,466,0.853,468,1.853,480,0.952,481,0.902,482,0.955,483,0.928,484,1.811,485,1.64,486,1.617,487,1.663,488,1.663,489,1.663,490,2.084,491,2.103,492,1.663,493,1.725,494,0.928,495,0.982,496,1.445,497,0.807,498,0.807,499,0.83,500,1.901,501,1.132,502,1.572,503,0.982,504,1.417,505,1.617,506,1.302,507,1.617,508,1.956,509,1.901,510,1.339,511,1.821,512,1.793,513,1.663,514,1.417,515,1.417,516,1.417,517,1.101,518,1.931,519,1.417,520,1.603,521,1.378,522,1.417,523,1.417,524,1.417,525,1.378,526,1.417,527,1.445,528,1.417,529,1.417,530,1.378,531,1.164,532,1.339,533,1.378,534,2.065,535,0.982,536,0.982,537,1.417,538,0.982,539,0.982,540,1.378,541,0.982,542,0.982,543,0.982,544,0.982,545,0.982,546,0.982,547,0.982,548,1.417,549,1.378,550,1.572,551,1.378,552,1.197,553,0.853,554,0.807,555,0.902,556,0.982,557,0.853,558,1.417,559,1.197,560,1.231,561,0.853,562,0.982,563,1.231,564,0.902,565,1.405,566,0.982,567,0.955,568,1.445,569,1.486,570,0.928,571,0.902,572,1.266,573,1.486,574,1.339,575,1.366,576,0.853,577,0.982,578,1.849,579,0.982,580,0.955,581,0.955,582,0.955,583,0.955,584,0.955,585,0.955,586,0.955,587,0.955,588,0.982,589,0.955,590,0.982,591,0.982,592,0.877,593,0.955,594,1.231,595,1.197,596,0.902,597,0.741,598,0.955,599,0.877]],["title/interfaces/InformationItem.html",[480,0.461,561,1.018]],["body/interfaces/InformationItem.html",[3,0.096,4,0.068,8,0.077,16,0.245,29,0.694,34,0.011,35,0.564,36,0.576,41,0.164,58,0.24,75,0.411,90,0.388,108,0.766,124,0.615,127,0.675,136,0.615,159,0.004,160,0.006,161,0.004,301,0.714,302,0.869,305,1.114,314,0.864,326,1.206,330,1.156,331,1.606,334,0.948,340,1.395,380,1.368,399,1.33,428,0.945,433,0.945,466,1.575,468,1.847,480,0.951,481,0.894,482,0.945,483,0.919,484,1.808,485,1.638,486,1.608,487,1.654,488,1.654,489,1.654,490,2.08,491,2.097,492,1.654,493,1.718,494,0.919,495,0.972,496,1.437,497,0.799,498,0.799,499,0.822,500,1.895,501,1.124,502,1.563,503,0.972,504,1.407,505,1.608,506,1.293,507,1.608,508,1.949,509,1.895,510,1.33,511,1.812,512,1.789,513,1.654,514,1.407,515,1.407,516,1.407,517,1.093,518,1.923,519,1.407,520,1.598,521,1.368,522,1.407,523,1.407,524,1.407,525,1.368,526,1.407,527,1.437,528,1.407,529,1.407,530,1.368,531,1.156,532,1.33,533,1.368,534,2.061,535,0.972,536,0.972,537,1.407,538,0.972,539,0.972,540,1.368,541,0.972,542,0.972,543,0.972,544,0.972,545,0.972,546,0.972,547,0.972,548,1.407,549,1.368,550,1.563,551,1.368,552,1.189,553,0.845,554,0.799,555,0.894,556,0.972,557,0.845,558,1.407,559,1.189,560,0.845,561,1.223,562,1.812,563,1.223,564,0.894,565,1.397,566,0.972,567,0.945,568,1.437,569,1.478,570,0.919,571,0.894,572,1.257,573,1.478,574,1.33,575,1.358,576,0.845,577,0.972,578,1.842,579,0.972,580,0.945,581,0.945,582,0.945,583,0.945,584,0.945,585,0.945,586,0.945,587,0.945,588,0.972,589,0.945,590,0.972,591,0.972,592,0.869,593,0.945,594,1.223,595,1.189,596,0.894,597,0.734,598,0.945,599,0.869]],["title/interfaces/IntervalFilter.html",[480,0.461,555,1.077]],["body/interfaces/IntervalFilter.html",[3,0.098,4,0.069,8,0.078,16,0.248,29,0.703,34,0.011,35,0.566,36,0.575,41,0.165,58,0.24,75,0.417,90,0.392,108,0.817,124,0.619,127,0.678,136,0.621,159,0.004,160,0.006,161,0.004,301,0.724,302,0.881,305,1.123,314,0.867,326,1.205,330,1.168,331,1.612,334,0.957,340,1.394,380,1.382,399,1.344,428,0.959,433,0.959,466,0.857,468,1.63,480,0.952,481,0.906,482,0.959,483,0.932,484,1.827,485,1.641,486,1.62,487,1.667,488,1.667,489,1.667,490,2.085,491,2.105,492,1.667,493,1.728,494,0.932,495,0.986,496,1.448,497,0.81,498,0.81,499,0.833,500,1.904,501,1.135,502,1.575,503,0.986,504,1.422,505,1.62,506,1.306,507,1.62,508,1.958,509,1.904,510,1.344,511,1.824,512,1.795,513,1.667,514,1.422,515,1.422,516,1.422,517,1.104,518,1.934,519,1.422,520,1.604,521,1.382,522,1.422,523,1.422,524,1.422,525,1.382,526,1.422,527,1.448,528,1.422,529,1.422,530,1.382,531,1.168,532,1.344,533,1.382,534,2.067,535,0.986,536,0.986,537,1.422,538,0.986,539,0.986,540,1.382,541,0.986,542,0.986,543,0.986,544,0.986,545,0.986,546,0.986,547,0.986,548,1.422,549,1.382,550,1.575,551,1.382,552,1.201,553,0.857,554,0.81,555,1.306,556,0.986,557,0.857,558,1.422,559,1.201,560,0.857,561,0.857,562,0.986,563,1.235,564,0.906,565,1.408,566,0.986,567,0.959,568,1.448,569,1.489,570,0.932,571,0.906,572,1.27,573,1.489,574,1.344,575,1.369,576,0.857,577,0.986,578,1.851,579,0.986,580,0.959,581,0.959,582,0.959,583,0.959,584,0.959,585,0.959,586,0.959,587,0.959,588,0.986,589,0.959,590,0.986,591,0.986,592,0.881,593,0.959,594,1.235,595,1.201,596,0.906,597,0.745,598,0.959,599,0.881]],["title/components/LayersVisibilityComponent.html",[0,0.529,117,1.205]],["body/components/LayersVisibilityComponent.html",[0,0.891,1,1.398,2,1.987,3,0.135,4,0.095,5,1.57,6,1.57,7,1.57,8,0.108,10,1.524,11,2.856,12,2.618,14,2.046,16,0.342,17,1.415,19,1.086,31,1.59,33,1.376,34,0.011,35,0.526,36,0.501,37,1.228,39,1.376,40,1.823,41,0.175,42,0.614,47,1.181,58,0.135,59,0.574,90,0.375,91,2.046,92,2.046,93,1.57,94,2.413,95,1.57,96,1.57,97,1.398,98,1.57,99,1.57,100,1.398,101,1.57,102,1.57,103,1.398,104,2.046,105,1.398,106,1.57,107,1.398,108,0.574,109,1.57,110,1.398,111,1.57,112,1.57,113,1.398,114,1.524,115,1.481,116,2.277,117,2.15,118,2.645,119,1.57,120,1.398,121,1.57,122,1.398,123,1.628,124,0.709,125,2.046,126,1.439,127,0.682,128,1.398,129,1.359,130,1.57,131,1.398,132,1.57,133,1.398,134,2.046,135,1.398,136,0.594,137,1.398,138,1.57,139,1.398,140,1.57,141,1.398,142,2.277,143,1.398,144,1.398,145,1.57,146,1.359,147,1.57,148,1.398,149,1.57,150,1.439,151,1.398,152,2.046,153,1.398,154,1.398,155,1.57,156,1.398,157,1.57,158,1.57,159,0.006,160,0.008,161,0.006,253,6.38,314,0.723,316,1.917,359,2.729,410,1.616,419,2.108,774,2.612,777,3.902,778,3.902,779,3.902,780,2.407,781,3.371,1128,5.512,1129,4.881,1148,7.026,1149,4.298,1150,5.603,1151,7.105,1152,6.386,1153,7.105,1154,6.386,1155,4.298,1156,6.386,1157,4.898,1158,6.386,1159,4.898,1160,4.898,1161,4.898,1162,4.898,1163,4.898,1164,4.898,1165,4.898,1166,4.298,1167,6.386]],["title/components/LoaderComponent.html",[0,0.529,120,1.205]],["body/components/LoaderComponent.html",[0,0.865,1,1.317,2,1.911,3,0.127,4,0.089,5,1.478,6,1.478,7,1.478,8,0.101,10,1.436,11,2.846,12,2.609,14,1.967,16,0.429,17,1.361,19,1.023,31,1.637,33,0.994,34,0.011,35,0.482,36,0.51,37,0.887,39,0.994,40,1.753,41,0.202,42,0.579,58,0.127,59,0.541,60,2.147,75,0.72,90,0.353,91,1.967,92,1.967,93,1.478,94,2.357,95,1.478,96,1.478,97,1.317,98,1.478,99,1.478,100,1.317,101,1.478,102,1.478,103,1.317,104,1.967,105,1.317,106,1.478,107,1.317,108,0.541,109,1.478,110,1.317,111,1.478,112,1.478,113,1.317,114,1.436,115,1.395,116,2.211,117,1.317,118,1.436,119,1.478,120,2.1,121,1.478,122,1.317,123,1.566,124,0.693,125,1.967,126,1.355,127,0.666,128,1.317,129,1.28,130,1.478,131,1.317,132,1.478,133,1.317,134,1.967,135,1.317,136,0.56,137,1.317,138,1.478,139,1.317,140,1.478,141,1.317,142,2.211,143,1.317,144,1.317,145,1.478,146,1.28,147,1.478,148,1.317,149,1.478,150,1.355,151,1.317,152,1.967,153,1.317,154,1.317,155,1.478,156,1.317,157,1.478,158,1.478,159,0.006,160,0.008,161,0.006,200,3.176,213,4.516,314,0.695,316,2.168,334,1.375,338,1.856,350,1.775,356,2.571,396,4.522,410,1.523,414,1.911,419,2.026,427,2.904,431,2.571,449,3.264,466,1.112,520,1.541,557,1.112,780,3.017,784,4.029,798,3.762,829,3.145,889,3.398,890,2.991,891,2.991,892,2.46,893,2.833,894,3.398,895,3.98,896,2.991,897,2.991,898,3.398,899,2.991,900,3.676,901,3.676,902,3.676,903,3.398,904,3.398,905,4.75,1073,3.176,1111,2.833,1137,4.049,1168,4.049,1169,6.9,1170,6.139,1171,6.911,1172,4.769,1173,6.9,1174,6.9,1175,3.176,1176,4.472,1177,6.139,1178,4.614,1179,4.614,1180,4.614,1181,4.614,1182,4.614,1183,4.049,1184,4.614,1185,4.614,1186,4.614,1187,5.387,1188,4.049,1189,4.049,1190,4.049,1191,4.614,1192,4.049,1193,4.614,1194,4.614]],["title/interceptors/LoadingInterceptor.html",[176,2.737,1195,3.704]],["body/interceptors/LoadingInterceptor.html",[3,0.147,4,0.103,8,0.118,13,2.855,16,0.374,17,1.498,19,1.498,31,1.377,33,1.457,34,0.011,35,0.472,36,0.45,37,1.3,39,1.153,40,1.93,41,0.214,42,0.671,58,0.186,59,0.792,60,1.666,68,2.601,123,1.365,159,0.007,160,0.008,161,0.007,176,4.383,186,2.855,260,2.813,261,2.974,289,1.985,310,2.597,316,1.444,326,1.098,331,1.677,349,3.47,350,2.06,351,3.287,355,3.685,356,2.983,357,2.983,405,3.47,406,3.47,414,1.666,418,3.47,485,1.3,520,1.121,739,2.738,774,2.855,833,4.383,1073,3.685,1172,4.804,1175,3.685,1176,4.545,1196,5.353,1197,4.265,1198,6.502,1199,5.353,1200,5.353,1201,6.83,1202,5.457,1203,6.83,1204,5.353,1205,5.932,1206,5.932,1207,5.932,1208,5.932,1209,4.697,1210,4.697,1211,4.697,1212,6.502,1213,4.697,1214,5.932,1215,4.697,1216,4.697,1217,4.697,1218,4.697,1219,4.697,1220,4.697,1221,4.697,1222,4.697,1223,4.697,1224,4.697,1225,5.932,1226,4.697,1227,4.697,1228,4.697,1229,4.697,1230,5.932,1231,4.697,1232,4.697,1233,4.697,1234,4.697,1235,4.697,1236,4.697,1237,4.697,1238,4.697,1239,4.697,1240,4.697,1241,4.697,1242,5.932]],["title/injectables/LoadingService.html",[310,1.48,1176,2.465]],["body/injectables/LoadingService.html",[3,0.14,4,0.099,8,0.112,13,2.724,16,0.357,17,1.454,19,1.607,31,1.649,33,1.562,34,0.011,35,0.506,36,0.482,37,1.394,39,1.562,40,2.184,41,0.21,42,0.641,58,0.18,59,0.769,60,2.256,68,2.525,75,0.769,123,1.302,159,0.006,160,0.008,161,0.006,176,3.311,186,2.724,260,2.765,261,3.365,289,1.951,310,2.541,312,2.846,314,0.743,316,1.956,326,1.152,331,1.648,336,3.136,338,1.984,349,3.311,350,1.965,351,3.136,355,3.516,356,2.846,357,2.846,405,3.311,406,3.311,414,1.59,418,3.311,485,1.522,520,1.07,739,2.612,774,2.724,833,4.7,1073,4.99,1172,4.254,1176,4.233,1197,4.069,1198,4.482,1201,5.757,1202,3.762,1203,5.757,1205,4.482,1206,5.757,1207,5.757,1208,5.757,1209,5.757,1210,4.482,1211,6.361,1212,6.361,1213,4.482,1214,5.757,1215,4.482,1216,4.482,1217,4.482,1218,6.361,1219,4.482,1220,4.482,1221,4.482,1222,5.757,1223,4.482,1224,4.482,1225,5.757,1226,5.757,1227,4.482,1228,4.482,1229,4.482,1230,5.757,1231,5.757,1232,4.482,1233,4.482,1234,4.482,1235,4.482,1236,4.482,1237,4.482,1238,4.482,1239,4.482,1240,4.482,1241,4.482,1242,5.757,1243,6.561,1244,5.757,1245,6.561,1246,5.107,1247,5.107,1248,5.107,1249,5.107]],["title/pipes/LowerRoundPipe.html",[604,2.906,754,2.737]],["body/pipes/LowerRoundPipe.html",[3,0.179,4,0.126,8,0.144,10,2.033,17,1.448,31,1.33,33,1.407,34,0.011,35,0.564,36,0.435,37,1.256,39,1.407,41,0.179,42,0.819,58,0.179,59,0.766,159,0.008,160,0.009,161,0.008,260,2.36,338,1.975,340,1.329,414,2.033,604,5.252,754,4.946,1250,6.532,1251,6.695,1252,5.731,1253,6.695,1254,5.731,1255,7.63,1256,6.532,1257,7.63,1258,6.532]],["title/components/MapTreksVizComponent.html",[0,0.529,122,1.205]],["body/components/MapTreksVizComponent.html",[0,0.654,1,0.649,2,1.134,3,0.062,4,0.124,5,0.729,6,0.729,7,0.729,8,0.05,10,0.708,11,2.669,12,2.447,14,1.168,16,0.364,17,0.808,19,0.808,21,2.815,24,1.755,25,3.046,29,0.903,30,2.467,31,1.632,33,0.983,34,0.011,35,0.447,36,0.539,37,0.877,39,1.433,40,1.827,41,0.207,42,0.285,43,0.822,44,0.822,45,1.359,46,0.934,47,0.548,48,1.076,57,1.213,58,0.062,59,0.267,60,2.4,64,1.943,65,1.864,66,3.412,68,1.755,75,0.267,77,2.957,82,1.943,90,0.174,91,1.168,92,1.461,93,0.729,94,1.672,95,0.729,96,0.729,97,0.649,98,0.729,99,0.729,100,0.649,101,0.729,102,0.729,103,0.649,104,1.168,105,0.649,106,0.729,107,0.649,108,0.669,109,0.729,110,0.649,111,1.672,112,0.729,113,0.649,114,0.708,115,0.687,116,1.461,117,0.649,118,1.419,119,0.729,120,0.649,121,0.729,122,1.489,123,1.985,124,0.819,125,1.168,126,0.668,127,0.691,128,0.649,129,1.011,130,0.729,131,0.649,132,0.729,133,0.649,134,1.168,135,0.649,136,0.276,137,0.649,138,0.729,139,0.649,140,0.729,141,0.649,142,1.461,143,0.649,144,1.302,145,0.729,146,0.631,147,0.729,148,0.649,149,0.729,150,0.668,151,0.649,152,1.168,153,0.649,154,0.649,155,0.729,156,0.649,157,0.729,158,0.729,159,0.003,160,0.005,161,0.003,177,2.421,228,5.346,229,1.812,230,1.995,260,0.822,261,2.925,274,0.966,289,2.056,293,1.396,301,1.162,305,0.852,314,0.413,316,1.898,326,0.764,327,1.565,331,0.785,334,0.975,338,0.687,340,0.817,347,3.701,350,0.875,396,1.675,399,0.596,400,1.995,410,0.75,414,1.134,419,1.203,425,1.873,427,1.724,436,1.812,448,2.197,449,2.881,462,1.396,467,3.139,469,2.509,476,3.139,477,2.663,478,1.474,484,0.808,485,1.279,490,1.696,491,0.983,493,1.587,494,1.196,496,1.1,497,0.518,498,0.831,500,1.598,501,1.011,506,1.163,508,0.613,509,1.196,520,0.763,531,0.518,554,0.831,559,1.338,563,1.469,576,1.1,595,1.069,597,0.955,616,3.395,623,3.273,640,0.729,641,1.565,648,1.675,649,1.675,650,1.675,652,2.238,653,1.474,654,1.675,655,1.812,675,3.198,701,2.904,739,2.92,783,2.994,784,2.663,790,2.031,791,2.031,798,3.273,824,2.663,825,1.328,826,1.328,829,1.037,835,1.328,840,1.328,851,2.128,881,1.675,890,2.363,892,1.943,893,2.238,895,2.363,897,1.474,899,1.474,905,2.509,922,3.634,926,5.099,935,2.904,940,3.591,951,2.904,952,4.156,954,1.812,964,3.198,965,1.995,982,1.812,993,1.995,1021,4.194,1026,1.675,1032,1.812,1033,1.396,1035,1.812,1037,1.812,1079,1.812,1096,1.675,1111,1.396,1202,1.675,1259,6.302,1260,5.825,1261,1.812,1262,3.644,1263,4.56,1264,3.644,1265,4.56,1266,4.56,1267,6.092,1268,5.216,1269,5.216,1270,5.216,1271,4.56,1272,4.56,1273,3.634,1274,3.634,1275,2.274,1276,3.644,1277,2.274,1278,2.274,1279,2.274,1280,2.274,1281,2.274,1282,2.274,1283,2.274,1284,2.274,1285,2.274,1286,3.644,1287,3.644,1288,2.274,1289,2.274,1290,2.274,1291,2.274,1292,2.274,1293,2.274,1294,3.644,1295,2.274,1296,4.56,1297,2.274,1298,2.274,1299,2.274,1300,2.274,1301,3.644,1302,3.644,1303,1.675,1304,1.995,1305,2.274,1306,2.274,1307,1.675,1308,1.812,1309,1.995,1310,2.274,1311,3.644,1312,2.274,1313,2.274,1314,2.274,1315,2.274,1316,2.274,1317,2.274,1318,2.274,1319,2.274,1320,5.216,1321,3.644,1322,2.274,1323,6.65,1324,3.842,1325,2.274,1326,2.274,1327,2.274,1328,2.904,1329,3.644,1330,1.474,1331,2.274,1332,2.274,1333,2.274,1334,2.274,1335,1.995,1336,2.274,1337,2.274,1338,3.644,1339,2.274,1340,2.274,1341,2.274,1342,2.274,1343,3.644,1344,2.274,1345,2.274,1346,2.274,1347,4.56,1348,2.274,1349,2.274,1350,3.198,1351,1.812,1352,2.274,1353,2.274,1354,2.274,1355,2.274,1356,2.274,1357,2.274,1358,2.274,1359,2.274,1360,1.995,1361,1.995,1362,2.274,1363,2.274,1364,2.274,1365,2.274,1366,2.274,1367,2.274,1368,2.274,1369,2.274,1370,2.274,1371,2.274,1372,2.274,1373,3.359,1374,2.274,1375,2.274,1376,2.274,1377,2.274,1378,5.709,1379,2.274,1380,3.644,1381,2.274,1382,2.274,1383,2.274,1384,2.274,1385,2.274,1386,2.274,1387,2.274,1388,2.274,1389,2.274,1390,2.274,1391,2.274,1392,1.995,1393,4.56,1394,1.995,1395,4.577,1396,2.274,1397,2.274,1398,2.274,1399,6.092,1400,5.216,1401,2.274,1402,1.995,1403,2.274,1404,5.709,1405,6.019,1406,5.216,1407,4.002,1408,3.644,1409,2.274,1410,3.198,1411,1.995,1412,3.198,1413,1.995,1414,2.274,1415,1.995,1416,1.995,1417,2.904,1418,1.995,1419,1.995,1420,3.644,1421,2.274,1422,2.274,1423,2.274,1424,2.274,1425,2.274,1426,2.274,1427,1.995,1428,2.274,1429,3.644,1430,3.644,1431,3.644,1432,3.644,1433,2.274,1434,3.644,1435,3.644,1436,2.274,1437,1.995,1438,3.644,1439,2.274,1440,2.274,1441,5.709,1442,2.274,1443,2.274,1444,2.274,1445,2.274,1446,2.274,1447,2.274,1448,2.274,1449,2.274,1450,2.274,1451,3.644,1452,5.216,1453,3.644,1454,3.644,1455,2.274,1456,2.274,1457,2.274,1458,1.995,1459,2.274,1460,2.274,1461,2.274,1462,3.198,1463,3.198,1464,2.684,1465,2.274,1466,2.274,1467,2.274,1468,2.274,1469,2.274,1470,2.274,1471,2.274,1472,2.274,1473,2.274,1474,2.274,1475,2.274,1476,2.274,1477,2.274,1478,1.995,1479,1.995,1480,2.274,1481,2.274,1482,2.274,1483,2.274,1484,2.274,1485,2.274,1486,2.274,1487,2.274,1488,2.274,1489,2.274,1490,2.274,1491,1.812,1492,1.995,1493,1.995,1494,1.812,1495,1.675,1496,3.198]],["title/interfaces/MinimalTrek.html",[480,0.461,501,0.936]],["body/interfaces/MinimalTrek.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.697,34,0.011,35,0.565,36,0.579,41,0.164,58,0.24,75,0.413,90,0.39,108,0.767,124,0.617,127,0.676,136,0.617,159,0.004,160,0.006,161,0.004,301,0.717,302,0.873,305,1.117,314,0.906,326,1.204,330,1.16,331,1.608,334,0.951,337,2.407,340,1.394,380,1.373,399,1.335,428,0.95,433,0.95,466,0.849,468,1.623,480,0.952,481,0.898,482,0.95,483,0.924,484,1.824,485,1.62,486,1.612,487,1.658,488,1.658,489,1.658,490,2.098,491,2.1,492,1.658,493,1.722,494,0.924,495,0.977,496,1.441,497,0.803,498,0.803,499,0.826,500,1.898,501,1.324,502,1.821,503,0.977,504,1.412,505,1.612,506,1.298,507,1.612,508,2.1,509,1.898,510,1.335,511,1.817,512,1.791,513,1.658,514,1.412,515,1.412,516,1.412,517,1.097,518,1.927,519,1.412,520,1.6,521,1.373,522,1.412,523,1.412,524,1.412,525,1.373,526,1.412,527,1.441,528,1.412,529,1.412,530,1.373,531,1.16,532,1.335,533,1.373,534,2.063,535,0.977,536,0.977,537,1.412,538,0.977,539,0.977,540,1.373,541,0.977,542,0.977,543,0.977,544,0.977,545,0.977,546,0.977,547,0.977,548,1.412,549,1.373,550,1.567,551,1.373,552,1.193,553,0.849,554,0.803,555,0.898,556,0.977,557,0.849,558,1.412,559,1.193,560,0.849,561,0.849,562,0.977,563,1.227,564,0.898,565,1.401,566,0.977,567,0.95,568,1.441,569,1.482,570,0.924,571,0.898,572,1.262,573,1.482,574,1.335,575,1.362,576,0.849,577,0.977,578,1.845,579,0.977,580,0.95,581,0.95,582,0.95,583,0.95,584,0.95,585,0.95,586,0.95,587,0.95,588,0.977,589,0.95,590,0.977,591,0.977,592,0.873,593,0.95,594,1.227,595,1.193,596,0.898,597,0.738,598,0.95,599,0.873]],["title/interfaces/MinimalTrekProperties.html",[480,0.461,502,1.107]],["body/interfaces/MinimalTrekProperties.html",[3,0.093,4,0.066,8,0.075,16,0.237,29,0.673,34,0.011,35,0.575,36,0.582,41,0.161,58,0.239,75,0.399,90,0.38,108,0.755,124,0.606,127,0.668,136,0.602,159,0.004,160,0.006,161,0.004,301,0.692,302,0.843,305,1.095,314,0.857,326,1.204,330,1.131,331,1.591,334,0.927,337,2.346,340,1.401,380,1.338,399,1.301,428,0.917,433,0.917,466,0.82,468,1.597,480,0.949,481,0.867,482,0.917,483,0.892,484,1.798,485,1.632,486,1.929,487,1.984,488,1.984,489,1.984,490,2.069,491,2.082,492,1.625,493,1.698,494,0.892,495,0.943,496,1.412,497,0.775,498,0.775,499,0.797,500,1.875,501,1.099,502,1.689,503,1.787,504,1.377,505,1.929,506,1.746,507,1.929,508,1.929,509,1.875,510,1.301,511,1.787,512,1.774,513,1.625,514,1.377,515,1.377,516,1.377,517,1.069,518,1.9,519,1.377,520,1.585,521,1.338,522,1.377,523,1.377,524,1.377,525,1.338,526,1.377,527,1.412,528,1.377,529,1.377,530,1.338,531,1.131,532,1.301,533,1.338,534,2.049,535,0.943,536,0.943,537,1.377,538,0.943,539,0.943,540,1.338,541,0.943,542,0.943,543,0.943,544,0.943,545,0.943,546,0.943,547,0.943,548,1.377,549,1.338,550,1.536,551,1.338,552,1.163,553,0.82,554,0.775,555,0.867,556,0.943,557,0.82,558,1.377,559,1.163,560,0.82,561,0.82,562,0.943,563,1.196,564,0.867,565,1.373,566,0.943,567,0.917,568,1.412,569,1.452,570,0.892,571,0.867,572,1.23,573,1.452,574,1.301,575,1.335,576,0.82,577,0.943,578,1.823,579,0.943,580,0.917,581,0.917,582,0.917,583,0.917,584,0.917,585,0.917,586,0.917,587,0.917,588,0.943,589,0.917,590,0.943,591,0.943,592,0.843,593,0.917,594,1.196,595,1.163,596,0.867,597,0.712,598,0.917,599,0.843]],["title/interfaces/MinimalTreks.html",[480,0.461,499,0.99]],["body/interfaces/MinimalTreks.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.697,34,0.011,35,0.579,36,0.578,41,0.164,58,0.24,75,0.413,90,0.39,108,0.767,124,0.617,127,0.676,136,0.617,159,0.004,160,0.006,161,0.004,301,0.717,302,0.873,305,1.117,314,0.865,326,1.205,330,1.16,331,1.608,334,0.951,340,1.394,380,1.373,399,1.335,428,0.95,433,0.95,466,0.849,468,1.623,480,0.952,481,0.898,482,0.95,483,0.924,484,1.81,485,1.62,486,1.612,487,1.658,488,1.658,489,1.658,490,2.082,491,2.1,492,1.658,493,1.722,494,0.924,495,0.977,496,1.441,497,0.803,498,0.803,499,1.193,500,2.042,501,1.451,502,1.567,503,0.977,504,1.412,505,1.612,506,1.298,507,1.612,508,1.952,509,1.898,510,1.335,511,1.817,512,1.791,513,1.658,514,1.412,515,1.412,516,1.412,517,1.097,518,1.927,519,1.412,520,1.6,521,1.373,522,1.412,523,1.412,524,1.412,525,1.373,526,1.412,527,1.441,528,1.412,529,1.412,530,1.373,531,1.16,532,1.335,533,1.373,534,2.063,535,0.977,536,0.977,537,1.412,538,0.977,539,0.977,540,1.373,541,0.977,542,0.977,543,0.977,544,0.977,545,0.977,546,0.977,547,0.977,548,1.412,549,1.373,550,1.567,551,1.373,552,1.193,553,0.849,554,0.803,555,0.898,556,0.977,557,0.849,558,1.412,559,1.193,560,0.849,561,0.849,562,0.977,563,1.227,564,0.898,565,1.401,566,0.977,567,0.95,568,1.441,569,1.482,570,0.924,571,0.898,572,1.262,573,1.482,574,1.335,575,1.362,576,0.849,577,0.977,578,1.845,579,0.977,580,0.95,581,0.95,582,0.95,583,0.95,584,0.95,585,0.95,586,0.95,587,0.95,588,0.977,589,0.95,590,0.977,591,0.977,592,0.873,593,0.95,594,1.227,595,1.193,596,0.898,597,0.738,598,0.95,599,0.873]],["title/injectables/MoreInformationsService.html",[310,1.48,1497,2.906]],["body/injectables/MoreInformationsService.html",[3,0.154,4,0.108,8,0.123,13,2.985,16,0.391,17,1.541,19,1.541,24,2.91,25,4.619,31,1.611,33,1.498,34,0.011,35,0.485,36,0.463,37,1.337,39,1.498,41,0.231,42,0.702,43,2.023,44,2.023,45,2.087,46,2.299,58,0.154,59,0.656,60,2.531,75,0.656,76,4.786,159,0.007,160,0.009,161,0.007,186,2.985,260,2.513,261,3.058,289,1.773,310,2.437,311,5.445,312,3.12,314,0.787,315,5.54,316,2.236,331,1.753,338,1.692,340,1.184,350,2.154,357,3.12,485,1.077,560,1.35,561,1.35,640,1.794,1133,4.507,1497,4.786,1498,7.137,1499,5.99,1500,4.912,1501,6.026,1502,6.953,1503,7.91,1504,5.598,1505,6.953,1506,6.953,1507,5.598,1508,5.598,1509,6.026,1510,4.912,1511,6.302,1512,5.54,1513,5.54,1514,5.54,1515,6.101,1516,5.598,1517,5.598]],["title/components/MoreItemPage.html",[0,0.529,128,1.205]],["body/components/MoreItemPage.html",[0,0.853,1,1.28,2,1.874,3,0.123,4,0.087,5,1.436,6,1.436,7,1.436,8,0.099,10,1.395,11,2.84,12,2.604,14,1.93,16,0.313,17,1.335,19,0.993,31,1.673,33,0.966,34,0.011,35,0.475,36,0.484,37,0.862,39,1.567,40,2.076,41,0.2,42,0.562,58,0.123,59,0.525,60,1.395,75,0.525,90,0.343,91,1.93,92,1.93,93,1.436,94,2.33,95,1.436,96,1.436,97,1.28,98,1.436,99,1.436,100,1.28,101,1.436,102,1.436,103,1.28,104,1.93,105,1.28,106,1.436,107,1.28,108,0.525,109,1.436,110,1.28,111,1.436,112,1.436,113,1.28,114,1.395,115,1.355,116,2.179,117,1.28,118,1.395,119,1.436,120,1.28,121,1.436,122,1.28,123,1.535,124,0.685,125,1.93,126,1.317,127,0.658,128,2.076,129,2.251,130,1.436,131,1.28,132,1.436,133,1.28,134,1.93,135,1.28,136,0.544,137,1.28,138,1.436,139,1.28,140,1.436,141,1.28,142,2.179,143,1.28,144,1.28,145,1.436,146,1.244,147,1.436,148,1.28,149,1.436,150,1.317,151,1.28,152,1.93,153,1.28,154,1.28,155,1.436,156,1.28,157,1.436,158,1.436,159,0.006,160,0.007,161,0.006,194,1.62,274,1.904,289,1.143,301,1.226,314,0.682,338,1.355,340,0.943,359,2.498,410,1.479,414,1.874,415,3.1,419,1.987,425,3.277,448,2.617,484,1.335,517,1.298,561,1.753,640,1.436,783,3.838,784,3.971,790,3.356,791,3.356,798,3.478,824,3.971,825,2.617,826,2.617,829,2.043,835,2.617,836,2.752,840,2.617,841,3.085,851,2.617,1518,6.358,1519,5.877,1520,3.933,1521,6.655,1522,6.8,1523,6.021,1524,4.917,1525,6.8,1526,5.418,1527,5.793,1528,3.933,1529,5.354,1530,5.173,1531,6.021,1532,4.482,1533,4.482,1534,4.482,1535,4.482,1536,3.301,1537,4.482,1538,4.798,1539,4.482,1540,3.571,1541,6.021,1542,6.021]],["title/modules/MoreItemPageModule.html",[162,1.139,1543,3.109]],["body/modules/MoreItemPageModule.html",[0,0.752,3,0.165,4,0.116,8,0.132,34,0.011,41,0.236,42,0.752,43,2.166,44,2.166,47,1.445,58,0.165,59,0.702,90,0.459,128,2.434,129,1.663,159,0.007,160,0.009,161,0.007,162,1.617,164,2.306,165,2.462,166,3.428,167,2.636,168,2.462,169,2.462,177,2.881,178,2.546,179,2.546,182,3.08,187,3.08,194,2.166,195,4.99,196,5.259,197,5.259,201,3.563,206,2.546,209,2.945,287,3.196,288,4.156,289,1.528,290,3.679,915,3.563,916,3.5,918,3.065,1518,4.775,1519,4.414,1521,5.259,1543,6.335,1544,5.259,1545,5.259,1546,5.259,1547,4.31,1548,5.993,1549,3.679,1550,5.993,1551,4.414,1552,4.414,1553,3.196,1554,3.885]],["title/guards/MoreItemResolver.html",[195,2.906,1555,2.906]],["body/guards/MoreItemResolver.html",[3,0.155,4,0.109,8,0.124,16,0.394,17,1.55,19,1.55,21,3.704,31,1.424,33,1.507,34,0.011,35,0.488,36,0.465,37,1.345,39,1.217,41,0.239,42,0.708,45,2.106,46,2.32,47,1.362,48,2.672,58,0.155,59,0.662,60,2.363,64,3.012,65,2.889,129,1.94,159,0.007,160,0.009,161,0.007,186,3.012,194,2.041,195,4.813,240,5.797,241,3.662,242,3.888,260,2.744,289,1.44,310,2.45,349,3.662,350,2.69,351,3.468,355,3.888,356,3.148,405,3.662,406,3.662,414,1.758,517,1.217,561,1.362,640,1.81,1497,5.462,1499,4.16,1524,3.662,1526,4.5,1553,4.231,1556,3.888,1557,6.663,1558,4.956,1559,4.956,1560,5.648,1561,5.571,1562,5.844,1563,5.648,1564,5.571,1565,4.956,1566,4.956,1567,5.648,1568,5.648,1569,5.648,1570,4.16,1571,4.16,1572,4.16,1573,4.16,1574,5.648,1575,4.5,1576,4.5]],["title/components/MorePage.html",[0,0.529,131,1.205]],["body/components/MorePage.html",[0,0.856,1,1.289,2,1.883,3,0.124,4,0.087,5,1.447,6,1.447,7,1.447,8,0.099,10,1.405,11,2.842,12,2.605,14,1.939,16,0.315,17,1.341,19,1,31,1.676,33,0.973,34,0.011,35,0.477,36,0.485,37,0.868,39,1.571,40,2.171,41,0.209,42,0.566,45,1.683,46,1.854,58,0.124,59,0.529,60,1.405,75,0.709,90,0.345,91,1.939,92,1.939,93,1.447,94,2.336,95,1.447,96,1.447,97,1.289,98,1.447,99,1.447,100,1.289,101,1.447,102,1.447,103,1.289,104,1.939,105,1.289,106,1.447,107,1.289,108,0.529,109,1.447,110,1.289,111,1.447,112,1.447,113,1.289,114,1.405,115,1.365,116,2.187,117,1.289,118,1.405,119,1.447,120,1.289,121,1.447,122,1.289,123,1.543,124,0.687,125,1.939,126,1.326,127,0.66,128,1.289,129,1.894,130,1.447,131,2.082,132,1.447,133,1.289,134,1.939,135,1.289,136,0.548,137,1.289,138,1.447,139,1.289,140,1.447,141,1.289,142,2.187,143,1.289,144,1.289,145,1.447,146,1.253,147,1.447,148,1.289,149,1.447,150,1.326,151,1.289,152,1.939,153,1.289,154,1.289,155,1.447,156,1.289,157,1.447,158,1.447,159,0.006,160,0.007,161,0.006,194,1.631,274,1.918,289,1.151,314,0.685,316,2.111,326,0.81,338,1.829,359,2.516,410,1.49,414,1.883,415,3.111,419,1.997,425,3.283,431,3.803,448,2.626,484,1.341,517,1.304,560,1.758,640,1.447,783,3.846,790,3.372,791,3.372,798,3.491,824,3.985,825,2.636,826,2.636,829,2.058,835,2.636,836,2.772,840,2.636,841,3.107,851,2.636,1524,4.929,1527,5.81,1528,3.961,1529,5.37,1530,5.182,1536,3.325,1538,4.821,1540,3.597,1577,3.961,1578,6.825,1579,6.05,1580,6.058,1581,6.825,1582,6.05,1583,4.514,1584,4.514,1585,5.309,1586,4.514,1587,4.514,1588,4.514,1589,4.514,1590,6.05]],["title/modules/MorePageModule.html",[162,1.139,1591,2.906]],["body/modules/MorePageModule.html",[0,0.755,3,0.165,4,0.116,8,0.132,34,0.011,41,0.237,42,0.755,43,2.176,44,2.176,47,1.452,58,0.165,59,0.706,90,0.461,131,2.437,159,0.007,160,0.009,161,0.007,162,1.624,164,2.317,165,2.473,166,3.435,167,2.649,168,2.473,169,2.473,177,2.889,178,2.558,179,2.558,182,3.089,187,3.089,194,2.176,198,5.005,199,5.284,201,3.573,206,2.558,209,2.959,287,3.211,288,4.165,289,1.536,290,3.697,431,3.356,915,3.573,916,3.516,918,3.08,1547,4.315,1549,3.697,1551,4.435,1552,4.435,1553,3.211,1554,3.904,1591,5.926,1592,5.284,1593,5.284,1594,6.022,1595,6.022,1596,6.022]],["title/guards/MoreResolver.html",[198,2.906,1555,2.906]],["body/guards/MoreResolver.html",[3,0.159,4,0.112,8,0.128,16,0.405,19,1.575,21,3.725,31,1.181,33,1.25,34,0.011,35,0.405,36,0.386,37,1.115,41,0.239,42,0.727,45,2.162,46,2.382,47,1.398,48,2.743,58,0.159,59,0.68,60,2.391,64,3.092,65,2.966,129,1.972,159,0.007,160,0.009,161,0.007,186,3.092,194,2.095,198,4.891,240,5.829,241,3.759,242,3.992,260,2.568,310,2.49,314,0.657,349,3.759,351,3.56,355,4.891,356,3.231,405,3.759,406,3.759,414,1.805,517,1.25,560,1.398,640,1.858,1497,5.512,1499,4.271,1524,3.759,1553,4.27,1556,3.992,1559,5.088,1562,5.233,1564,5.661,1565,5.088,1566,5.088,1570,4.271,1571,4.271,1572,4.271,1573,4.271,1575,4.62,1576,4.62,1597,5.088,1598,5.799,1599,5.799,1600,5.799,1601,5.799]],["title/injectables/OnlineTreksService.html",[28,2.075,310,1.48]],["body/injectables/OnlineTreksService.html",[3,0.09,4,0.063,8,0.072,13,1.745,16,0.229,17,1.069,19,1.069,24,2.205,25,3.692,28,2.371,31,1.713,33,1.675,34,0.011,35,0.543,36,0.524,37,1.495,39,1.751,40,0.934,41,0.21,42,0.411,43,1.183,44,1.183,45,1.22,46,1.344,54,4.151,55,1.674,58,0.09,59,0.384,60,2.419,75,0.741,76,4.641,123,0.835,124,0.54,127,0.714,159,0.004,160,0.006,161,0.004,177,1.301,184,4.657,186,1.745,260,3.027,261,3.361,289,1.909,301,0.667,305,1.071,310,1.691,311,4.353,312,1.824,314,0.546,315,4.565,316,2.39,322,2.608,324,3.553,326,1.068,331,1.736,336,4.478,338,1.912,340,1.378,350,1.259,357,1.824,414,1.019,448,1.856,462,2.01,496,1.524,497,0.746,498,0.746,499,0.767,501,1.27,512,1.822,533,0.883,565,0.767,568,0.789,573,0.812,575,1.1,576,1.381,578,2.176,580,1.546,581,1.546,582,1.706,583,1.302,584,1.302,585,1.706,586,1.302,587,1.302,589,1.706,595,1.343,640,1.049,670,4.099,672,2.122,673,2.253,699,2.872,739,3.234,833,2.122,837,2.608,981,2.872,1068,5.038,1133,4.099,1324,2.411,1373,2.411,1464,2.411,1479,2.872,1501,4.565,1509,5.62,1510,2.872,1511,6.475,1512,5.372,1513,5.372,1514,5.372,1515,6.569,1602,6.731,1603,5.73,1604,4.233,1605,4.825,1606,5.028,1607,4.233,1608,4.233,1609,4.233,1610,4.233,1611,6.323,1612,6.323,1613,5.028,1614,4.825,1615,3.273,1616,3.273,1617,4.825,1618,3.273,1619,6.279,1620,3.273,1621,3.273,1622,3.273,1623,3.273,1624,3.273,1625,3.273,1626,4.825,1627,3.273,1628,3.273,1629,3.273,1630,3.273,1631,3.273,1632,3.273,1633,3.273,1634,3.273,1635,3.273,1636,3.273,1637,3.273,1638,2.253,1639,2.872,1640,3.273,1641,3.273,1642,3.273,1643,3.273,1644,3.273,1645,3.273,1646,3.273,1647,3.273,1648,3.273,1649,3.273,1650,2.411,1651,4.825,1652,3.273,1653,3.273,1654,3.273,1655,3.273,1656,3.273,1657,3.273,1658,3.273,1659,3.273,1660,3.273,1661,3.273,1662,3.273,1663,3.273,1664,3.273,1665,3.273,1666,3.273,1667,3.273,1668,3.273,1669,3.273,1670,3.273,1671,3.273,1672,3.273]],["title/interfaces/Picture.html",[480,0.461,512,0.99]],["body/interfaces/Picture.html",[3,0.096,4,0.068,8,0.077,16,0.245,29,0.694,34,0.011,35,0.564,36,0.576,41,0.164,58,0.24,75,0.411,90,0.53,108,0.766,124,0.615,127,0.675,136,0.615,159,0.004,160,0.006,161,0.004,301,0.714,302,0.869,305,1.114,314,0.864,326,1.206,330,1.58,331,1.606,334,0.948,340,1.393,380,1.368,399,1.33,428,0.945,433,0.945,466,0.845,468,1.847,480,0.951,481,0.894,482,0.945,483,0.919,484,1.808,485,1.619,486,1.608,487,1.654,488,1.654,489,1.654,490,2.08,491,2.097,492,1.654,493,1.718,494,0.919,495,0.972,496,1.437,497,0.799,498,0.799,499,0.822,500,1.895,501,1.124,502,1.563,503,0.972,504,1.923,505,1.608,506,1.293,507,1.608,508,1.949,509,1.895,510,1.33,511,1.812,512,1.823,513,1.654,514,1.407,515,1.407,516,1.407,517,1.093,518,1.923,519,1.407,520,1.598,521,1.368,522,1.407,523,1.407,524,1.407,525,1.368,526,1.407,527,1.437,528,1.407,529,1.407,530,1.368,531,1.156,532,1.33,533,1.368,534,2.061,535,0.972,536,0.972,537,1.407,538,0.972,539,0.972,540,1.368,541,0.972,542,0.972,543,0.972,544,0.972,545,0.972,546,0.972,547,0.972,548,1.407,549,1.368,550,1.563,551,1.368,552,1.189,553,0.845,554,0.799,555,0.894,556,0.972,557,0.845,558,1.407,559,1.189,560,0.845,561,0.845,562,0.972,563,1.223,564,0.894,565,1.397,566,0.972,567,0.945,568,1.437,569,1.478,570,0.919,571,0.894,572,1.257,573,1.478,574,1.33,575,1.358,576,0.845,577,0.972,578,1.842,579,0.972,580,0.945,581,0.945,582,0.945,583,0.945,584,0.945,585,0.945,586,0.945,587,0.945,588,0.972,589,0.945,590,0.972,591,0.972,592,0.869,593,0.945,594,1.223,595,1.189,596,0.894,597,0.734,598,0.945,599,0.869]],["title/interfaces/Poi.html",[136,0.512,480,0.461]],["body/interfaces/Poi.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.696,34,0.011,35,0.565,36,0.581,41,0.164,58,0.24,75,0.412,90,0.389,108,0.767,124,0.616,127,0.675,136,0.724,159,0.004,160,0.006,161,0.004,301,0.716,302,0.872,305,1.116,314,0.906,326,1.204,330,1.159,331,1.607,334,0.95,337,3.094,340,1.394,380,1.371,399,1.333,428,0.949,433,0.949,466,0.848,468,1.622,480,0.951,481,0.897,482,0.949,483,0.922,484,1.823,485,1.62,486,1.611,487,1.657,488,1.657,489,1.657,490,2.098,491,2.099,492,1.657,493,1.721,494,0.922,495,0.976,496,1.44,497,0.802,498,0.802,499,0.824,500,1.897,501,1.127,502,1.566,503,0.976,504,1.411,505,1.611,506,1.296,507,1.611,508,2.099,509,1.897,510,1.333,511,1.815,512,1.79,513,1.657,514,1.411,515,1.411,516,1.411,517,1.096,518,1.926,519,1.411,520,1.6,521,1.371,522,1.411,523,1.411,524,1.411,525,1.371,526,1.411,527,1.44,528,1.411,529,1.411,530,1.371,531,1.159,532,1.333,533,1.371,534,2.063,535,0.976,536,0.976,537,1.411,538,0.976,539,0.976,540,1.371,541,0.976,542,0.976,543,0.976,544,0.976,545,0.976,546,0.976,547,0.976,548,1.411,549,1.371,550,1.566,551,1.371,552,1.192,553,0.848,554,0.802,555,0.897,556,0.976,557,0.848,558,1.411,559,1.192,560,0.848,561,0.848,562,0.976,563,1.226,564,0.897,565,1.4,566,0.976,567,0.949,568,1.44,569,1.481,570,0.922,571,0.897,572,1.261,573,1.481,574,1.333,575,1.361,576,0.848,577,0.976,578,1.845,579,0.976,580,0.949,581,0.949,582,0.949,583,0.949,584,0.949,585,0.949,586,0.949,587,0.949,588,0.976,589,0.949,590,0.976,591,0.976,592,0.872,593,0.949,594,1.226,595,1.192,596,0.897,597,0.737,598,0.949,599,0.872]],["title/components/PoiComponent.html",[0,0.529,133,1.205]],["body/components/PoiComponent.html",[0,0.803,1,1.139,2,1.731,3,0.11,4,0.077,5,1.278,6,1.278,7,1.278,8,0.088,10,1.242,11,2.817,12,2.583,14,1.782,16,0.279,17,1.232,19,1.232,27,4.057,28,3.578,31,1.671,33,1.198,34,0.011,35,0.483,36,0.533,37,1.07,39,0.86,40,1.588,41,0.2,42,0.5,45,1.487,46,1.639,53,2.223,54,1.961,55,2.844,58,0.11,59,0.468,68,1.535,75,0.812,90,0.305,91,1.782,92,1.782,93,1.278,94,2.219,95,1.278,96,1.278,97,1.139,98,1.278,99,1.278,100,1.139,101,1.278,102,1.278,103,1.139,104,1.782,105,1.139,106,1.278,107,1.139,108,0.468,109,1.278,110,1.139,111,1.278,112,1.278,113,1.139,114,1.992,115,1.206,116,2.051,117,1.139,118,1.242,119,1.278,120,1.139,121,1.278,122,1.139,123,1.418,124,0.652,125,1.782,126,1.172,127,0.701,128,1.139,129,1.107,130,1.278,131,1.139,132,1.278,133,1.977,134,1.782,135,1.139,136,0.972,137,1.139,138,1.278,139,1.139,140,1.278,141,1.139,142,2.051,143,1.139,144,1.139,145,1.278,146,1.107,147,1.278,148,1.139,149,1.278,150,1.172,151,1.139,152,1.782,153,1.139,154,1.139,155,1.278,156,1.139,157,1.278,158,1.278,159,0.005,160,0.007,161,0.005,289,1.017,305,1.196,314,0.63,316,2.316,326,0.927,330,1.268,334,1.498,338,2.093,410,1.317,414,1.731,416,3.828,417,4.095,419,1.835,427,2.63,431,2.223,448,2.14,449,3.444,450,2.746,512,1.768,563,1.543,567,1.5,597,1.341,640,1.278,652,2.449,735,3.828,739,2.844,780,1.961,804,4.043,805,4.057,838,2.33,839,2.128,890,2.586,891,2.586,892,2.128,893,3.414,896,2.586,922,5.1,935,4.43,951,4.43,952,5.517,954,3.179,1033,3.414,1126,5.1,1133,3.605,1330,2.586,1495,2.938,1673,3.501,1674,5.616,1675,4.879,1676,5.616,1677,5.616,1678,3.501,1679,5.561,1680,3.99,1681,3.99,1682,3.99,1683,3.99,1684,3.99,1685,3.99,1686,3.99,1687,3.99,1688,3.99,1689,3.99,1690,3.99,1691,4.879,1692,4.879,1693,3.99,1694,3.501,1695,3.501,1696,3.501,1697,3.501,1698,3.501,1699,6.075,1700,6.389,1701,3.179,1702,3.179,1703,5.561,1704,5.561,1705,4.879,1706,5.561,1707,4.879,1708,4.879,1709,3.179,1710,3.179,1711,3.501,1712,4.879,1713,3.179,1714,3.501]],["title/components/PoiDetailsComponent.html",[0,0.529,135,1.205]],["body/components/PoiDetailsComponent.html",[0,0.757,1,1.024,2,1.605,3,0.099,4,0.069,5,1.149,6,1.149,7,1.149,8,0.079,10,1.116,11,2.794,12,2.562,14,1.653,16,0.25,17,1.143,19,1.143,27,3.898,28,3.437,29,1.441,30,3.308,31,1.702,33,0.773,34,0.011,35,0.422,36,0.54,37,0.69,39,1.111,40,1.724,41,0.211,42,0.45,45,1.337,46,1.473,47,0.865,53,1.999,54,1.763,55,2.638,57,1.913,58,0.099,59,0.42,68,1.38,75,0.82,90,0.462,91,1.653,92,1.653,93,1.149,94,2.116,95,1.149,96,1.149,97,1.024,98,1.149,99,1.149,100,1.024,101,1.149,102,1.149,103,1.024,104,1.653,105,1.024,106,1.149,107,1.024,108,0.42,109,1.149,110,1.024,111,1.149,112,1.149,113,1.024,114,1.116,115,1.084,116,1.935,117,1.024,118,1.116,119,1.149,120,1.024,121,1.149,122,1.024,123,1.315,124,0.622,125,1.653,126,1.054,127,0.679,128,1.024,129,0.995,130,1.149,131,1.024,132,1.149,133,1.024,134,1.653,135,1.885,136,1.001,137,1.024,138,1.149,139,1.024,140,1.149,141,1.024,142,1.935,143,1.024,144,1.024,145,1.149,146,0.995,147,1.149,148,1.024,149,1.149,150,1.054,151,1.024,152,1.653,153,1.024,154,1.024,155,1.149,156,1.024,157,1.149,158,1.149,159,0.004,160,0.006,161,0.004,247,6.189,289,1.315,305,1.129,314,0.584,316,2.379,326,0.937,330,1.176,334,1.461,338,2.115,350,1.38,410,1.184,419,1.702,431,1.999,448,1.984,512,1.707,597,1.265,623,3.577,640,1.149,652,3.166,735,3.55,780,1.763,793,4.545,803,2.642,804,4.084,805,3.898,807,4.863,829,2.753,838,2.095,839,1.913,878,2.642,891,2.325,892,1.913,893,3.166,896,2.325,1122,2.858,1123,4.525,1124,5.298,1125,4.525,1126,4.811,1128,5.463,1129,4.28,1132,3.148,1133,3.343,1136,3.148,1330,3.343,1495,2.642,1676,5.298,1677,4.525,1691,4.525,1692,4.525,1694,3.148,1695,3.148,1696,3.148,1697,3.148,1698,3.148,1699,5.793,1700,6.137,1701,2.858,1702,2.858,1705,4.525,1707,4.525,1708,4.525,1709,2.858,1710,2.858,1711,3.148,1712,4.525,1713,2.858,1714,3.148,1715,7.373,1716,6.038,1717,6.038,1718,5.157,1719,3.587,1720,3.587,1721,3.587,1722,3.587,1723,3.587,1724,3.587,1725,3.587,1726,3.587,1727,3.587,1728,3.587,1729,3.587,1730,3.587,1731,5.157,1732,3.587,1733,3.587,1734,3.587,1735,3.587,1736,3.587,1737,3.587,1738,3.587,1739,3.587,1740,3.587,1741,3.587,1742,3.587,1743,3.587,1744,3.587,1745,5.157,1746,5.157,1747,5.157,1748,5.157]],["title/interfaces/Pois.html",[480,0.461,565,0.99]],["body/interfaces/Pois.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.701,34,0.011,35,0.566,36,0.576,41,0.165,58,0.24,75,0.415,90,0.391,108,0.77,124,0.618,127,0.677,136,0.796,159,0.004,160,0.006,161,0.004,301,0.722,302,0.879,305,1.121,314,0.867,326,1.204,330,1.165,331,1.611,334,0.956,340,1.394,380,1.379,399,1.341,428,0.956,433,0.956,466,0.854,468,1.628,480,0.952,481,0.904,482,0.956,483,0.929,484,1.826,485,1.621,486,1.618,487,1.664,488,1.664,489,1.664,490,2.084,491,2.135,492,1.664,493,1.726,494,0.929,495,0.983,496,1.446,497,0.808,498,0.808,499,0.831,500,2.045,501,1.133,502,1.573,503,0.983,504,1.419,505,1.618,506,1.304,507,1.618,508,1.957,509,1.902,510,1.341,511,1.822,512,1.794,513,1.664,514,1.419,515,1.419,516,1.419,517,1.102,518,1.932,519,1.419,520,1.603,521,1.379,522,1.419,523,1.419,524,1.419,525,1.379,526,1.419,527,1.446,528,1.419,529,1.419,530,1.379,531,1.165,532,1.341,533,1.379,534,2.066,535,0.983,536,0.983,537,1.419,538,0.983,539,0.983,540,1.379,541,0.983,542,0.983,543,0.983,544,0.983,545,0.983,546,0.983,547,0.983,548,1.419,549,1.379,550,1.573,551,1.379,552,1.199,553,0.854,554,0.808,555,0.904,556,0.983,557,0.854,558,1.419,559,1.199,560,0.854,561,0.854,562,0.983,563,1.233,564,0.904,565,1.539,566,0.983,567,0.956,568,1.446,569,1.487,570,0.929,571,0.904,572,1.268,573,1.487,574,1.341,575,1.367,576,0.854,577,0.983,578,1.849,579,0.983,580,0.956,581,0.956,582,0.956,583,0.956,584,0.956,585,0.956,586,0.956,587,0.956,588,0.983,589,0.956,590,0.983,591,0.983,592,0.879,593,0.956,594,1.233,595,1.199,596,0.904,597,0.742,598,0.956,599,0.879]],["title/components/ProgressComponent.html",[0,0.529,137,1.205]],["body/components/ProgressComponent.html",[0,0.88,1,1.362,2,1.954,3,0.131,4,0.092,5,1.529,6,1.529,7,1.529,8,0.105,10,1.485,11,2.852,12,2.614,14,2.012,16,0.333,17,1.391,19,1.391,24,2.868,31,1.619,33,1.028,34,0.011,35,0.49,36,0.496,37,0.918,39,1.353,40,2.128,41,0.193,42,0.599,55,2.441,58,0.131,59,0.559,60,2.32,90,0.365,91,2.012,92,2.012,93,1.529,94,2.389,95,1.529,96,1.529,97,1.362,98,1.529,99,1.529,100,1.362,101,1.529,102,1.529,103,1.362,104,2.012,105,1.362,106,1.529,107,1.362,108,0.559,109,1.529,110,1.362,111,1.529,112,1.529,113,1.362,114,1.485,115,1.443,116,2.248,117,1.362,118,1.485,119,1.529,120,1.362,121,1.529,122,1.362,123,1.601,124,0.702,125,2.012,126,1.402,127,0.675,128,1.362,129,1.324,130,1.529,131,1.362,132,1.529,133,1.362,134,2.012,135,1.362,136,0.579,137,2.128,138,1.529,139,1.362,140,1.529,141,1.362,142,2.248,143,1.362,144,1.362,145,1.529,146,1.324,147,1.529,148,1.362,149,1.529,150,1.402,151,1.362,152,2.012,153,1.362,154,1.362,155,1.529,156,1.362,157,1.529,158,1.529,159,0.006,160,0.008,161,0.006,314,0.711,316,2.145,340,0.983,350,1.836,410,1.575,416,4.321,419,2.072,450,3.285,804,4.353,805,4.316,829,3.198,838,2.787,839,2.545,904,4.624,1129,4.832,1678,4.187,1749,4.187,1750,6.278,1751,7.016,1752,6.278,1753,7.95,1754,7.454,1755,6.156,1756,6.541,1757,6.278,1758,4.772,1759,4.772,1760,4.772,1761,4.772,1762,6.278,1763,4.772,1764,6.278,1765,4.187,1766,4.772,1767,6.278,1768,6.278]],["title/interfaces/Property.html",[480,0.461,534,1.077]],["body/interfaces/Property.html",[3,0.095,4,0.067,8,0.076,16,0.242,29,0.687,34,0.011,35,0.577,36,0.577,37,1.385,41,0.163,58,0.239,75,0.407,90,0.386,108,0.762,124,0.613,127,0.673,136,0.611,159,0.004,160,0.006,161,0.004,301,0.707,302,0.861,305,1.108,314,0.862,326,1.206,330,1.148,331,1.601,334,0.942,340,1.394,380,1.359,399,1.321,428,0.937,433,0.937,466,0.837,468,1.613,480,0.95,481,0.886,482,0.937,483,0.911,484,1.805,485,1.636,486,1.599,487,1.645,488,1.645,489,1.645,490,2.077,491,2.093,492,1.645,493,1.712,494,0.911,495,0.964,496,1.429,497,0.792,498,0.792,499,0.814,500,1.889,501,1.117,502,1.555,503,0.964,504,1.398,505,1.599,506,1.285,507,1.599,508,1.943,509,1.889,510,1.321,511,1.805,512,1.784,513,1.645,514,1.398,515,1.398,516,1.398,517,1.086,518,1.916,519,1.398,520,1.594,521,1.359,522,1.398,523,1.398,524,1.398,525,1.359,526,1.398,527,1.429,528,1.398,529,1.398,530,1.359,531,1.148,532,1.321,533,1.359,534,2.077,535,0.964,536,0.964,537,1.916,538,0.964,539,0.964,540,1.359,541,0.964,542,0.964,543,0.964,544,0.964,545,0.964,546,0.964,547,0.964,548,1.398,549,1.359,550,1.555,551,1.359,552,1.181,553,0.837,554,0.792,555,0.886,556,0.964,557,0.837,558,1.916,559,1.619,560,0.837,561,0.837,562,0.964,563,1.215,564,0.886,565,1.39,566,0.964,567,0.937,568,1.429,569,1.47,570,0.911,571,0.886,572,1.249,573,1.47,574,1.321,575,1.351,576,0.837,577,0.964,578,1.837,579,0.964,580,0.937,581,0.937,582,0.937,583,0.937,584,0.937,585,0.937,586,0.937,587,0.937,588,0.964,589,0.937,590,0.964,591,0.964,592,0.861,593,0.937,594,1.215,595,1.181,596,0.886,597,0.727,598,0.937,599,0.861]],["title/components/SearchComponent.html",[0,0.529,139,1.205]],["body/components/SearchComponent.html",[0,0.741,1,0.986,2,1.562,3,0.095,4,0.067,5,1.107,6,1.107,7,1.107,8,0.076,10,1.075,11,2.786,12,2.554,14,1.608,16,0.413,17,1.112,19,1.112,21,3.263,24,2.496,27,3.294,28,3.188,31,1.702,33,1.485,34,0.011,35,0.518,36,0.53,37,1.325,39,1.669,40,2.301,41,0.204,42,0.433,47,0.833,53,1.925,54,1.697,55,3.023,58,0.095,59,0.405,60,2.449,68,1.931,75,0.808,90,0.264,91,1.608,92,2.304,93,1.107,94,2.079,95,1.107,96,1.107,97,0.986,98,1.107,99,1.107,100,0.986,101,1.107,102,1.107,103,0.986,104,1.608,105,0.986,106,1.107,107,0.986,108,0.405,109,1.107,110,0.986,111,1.107,112,1.107,113,0.986,114,1.075,115,1.044,116,1.894,117,0.986,118,1.075,119,1.107,120,0.986,121,1.107,122,0.986,123,1.28,124,0.716,125,1.608,126,1.015,127,0.688,128,0.986,129,0.958,130,1.107,131,0.986,132,1.107,133,0.986,134,1.608,135,0.986,136,0.419,137,0.986,138,1.107,139,1.852,140,1.107,141,0.986,142,1.894,143,0.986,144,0.986,145,1.107,146,0.958,147,1.107,148,0.986,149,1.107,150,1.015,151,0.986,152,1.608,153,0.986,154,0.986,155,1.107,156,0.986,157,1.107,158,1.107,159,0.004,160,0.006,161,0.004,168,2.061,213,3.081,260,1.248,274,1.467,289,1.28,314,0.568,316,2.345,326,0.923,334,1.386,338,2.083,340,1.232,410,1.14,414,1.562,415,2.694,416,3.454,417,3.696,419,1.656,425,3.047,431,1.925,448,1.931,450,2.377,466,0.833,484,1.112,485,0.664,499,1.386,501,1.31,576,1.425,594,0.833,623,3.318,640,1.107,780,2.466,783,3.533,790,2.796,791,2.796,793,4.465,797,4.465,798,3.023,802,3.998,803,2.544,804,3.451,805,3.615,807,3.696,824,3.451,825,2.017,826,2.017,829,1.574,835,2.017,836,2.12,838,2.017,839,1.842,840,2.017,841,2.377,851,2.017,852,2.752,853,3.03,878,2.544,883,4.403,889,3.696,890,2.239,891,2.239,892,1.842,893,2.12,894,2.544,895,3.253,896,2.239,897,2.239,898,2.544,899,2.239,900,2.752,901,2.752,902,2.752,903,2.544,904,2.544,905,2.377,1128,5.106,1274,3.998,1324,4.353,1755,5.186,1756,5.692,1765,3.03,1769,3.03,1770,5.294,1771,5.692,1772,5.91,1773,5.018,1774,5.91,1775,5.91,1776,5.186,1777,5.91,1778,5.018,1779,5.018,1780,5.91,1781,5.018,1782,3.454,1783,5.018,1784,3.454,1785,3.03,1786,3.454,1787,4.403,1788,3.454,1789,3.454,1790,5.018,1791,3.454,1792,5.186,1793,5.018,1794,3.454,1795,5.692,1796,3.454,1797,3.454,1798,3.454,1799,3.454,1800,3.454,1801,3.454,1802,2.752,1803,3.454,1804,2.752,1805,2.544,1806,3.454,1807,5.91,1808,3.454,1809,3.454,1810,3.454,1811,3.454,1812,3.454,1813,3.454,1814,3.454,1815,5.91,1816,5.018,1817,3.454,1818,3.03,1819,5.018,1820,5.018,1821,4.403,1822,5.018]],["title/injectables/SearchTreksService.html",[310,1.48,1770,3.109]],["body/injectables/SearchTreksService.html",[3,0.169,4,0.119,8,0.135,13,3.278,16,0.429,17,1.631,31,1.252,33,1.325,34,0.011,35,0.429,36,0.409,37,1.182,39,1.325,41,0.217,42,0.771,58,0.169,59,0.721,124,0.742,159,0.008,160,0.009,161,0.008,260,3.063,310,2.58,312,3.426,316,2.126,326,1.055,357,3.426,501,1.879,640,1.97,673,4.231,717,6.459,1307,4.527,1770,5.421,1771,6.459,1792,7.327,1802,5.865,1823,6.459,1824,7.361,1825,6.147,1826,6.147,1827,6.147,1828,7.361,1829,6.147,1830,6.147,1831,6.147,1832,6.147]],["title/components/SelectFilterComponent.html",[0,0.529,141,1.205]],["body/components/SelectFilterComponent.html",[0,0.795,1,1.119,2,1.71,3,0.108,4,0.076,5,1.256,6,1.256,7,1.256,8,0.086,10,1.22,11,2.814,12,2.579,14,1.76,16,0.384,17,1.218,19,0.869,24,2.644,31,1.705,33,1.481,34,0.011,35,0.524,36,0.549,37,1.322,39,1.659,40,2.356,41,0.174,42,0.492,47,0.945,58,0.108,59,0.46,75,0.644,90,0.3,91,1.76,92,2.403,93,1.256,94,2.202,95,1.256,96,1.256,97,1.119,98,1.256,99,1.256,100,1.119,101,1.256,102,1.256,103,1.119,104,1.76,105,1.119,106,1.256,107,1.119,108,0.959,109,1.256,110,1.119,111,1.256,112,1.256,113,1.119,114,1.22,115,1.185,116,2.032,117,1.119,118,1.22,119,1.256,120,1.119,121,1.256,122,1.119,123,1.401,124,0.647,125,1.76,126,1.152,127,0.622,128,1.119,129,1.088,130,1.256,131,1.119,132,1.256,133,1.119,134,1.76,135,1.119,136,0.476,137,1.119,138,1.256,139,1.119,140,1.256,141,1.962,142,2.683,143,1.119,144,1.119,145,1.256,146,1.088,147,1.256,148,1.119,149,1.256,150,1.152,151,1.119,152,1.76,153,1.119,154,1.119,155,1.256,156,1.119,157,1.256,158,1.256,159,0.005,160,0.007,161,0.005,260,1.417,289,1,314,0.622,316,2.319,326,0.736,334,1.185,337,2.598,338,2.078,340,1.205,359,2.185,410,1.294,414,1.71,415,2.891,419,1.813,425,2.822,427,2.598,449,2.999,520,0.821,552,1.805,557,0.945,597,1.328,611,5.564,612,4.82,614,5.564,619,4.82,622,2.888,623,3.835,634,5.475,640,1.256,642,6.202,651,3.44,660,3.124,664,4.82,774,2.091,797,4.73,866,3.124,879,3.44,1040,4.73,1785,3.44,1818,3.44,1833,6.202,1834,3.44,1835,6.341,1836,6.341,1837,5.493,1838,5.493,1839,5.493,1840,3.921,1841,3.921,1842,3.921,1843,5.493,1844,3.921,1845,3.921,1846,3.921,1847,3.921,1848,5.493,1849,3.921,1850,5.493,1851,3.921,1852,6.03,1853,3.921,1854,3.921,1855,3.921,1856,5.493,1857,4.377,1858,6.341,1859,5.493,1860,3.921,1861,3.921,1862,3.921,1863,3.921,1864,5.493,1865,5.493,1866,5.493]],["title/components/SelectPoiComponent.html",[0,0.529,143,1.205]],["body/components/SelectPoiComponent.html",[0,0.851,1,1.275,2,1.87,3,0.123,4,0.086,5,1.431,6,1.431,7,1.431,8,0.098,10,1.39,11,2.84,12,2.603,14,1.925,16,0.312,17,1.331,19,0.99,24,3.002,31,1.65,33,1.294,34,0.011,35,0.529,36,0.519,37,1.155,39,1.564,40,2.276,41,0.165,42,0.56,47,1.077,58,0.123,59,0.524,90,0.342,91,1.925,92,1.925,93,1.431,94,2.326,95,1.431,96,1.431,97,1.275,98,1.431,99,1.431,100,1.275,101,1.431,102,1.431,103,1.275,104,1.925,105,1.275,106,1.431,107,1.275,108,0.524,109,1.431,110,1.275,111,1.431,112,1.431,113,1.275,114,1.39,115,1.35,116,2.175,117,1.275,118,1.39,119,1.431,120,1.275,121,1.431,122,1.275,123,1.532,124,0.684,125,1.925,126,1.312,127,0.657,128,1.275,129,1.239,130,1.431,131,1.275,132,1.431,133,1.275,134,1.925,135,1.275,136,0.823,137,1.275,138,1.431,139,1.275,140,1.431,141,1.275,142,2.733,143,2.073,144,1.275,145,1.431,146,1.239,147,1.431,148,1.275,149,1.431,150,1.312,151,1.275,152,1.925,153,1.275,154,1.275,155,1.431,156,1.275,157,1.431,158,1.431,159,0.006,160,0.007,161,0.006,314,0.68,316,2.258,326,1.014,337,2.112,340,1.063,359,2.489,410,1.474,414,1.87,415,3.094,419,1.983,425,2.982,427,2.841,449,3.211,485,0.859,559,1.047,622,3.289,623,3.99,739,2.284,1040,4.997,1464,3.289,1674,5.956,1675,5.271,1833,6.047,1857,4.786,1867,6.542,1868,3.919,1869,7.26,1870,6.007,1871,6.788,1872,7.576,1873,6.007,1874,4.466,1875,4.466,1876,4.466,1877,4.466,1878,4.466,1879,6.007,1880,4.466,1881,3.919,1882,4.466,1883,6.007,1884,3.919,1885,6.007,1886,6.007,1887,6.007]],["title/components/SelectTrekComponent.html",[0,0.529,144,1.205]],["body/components/SelectTrekComponent.html",[0,0.853,1,1.278,2,1.873,3,0.123,4,0.086,5,1.435,6,1.435,7,1.435,8,0.098,10,1.394,11,2.84,12,2.604,14,1.928,16,0.313,17,1.334,19,0.992,24,3.121,31,1.625,33,1.297,34,0.011,35,0.529,36,0.505,37,1.158,39,1.566,40,2.278,41,0.165,42,0.562,47,1.08,58,0.123,59,0.525,90,0.343,91,1.928,92,1.928,93,1.435,94,2.329,95,1.435,96,1.435,97,1.278,98,1.435,99,1.435,100,1.278,101,1.435,102,1.435,103,1.278,104,1.928,105,1.278,106,1.435,107,1.278,108,0.525,109,1.435,110,1.278,111,1.435,112,1.435,113,1.278,114,1.394,115,1.354,116,2.178,117,1.278,118,1.394,119,1.435,120,1.278,121,1.435,122,1.278,123,1.535,124,0.684,125,1.928,126,1.315,127,0.707,128,1.278,129,1.243,130,1.435,131,1.278,132,1.435,133,1.278,134,1.928,135,1.278,136,0.543,137,1.278,138,1.435,139,1.278,140,1.435,141,1.278,142,2.734,143,1.278,144,2.075,145,1.435,146,1.243,147,1.435,148,1.278,149,1.435,150,1.315,151,1.278,152,1.928,153,1.278,154,1.278,155,1.435,156,1.278,157,1.435,158,1.435,159,0.006,160,0.007,161,0.006,314,0.681,316,2.24,326,0.91,337,2.118,340,1.064,359,2.495,410,1.478,414,1.873,415,3.098,419,1.986,425,2.985,427,2.846,449,2.846,485,0.861,559,1.05,622,3.298,623,3.993,739,2.29,1040,5.003,1303,5.973,1462,5.964,1463,3.929,1464,3.298,1833,5.973,1857,4.795,1881,3.929,1884,3.929,1888,3.929,1889,6.797,1890,6.018,1891,7.268,1892,6.018,1893,6.018,1894,4.478,1895,4.478,1896,4.478,1897,4.478,1898,6.018,1899,4.478,1900,6.018,1901,6.018,1902,6.018,1903,6.018,1904,6.018,1905,6.018]],["title/interfaces/Settings.html",[29,0.836,480,0.461]],["body/interfaces/Settings.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,1.011,34,0.011,35,0.565,36,0.574,41,0.165,58,0.24,75,0.415,90,0.391,108,0.85,124,0.618,127,0.677,136,0.619,159,0.004,160,0.006,161,0.004,301,1.336,302,0.877,305,1.12,314,0.866,326,1.204,330,1.164,331,1.61,334,0.955,340,1.394,380,1.378,399,1.339,428,0.955,433,0.955,466,0.853,468,1.627,480,0.952,481,0.902,482,0.955,483,0.928,484,1.811,485,1.621,486,1.617,487,1.663,488,1.663,489,1.663,490,2.084,491,2.103,492,1.663,493,1.725,494,0.928,495,0.982,496,1.445,497,0.807,498,0.807,499,0.83,500,1.901,501,1.132,502,1.572,503,0.982,504,1.417,505,1.617,506,1.302,507,1.617,508,1.956,509,1.901,510,1.339,511,1.821,512,1.793,513,1.663,514,1.417,515,1.417,516,1.417,517,1.101,518,1.931,519,1.417,520,1.603,521,1.378,522,1.417,523,1.417,524,1.417,525,1.378,526,1.417,527,1.445,528,1.417,529,1.417,530,1.378,531,1.164,532,1.339,533,1.378,534,2.065,535,0.982,536,0.982,537,1.417,538,0.982,539,0.982,540,1.378,541,0.982,542,0.982,543,0.982,544,0.982,545,0.982,546,0.982,547,0.982,548,1.417,549,1.378,550,1.572,551,1.378,552,1.197,553,0.853,554,0.807,555,0.902,556,0.982,557,0.853,558,1.417,559,1.197,560,0.853,561,0.853,562,0.982,563,1.582,564,1.673,565,1.405,566,0.982,567,0.955,568,1.445,569,1.486,570,0.928,571,0.902,572,1.266,573,1.486,574,1.339,575,1.366,576,0.853,577,0.982,578,1.849,579,0.982,580,0.955,581,0.955,582,0.955,583,0.955,584,0.955,585,0.955,586,0.955,587,0.955,588,0.982,589,0.955,590,0.982,591,0.982,592,0.877,593,0.955,594,1.231,595,1.197,596,0.902,597,0.741,598,0.955,599,0.877]],["title/injectables/SettingsService.html",[30,1.997,310,1.48]],["body/injectables/SettingsService.html",[3,0.092,4,0.065,8,0.074,13,1.784,16,0.234,17,1.087,19,1.087,24,2.233,25,3.731,29,1.454,30,2.319,31,1.703,33,1.583,34,0.011,35,0.545,36,0.533,37,1.413,39,1.683,40,2.097,41,0.207,42,0.42,43,1.209,44,1.209,45,1.247,46,1.374,58,0.092,59,0.392,60,2.517,66,1.784,68,1.886,75,0.861,76,2.303,77,2.169,82,2.614,108,0.861,124,0.315,127,0.616,159,0.004,160,0.006,161,0.004,184,5.01,186,1.784,234,2.665,238,3.611,260,2.654,261,3.38,289,2.019,301,1.301,310,1.718,312,1.864,314,0.555,316,2.369,322,2.665,324,4.706,326,1.009,331,1.25,336,2.054,338,2.323,340,1.15,350,1.287,357,1.864,448,1.886,485,1.413,486,0.902,500,0.877,506,0.853,517,0.721,525,1.323,527,1.399,531,1.62,534,2.08,551,0.902,553,1.853,554,0.763,557,0.807,563,1.541,564,1.96,568,1.771,569,0.829,570,1.286,571,1.629,572,1.584,596,1.25,616,3.234,640,1.072,646,2.464,701,4.624,706,2.303,710,2.935,739,2.507,742,2.935,833,3.762,862,2.935,866,2.665,877,2.935,982,3.906,1068,5.091,1133,3.178,1307,2.464,1501,4.624,1509,3.906,1511,3.906,1512,2.665,1513,2.665,1514,2.665,1638,2.303,1906,2.935,1907,6.855,1908,4.902,1909,4.902,1910,6.39,1911,5.803,1912,5.803,1913,6.39,1914,6.39,1915,4.902,1916,4.902,1917,6.39,1918,4.902,1919,4.902,1920,3.345,1921,4.902,1922,3.345,1923,3.345,1924,3.345,1925,3.345,1926,3.345,1927,3.345,1928,5.803,1929,3.345,1930,3.345,1931,4.902,1932,3.345,1933,4.902,1934,4.706,1935,3.345,1936,3.345,1937,3.345,1938,3.345,1939,3.345,1940,3.345,1941,3.345,1942,4.902,1943,3.345,1944,2.935,1945,3.345,1946,3.345,1947,3.345,1948,3.345,1949,3.345,1950,3.345,1951,3.345,1952,4.902,1953,3.345,1954,3.345,1955,3.345,1956,3.345,1957,3.345,1958,3.345,1959,3.345,1960,5.803,1961,3.345,1962,3.345,1963,3.345,1964,3.345,1965,3.345,1966,3.345,1967,3.345,1968,3.345,1969,3.345,1970,3.345,1971,3.345,1972,5.803,1973,3.345,1974,3.345,1975,4.902,1976,3.345,1977,7.345,1978,4.902,1979,3.345,1980,4.902,1981,3.345,1982,4.902,1983,3.345,1984,4.902,1985,3.345,1986,3.345,1987,3.345,1988,3.345,1989,4.902,1990,3.345,1991,3.345,1992,3.345,1993,3.345,1994,3.345,1995,3.345,1996,3.345,1997,3.345,1998,4.902,1999,3.345,2000,3.345,2001,3.345,2002,4.902,2003,3.345,2004,3.345,2005,3.345,2006,3.345,2007,3.345,2008,4.902,2009,3.345,2010,3.345,2011,3.345,2012,3.345,2013,5.803,2014,3.345,2015,3.345,2016,3.345]],["title/modules/SharedFiltersModule.html",[162,1.139,913,2.906]],["body/modules/SharedFiltersModule.html",[3,0.155,4,0.109,8,0.124,34,0.011,41,0.234,42,0.708,43,2.041,44,2.041,58,0.155,59,0.662,90,0.432,103,2.489,105,2.507,107,2.489,139,2.489,141,2.507,159,0.007,160,0.009,161,0.007,162,1.524,164,2.173,165,2.32,166,3.34,167,2.484,168,2.32,169,3.119,177,2.779,178,2.4,179,2.4,181,6.135,182,2.4,187,2.97,206,2.4,209,2.776,641,3.888,642,4.16,643,4.956,761,4.5,913,6.113,915,3.436,918,2.889,2017,4.956,2018,4.956,2019,4.956,2020,4.5,2021,5.648,2022,4.956,2023,5.648,2024,5.648,2025,5.648,2026,4.956]],["title/modules/SharedModule.html",[162,1.139,2027,2.737]],["body/modules/SharedModule.html",[3,0.162,4,0.114,8,0.13,34,0.011,41,0.233,42,0.739,43,2.13,44,2.13,47,1.421,58,0.162,59,0.691,90,0.451,110,2.503,122,2.503,124,0.676,126,2.575,127,0.65,159,0.007,160,0.009,161,0.007,162,1.59,164,2.268,165,2.421,166,3.404,167,2.593,168,2.421,169,3.178,177,2.852,178,2.504,179,2.504,182,2.504,187,3.049,201,3.527,206,2.504,209,2.897,915,3.527,918,3.015,920,4.341,1260,5.286,2027,5.702,2028,5.172,2029,5.172,2030,5.172,2031,5.894,2032,5.894,2033,5.894,2034,7.177,2035,7.177]],["title/modules/SharedTreksModule.html",[162,1.139,2036,2.737]],["body/modules/SharedTreksModule.html",[3,0.165,4,0.116,8,0.132,34,0.011,41,0.237,42,0.754,43,2.173,44,2.173,47,1.45,58,0.165,59,0.705,90,0.46,133,2.509,148,2.509,159,0.007,160,0.009,161,0.007,162,1.622,164,2.314,165,2.47,166,3.434,167,2.645,168,2.47,169,3.206,177,2.887,178,2.555,179,2.555,182,2.555,187,3.087,194,2.173,201,3.57,206,2.555,209,2.956,287,3.874,600,4.71,915,3.57,918,3.076,2020,4.792,2036,5.65,2037,5.277,2038,5.277,2039,5.277,2040,6.014,2041,6.014,2042,6.014,2043,4.792,2044,6.014,2045,4.792,2046,5.277]],["title/modules/SharedUiModule.html",[162,1.139,1547,2.159]],["body/modules/SharedUiModule.html",[3,0.164,4,0.115,8,0.131,34,0.011,41,0.234,42,0.746,47,1.435,58,0.164,59,0.697,90,0.455,97,2.506,100,2.506,120,2.506,159,0.007,160,0.009,161,0.007,162,1.605,164,2.29,165,2.444,166,3.418,167,2.617,168,2.444,169,3.191,177,2.869,178,2.528,179,2.528,182,2.528,187,3.067,194,2.15,201,3.547,206,2.528,287,3.849,412,4.741,460,4.741,915,3.547,1547,4.504,2020,4.741,2047,5.221,2048,5.221,2049,5.221,2050,5.95,2051,5.95,2052,5.95,2053,5.95,2054,5.95,2055,5.95]],["title/components/TabsPage.html",[0,0.529,146,1.172]],["body/components/TabsPage.html",[0,0.894,1,1.408,2,1.996,3,0.136,4,0.095,5,1.58,6,1.58,7,1.58,8,0.108,10,1.535,11,2.857,12,2.619,14,2.055,19,1.422,20,3.929,21,3.529,24,3.087,31,1.004,33,1.063,34,0.011,35,0.498,36,0.328,37,0.949,41,0.207,42,0.619,47,1.189,58,0.136,59,0.578,60,2.219,90,0.377,91,2.055,92,2.055,93,1.58,94,2.419,95,1.58,96,1.58,97,1.408,98,1.58,99,1.58,100,1.408,101,1.58,102,1.58,103,1.408,104,2.055,105,1.408,106,1.58,107,1.408,108,0.578,109,1.58,110,1.408,111,1.58,112,1.58,113,1.408,114,1.535,115,1.491,116,2.284,117,1.408,118,1.535,119,1.58,120,1.408,121,1.58,122,1.408,123,1.636,124,0.711,125,2.055,126,1.449,127,0.684,128,1.408,129,1.369,130,1.58,131,1.408,132,1.58,133,1.408,134,2.055,135,1.408,136,0.598,137,1.408,138,1.58,139,1.408,140,1.58,141,1.408,142,2.284,143,1.408,144,1.408,145,1.58,146,2.095,147,1.58,148,1.408,149,1.58,150,1.449,151,1.408,152,2.055,153,1.408,154,1.408,155,1.58,156,1.408,157,1.58,158,1.58,159,0.006,160,0.008,161,0.006,194,1.782,206,2.095,289,1.258,305,0.922,330,1.721,410,1.628,419,2.117,554,1.862,1530,5.296,1650,4.724,2056,4.327,2057,5.628,2058,7.129,2059,6.414,2060,4.932,2061,4.932,2062,4.932,2063,4.932,2064,4.327,2065,6.414,2066,6.414,2067,6.414]],["title/modules/TabsPageModule.html",[162,1.139,2068,3.109]],["body/modules/TabsPageModule.html",[3,0.164,4,0.115,8,0.131,34,0.011,41,0.238,42,0.748,43,2.155,44,2.155,47,1.438,58,0.164,59,0.699,90,0.456,146,2.336,159,0.007,160,0.009,161,0.007,162,1.609,164,2.295,165,2.45,166,3.421,167,2.623,168,2.45,169,2.45,177,2.873,178,2.534,179,2.534,182,3.071,187,3.071,201,3.552,206,2.534,209,2.931,915,3.552,916,3.483,918,3.05,1547,4.305,1549,3.662,1591,5.794,2068,6.505,2069,5.234,2070,5.234,2071,5.234,2072,5.794,2073,5.794,2074,5.964,2075,5.234,2076,5.964,2077,5.964,2078,5.964]],["title/modules/TabsPageRoutingModule.html",[162,1.139,2072,2.906]],["body/modules/TabsPageRoutingModule.html",[0,0.937,3,0.15,4,0.105,8,0.12,34,0.011,41,0.222,42,0.683,58,0.15,59,0.638,123,1.743,124,0.775,127,0.765,129,1.511,146,1.897,156,2.132,159,0.007,160,0.008,161,0.007,164,2.096,169,2.237,182,2.314,187,2.904,194,1.968,216,4.842,217,4.339,274,3.498,287,3.644,288,3.983,289,1.389,290,5.386,291,4.779,292,4.779,293,3.344,294,7.414,301,1.643,302,1.695,305,1.508,530,2.113,1519,4.011,1526,4.339,1553,3.644,1554,3.531,1650,4.011,2057,4.779,2072,4.704,2075,4.779,2079,5.446,2080,5.446,2081,4.431,2082,6.834,2083,6.241,2084,7.832,2085,6.834,2086,5.033,2087,6.834,2088,5.446,2089,5.446,2090,5.446]],["title/interfaces/TouristicCategorie.html",[480,0.461,571,1.077]],["body/interfaces/TouristicCategorie.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.7,34,0.011,35,0.579,36,0.574,41,0.165,58,0.24,75,0.415,90,0.391,108,0.769,124,0.618,127,0.677,136,0.619,159,0.004,160,0.006,161,0.004,301,0.721,302,0.877,305,1.12,314,0.866,326,1.205,330,1.164,331,1.61,334,0.955,340,1.396,380,1.378,399,1.339,428,0.955,433,0.955,466,0.853,468,1.627,480,0.952,481,0.902,482,0.955,483,0.928,484,1.811,485,1.64,486,1.617,487,1.663,488,1.663,489,1.663,490,2.084,491,2.103,492,1.663,493,1.725,494,0.928,495,0.982,496,1.445,497,0.807,498,0.807,499,0.83,500,1.901,501,1.132,502,1.572,503,0.982,504,1.417,505,1.617,506,1.302,507,1.617,508,1.956,509,1.901,510,1.339,511,1.821,512,1.793,513,1.663,514,1.417,515,1.417,516,1.417,517,1.101,518,1.931,519,1.417,520,1.603,521,1.378,522,1.417,523,1.417,524,1.417,525,1.378,526,1.417,527,1.445,528,1.417,529,1.417,530,1.378,531,1.164,532,1.339,533,1.378,534,2.065,535,0.982,536,0.982,537,1.417,538,0.982,539,0.982,540,1.378,541,0.982,542,0.982,543,0.982,544,0.982,545,0.982,546,0.982,547,0.982,548,1.417,549,1.378,550,1.572,551,1.378,552,1.197,553,0.853,554,0.807,555,0.902,556,0.982,557,0.853,558,1.417,559,1.197,560,0.853,561,0.853,562,0.982,563,1.231,564,0.902,565,1.405,566,0.982,567,0.955,568,1.445,569,1.486,570,0.928,571,1.302,572,1.266,573,1.486,574,1.339,575,1.366,576,0.853,577,0.982,578,1.849,579,0.982,580,0.955,581,0.955,582,0.955,583,0.955,584,0.955,585,0.955,586,0.955,587,0.955,588,0.982,589,0.955,590,0.982,591,0.982,592,0.877,593,0.955,594,1.231,595,1.197,596,0.902,597,0.741,598,0.955,599,0.877]],["title/interfaces/TouristicCategoryWithFeatures.html",[480,0.461,572,1.047]],["body/interfaces/TouristicCategoryWithFeatures.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.697,34,0.011,35,0.579,36,0.575,41,0.164,58,0.24,75,0.413,90,0.39,108,0.767,124,0.617,127,0.676,136,0.617,159,0.004,160,0.006,161,0.004,301,0.717,302,0.873,305,1.117,314,0.865,326,1.205,330,1.16,331,1.608,334,0.951,340,1.395,380,1.373,399,1.335,428,0.95,433,0.95,466,0.849,468,1.623,480,0.952,481,0.898,482,0.95,483,0.924,484,1.81,485,1.639,486,1.612,487,1.658,488,1.658,489,1.658,490,2.082,491,2.1,492,1.658,493,1.722,494,0.924,495,0.977,496,1.441,497,0.803,498,0.803,499,0.826,500,2.042,501,1.128,502,1.567,503,0.977,504,1.412,505,1.612,506,1.298,507,1.612,508,1.952,509,1.898,510,1.335,511,1.817,512,1.791,513,1.658,514,1.412,515,1.412,516,1.412,517,1.097,518,1.927,519,1.412,520,1.6,521,1.373,522,1.412,523,1.412,524,1.412,525,1.373,526,1.412,527,1.441,528,1.412,529,1.412,530,1.373,531,1.16,532,1.335,533,1.373,534,2.063,535,0.977,536,0.977,537,1.412,538,0.977,539,0.977,540,1.373,541,0.977,542,0.977,543,0.977,544,0.977,545,0.977,546,0.977,547,0.977,548,1.412,549,1.373,550,1.567,551,1.373,552,1.193,553,0.849,554,0.803,555,0.898,556,0.977,557,0.849,558,1.412,559,1.193,560,0.849,561,0.849,562,0.977,563,1.227,564,0.898,565,1.401,566,0.977,567,0.95,568,1.441,569,1.722,570,0.924,571,0.898,572,1.482,573,1.482,574,1.335,575,1.362,576,0.849,577,0.977,578,1.845,579,0.977,580,0.95,581,0.95,582,0.95,583,0.95,584,0.95,585,0.95,586,0.95,587,0.95,588,0.977,589,0.95,590,0.977,591,0.977,592,0.873,593,0.95,594,1.227,595,1.193,596,0.898,597,0.738,598,0.95,599,0.873]],["title/interfaces/TouristicContent.html",[480,0.461,569,1.047]],["body/interfaces/TouristicContent.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.696,34,0.011,35,0.565,36,0.581,41,0.164,58,0.24,75,0.412,90,0.389,108,0.767,124,0.616,127,0.675,136,0.617,159,0.004,160,0.006,161,0.004,301,0.716,302,0.872,305,1.116,314,0.906,326,1.204,330,1.159,331,1.607,334,0.95,337,3.094,340,1.394,380,1.371,399,1.333,428,0.949,433,0.949,466,0.848,468,1.622,480,0.951,481,0.897,482,0.949,483,0.922,484,1.823,485,1.62,486,1.611,487,1.657,488,1.657,489,1.657,490,2.098,491,2.099,492,1.657,493,1.721,494,0.922,495,0.976,496,1.44,497,0.802,498,0.802,499,0.824,500,1.897,501,1.127,502,1.566,503,0.976,504,1.411,505,1.611,506,1.296,507,1.611,508,2.099,509,1.897,510,1.333,511,1.815,512,1.79,513,1.657,514,1.411,515,1.411,516,1.411,517,1.096,518,1.926,519,1.411,520,1.6,521,1.371,522,1.411,523,1.411,524,1.411,525,1.371,526,1.411,527,1.44,528,1.411,529,1.411,530,1.371,531,1.159,532,1.333,533,1.371,534,2.063,535,0.976,536,0.976,537,1.411,538,0.976,539,0.976,540,1.371,541,0.976,542,0.976,543,0.976,544,0.976,545,0.976,546,0.976,547,0.976,548,1.411,549,1.371,550,1.566,551,1.371,552,1.192,553,0.848,554,0.802,555,0.897,556,0.976,557,0.848,558,1.411,559,1.192,560,0.848,561,0.848,562,0.976,563,1.226,564,0.897,565,1.4,566,0.976,567,0.949,568,1.44,569,1.622,570,0.922,571,0.897,572,1.261,573,1.481,574,1.333,575,1.361,576,0.848,577,0.976,578,1.845,579,0.976,580,0.949,581,0.949,582,0.949,583,0.949,584,0.949,585,0.949,586,0.949,587,0.949,588,0.976,589,0.949,590,0.976,591,0.976,592,0.872,593,0.949,594,1.226,595,1.192,596,0.897,597,0.737,598,0.949,599,0.872]],["title/interfaces/TouristicContents.html",[480,0.461,568,1.018]],["body/interfaces/TouristicContents.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.701,34,0.011,35,0.566,36,0.576,41,0.165,58,0.24,75,0.415,90,0.391,108,0.77,124,0.618,127,0.677,136,0.62,159,0.004,160,0.006,161,0.004,301,0.722,302,0.879,305,1.121,314,0.867,326,1.204,330,1.165,331,1.611,334,0.956,340,1.394,380,1.379,399,1.341,428,0.956,433,0.956,466,0.854,468,1.628,480,0.952,481,0.904,482,0.956,483,0.929,484,1.826,485,1.621,486,1.618,487,1.664,488,1.664,489,1.664,490,2.084,491,2.135,492,1.664,493,1.726,494,0.929,495,0.983,496,1.446,497,0.808,498,0.808,499,0.831,500,2.045,501,1.133,502,1.573,503,0.983,504,1.419,505,1.618,506,1.304,507,1.618,508,1.957,509,1.902,510,1.341,511,1.822,512,1.794,513,1.664,514,1.419,515,1.419,516,1.419,517,1.102,518,1.932,519,1.419,520,1.603,521,1.379,522,1.419,523,1.419,524,1.419,525,1.379,526,1.419,527,1.446,528,1.419,529,1.419,530,1.379,531,1.165,532,1.341,533,1.379,534,2.066,535,0.983,536,0.983,537,1.419,538,0.983,539,0.983,540,1.379,541,0.983,542,0.983,543,0.983,544,0.983,545,0.983,546,0.983,547,0.983,548,1.419,549,1.379,550,1.573,551,1.379,552,1.199,553,0.854,554,0.808,555,0.904,556,0.983,557,0.854,558,1.419,559,1.199,560,0.854,561,0.854,562,0.983,563,1.233,564,0.904,565,1.406,566,0.983,567,0.956,568,1.583,569,1.726,570,0.929,571,0.904,572,1.268,573,1.487,574,1.341,575,1.367,576,0.854,577,0.983,578,1.849,579,0.983,580,0.956,581,0.956,582,0.956,583,0.956,584,0.956,585,0.956,586,0.956,587,0.956,588,0.983,589,0.956,590,0.983,591,0.983,592,0.879,593,0.956,594,1.233,595,1.199,596,0.904,597,0.742,598,0.956,599,0.879]],["title/interfaces/TouristicEvent.html",[480,0.461,574,1.107]],["body/interfaces/TouristicEvent.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.696,34,0.011,35,0.565,36,0.581,41,0.164,58,0.24,75,0.412,90,0.389,108,0.767,124,0.616,127,0.675,136,0.617,159,0.004,160,0.006,161,0.004,301,0.716,302,0.872,305,1.116,314,0.906,326,1.204,330,1.159,331,1.607,334,0.95,337,3.094,340,1.394,380,1.371,399,1.333,428,0.949,433,0.949,466,0.848,468,1.622,480,0.951,481,0.897,482,0.949,483,0.922,484,1.823,485,1.62,486,1.611,487,1.657,488,1.657,489,1.657,490,2.098,491,2.099,492,1.657,493,1.721,494,0.922,495,0.976,496,1.44,497,0.802,498,0.802,499,0.824,500,1.897,501,1.127,502,1.566,503,0.976,504,1.411,505,1.611,506,1.296,507,1.611,508,2.099,509,1.897,510,1.333,511,1.815,512,1.79,513,1.657,514,1.411,515,1.411,516,1.411,517,1.096,518,1.926,519,1.411,520,1.6,521,1.371,522,1.411,523,1.411,524,1.411,525,1.371,526,1.411,527,1.44,528,1.411,529,1.411,530,1.371,531,1.159,532,1.333,533,1.371,534,2.063,535,0.976,536,0.976,537,1.411,538,0.976,539,0.976,540,1.371,541,0.976,542,0.976,543,0.976,544,0.976,545,0.976,546,0.976,547,0.976,548,1.411,549,1.371,550,1.566,551,1.371,552,1.192,553,0.848,554,0.802,555,0.897,556,0.976,557,0.848,558,1.411,559,1.192,560,0.848,561,0.848,562,0.976,563,1.226,564,0.897,565,1.4,566,0.976,567,0.949,568,1.44,569,1.481,570,0.922,571,0.897,572,1.261,573,1.481,574,1.566,575,1.361,576,0.848,577,0.976,578,1.845,579,0.976,580,0.949,581,0.949,582,0.949,583,0.949,584,0.949,585,0.949,586,0.949,587,0.949,588,0.976,589,0.949,590,0.976,591,0.976,592,0.872,593,0.949,594,1.226,595,1.192,596,0.897,597,0.737,598,0.949,599,0.872]],["title/interfaces/TouristicEvents.html",[480,0.461,573,1.047]],["body/interfaces/TouristicEvents.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.701,34,0.011,35,0.566,36,0.576,41,0.165,58,0.24,75,0.415,90,0.391,108,0.77,124,0.618,127,0.677,136,0.62,159,0.004,160,0.006,161,0.004,301,0.722,302,0.879,305,1.121,314,0.867,326,1.204,330,1.165,331,1.611,334,0.956,340,1.394,380,1.379,399,1.341,428,0.956,433,0.956,466,0.854,468,1.628,480,0.952,481,0.904,482,0.956,483,0.929,484,1.826,485,1.621,486,1.618,487,1.664,488,1.664,489,1.664,490,2.084,491,2.135,492,1.664,493,1.726,494,0.929,495,0.983,496,1.446,497,0.808,498,0.808,499,0.831,500,2.045,501,1.133,502,1.573,503,0.983,504,1.419,505,1.618,506,1.304,507,1.618,508,1.957,509,1.902,510,1.341,511,1.822,512,1.794,513,1.664,514,1.419,515,1.419,516,1.419,517,1.102,518,1.932,519,1.419,520,1.603,521,1.379,522,1.419,523,1.419,524,1.419,525,1.379,526,1.419,527,1.446,528,1.419,529,1.419,530,1.379,531,1.165,532,1.341,533,1.379,534,2.066,535,0.983,536,0.983,537,1.419,538,0.983,539,0.983,540,1.379,541,0.983,542,0.983,543,0.983,544,0.983,545,0.983,546,0.983,547,0.983,548,1.419,549,1.379,550,1.573,551,1.379,552,1.199,553,0.854,554,0.808,555,0.904,556,0.983,557,0.854,558,1.419,559,1.199,560,0.854,561,0.854,562,0.983,563,1.233,564,0.904,565,1.406,566,0.983,567,0.956,568,1.446,569,1.487,570,0.929,571,0.904,572,1.268,573,1.628,574,1.722,575,1.367,576,0.854,577,0.983,578,1.849,579,0.983,580,0.956,581,0.956,582,0.956,583,0.956,584,0.956,585,0.956,586,0.956,587,0.956,588,0.983,589,0.956,590,0.983,591,0.983,592,0.879,593,0.956,594,1.233,595,1.199,596,0.904,597,0.742,598,0.956,599,0.879]],["title/interfaces/Trek.html",[127,0.382,480,0.461]],["body/interfaces/Trek.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.697,34,0.011,35,0.565,36,0.579,41,0.164,58,0.24,75,0.413,90,0.39,108,0.767,124,0.617,127,0.692,136,0.617,159,0.004,160,0.006,161,0.004,301,0.717,302,0.873,305,1.117,314,0.906,326,1.204,330,1.16,331,1.608,334,0.951,337,2.407,340,1.394,380,1.373,399,1.335,428,0.95,433,0.95,466,0.849,468,1.623,480,0.952,481,0.898,482,0.95,483,0.924,484,1.824,485,1.62,486,1.612,487,1.658,488,1.658,489,1.658,490,2.098,491,2.1,492,1.658,493,1.722,494,0.924,495,0.977,496,1.441,497,0.803,498,0.803,499,0.826,500,1.898,501,1.128,502,1.567,503,0.977,504,1.412,505,1.612,506,1.298,507,1.612,508,2.1,509,1.898,510,1.717,511,1.817,512,1.791,513,1.658,514,1.412,515,1.412,516,1.412,517,1.097,518,1.927,519,1.412,520,1.6,521,1.373,522,1.412,523,1.412,524,1.412,525,1.373,526,1.412,527,1.441,528,1.412,529,1.412,530,1.373,531,1.16,532,1.335,533,1.373,534,2.063,535,0.977,536,0.977,537,1.412,538,0.977,539,0.977,540,1.373,541,0.977,542,0.977,543,0.977,544,0.977,545,0.977,546,0.977,547,0.977,548,1.412,549,1.373,550,1.567,551,1.373,552,1.193,553,0.849,554,0.803,555,0.898,556,0.977,557,0.849,558,1.412,559,1.193,560,0.849,561,0.849,562,0.977,563,1.227,564,0.898,565,1.401,566,0.977,567,0.95,568,1.441,569,1.482,570,0.924,571,0.898,572,1.262,573,1.482,574,1.335,575,1.362,576,0.849,577,0.977,578,1.845,579,0.977,580,0.95,581,0.95,582,0.95,583,0.95,584,0.95,585,0.95,586,0.95,587,0.95,588,0.977,589,0.95,590,0.977,591,0.977,592,0.873,593,0.95,594,1.227,595,1.193,596,0.898,597,0.738,598,0.95,599,0.873]],["title/components/TrekCardComponent.html",[0,0.529,148,1.205]],["body/components/TrekCardComponent.html",[0,0.67,1,0.831,2,1.376,3,0.08,4,0.056,5,0.933,6,0.933,7,0.933,8,0.064,10,0.906,11,2.743,12,2.514,14,1.417,16,0.309,17,0.98,19,0.98,24,2.7,25,3.484,27,3.575,28,3.152,29,1.27,30,3.034,31,1.669,33,1.151,34,0.011,35,0.448,36,0.524,37,1.028,39,1.286,40,1.262,41,0.193,42,0.365,43,1.052,44,1.052,47,0.702,53,1.623,54,1.431,55,2.261,57,1.553,58,0.08,59,0.341,60,2.304,66,3.601,68,2.905,75,0.699,82,2.357,90,0.223,91,1.417,92,1.417,93,0.933,94,1.912,95,0.933,96,0.933,97,0.831,98,0.933,99,0.933,100,0.831,101,0.933,102,0.933,103,0.831,104,1.417,105,0.831,106,0.933,107,0.831,108,0.341,109,0.933,110,0.831,111,0.933,112,0.933,113,0.831,114,0.906,115,0.88,116,1.712,117,0.831,118,0.906,119,0.933,120,0.831,121,0.933,122,0.831,123,1.127,124,0.562,125,1.417,126,0.855,127,0.753,128,0.831,129,0.808,130,0.933,131,0.831,132,0.933,133,0.831,134,1.417,135,0.831,136,0.353,137,0.831,138,0.933,139,0.831,140,0.933,141,0.831,142,1.712,143,0.831,144,0.831,145,0.933,146,0.808,147,0.933,148,1.703,149,0.933,150,0.855,151,0.831,152,1.417,153,0.831,154,0.831,155,0.933,156,0.831,157,0.933,158,0.933,159,0.004,160,0.005,161,0.004,213,1.788,274,1.878,289,1.521,302,1.59,305,1.199,314,0.501,316,2.309,326,0.991,330,1.008,336,2.714,338,1.804,340,1.182,344,3.879,345,3.522,410,0.961,414,1.376,415,2.436,416,3.043,417,3.256,419,1.459,425,2.45,427,2.091,431,1.623,448,2.296,449,3.319,450,2.004,466,1.288,468,0.722,477,1.7,478,1.888,506,0.743,512,1.253,520,1.344,531,1.539,578,1.363,616,3.763,640,0.933,653,1.888,734,3.522,735,3.043,739,3.051,774,3.181,780,1.431,781,2.004,804,3.746,805,3.575,838,1.7,839,1.553,891,2.866,892,2.357,893,3.938,894,3.256,895,1.888,896,1.888,897,1.888,926,5.38,979,2.555,1021,3.678,1026,3.256,1032,2.32,1033,1.788,1035,3.522,1037,2.32,1039,2.555,1040,2.004,1041,2.555,1043,2.555,1079,3.522,1084,2.32,1111,1.788,1192,2.555,1253,3.879,1330,3.464,1350,4.688,1491,2.32,1492,2.555,1493,2.555,1494,2.32,1495,2.145,1496,3.879,1650,3.256,1701,2.32,1702,2.32,1709,4.753,1805,2.145,2043,6.565,2091,7.23,2092,2.555,2093,5.343,2094,4.42,2095,5.343,2096,5.343,2097,5.343,2098,4.42,2099,5.966,2100,4.42,2101,6.414,2102,6.414,2103,2.912,2104,7.017,2105,4.42,2106,2.912,2107,2.912,2108,2.912,2109,2.912,2110,2.912,2111,2.912,2112,4.42,2113,2.912,2114,2.912,2115,2.912,2116,4.42,2117,5.966,2118,2.912,2119,5.343,2120,2.912,2121,2.912,2122,2.912,2123,2.912,2124,2.912,2125,2.912,2126,2.912,2127,2.912,2128,4.42,2129,2.912,2130,4.42,2131,4.42,2132,4.42,2133,2.912,2134,4.42,2135,4.42,2136,2.912,2137,2.912,2138,2.912,2139,4.42,2140,4.42,2141,4.42,2142,2.912,2143,2.912,2144,2.912,2145,2.912,2146,4.42,2147,2.912,2148,4.42,2149,2.912,2150,2.912,2151,2.912,2152,2.912,2153,2.912,2154,2.912,2155,2.912,2156,2.912,2157,2.912,2158,2.912,2159,2.912,2160,4.42,2161,4.42,2162,4.42,2163,4.42,2164,4.42,2165,4.42,2166,6.753,2167,6.753,2168,4.42,2169,5.966,2170,4.42,2171,4.42,2172,4.42,2173,2.912,2174,4.42,2175,2.912,2176,3.879,2177,2.912,2178,2.555,2179,4.42,2180,2.912,2181,2.912,2182,2.912,2183,2.912,2184,4.42,2185,4.42,2186,4.42,2187,2.912,2188,2.912,2189,2.912,2190,4.42,2191,2.912,2192,4.753,2193,3.879,2194,2.912,2195,2.912]],["title/interfaces/TrekContext.html",[480,0.461,592,1.047]],["body/interfaces/TrekContext.html",[3,0.092,4,0.065,8,0.074,16,0.235,29,0.666,34,0.011,35,0.56,36,0.582,41,0.16,58,0.239,75,0.394,90,0.377,108,0.751,124,0.603,127,0.739,136,0.597,159,0.004,160,0.006,161,0.004,301,0.685,302,1.588,305,1.331,314,0.854,326,1.203,330,1.122,331,1.585,334,1.197,340,1.391,380,1.328,399,1.291,428,0.907,433,0.907,466,0.811,468,1.588,480,0.948,481,0.858,482,0.907,483,0.882,484,1.794,485,1.61,486,1.57,487,1.615,488,1.615,489,1.615,490,2.065,491,2.076,492,1.615,493,1.69,494,0.882,495,0.933,496,1.644,497,0.767,498,0.767,499,0.788,500,1.868,501,1.091,502,1.527,503,0.933,504,1.366,505,1.57,506,1.255,507,1.57,508,1.921,509,1.868,510,1.291,511,1.778,512,1.768,513,1.615,514,1.366,515,1.366,516,1.366,517,1.061,518,1.892,519,1.366,520,1.68,521,1.328,522,1.366,523,1.366,524,1.366,525,1.328,526,1.366,527,1.403,528,1.366,529,1.366,530,1.328,531,1.46,532,1.291,533,1.328,534,2.045,535,0.933,536,0.933,537,1.366,538,0.933,539,0.933,540,1.328,541,0.933,542,0.933,543,0.933,544,0.933,545,0.933,546,0.933,547,0.933,548,1.366,549,1.328,550,1.527,551,1.328,552,1.154,553,0.811,554,0.767,555,0.858,556,0.933,557,0.811,558,1.366,559,1.154,560,0.811,561,0.811,562,0.933,563,1.187,564,0.858,565,1.768,566,0.933,567,0.907,568,1.819,569,1.443,570,0.882,571,0.858,572,1.588,573,1.87,574,1.291,575,1.554,576,0.811,577,0.933,578,1.816,579,0.933,580,0.907,581,0.907,582,0.907,583,0.907,584,0.907,585,0.907,586,0.907,587,0.907,588,0.933,589,0.907,590,0.933,591,0.933,592,1.22,593,1.728,594,1.644,595,1.598,596,1.634,597,1.342,598,1.728,599,0.834]],["title/guards/TrekContextResolver.html",[214,2.737,1555,2.906]],["body/guards/TrekContextResolver.html",[3,0.126,4,0.088,8,0.1,16,0.319,17,1.352,19,1.352,21,3.527,27,3.826,28,3.6,30,3.792,31,1.242,33,1.314,34,0.011,35,0.479,36,0.406,37,1.173,39,0.984,41,0.235,42,0.573,45,1.703,46,1.876,47,1.101,48,2.16,53,2.545,54,2.245,55,3.119,57,2.436,58,0.126,59,0.535,60,2.495,64,2.436,65,2.336,123,1.555,127,0.778,159,0.006,160,0.008,161,0.006,186,2.436,194,1.651,200,3.144,214,3.954,240,5.519,241,2.961,242,3.144,260,2.758,289,2.143,302,1.893,305,1.427,310,2.137,334,1.427,340,0.715,349,2.961,350,1.758,351,2.804,356,2.545,405,2.961,406,2.961,414,1.422,496,1.47,497,1.041,498,1.041,517,0.984,531,1.67,565,1.717,568,1.84,573,1.816,575,1.67,578,2.002,592,1.512,593,1.232,594,1.101,595,1.43,596,1.555,597,1.278,598,1.645,640,1.464,739,3.119,754,2.961,804,4.009,805,4.083,838,2.667,839,2.436,892,2.436,1172,4.451,1175,3.144,1176,4.278,1202,3.364,1244,4.008,1524,2.961,1530,5.198,1553,3.907,1556,3.144,1561,4.859,1562,5.396,1564,4.859,1570,3.364,1571,3.364,1572,3.364,1573,3.364,1575,3.639,1576,3.639,1619,5.47,1804,3.639,1805,3.364,1821,4.008,2196,4.008,2197,4.568,2198,4.568,2199,6.098,2200,4.008,2201,4.568,2202,4.568,2203,6.098,2204,4.568,2205,6.098,2206,4.568,2207,4.568,2208,4.568,2209,4.568,2210,4.568,2211,4.568,2212,4.008,2213,4.568,2214,4.568,2215,4.568,2216,4.568,2217,4.568,2218,4.568,2219,4.008,2220,4.008,2221,4.568,2222,3.639,2223,4.568,2224,4.568,2225,4.568,2226,4.568]],["title/modules/TrekDetailsPageModule.html",[162,1.139,2227,3.109]],["body/modules/TrekDetailsPageModule.html",[0,0.734,3,0.161,4,0.113,8,0.129,34,0.011,41,0.239,42,0.734,43,2.115,44,2.115,47,1.411,58,0.161,59,0.686,90,0.448,127,0.53,150,2.493,159,0.007,160,0.009,161,0.007,162,1.579,164,2.252,165,2.404,166,3.393,167,2.574,168,2.404,169,2.404,177,2.84,178,2.487,179,2.487,182,3.036,187,3.036,194,2.115,201,3.512,206,2.487,209,2.876,214,4.633,215,4.663,287,3.121,288,4.114,289,1.492,290,3.593,600,4.633,915,3.512,916,4.173,918,2.993,1547,4.286,1549,3.593,1551,4.311,1552,4.311,1553,3.121,1554,3.794,2036,5.433,2046,5.136,2081,3.794,2083,4.663,2227,6.393,2228,5.136,2229,5.136,2230,5.853,2231,4.311,2232,5.853,2233,5.136,2234,5.853,2235,5.853]],["title/components/TrekMapPage.html",[0,0.529,151,1.205]],["body/components/TrekMapPage.html",[0,0.818,1,0.863,2,1.415,3,0.083,4,0.058,5,0.969,6,0.969,7,0.969,8,0.066,10,0.941,11,2.753,12,2.523,14,1.457,16,0.317,17,1.008,19,1.008,21,3.126,29,1.29,30,3.084,31,1.716,33,1.405,34,0.011,35,0.496,36,0.537,37,1.254,39,1.612,40,2.176,41,0.213,42,0.379,47,0.729,57,1.612,58,0.083,59,0.354,60,2.372,65,1.546,66,3.79,68,1.163,75,0.764,90,0.231,91,1.457,92,1.457,93,0.969,94,1.948,95,0.969,96,0.969,97,0.863,98,0.969,99,0.969,100,0.863,101,0.969,102,0.969,103,0.863,104,1.457,105,0.863,106,0.969,107,0.863,108,0.354,109,0.969,110,0.863,111,0.969,112,0.969,113,1.56,114,0.941,115,1.652,116,1.751,117,0.863,118,0.941,119,0.969,120,0.863,121,0.969,122,0.863,123,1.865,124,0.573,125,1.457,126,0.888,127,0.701,128,0.863,129,0.839,130,0.969,131,0.863,132,0.969,133,0.863,134,1.457,135,1.56,136,0.862,137,0.863,138,0.969,139,0.863,140,0.969,141,0.863,142,1.751,143,0.863,144,0.863,145,0.969,146,0.839,147,0.969,148,0.863,149,0.969,150,0.888,151,1.736,152,1.457,153,0.863,154,0.863,155,0.969,156,0.863,157,0.969,158,0.969,159,0.004,160,0.006,161,0.004,194,1.092,200,2.081,206,1.284,213,3.356,246,2.652,247,2.226,248,3.99,249,2.652,250,2.226,260,2.197,266,3.941,274,2.322,289,1.55,293,1.856,298,6.159,301,0.926,305,1.136,314,0.515,316,2.374,326,0.732,334,1.328,338,1.971,340,0.856,410,0.998,414,1.415,419,1.501,425,2.245,448,2.509,462,2.792,468,0.749,477,2.655,478,2.948,484,1.008,485,0.581,496,1.318,497,0.689,498,0.689,517,1.178,527,1.713,531,1.246,554,1.62,565,1.281,572,1.355,575,1.246,592,1.127,594,1.318,595,1.281,596,1.394,597,1.274,616,3.96,623,3.635,640,0.969,648,4.025,649,3.349,650,3.349,652,2.792,653,1.959,654,2.226,668,2.652,774,3.242,780,1.485,781,2.081,783,3.366,784,3.192,790,2.534,791,2.534,793,2.081,797,4.185,798,3.635,824,3.192,825,1.765,826,1.765,829,1.378,835,1.765,836,1.856,840,1.765,851,2.655,852,2.408,881,2.226,889,2.226,890,1.959,897,1.959,937,4.796,939,3.99,988,2.652,1033,1.856,1092,2.408,1103,2.408,1111,1.856,1172,2.948,1175,2.081,1176,3.55,1273,3.623,1328,2.408,1330,2.948,1351,2.408,1494,2.408,1524,4.226,1527,4.844,1529,4.478,1530,4.607,1536,2.226,1538,3.623,1540,2.408,2045,2.408,2064,2.652,2081,2.948,2178,3.99,2192,3.623,2193,3.99,2212,2.652,2222,2.408,2231,6.159,2236,2.408,2237,4.796,2238,3.99,2239,5.465,2240,5.465,2241,5.465,2242,4.547,2243,5.465,2244,5.465,2245,5.335,2246,3.99,2247,3.022,2248,4.547,2249,3.022,2250,4.547,2251,2.652,2252,3.022,2253,3.022,2254,3.022,2255,4.547,2256,3.022,2257,2.652,2258,2.652,2259,2.652,2260,2.652,2261,3.022,2262,2.652,2263,2.652,2264,4.547,2265,2.652,2266,2.652,2267,3.022,2268,2.652,2269,2.652,2270,3.022,2271,2.652,2272,4.547,2273,2.652,2274,3.022,2275,2.652,2276,2.652,2277,5.465,2278,3.022,2279,3.022,2280,3.022,2281,3.022,2282,3.022,2283,2.652,2284,2.652,2285,3.022,2286,3.022,2287,3.022,2288,3.022,2289,5.465,2290,3.022,2291,3.022,2292,3.022,2293,3.022,2294,5.465,2295,3.022,2296,3.022,2297,3.022,2298,3.022,2299,3.022,2300,4.547,2301,2.652,2302,4.547,2303,3.022,2304,3.022,2305,3.022,2306,3.022,2307,2.652,2308,3.022]],["title/modules/TrekMapPageModule.html",[162,1.139,2309,3.109]],["body/modules/TrekMapPageModule.html",[0,0.728,3,0.16,4,0.112,8,0.128,34,0.011,41,0.238,42,0.728,43,2.098,44,2.098,47,1.4,58,0.16,59,0.681,90,0.444,127,0.526,143,2.388,151,2.418,159,0.007,160,0.009,161,0.007,162,1.566,164,2.234,165,2.385,166,3.381,167,2.554,168,2.385,169,2.385,177,2.826,178,2.466,179,2.466,182,3.021,187,3.021,194,2.098,201,3.494,206,2.466,209,2.853,214,4.61,215,4.626,287,3.096,288,4.099,289,1.48,290,3.564,298,4.276,641,3.996,915,3.494,916,3.39,918,2.969,1547,4.278,1549,3.564,1551,4.276,1552,4.276,1553,3.096,1554,3.764,1867,4.626,2027,5.422,2081,3.764,2231,4.276,2309,6.444,2310,5.094,2311,5.094,2312,5.805,2313,5.094,2314,5.094,2315,5.094,2316,5.805]],["title/interfaces/TrekProperties.html",[480,0.461,510,1.107]],["body/interfaces/TrekProperties.html",[3,0.09,4,0.063,8,0.072,16,0.228,29,0.647,34,0.011,35,0.557,36,0.585,37,1.215,41,0.157,58,0.238,75,0.383,90,0.369,108,0.741,124,0.664,127,0.66,136,0.584,159,0.004,160,0.006,161,0.004,301,0.665,302,0.81,305,1.07,314,0.847,326,1.207,330,1.098,331,1.571,334,0.9,340,1.395,380,1.3,399,1.264,428,0.881,433,0.881,466,0.788,468,1.566,480,0.946,481,0.833,482,0.881,483,0.857,484,1.8,485,1.603,486,1.544,487,1.588,488,1.588,489,1.588,490,2.053,491,2.061,492,1.588,493,1.67,494,0.857,495,0.907,496,1.38,497,0.745,498,0.745,499,0.766,500,1.849,501,1.068,502,1.657,503,0.907,504,1.337,505,1.901,506,1.229,507,1.544,508,1.901,509,1.849,510,1.501,511,2.023,512,1.821,513,1.956,514,1.869,515,1.869,516,1.869,517,1.452,518,2.076,519,1.869,520,1.627,521,1.817,522,1.869,523,1.869,524,1.869,525,1.817,526,1.869,527,1.624,528,1.869,529,1.869,530,1.817,531,1.098,532,1.264,533,1.3,534,2.033,535,0.907,536,0.907,537,1.337,538,0.907,539,0.907,540,1.3,541,0.907,542,0.907,543,0.907,544,0.907,545,0.907,546,0.907,547,0.907,548,1.337,549,1.3,550,1.501,551,1.3,552,1.129,553,0.788,554,0.745,555,0.833,556,0.907,557,0.788,558,1.337,559,1.129,560,0.788,561,0.788,562,0.907,563,1.162,564,0.833,565,1.342,566,0.907,567,0.881,568,1.38,569,1.419,570,0.857,571,0.833,572,1.195,573,1.419,574,1.264,575,1.305,576,0.788,577,0.907,578,1.797,579,0.907,580,0.881,581,0.881,582,0.881,583,0.881,584,0.881,585,0.881,586,0.881,587,0.881,588,0.907,589,0.881,590,0.907,591,0.907,592,0.81,593,0.881,594,1.162,595,1.129,596,0.833,597,0.684,598,0.881,599,0.81]],["title/interfaces/Treks.html",[124,0.398,480,0.461]],["body/interfaces/Treks.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.701,34,0.011,35,0.566,36,0.576,41,0.165,58,0.24,75,0.415,90,0.391,108,0.77,124,0.656,127,0.706,136,0.62,159,0.004,160,0.006,161,0.004,301,0.722,302,0.879,305,1.121,314,0.867,326,1.204,330,1.165,331,1.611,334,0.956,340,1.394,380,1.379,399,1.341,428,0.956,433,0.956,466,0.854,468,1.628,480,0.952,481,0.904,482,0.956,483,0.929,484,1.826,485,1.621,486,1.618,487,1.664,488,1.664,489,1.664,490,2.084,491,2.135,492,1.664,493,1.726,494,0.929,495,0.983,496,1.446,497,0.808,498,0.808,499,0.831,500,2.045,501,1.133,502,1.573,503,0.983,504,1.419,505,1.618,506,1.304,507,1.618,508,1.957,509,1.902,510,1.341,511,1.822,512,1.794,513,1.664,514,1.419,515,1.419,516,1.419,517,1.102,518,1.932,519,1.419,520,1.603,521,1.379,522,1.419,523,1.419,524,1.419,525,1.379,526,1.419,527,1.446,528,1.419,529,1.419,530,1.379,531,1.165,532,1.341,533,1.379,534,2.066,535,0.983,536,0.983,537,1.419,538,0.983,539,0.983,540,1.379,541,0.983,542,0.983,543,0.983,544,0.983,545,0.983,546,0.983,547,0.983,548,1.419,549,1.379,550,1.573,551,1.379,552,1.199,553,0.854,554,0.808,555,0.904,556,0.983,557,0.854,558,1.419,559,1.199,560,0.854,561,0.854,562,0.983,563,1.233,564,0.904,565,1.406,566,0.983,567,0.956,568,1.446,569,1.487,570,0.929,571,0.904,572,1.268,573,1.487,574,1.341,575,1.367,576,0.854,577,0.983,578,1.849,579,0.983,580,0.956,581,0.956,582,0.956,583,0.956,584,0.956,585,0.956,586,0.956,587,0.956,588,0.983,589,0.956,590,0.983,591,0.983,592,0.879,593,0.956,594,1.233,595,1.199,596,0.904,597,0.742,598,0.956,599,0.879]],["title/interfaces/TreksContext.html",[480,0.461,599,1.047]],["body/interfaces/TreksContext.html",[3,0.097,4,0.068,8,0.078,16,0.246,29,0.698,34,0.011,35,0.565,36,0.575,41,0.164,58,0.24,75,0.413,90,0.39,108,0.768,124,0.617,127,0.676,136,0.618,159,0.004,160,0.006,161,0.004,301,0.718,302,0.874,305,1.353,314,0.865,326,1.204,330,1.161,331,1.609,334,0.952,340,1.394,380,1.374,399,1.336,428,0.951,433,0.951,466,0.85,468,1.624,480,0.952,481,0.899,482,0.951,483,0.925,484,1.81,485,1.62,486,1.613,487,1.66,488,1.66,489,1.66,490,2.082,491,2.101,492,1.66,493,1.723,494,0.925,495,0.979,496,1.442,497,0.804,498,0.804,499,0.827,500,1.899,501,1.129,502,1.569,503,0.979,504,1.414,505,1.613,506,1.299,507,1.613,508,1.953,509,1.899,510,1.336,511,1.818,512,1.792,513,1.66,514,1.414,515,1.414,516,1.414,517,1.098,518,1.928,519,1.414,520,1.656,521,1.374,522,1.414,523,1.414,524,1.414,525,1.374,526,1.414,527,1.442,528,1.414,529,1.414,530,1.374,531,1.161,532,1.336,533,1.374,534,2.064,535,0.979,536,0.979,537,1.414,538,0.979,539,0.979,540,1.374,541,0.979,542,0.979,543,0.979,544,0.979,545,0.979,546,0.979,547,0.979,548,1.414,549,1.374,550,1.569,551,1.374,552,1.194,553,0.85,554,0.804,555,0.899,556,0.979,557,0.85,558,1.414,559,1.194,560,0.85,561,0.85,562,0.979,563,1.228,564,0.899,565,1.402,566,0.979,567,0.951,568,1.442,569,1.483,570,0.925,571,0.899,572,1.263,573,1.483,574,1.336,575,1.584,576,0.85,577,0.979,578,1.846,579,0.979,580,0.951,581,0.951,582,0.951,583,0.951,584,0.951,585,0.951,586,0.951,587,0.951,588,0.979,589,0.951,590,0.979,591,0.979,592,0.874,593,0.951,594,1.675,595,1.629,596,0.899,597,0.739,598,0.951,599,1.263]],["title/guards/TreksContextResolver.html",[216,2.737,1555,2.906]],["body/guards/TreksContextResolver.html",[3,0.155,4,0.109,8,0.124,16,0.393,17,1.545,19,1.545,21,3.701,27,3.885,28,3.893,31,1.42,33,1.502,34,0.011,35,0.487,36,0.464,37,1.341,39,1.212,41,0.236,42,0.705,45,2.096,46,2.31,47,1.356,48,2.66,53,3.134,54,2.763,55,3.566,58,0.155,59,0.659,60,2.466,64,3.718,65,3.566,159,0.007,160,0.009,161,0.007,194,2.032,216,4.52,240,5.792,241,3.645,242,3.871,260,2.032,289,1.932,305,1.522,310,2.443,331,1.633,350,2.164,414,1.75,517,1.212,575,1.806,594,1.356,595,1.634,599,1.394,640,1.802,804,4.425,805,4.415,838,3.284,839,2.999,1553,4.225,1556,3.871,1561,5.555,1562,5.835,1570,4.141,1571,4.141,1572,4.141,1573,4.141,1804,4.48,1805,4.141,2200,4.934,2317,4.934,2318,5.623,2319,5.623,2320,5.623,2321,5.623,2322,5.623]],["title/components/TreksMapPage.html",[0,0.529,153,1.205]],["body/components/TreksMapPage.html",[0,0.801,1,0.822,2,1.364,3,0.079,4,0.056,5,0.923,6,0.923,7,0.923,8,0.063,10,0.896,11,2.74,12,2.512,14,1.405,16,0.201,17,0.972,19,0.972,21,3.075,24,2.283,27,3.557,28,3.137,29,1.263,30,3.019,31,1.737,33,1.144,34,0.011,35,0.446,36,0.544,37,1.021,39,1.649,40,2.242,41,0.225,42,0.361,45,1.074,46,1.183,47,0.694,48,1.362,53,1.605,54,1.415,55,2.242,57,1.536,58,0.079,59,0.338,60,2.415,64,1.536,65,1.473,66,3.404,68,2.042,75,0.622,90,0.22,91,1.405,92,1.405,93,0.923,94,1.901,95,0.923,96,0.923,97,0.822,98,0.923,99,0.923,100,0.822,101,0.923,102,0.923,103,0.822,104,1.405,105,1.515,106,0.923,107,0.822,108,0.338,109,0.923,110,0.822,111,0.923,112,0.923,113,0.822,114,0.896,115,0.871,116,1.701,117,0.822,118,0.896,119,0.923,120,0.822,121,0.923,122,0.822,123,1.837,124,0.721,125,1.405,126,0.846,127,0.537,128,0.822,129,0.799,130,0.923,131,0.822,132,0.923,133,0.822,134,1.405,135,0.822,136,0.349,137,0.822,138,0.923,139,1.515,140,0.923,141,0.822,142,1.701,143,0.822,144,0.822,145,0.923,146,0.799,147,0.923,148,0.822,149,0.923,150,0.846,151,0.822,152,1.405,153,1.694,154,0.822,155,0.923,156,0.822,157,0.923,158,0.923,159,0.004,160,0.005,161,0.004,168,1.801,194,1.041,200,1.983,238,5.149,239,2.527,266,3.846,274,1.224,289,1.513,293,2.691,301,0.893,305,0.992,314,0.496,316,2.373,326,0.965,338,1.605,340,0.831,350,1.108,356,1.605,396,2.121,410,0.951,414,1.364,415,2.419,419,1.447,425,2.871,448,2.456,462,2.691,477,2.56,484,0.972,485,0.554,496,1.28,497,0.657,498,0.657,501,1.176,517,1.144,520,1.464,575,1.21,576,1.43,594,1.28,595,1.244,597,1.112,599,1.316,616,3.747,623,3.575,640,0.923,648,3.229,649,3.229,650,3.229,652,1.768,653,2.842,654,3.229,655,2.295,670,4.359,672,1.867,704,3.493,730,6.322,780,1.415,783,3.436,784,3.099,790,2.443,791,2.443,797,4.084,798,3.575,802,3.493,824,3.099,825,1.682,826,1.682,829,3.065,835,1.682,836,1.768,837,2.295,840,1.682,841,1.983,851,1.682,881,2.121,929,4.229,1021,1.983,1073,1.983,1129,3.846,1171,4.657,1172,3.846,1175,1.983,1176,3.727,1187,2.527,1188,2.527,1189,2.527,1190,2.527,1254,2.527,1273,3.493,1274,3.493,1307,2.121,1324,2.121,1328,2.295,1330,3.441,1351,3.493,1491,3.493,1529,4.369,1530,4.532,1536,2.121,1580,5.086,1585,3.847,1613,4.657,1638,1.983,1713,3.493,1787,3.847,2022,2.527,2026,2.527,2045,2.295,2081,1.867,2086,6.25,2176,2.527,2222,3.493,2236,2.295,2237,4.657,2238,3.847,2246,2.527,2251,2.527,2257,2.527,2258,2.527,2259,2.527,2260,2.527,2262,2.527,2263,2.527,2265,2.527,2266,2.527,2268,2.527,2269,2.527,2271,3.847,2273,2.527,2275,4.657,2276,2.527,2283,2.527,2284,2.527,2323,6.761,2324,5.307,2325,5.307,2326,5.307,2327,5.307,2328,5.932,2329,5.932,2330,5.932,2331,4.384,2332,2.88,2333,2.88,2334,2.88,2335,4.384,2336,2.88,2337,2.88,2338,2.88,2339,2.88,2340,2.88,2341,2.88,2342,2.88,2343,2.88,2344,2.88,2345,2.527,2346,2.88,2347,3.847,2348,2.88,2349,2.88,2350,2.88,2351,2.88,2352,2.88,2353,2.88,2354,2.88,2355,2.88,2356,2.88,2357,2.88,2358,2.88,2359,2.88,2360,2.88,2361,2.88,2362,2.88,2363,2.88,2364,2.88,2365,2.88,2366,4.384,2367,2.88,2368,2.88,2369,2.88,2370,2.88,2371,2.88,2372,4.384,2373,4.384,2374,2.88,2375,2.88]],["title/modules/TreksMapPageModule.html",[162,1.139,2376,3.109]],["body/modules/TreksMapPageModule.html",[0,0.73,3,0.16,4,0.112,8,0.128,34,0.011,41,0.238,42,0.73,43,2.103,44,2.103,47,1.403,58,0.16,59,0.682,90,0.445,124,0.548,144,2.389,153,2.42,159,0.007,160,0.009,161,0.007,162,1.57,164,2.239,165,2.39,166,3.384,167,2.559,168,2.39,169,2.39,177,2.83,178,2.472,179,2.472,182,3.025,187,3.025,194,2.103,201,3.499,206,2.472,209,2.86,216,4.616,217,4.636,287,3.103,288,4.103,289,1.484,290,3.573,641,4.006,915,3.499,916,3.398,918,2.976,1303,4.286,1304,5.106,1547,4.28,1549,3.573,1553,3.103,1554,3.772,2027,5.425,2081,3.772,2086,4.286,2313,5.106,2314,5.106,2315,5.106,2323,4.636,2376,6.446,2377,5.106,2378,5.106,2379,5.819]],["title/components/TreksOrderComponent.html",[0,0.529,154,1.205]],["body/components/TreksOrderComponent.html",[0,0.802,1,1.136,2,1.728,3,0.109,4,0.077,5,1.275,6,1.275,7,1.275,8,0.088,10,1.239,11,2.817,12,2.582,14,1.779,16,0.278,17,1.23,19,1.23,21,3.401,24,2.136,29,1.265,30,3.271,31,1.631,33,1.196,34,0.011,35,0.483,36,0.484,37,1.068,39,1.49,40,1.825,41,0.207,42,0.499,47,0.96,48,1.883,57,2.122,58,0.109,59,0.467,60,2.264,64,2.122,65,2.036,66,3.879,75,0.651,90,0.305,91,1.779,92,1.779,93,1.275,94,2.216,95,1.275,96,1.275,97,1.136,98,1.275,99,1.275,100,1.136,101,1.275,102,1.275,103,1.136,104,1.779,105,1.136,106,1.275,107,1.136,108,0.467,109,1.275,110,1.136,111,1.275,112,1.275,113,1.136,114,1.239,115,1.203,116,2.048,117,1.136,118,1.239,119,1.275,120,1.136,121,1.275,122,1.136,123,1.416,124,0.772,125,1.779,126,1.169,127,0.626,128,1.136,129,1.104,130,1.275,131,1.136,132,1.275,133,1.136,134,1.779,135,1.136,136,0.483,137,1.136,138,1.275,139,1.136,140,1.275,141,1.136,142,2.048,143,1.136,144,1.136,145,1.275,146,1.104,147,1.275,148,1.136,149,1.275,150,1.169,151,1.136,152,1.779,153,1.136,154,1.975,155,1.275,156,1.136,157,1.275,158,1.275,159,0.005,160,0.007,161,0.005,178,1.691,218,5.694,219,2.931,220,3.171,256,6.16,274,3.201,289,1.015,314,0.629,316,1.724,338,1.203,351,2.444,410,1.314,419,1.832,425,2.626,448,2.46,462,4.466,484,1.23,553,1.816,554,1.265,616,4.054,640,1.275,758,3.492,774,2.122,777,3.171,778,3.171,779,3.171,780,1.956,781,2.74,783,3.703,790,3.094,791,3.094,798,3.269,824,3.733,825,2.324,826,2.324,829,1.814,835,2.324,836,2.444,840,2.324,851,2.324,1092,3.171,1093,5.609,1094,3.492,1095,3.492,1096,2.931,1097,3.492,1098,3.492,1099,3.492,1101,3.492,1102,3.492,1103,3.171,1111,2.444,1128,5.186,1129,4.484,1155,3.492,1166,3.492,1934,2.931,2245,6.784,2380,6.784,2381,3.492,2382,6.392,2383,5.551,2384,6.392,2385,6.392,2386,6.392,2387,6.392,2388,5.551,2389,3.98,2390,5.551,2391,3.98,2392,3.98,2393,3.98,2394,3.98,2395,3.98,2396,3.98,2397,3.98,2398,5.551,2399,3.98,2400,3.98,2401,3.98,2402,3.98,2403,3.98,2404,3.98,2405,6.392,2406,3.171,2407,3.98,2408,6.917,2409,3.98,2410,3.98,2411,3.98,2412,3.98,2413,5.551,2414,5.551]],["title/modules/TreksPageModule.html",[162,1.139,2073,2.906]],["body/modules/TreksPageModule.html",[3,0.166,4,0.117,8,0.133,34,0.011,41,0.238,42,0.76,43,2.189,44,2.189,47,1.461,58,0.166,59,0.71,90,0.464,156,2.412,159,0.008,160,0.009,161,0.008,162,1.634,164,2.331,165,2.488,166,3.444,167,2.665,168,2.488,169,2.488,177,2.9,178,2.574,179,2.574,182,3.1,187,3.1,194,2.189,201,3.586,206,2.574,209,2.977,287,3.231,910,5.023,915,3.586,916,4.261,918,3.098,1547,4.321,1549,3.719,2036,5.477,2073,6.005,2233,5.316,2415,5.316,2416,5.316,2417,6.058,2418,6.058,2419,6.058,2420,6.058,2421,6.058]],["title/interfaces/TreksService.html",[480,0.461,575,0.962]],["body/interfaces/TreksService.html",[3,0.085,4,0.06,8,0.068,16,0.217,17,1.027,29,0.614,31,1.586,33,1.588,34,0.011,35,0.583,36,0.577,37,1.417,39,1.678,41,0.153,58,0.237,75,0.364,90,0.355,108,0.722,124,0.675,127,0.722,136,0.562,159,0.004,160,0.006,161,0.004,301,0.631,302,0.769,305,1.293,314,0.834,326,1.201,330,1.057,331,1.748,334,0.866,336,4.401,340,1.4,380,1.25,399,1.216,428,0.837,433,0.837,466,0.748,468,1.527,480,0.941,481,0.791,482,0.837,483,0.813,484,1.767,485,1.62,486,1.497,487,1.54,488,1.54,489,1.54,490,2.033,491,2.032,492,1.54,493,1.634,494,0.813,495,0.861,496,1.485,497,0.707,498,0.707,499,0.727,500,1.814,501,1.027,502,1.456,503,0.861,504,1.286,505,1.497,506,1.182,507,1.497,508,1.866,509,1.814,510,1.216,511,1.709,512,1.849,513,1.54,514,1.286,515,1.286,516,1.286,517,0.999,518,1.829,519,1.286,520,1.652,521,1.25,522,1.286,523,1.286,524,1.286,525,1.25,526,1.286,527,1.338,528,1.286,529,1.286,530,1.25,531,1.057,532,1.216,533,1.25,534,2.011,535,0.861,536,0.861,537,1.286,538,0.861,539,0.861,540,1.25,541,0.861,542,0.861,543,0.861,544,0.861,545,0.861,546,0.861,547,0.861,548,1.286,549,1.25,550,1.456,551,1.25,552,1.087,553,0.748,554,0.707,555,0.791,556,0.861,557,0.748,558,1.286,559,1.087,560,0.748,561,0.748,562,0.861,563,1.117,564,0.791,565,1.301,566,0.861,567,0.837,568,1.338,569,1.376,570,0.813,571,0.791,572,1.149,573,1.376,574,1.216,575,1.404,576,1.485,577,1.286,578,2.11,579,1.286,580,1.497,581,1.497,582,1.661,583,1.25,584,1.25,585,1.661,586,1.25,587,1.25,588,1.54,589,1.661,590,0.861,591,0.861,592,0.769,593,0.837,594,1.117,595,1.087,596,0.791,597,0.65,598,0.837,599,0.769,1604,4.067,1606,4.067,1607,4.067,1608,4.067,1609,4.067,1610,4.067,1619,3.693,2422,3.101,2423,3.101,2424,3.101,2425,3.101,2426,3.101,2427,3.101,2428,3.101,2429,3.101,2430,3.101,2431,3.101,2432,3.101,2433,3.101,2434,3.101]],["title/classes/UnSubscribe.html",[59,0.495,783,2.075]],["body/classes/UnSubscribe.html",[3,0.168,4,0.118,8,0.135,16,0.427,17,1.627,19,1.743,31,1.661,34,0.011,36,0.407,39,1.582,40,2.095,41,0.202,42,0.767,58,0.202,59,0.717,159,0.008,160,0.009,161,0.008,258,4.874,314,0.831,414,2.284,415,3.584,425,3.349,783,3.607,784,4.592,790,4.382,791,4.382,798,4.17,829,3.86,2345,5.368,2435,6.117,2436,4.874,2437,7.339,2438,6.117,2439,6.117,2440,8.154,2441,6.117,2442,6.44,2443,7.339]],["title/coverage.html",[2444,5.074]],["body/coverage.html",[0,1.096,1,1.091,8,0.084,9,3.354,28,1.878,29,0.757,30,1.808,34,0.011,36,0.254,45,2.012,54,2.652,59,0.448,68,3.472,97,1.091,100,1.091,103,1.091,105,1.091,107,1.091,108,0.448,110,1.091,113,1.091,115,1.631,117,1.091,120,1.091,122,1.091,124,0.675,126,1.123,127,0.649,128,1.091,131,1.091,133,1.091,135,1.091,136,0.464,137,1.091,139,1.091,141,1.091,143,1.091,144,1.091,146,1.061,148,1.091,150,1.123,151,1.091,153,1.091,154,1.091,156,1.091,159,0.005,160,0.007,161,0.005,176,2.478,180,4.299,195,2.631,198,2.631,214,2.478,216,2.478,247,2.815,250,2.815,253,3.045,256,3.045,258,4.983,261,1.681,276,3.045,280,3.045,298,2.815,310,2.782,311,2.631,313,3.354,343,3.045,411,3.354,412,3.045,413,3.354,459,3.354,460,3.045,461,3.354,480,0.958,481,0.975,483,2.298,499,0.896,501,0.847,502,1.002,510,1.002,512,0.896,527,0.922,531,0.871,532,1.002,534,0.975,552,0.896,555,0.975,560,0.922,561,0.922,563,0.922,565,0.896,568,0.922,569,0.948,571,0.975,572,0.948,573,0.948,574,1.002,575,0.871,592,0.948,599,0.948,604,2.631,609,3.354,642,2.815,670,2.478,671,4.299,672,3.498,673,5.262,706,3.714,754,2.478,760,3.354,761,3.045,762,3.354,782,3.354,783,2.652,805,2.13,839,2.877,919,4.299,920,3.974,921,4.299,940,2.631,1048,3.354,1121,3.354,1122,4.299,1148,3.354,1149,3.354,1168,3.354,1176,2.232,1195,3.354,1197,4.299,1251,3.354,1252,3.354,1259,5.414,1260,5.004,1261,5.414,1303,2.815,1308,4.299,1497,2.631,1498,3.354,1499,2.815,1500,3.354,1518,3.045,1519,2.815,1520,3.354,1555,4.677,1557,3.354,1558,3.354,1577,3.354,1597,3.354,1602,4.299,1638,3.714,1673,3.354,1715,3.354,1749,3.354,1769,3.354,1770,2.815,1802,3.045,1823,3.354,1833,4.606,1834,3.354,1867,3.045,1868,3.354,1888,3.354,1906,3.354,2043,3.045,2056,3.354,2083,3.045,2086,2.815,2091,3.354,2092,3.354,2196,3.354,2231,3.974,2236,4.299,2317,3.354,2323,3.045,2380,3.354,2381,3.354,2436,4.299,2444,3.354,2445,3.045,2446,3.822,2447,3.822,2448,8.389,2449,8.281,2450,6.795,2451,6.254,2452,7.437,2453,3.822,2454,3.822,2455,6.965,2456,6.254,2457,5.396,2458,5.396,2459,3.354,2460,3.822,2461,3.822,2462,3.822,2463,6.254,2464,3.822,2465,6.254,2466,6.254,2467,6.254,2468,8.046,2469,6.254,2470,3.822,2471,5.396,2472,3.822,2473,3.822,2474,3.822,2475,3.822,2476,3.822,2477,4.735,2478,3.822,2479,3.354,2480,3.354,2481,3.354,2482,3.354,2483,3.822,2484,3.822]],["title/dependencies.html",[165,2.088,2485,3.085]],["body/dependencies.html",[8,0.112,22,3.746,23,4.053,26,4.053,34,0.011,42,0.638,43,2.365,44,1.838,47,1.226,48,4.118,49,4.053,51,4.053,114,1.583,159,0.006,160,0.008,161,0.006,165,2.089,189,5.742,190,4.505,194,1.838,206,2.161,212,4.463,213,3.123,219,3.746,222,5.742,223,4.463,226,4.053,229,4.053,231,4.463,234,4.053,235,4.463,236,4.463,238,3.746,241,3.298,266,3.298,350,1.957,497,1.159,498,1.492,705,4.053,899,3.298,907,5.742,923,4.463,1907,4.463,1934,4.82,2486,5.087,2487,8.228,2488,5.087,2489,5.087,2490,5.087,2491,5.087,2492,5.087,2493,5.087,2494,8.49,2495,5.087,2496,5.742,2497,5.087,2498,6.544,2499,5.087,2500,6.544,2501,5.087,2502,5.087,2503,5.087,2504,5.087,2505,5.087,2506,5.087,2507,7.705,2508,6.544,2509,5.087,2510,5.087,2511,5.087,2512,6.544,2513,5.087,2514,5.087,2515,5.087,2516,5.087,2517,5.087,2518,5.087,2519,5.087,2520,7.752,2521,6.349,2522,5.087,2523,4.463,2524,5.214,2525,4.463,2526,4.463,2527,6.544,2528,4.463,2529,5.087,2530,5.087,2531,5.087,2532,4.463,2533,5.087,2534,4.463,2535,5.087,2536,5.087,2537,5.087,2538,5.087,2539,6.544,2540,4.463,2541,5.087,2542,5.087,2543,5.087,2544,5.087,2545,5.087,2546,5.087,2547,5.087,2548,5.087,2549,5.087,2550,5.087,2551,5.087,2552,5.087,2553,5.214,2554,5.087,2555,4.463,2556,5.087,2557,5.087,2558,5.087,2559,5.087,2560,5.087,2561,5.087,2562,5.087,2563,5.087,2564,5.087,2565,5.087,2566,5.087,2567,5.087,2568,5.087,2569,5.087,2570,5.087]],["title/miscellaneous/functions.html",[2571,2.279,2572,4.46]],["body/miscellaneous/functions.html",[16,0.466,33,1.757,34,0.011,35,0.569,37,1.568,39,1.437,159,0.008,160,0.01,161,0.008,180,5.315,259,5.853,265,5.853,266,4.325,268,5.853,276,6.154,280,6.154,324,4.913,783,3.796,829,3.041,2436,5.315,2442,5.853,2571,4.325,2572,5.853,2573,7.724,2574,6.671]],["title/index.html",[16,0.245,2575,3.085,2576,3.085]],["body/index.html",[4,0.119,12,2.457,21,3.052,22,3.436,34,0.01,35,0.326,45,2.754,48,4.058,75,0.547,77,3.025,78,5.528,84,3.436,123,1.577,127,0.422,129,1.295,159,0.006,160,0.008,161,0.008,190,3.211,271,5.427,274,1.982,305,0.872,327,5.086,330,1.582,363,4.094,375,3.717,386,5.427,392,4.094,407,4.094,418,3.025,448,1.795,467,3.211,485,0.897,493,1.157,505,1.259,521,1.259,553,1.491,559,1.094,892,3.298,895,3.025,1033,2.864,1183,6.088,1360,5.427,1361,4.094,1373,5.11,1437,4.094,1458,4.094,1710,4.928,2347,4.094,2406,3.717,2445,3.717,2455,5.427,2485,4.094,2496,6.745,2507,6.932,2520,7.616,2521,6.932,2523,4.094,2524,4.928,2525,4.094,2526,6.088,2528,6.745,2532,6.088,2534,6.932,2540,4.094,2553,4.928,2555,5.427,2577,6.483,2578,6.938,2579,6.938,2580,4.094,2581,4.665,2582,4.665,2583,4.665,2584,6.185,2585,4.665,2586,4.094,2587,4.665,2588,7.9,2589,4.665,2590,7.388,2591,6.185,2592,4.665,2593,4.665,2594,4.665,2595,4.665,2596,4.665,2597,4.665,2598,4.665,2599,4.665,2600,6.185,2601,6.185,2602,5.427,2603,5.427,2604,4.665,2605,6.185,2606,6.483,2607,4.665,2608,8.06,2609,6.185,2610,8.06,2611,6.185,2612,6.185,2613,6.185,2614,4.665,2615,4.665,2616,4.665,2617,4.665,2618,4.665,2619,4.665,2620,6.185,2621,4.665,2622,4.665,2623,6.185,2624,4.665,2625,4.665,2626,6.185,2627,6.185,2628,6.185,2629,4.665,2630,6.185,2631,4.665,2632,4.665,2633,4.094,2634,5.528,2635,4.665,2636,4.665,2637,4.665,2638,4.665,2639,6.185,2640,4.094,2641,4.665,2642,6.938,2643,4.665,2644,4.094,2645,4.665,2646,4.665,2647,4.665,2648,4.665,2649,4.665,2650,4.665,2651,4.665,2652,4.665,2653,4.665,2654,4.665,2655,4.665,2656,5.427,2657,4.665,2658,6.185,2659,4.665,2660,6.185,2661,4.665,2662,4.665,2663,4.665,2664,4.665,2665,4.665,2666,4.665,2667,4.665,2668,4.665,2669,4.094,2670,4.665,2671,4.665,2672,4.665,2673,6.185,2674,4.665,2675,4.665,2676,4.665,2677,4.665,2678,4.665,2679,4.665,2680,4.665,2681,4.665,2682,4.665,2683,5.427,2684,6.185,2685,4.665,2686,4.665,2687,4.665,2688,4.665,2689,7.9,2690,4.665,2691,4.665,2692,4.094,2693,4.665,2694,4.665,2695,4.665,2696,4.665,2697,4.665,2698,4.094,2699,4.094,2700,4.094,2701,4.094,2702,4.094,2703,4.665,2704,4.665,2705,4.665,2706,4.665]],["title/license.html",[2575,3.085,2576,3.085,2707,3.085]],["body/license.html",[4,0.141,34,0.009,69,4.815,159,0.007,160,0.009,161,0.007,179,2.568,301,1.231,375,4.815,418,4.724,774,3.223,2406,6.233,2445,4.815,2524,4.815,2634,6.233,2698,5.303,2699,7.293,2700,5.303,2701,5.303,2702,5.303,2707,5.303,2708,6.043,2709,6.043,2710,6.043,2711,6.043,2712,6.043,2713,7.286,2714,6.043,2715,6.043,2716,6.043,2717,7.822,2718,7.822,2719,6.043,2720,7.286,2721,6.043,2722,6.043,2723,7.286,2724,7.286,2725,7.286,2726,6.043,2727,6.043,2728,6.043,2729,6.043,2730,6.043,2731,7.286,2732,6.043,2733,6.393,2734,6.043,2735,7.286,2736,7.286,2737,7.822,2738,7.286,2739,6.043,2740,6.043,2741,6.043,2742,6.043,2743,6.043,2744,6.043,2745,6.043,2746,6.043,2747,6.043,2748,6.043,2749,6.043,2750,6.043,2751,6.043,2752,6.043,2753,6.043,2754,6.043,2755,6.043,2756,6.043,2757,6.043,2758,6.043,2759,6.043,2760,6.043,2761,6.043,2762,6.043,2763,7.286,2764,6.043,2765,6.043,2766,6.043,2767,6.043,2768,6.043,2769,6.043,2770,6.043,2771,6.043,2772,6.043,2773,6.043,2774,6.043,2775,6.043,2776,6.043]],["title/modules.html",[164,2.225]],["body/modules.html",[34,0.009,78,5.952,159,0.008,160,0.009,161,0.008,163,4.641,164,2.425,175,4.338,190,6.115,600,4.085,910,4.338,913,4.338,1543,4.641,1547,3.223,1591,4.338,2027,4.085,2036,4.085,2068,4.641,2072,4.338,2073,4.338,2227,4.641,2309,4.641,2376,4.641,2553,7.078,2777,8.883,2778,8.918,2779,7.471]],["title/overview.html",[2780,5.074]],["body/overview.html",[1,2.263,2,1.358,34,0.011,59,0.512,82,3.154,90,0.334,97,2.263,100,2.263,103,2.263,105,2.263,107,2.263,110,2.263,113,1.915,117,1.915,120,2.263,122,2.263,126,2.328,128,1.915,131,1.915,133,2.263,135,1.915,137,1.915,139,2.263,141,2.263,143,1.915,144,1.915,146,1.862,148,2.263,150,1.971,151,1.915,153,1.915,154,1.915,156,1.915,159,0.005,160,0.007,161,0.005,162,1.177,163,6.385,164,1.68,165,1.793,166,1.92,167,1.92,168,1.793,169,1.793,170,3.83,171,3.83,172,3.83,173,3.83,174,3.83,175,4.618,176,4.349,177,2.351,178,1.854,179,1.854,288,2.328,312,2.432,343,3.478,482,1.177,600,4.873,601,3.83,602,3.83,603,3.83,604,5.455,754,2.83,898,3.215,910,4.951,911,3.83,912,3.83,913,5.95,1417,3.478,1543,5.708,1544,3.83,1545,3.83,1546,3.83,1547,4.421,1556,3.005,1591,5.455,1592,3.83,1593,3.83,1795,3.83,2017,3.83,2018,3.83,2019,3.83,2027,5.482,2028,3.83,2029,3.83,2030,3.83,2036,5.356,2037,3.83,2038,3.83,2039,3.83,2047,3.83,2048,3.83,2049,3.83,2068,6.187,2069,3.83,2070,3.83,2071,3.83,2072,4.618,2073,5.625,2227,5.938,2228,3.83,2229,3.83,2309,6.085,2310,3.83,2311,3.83,2376,6.085,2377,3.83,2378,3.83,2415,3.83,2416,3.83,2780,3.83,2781,4.365,2782,4.365]],["title/routes.html",[288,3.083]],["body/routes.html",[34,0.01,159,0.009,160,0.01,161,0.009,288,3.726]],["title/miscellaneous/typealiases.html",[2571,2.279,2783,5.083]],["body/miscellaneous/typealiases.html",[16,0.48,34,0.01,36,0.457,75,0.806,159,0.009,160,0.01,161,0.009,334,1.284,483,1.802,553,1.894,554,1.566,2571,4.455,2784,6.872,2785,6.872]],["title/miscellaneous/variables.html",[2571,2.279,2786,4.46]],["body/miscellaneous/variables.html",[4,0.113,12,1.961,16,0.366,34,0.011,35,0.302,36,0.539,45,2.19,54,1.389,68,2.882,73,3.792,74,3.792,75,0.95,76,2.975,77,2.802,82,4.289,84,4.327,85,3.792,86,3.792,118,1.828,123,2.051,124,0.691,127,0.573,136,0.524,159,0.004,160,0.005,161,0.004,177,2.335,218,3.183,274,3.236,305,0.808,326,0.379,327,2.975,330,0.985,334,0.808,338,2.219,340,0.677,418,2.802,436,5.318,448,2.931,467,5.441,477,4.182,478,2.802,485,1.13,494,1.133,497,1.339,498,0.985,550,1.133,559,1.966,569,1.071,570,1.133,613,3.792,671,2.252,672,1.832,673,4.595,706,4.044,707,3.443,780,3.681,839,1.507,892,3.133,899,5.125,903,3.183,905,2.975,919,2.252,920,2.082,921,3.443,1021,5.537,1033,2.653,1084,3.443,1096,3.183,1111,2.653,1150,5.155,1259,3.443,1260,3.183,1261,4.681,1308,4.681,1309,3.792,1335,7.236,1373,3.183,1392,6.573,1394,3.792,1395,3.792,1402,3.792,1405,7.55,1407,6.78,1410,5.155,1411,6.285,1412,5.857,1413,3.792,1415,3.792,1416,3.792,1417,5.707,1418,3.792,1419,3.792,1427,6.285,1478,5.155,1580,3.443,1602,2.252,1638,4.044,1639,3.792,1776,3.792,1852,3.792,1934,3.183,1944,3.792,2192,4.681,2219,3.792,2220,3.792,2301,5.857,2307,3.792,2459,3.792,2477,2.48,2479,2.48,2480,2.48,2481,2.48,2482,6.573,2571,1.832,2577,3.792,2580,2.48,2586,5.155,2602,6.285,2603,3.792,2606,3.792,2633,3.792,2634,4.681,2640,3.792,2644,3.792,2656,3.792,2669,3.792,2683,3.792,2692,3.792,2733,3.792,2786,2.48,2787,2.826,2788,2.826,2789,2.826,2790,2.826,2791,2.826,2792,2.826,2793,4.321,2794,2.826,2795,4.321,2796,5.875,2797,4.321,2798,4.321,2799,4.321,2800,2.826,2801,2.826,2802,4.321,2803,4.321,2804,6.675,2805,7.491,2806,4.321,2807,5.875,2808,7.162,2809,5.875,2810,5.875,2811,5.875,2812,4.321,2813,4.321,2814,4.321,2815,5.875,2816,5.875,2817,7.491,2818,4.321,2819,4.321,2820,4.321,2821,6.675,2822,4.321,2823,4.321,2824,4.321,2825,4.321,2826,4.321,2827,4.321,2828,4.321,2829,4.321,2830,4.321,2831,4.321,2832,4.321,2833,4.321,2834,4.321,2835,4.321,2836,4.321,2837,4.321,2838,4.321,2839,5.875,2840,4.321,2841,4.321,2842,7.727,2843,4.321,2844,4.321,2845,4.321,2846,4.321,2847,4.321,2848,4.321,2849,5.875,2850,4.321,2851,4.321,2852,8.044,2853,4.321,2854,4.321,2855,4.321,2856,6.675,2857,4.321,2858,4.321,2859,5.875,2860,5.875,2861,5.875,2862,5.875,2863,4.321,2864,4.321,2865,4.321,2866,4.321,2867,5.875,2868,4.321,2869,4.321,2870,4.321,2871,4.321,2872,4.321,2873,4.321,2874,4.321,2875,4.321,2876,4.321,2877,4.321,2878,4.321,2879,2.826,2880,2.826,2881,2.826]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0125em",{"_index":2308,"title":{},"body":{"components/TrekMapPage.html":{}}}],["0.1",{"_index":1419,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":903,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["0.54.3",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.8",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["0.9.0",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2471,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2454,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2453,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2452,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":781,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["1",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1':'fr",{"_index":2173,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0",{"_index":2167,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0.1",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":2172,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.11.0",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["1/22",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1084,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekCardComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":889,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["1000",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["10000",{"_index":1098,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["100px",{"_index":2374,"title":{},"body":{"components/TreksMapPage.html":{}}}],["1024×1024px",{"_index":2657,"title":{},"body":{"index.html":{}}}],["10px",{"_index":909,"title":{},"body":{"components/FiltersComponent.html":{}}}],["11.0.1",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200×1200px",{"_index":2671,"title":{},"body":{"index.html":{}}}],["12px",{"_index":2176,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["13",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":2191,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["16",{"_index":1417,"title":{},"body":{"components/MapTreksVizComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["16px",{"_index":1714,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["17",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1394,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["195",{"_index":901,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["199",{"_index":902,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["1\\':\\'fr",{"_index":2195,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["2",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"license.html":{}}}],["2.0.1",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["2/33",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1852,"title":{},"body":{"components/SelectFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":341,"title":{},"body":{"injectables/CacheService.html":{}}}],["2019",{"_index":2709,"title":{},"body":{"license.html":{}}}],["20px",{"_index":2178,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["24",{"_index":2169,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["24px",{"_index":1496,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["250",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2732×2732px",{"_index":2662,"title":{},"body":{"index.html":{}}}],["28",{"_index":2781,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1795,"title":{},"body":{"components/SearchComponent.html":{},"overview.html":{}}}],["3000",{"_index":1096,"title":{},"body":{"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["32px",{"_index":1712,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["3880ff",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{},"overview.html":{}}}],["4.0.0",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["43",{"_index":2782,"title":{},"body":{"overview.html":{}}}],["44.410157",{"_index":1114,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["48px*48px",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4em",{"_index":479,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["5",{"_index":436,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["5.0.2",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["5.17.0",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["5.17.1",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["5.4.4",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":905,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":2305,"title":{},"body":{"components/TrekMapPage.html":{}}}],["540px",{"_index":908,"title":{},"body":{"components/FiltersComponent.html":{}}}],["57px",{"_index":1193,"title":{},"body":{"components/LoaderComponent.html":{}}}],["5px",{"_index":2303,"title":{},"body":{"components/TrekMapPage.html":{}}}],["6",{"_index":2459,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{},"components/TrekCardComponent.html":{}}}],["60000",{"_index":1119,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["61b22f",{"_index":2854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["625b5d",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.2",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7px",{"_index":2302,"title":{},"body":{"components/TrekMapPage.html":{}}}],["8",{"_index":2301,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["8.1.0",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":2194,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["9",{"_index":898,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"overview.html":{}}}],["a.geometry",{"_index":718,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["a.indexof(v",{"_index":2010,"title":{},"body":{"injectables/SettingsService.html":{}}}],["a.properties.name",{"_index":726,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["a.properties.name.localecompare(b.properties.name",{"_index":1828,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["above",{"_index":2723,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1494,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["abstract/unsubscribe",{"_index":1305,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["accept",{"_index":1513,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["access",{"_index":521,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["accessibilities",{"_index":489,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["accesstoken",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":1529,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["activatedroutesnapshot",{"_index":1562,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["activefiltersnumber",{"_index":674,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["actual_component",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["actually",{"_index":389,"title":{},"body":{"injectables/CacheService.html":{}}}],["add",{"_index":1183,"title":{},"body":{"components/LoaderComponent.html":{},"index.html":{}}}],["addsourceslayersevents",{"_index":1268,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["advice",{"_index":523,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["advised",{"_index":2773,"title":{},"body":{"license.html":{}}}],["advised_parking",{"_index":522,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["alertcontroller",{"_index":926,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["alertlocation",{"_index":1484,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertlocation.present",{"_index":1490,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertmsg",{"_index":2117,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["aliases",{"_index":2784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":896,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["allow",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabetically",{"_index":725,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["always",{"_index":1552,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["alwaysdisplayeditems",{"_index":422,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["ambiance",{"_index":539,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["analytics",{"_index":2496,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["analytics/ngx",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["and/or",{"_index":2728,"title":{},"body":{"license.html":{}}}],["android",{"_index":2521,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["androidbuild",{"_index":2617,"title":{},"body":{"index.html":{}}}],["androidtests",{"_index":2690,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{}}}],["angular/common/locales/fr",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"modules/CustomPipesModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1478,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["animated",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["animation",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["animationc",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["any).indexof(filtervalue",{"_index":738,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["any).name",{"_index":1573,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["any).properties.id",{"_index":2288,"title":{},"body":{"components/TrekMapPage.html":{}}}],["any).sources",{"_index":1334,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["any).sources['tiles",{"_index":1331,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["any).trekbounds",{"_index":1670,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["api",{"_index":2606,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1501,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["apk",{"_index":2611,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/abstract/unsubscribe",{"_index":836,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/components/collapsible",{"_index":2051,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/connect",{"_index":2053,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/filter",{"_index":2024,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["app/components/filter/filter.component",{"_index":2023,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["app/components/filters/filters.component",{"_index":2022,"title":{},"body":{"modules/SharedFiltersModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/filters/filters.module",{"_index":2419,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["app/components/geolocate",{"_index":2032,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/information",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/layers",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loader/loader.component",{"_index":2055,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/map",{"_index":2034,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/poi",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/poi/poi.component",{"_index":2041,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/components/progress/progress.component",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/search/search.component",{"_index":2026,"title":{},"body":{"modules/SharedFiltersModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/select",{"_index":641,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/SharedFiltersModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/components/trek",{"_index":2042,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/interfaces/interfaces",{"_index":640,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/map",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/${parentid}/${trekid",{"_index":1655,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/${trekid",{"_index":1654,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/:trekid",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/:trekid/:stageid",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/pipes/lower",{"_index":607,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["app/resolvers/more",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["app/resolvers/more.resolver",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{}}}],["app/resolvers/trek.resolver",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["app/resolvers/treks.resolver",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/services/cache/cache.service",{"_index":1510,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["app/services/filter",{"_index":837,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["app/services/geolocate/geolocate.service",{"_index":965,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["app/services/loading/loading.service",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["app/services/more",{"_index":1565,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["app/services/offline",{"_index":838,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["app/services/online",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["app/services/search",{"_index":1801,"title":{},"body":{"components/SearchComponent.html":{}}}],["app/services/settings/settings.service",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/shared/custom",{"_index":2235,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["app/shared/shared",{"_index":916,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["app/shared/shared.module",{"_index":2314,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/tabs/more",{"_index":2063,"title":{},"body":{"components/TabsPage.html":{}}}],["app/tabs/treks",{"_index":1650,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{}}}],["app/tabs/treks/trek",{"_index":1651,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/tabs/treks/treks",{"_index":1656,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2579,"title":{},"body":{"index.html":{}}}],["applyfilters",{"_index":792,"title":{},"body":{"components/FiltersComponent.html":{}}}],["appmodule",{"_index":163,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1580,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":175,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":2650,"title":{},"body":{"index.html":{}}}],["argument",{"_index":2609,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2770,"title":{},"body":{"license.html":{}}}],["array",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(this.currentpois.features",{"_index":989,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["array.isarray(touristiccontents.features",{"_index":2004,"title":{},"body":{"injectables/SettingsService.html":{}}}],["arrival",{"_index":515,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["arrival_city",{"_index":529,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["artwork",{"_index":2666,"title":{},"body":{"index.html":{}}}],["ascent",{"_index":516,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["assets/i18n",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/map/zone/zone.geojson",{"_index":1398,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["assets/map/{fontstack}/{range}.pbf",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assume",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":616,"title":{},"body":{"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["attributioncontrol",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attributiontext",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":504,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["available",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["availablelanguage",{"_index":2633,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["availablelanguage[0",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["b",{"_index":717,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SearchTreksService.html":{}}}],["b.geometry",{"_index":719,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["b.properties.name",{"_index":727,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["backdrop",{"_index":2400,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["background",{"_index":899,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["background'].tiles[0",{"_index":1332,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["backgroundgeolocation",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundgeolocationconfig",{"_index":1070,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationevents",{"_index":1071,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider",{"_index":1072,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider.distance_filter_provider",{"_index":1082,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["badge",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["bar",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["baseurl",{"_index":1126,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["before",{"_index":1361,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["begin",{"_index":1243,"title":{},"body":{"injectables/LoadingService.html":{}}}],["begin(id",{"_index":1222,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject",{"_index":833,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["behaviorsubject([0",{"_index":1942,"title":{},"body":{"injectables/SettingsService.html":{}}}],["behaviorsubject(false",{"_index":1209,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject(null",{"_index":1068,"title":{},"body":{"injectables/GeolocateService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["below",{"_index":2624,"title":{},"body":{"index.html":{}}}],["best",{"_index":2664,"title":{},"body":{"index.html":{}}}],["beta.2",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2180,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["binary",{"_index":2713,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":520,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["bootstrap",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["border",{"_index":779,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["bottom",{"_index":2193,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["bounds",{"_index":1338,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["bounds.extend(coord",{"_index":1341,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["broadcast",{"_index":398,"title":{},"body":{"injectables/CacheService.html":{}}}],["broadcasts",{"_index":367,"title":{},"body":{"injectables/CacheService.html":{}}}],["browse",{"_index":2778,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["bsd",{"_index":2698,"title":{},"body":{"index.html":{},"license.html":{}}}],["build",{"_index":2610,"title":{},"body":{"index.html":{}}}],["business",{"_index":2759,"title":{},"body":{"license.html":{}}}],["button",{"_index":1491,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["buttons",{"_index":1037,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["buttontext",{"_index":465,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["c",{"_index":2700,"title":{},"body":{"index.html":{},"license.html":{}}}],["cache",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["cacheservice",{"_index":311,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"coverage.html":{}}}],["calc(100",{"_index":1192,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{}}}],["cancel",{"_index":1040,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{}}}],["capitalize",{"_index":2375,"title":{},"body":{"components/TreksMapPage.html":{}}}],["card",{"_index":1709,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["card'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["card.component",{"_index":2044,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["card.component.html",{"_index":2094,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.scss",{"_index":2093,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts",{"_index":2092,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:113",{"_index":2118,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:21",{"_index":2111,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:22",{"_index":2108,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:23",{"_index":2110,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:24",{"_index":2106,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:25",{"_index":2107,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:26",{"_index":2109,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:28",{"_index":2120,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:29",{"_index":2121,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:30",{"_index":2124,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:31",{"_index":2105,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:36",{"_index":2122,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:37",{"_index":2123,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:38",{"_index":2125,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:42",{"_index":2115,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:77",{"_index":2113,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:82",{"_index":2114,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card/trek",{"_index":2043,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":1103,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["catcherror",{"_index":351,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksOrderComponent.html":{}}}],["catcherror((error",{"_index":405,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["categories",{"_index":2005,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categories.foreach((categoryid",{"_index":2011,"title":{},"body":{"injectables/SettingsService.html":{}}}],["category",{"_index":570,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["category.name",{"_index":2015,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categoryid",{"_index":2013,"title":{},"body":{"injectables/SettingsService.html":{}}}],["caused",{"_index":2761,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2598,"title":{},"body":{"index.html":{}}}],["center",{"_index":895,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{}}}],["change",{"_index":556,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["changed",{"_index":1186,"title":{},"body":{"components/LoaderComponent.html":{}}}],["changedetection",{"_index":416,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectionstrategy",{"_index":450,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectionstrategy.default",{"_index":1750,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":417,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectorref",{"_index":1756,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["changelayervisibility",{"_index":1153,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["changenotificationsmode",{"_index":931,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes",{"_index":954,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["changes.currentpois",{"_index":985,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes.filteredtreks",{"_index":1316,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changes.poi",{"_index":1689,"title":{},"body":{"components/PoiComponent.html":{}}}],["changescurrentpois",{"_index":984,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.currentvalue",{"_index":986,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.previousvalue",{"_index":987,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrenttreks",{"_index":1315,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.currentvalue",{"_index":1317,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.previousvalue",{"_index":1318,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["check",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkauthorization",{"_index":1049,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checked",{"_index":557,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["checkedvalue.id",{"_index":745,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkedvalue.interval",{"_index":747,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkiftrackerisrunning",{"_index":1050,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checkstate",{"_index":813,"title":{},"body":{"components/FiltersComponent.html":{}}}],["checktonotify",{"_index":932,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["checktonotify(fromcoordinates",{"_index":946,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["children",{"_index":530,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["circle",{"_index":1405,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["circlecolorexpression",{"_index":1420,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push('match",{"_index":1421,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(['get",{"_index":1422,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(environment.map.clusterpaint['circle",{"_index":1426,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.color",{"_index":1425,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.id",{"_index":1424,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cities",{"_index":525,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["city",{"_index":1989,"title":{},"body":{"injectables/SettingsService.html":{}}}],["class",{"_index":59,"title":{"classes/UnSubscribe.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"modules/CustomPipesModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2435,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["clause",{"_index":2708,"title":{},"body":{"license.html":{}}}],["clickdeleteconfirm",{"_index":2098,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clickdeleteconfirm($event",{"_index":2112,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clicklocalnotifications",{"_index":927,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["clone",{"_index":2595,"title":{},"body":{"index.html":{}}}],["clonedeep",{"_index":1638,"title":{},"body":{"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedeep(context.mapconfig",{"_index":2351,"title":{},"body":{"components/TreksMapPage.html":{}}}],["clonedeep(environment.onlinemapconfig",{"_index":1669,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["clonedeep(this.filters$.getvalue",{"_index":1968,"title":{},"body":{"injectables/SettingsService.html":{}}}],["clonedeep(trek",{"_index":1974,"title":{},"body":{"injectables/SettingsService.html":{}}}],["close",{"_index":793,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["cluster",{"_index":1395,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule",{"_index":601,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule_declarations",{"_index":602,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule_exports",{"_index":603,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_filterscomponentmodule",{"_index":911,"title":{},"body":{"modules/FiltersComponentModule.html":{},"overview.html":{}}}],["cluster_filterscomponentmodule_imports",{"_index":912,"title":{},"body":{"modules/FiltersComponentModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule",{"_index":1544,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_declarations",{"_index":1545,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_imports",{"_index":1546,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule",{"_index":1592,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_declarations",{"_index":1593,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_imports",{"_index":1594,"title":{},"body":{"modules/MorePageModule.html":{}}}],["cluster_sharedfiltersmodule",{"_index":2017,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedfiltersmodule_declarations",{"_index":2018,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedfiltersmodule_exports",{"_index":2019,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2028,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2029,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2030,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule",{"_index":2037,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_declarations",{"_index":2038,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_exports",{"_index":2039,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_shareduimodule",{"_index":2047,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_declarations",{"_index":2048,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_exports",{"_index":2049,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":2069,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":2070,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_imports",{"_index":2071,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule",{"_index":2228,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_declarations",{"_index":2229,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_imports",{"_index":2230,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["cluster_trekmappagemodule",{"_index":2310,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_declarations",{"_index":2311,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_imports",{"_index":2312,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["cluster_treksmappagemodule",{"_index":2377,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_declarations",{"_index":2378,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_imports",{"_index":2379,"title":{},"body":{"modules/TreksMapPageModule.html":{}}}],["cluster_trekspagemodule",{"_index":2415,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_declarations",{"_index":2416,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_imports",{"_index":2417,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["clusterid",{"_index":1434,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusterpaint",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterradius",{"_index":1396,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusters",{"_index":1404,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["code",{"_index":2721,"title":{},"body":{"license.html":{}}}],["collapsed",{"_index":438,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["collapsible",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["collapsiblelistcomponent",{"_index":97,"title":{"components/CollapsibleListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["color",{"_index":559,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":2652,"title":{},"body":{"index.html":{}}}],["column",{"_index":1493,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["combinelatest",{"_index":704,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TreksMapPage.html":{}}}],["combinelatest(treks",{"_index":854,"title":{},"body":{"components/FiltersComponent.html":{}}}],["command",{"_index":2686,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":915,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["commonsrc",{"_index":597,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["compact",{"_index":1356,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["complete",{"_index":399,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["componentprops",{"_index":650,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"overview.html":{}}}],["components/treks",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["concat",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":1173,"title":{},"body":{"components/LoaderComponent.html":{}}}],["conditions",{"_index":2718,"title":{},"body":{"license.html":{}}}],["config",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.xml",{"_index":2628,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":2678,"title":{},"body":{"index.html":{}}}],["connect",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["connecterrorcomponent",{"_index":100,"title":{"components/ConnectErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":2273,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["connectionerror",{"_index":1524,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{}}}],["consequential",{"_index":2752,"title":{},"body":{"license.html":{}}}],["console.error('no",{"_index":2213,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["console.log('poi",{"_index":1024,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["const",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["constructor(alertcontroller",{"_index":2103,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["constructor(backgroundgeolocation",{"_index":1056,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["constructor(cache",{"_index":1504,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["constructor(http",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["constructor(loading",{"_index":1175,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["constructor(modalcontroller",{"_index":622,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["constructor(modalctrl",{"_index":803,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(more",{"_index":1559,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["constructor(navparams",{"_index":1155,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["constructor(offlinetreks",{"_index":1678,"title":{},"body":{"components/PoiComponent.html":{},"components/ProgressComponent.html":{}}}],["constructor(onlinetreks",{"_index":2318,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TabsPage.html":{}}}],["constructor(private",{"_index":359,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/LayersVisibilityComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["constructor(protected",{"_index":1235,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["constructor(public",{"_index":1137,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{}}}],["constructor(route",{"_index":1528,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["constructor(screenorientation",{"_index":1275,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["constructor(settings",{"_index":682,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["contact",{"_index":567,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["container",{"_index":890,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["contains",{"_index":549,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["containsfilter",{"_index":481,"title":{"interfaces/ContainsFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["containsfilter(filter",{"_index":684,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["containsfiltershoulduseselectabove",{"_index":613,"title":{},"body":{"components/FilterComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":466,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["context",{"_index":2081,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{}}}],["context.mapconfig",{"_index":2282,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.offline",{"_index":2276,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.pois",{"_index":2279,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.touristiccategorieswithfeatures",{"_index":2281,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trek",{"_index":2278,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool",{"_index":2284,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.trekstool.filteredtreks",{"_index":2362,"title":{},"body":{"components/TreksMapPage.html":{}}}],["context.trekstool.getcommonimgsrc",{"_index":2285,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool.gettrekdetailsurl",{"_index":2287,"title":{},"body":{"components/TrekMapPage.html":{}}}],["contexts",{"_index":591,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["contract",{"_index":2765,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2733,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["coord",{"_index":1340,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates",{"_index":509,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["coordinates.reduce",{"_index":1339,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[0",{"_index":1343,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[1",{"_index":1450,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["copyright",{"_index":2699,"title":{},"body":{"index.html":{},"license.html":{}}}],["cordova",{"_index":2520,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cordova@9.0.0",{"_index":2593,"title":{},"body":{"index.html":{}}}],["core",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["corpus",{"_index":2702,"title":{},"body":{"index.html":{},"license.html":{}}}],["count",{"_index":1409,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coverage",{"_index":2444,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":392,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["createmap",{"_index":1269,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["createtranslateloader",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["crins",{"_index":2706,"title":{},"body":{"index.html":{}}}],["criterionvalue",{"_index":736,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["cssclass",{"_index":653,"title":{},"body":{"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["currentdatasetting",{"_index":1960,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentdatasetting.values.map((value",{"_index":1962,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentmaxfiltervalues",{"_index":1835,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["currentmaxtreks",{"_index":1774,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentorder",{"_index":2384,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["currentpois",{"_index":937,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["currentpoistonotify",{"_index":928,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["currentposition",{"_index":929,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/TreksMapPage.html":{}}}],["currentprogress",{"_index":1753,"title":{},"body":{"components/ProgressComponent.html":{}}}],["currentsearchvalue",{"_index":1775,"title":{},"body":{"components/SearchComponent.html":{}}}],["currenttrek",{"_index":2239,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrek!.properties.name",{"_index":2300,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrekid",{"_index":2205,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["currenttypepoi",{"_index":1692,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["currenttypepoi.pictogram",{"_index":1697,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["custom",{"_index":2045,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["customattribution",{"_index":1357,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["customevent",{"_index":772,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["customize",{"_index":2627,"title":{},"body":{"index.html":{}}}],["custompipesmodule",{"_index":600,"title":{"modules/CustomPipesModule.html":{}},"body":{"modules/CustomPipesModule.html":{},"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["cypress",{"_index":1458,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["cypress:openheadless",{"_index":2693,"title":{},"body":{"index.html":{}}}],["cypress:rundocumentation",{"_index":2694,"title":{},"body":{"index.html":{}}}],["damage",{"_index":2776,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2753,"title":{},"body":{"license.html":{}}}],["data",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"license.html":{}}}],["data.context",{"_index":2271,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["data.id",{"_index":982,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["data.items",{"_index":1588,"title":{},"body":{"components/MorePage.html":{}}}],["data.selectedtrekid",{"_index":1472,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["data.temporaryfilter",{"_index":656,"title":{},"body":{"components/FilterComponent.html":{}}}],["data['item",{"_index":1537,"title":{},"body":{"components/MoreItemPage.html":{}}}],["datasetting",{"_index":563,"title":{"interfaces/DataSetting.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["datasetting.find((data",{"_index":1971,"title":{},"body":{"injectables/SettingsService.html":{}}}],["datasettings",{"_index":1272,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["debug",{"_index":1087,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["deburr",{"_index":1826,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["deburr(trek.properties.name.tolowercase()).includes(searchvalue",{"_index":1831,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["declarations",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["decorators",{"_index":1293,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["defaultsettings",{"_index":1952,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["delay",{"_index":396,"title":{},"body":{"injectables/CacheService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{}}}],["delete",{"_index":363,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["deleteconfirm",{"_index":2152,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deleteconfirm.present",{"_index":2159,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deletetrek",{"_index":2099,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["departure",{"_index":505,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["departure_city",{"_index":528,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["departurearrivaliconsize",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":165,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["des",{"_index":2705,"title":{},"body":{"index.html":{}}}],["description",{"_index":518,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["description_teaser",{"_index":513,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["desiredaccuracy",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desk",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["details",{"_index":1123,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["details.component",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["details.component.html",{"_index":1125,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.scss",{"_index":1124,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts",{"_index":1122,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1134,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":1135,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1130,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1136,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1721,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1132,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":1727,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1730,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1729,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1726,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1718,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1131,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":1722,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1723,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":1728,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":1724,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:31",{"_index":1725,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1720,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:84",{"_index":1719,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.module#trekdetailspagemodule",{"_index":2084,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details.module.ts",{"_index":2232,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page",{"_index":2234,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page.ts",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["details/${parentid}/${trekid",{"_index":1653,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/${this.parentid}/${this.trek.properties.id",{"_index":2136,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${this.trek.properties.id",{"_index":2137,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${trekid",{"_index":1652,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/:trekid",{"_index":2082,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/:trekid/:stageid",{"_index":2085,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/information",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/InformationDeskDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/poi",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/trek",{"_index":2083,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"coverage.html":{}}}],["dev",{"_index":1112,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["developmentenvironment.prod.ts",{"_index":2635,"title":{},"body":{"index.html":{}}}],["device",{"_index":2532,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["difficulty",{"_index":486,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["direct",{"_index":2747,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1492,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["directive",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["directives",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["disable",{"_index":2399,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["disablegeolocationnotification",{"_index":933,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["disclaimed",{"_index":2743,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2725,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":2401,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["display",{"_index":892,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distance",{"_index":706,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distance(from",{"_index":1016,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["distancefilter",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distancefromtreka",{"_index":720,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefromtrekb",{"_index":723,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distribution",{"_index":2730,"title":{},"body":{"license.html":{}}}],["docheck",{"_index":610,"title":{},"body":{"components/FilterComponent.html":{}}}],["document.createelement('div",{"_index":1381,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["documentation",{"_index":2445,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["domain.fr/mobile",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":2619,"title":{},"body":{"index.html":{}}}],["download",{"_index":2675,"title":{},"body":{"index.html":{}}}],["downloads",{"_index":2677,"title":{},"body":{"index.html":{}}}],["duration",{"_index":514,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["during",{"_index":372,"title":{},"body":{"injectables/CacheService.html":{}}}],["dynamic",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1430,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["each",{"_index":387,"title":{},"body":{"injectables/CacheService.html":{}}}],["easily",{"_index":2625,"title":{},"body":{"index.html":{}}}],["el",{"_index":1380,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["el.classname",{"_index":1382,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["element.id",{"_index":879,"title":{},"body":{"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["element.properties.id",{"_index":1814,"title":{},"body":{"components/SearchComponent.html":{}}}],["ellipsis",{"_index":2185,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["email",{"_index":540,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["emit",{"_index":394,"title":{},"body":{"injectables/CacheService.html":{}}}],["emits",{"_index":369,"title":{},"body":{"injectables/CacheService.html":{}}}],["emitted",{"_index":401,"title":{},"body":{"injectables/CacheService.html":{}}}],["empty",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":2640,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["enablegeolocationnotification",{"_index":934,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["enablehighaccuracy",{"_index":1099,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["end",{"_index":1710,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"index.html":{}}}],["entrycomponents",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedFiltersModule.html":{}}}],["env/environment",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["environment",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1585,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{}}}],["environment.availablelanguage",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.indexof(defaultlanguage",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.length",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage[0",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.backgroundgeolocation",{"_index":1088,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["environment.containsfiltershoulduseselectabove",{"_index":637,"title":{},"body":{"components/FilterComponent.html":{}}}],["environment.map.attributiontext",{"_index":1358,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.clusterpaint",{"_index":1408,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.globalmapiconsize",{"_index":1428,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.treksfitboundsoptions",{"_index":1346,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zonelayerproperties",{"_index":1401,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zoneoutlinelayerproperties",{"_index":1403,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox",{"_index":1310,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox.accesstoken",{"_index":1311,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.meterstonotify",{"_index":1010,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["environment.offlinemapconfig",{"_index":2321,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.offlinemapconfig.style",{"_index":1333,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.onlinebaseurl",{"_index":1133,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{}}}],["environment.onlinemapconfig",{"_index":2322,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.prod.ts",{"_index":2630,"title":{},"body":{"index.html":{}}}],["environment.trekzoom.zoom",{"_index":1479,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["environment.usefirebase",{"_index":1570,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["erasefilters",{"_index":794,"title":{},"body":{"components/FiltersComponent.html":{}}}],["err",{"_index":1441,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["error",{"_index":462,"title":{},"body":{"components/ConnectErrorComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["error'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["error.component",{"_index":2054,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["error.component.html",{"_index":464,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.scss",{"_index":463,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts",{"_index":461,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":473,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:11",{"_index":474,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:12",{"_index":472,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:13",{"_index":471,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:9",{"_index":475,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.status",{"_index":1575,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["error/connect",{"_index":460,"title":{},"body":{"components/ConnectErrorComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["errortranslation",{"_index":1480,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['confirmbutton",{"_index":1489,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['header",{"_index":1485,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['message",{"_index":1488,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['subheader",{"_index":1487,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["es6",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2772,"title":{},"body":{"license.html":{}}}],["event",{"_index":774,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{},"license.html":{}}}],["event.checked",{"_index":1863,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["event.detail.checked",{"_index":775,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["event.detail.value",{"_index":1166,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["event.filter",{"_index":872,"title":{},"body":{"components/FiltersComponent.html":{}}}],["event.filter.id",{"_index":870,"title":{},"body":{"components/FiltersComponent.html":{}}}],["event.stoppropagation",{"_index":2138,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["event.value.id",{"_index":1862,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["eventemitter",{"_index":347,"title":{},"body":{"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["everything",{"_index":381,"title":{},"body":{"injectables/CacheService.html":{}}}],["evt",{"_index":1881,"title":{},"body":{"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["evt.detail.value",{"_index":1884,"title":{},"body":{"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["exemplary",{"_index":2751,"title":{},"body":{"license.html":{}}}],["expandableitems",{"_index":423,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expanded",{"_index":424,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expandfiltervalues",{"_index":1837,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["expandfiltervalues(infinitescroll",{"_index":1843,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["expandtreks",{"_index":1778,"title":{},"body":{"components/SearchComponent.html":{}}}],["expandtreks(infinitescroll",{"_index":1783,"title":{},"body":{"components/SearchComponent.html":{}}}],["expansion",{"_index":1445,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["exports",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["express",{"_index":2734,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1185,"title":{},"body":{"components/LoaderComponent.html":{}}}],["extand",{"_index":2177,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["extends",{"_index":484,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{}}}],["extensive",{"_index":2695,"title":{},"body":{"index.html":{}}}],["external_url",{"_index":562,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["extra",{"_index":2182,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["f04141",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fails",{"_index":2226,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fake",{"_index":1110,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["false",{"_index":448,"title":{},"body":{"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":490,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["feature.geometry.coordinates",{"_index":993,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["feature.properties",{"_index":1455,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.properties.id",{"_index":981,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["feature.properties.name",{"_index":992,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["feature.properties[filter.id",{"_index":737,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["featurecollection",{"_index":491,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["featureproperties",{"_index":1432,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties.cluster_id",{"_index":1435,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features",{"_index":500,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["features.foreach((feature",{"_index":1465,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].geometry",{"_index":1447,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].properties",{"_index":1433,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresincluster",{"_index":1442,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fff",{"_index":1411,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1413,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2684,"title":{},"body":{"index.html":{}}}],["files:appname",{"_index":2632,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2602,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":108,"title":{"interfaces/Filter.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filter'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filter((loadingid",{"_index":1229,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["filter((trek",{"_index":1830,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["filter((v",{"_index":2009,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filter((value",{"_index":743,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter(treks",{"_index":686,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.component",{"_index":643,"title":{},"body":{"components/FilterComponent.html":{},"modules/SharedFiltersModule.html":{}}}],["filter.component.html",{"_index":612,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.component.scss",{"_index":611,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.component.ts",{"_index":1834,"title":{},"body":{"components/SelectFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":1841,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":1840,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:13",{"_index":1855,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":1853,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":1854,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:16",{"_index":1839,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":1846,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:22",{"_index":1845,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:26",{"_index":1842,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":1847,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":1844,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:48",{"_index":1849,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:52",{"_index":1851,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.id",{"_index":862,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.name",{"_index":664,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.name.tolowercase",{"_index":666,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.type",{"_index":713,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values",{"_index":742,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filter.values.filter((value",{"_index":728,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values.foreach((value",{"_index":877,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.values.length",{"_index":1864,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter/select",{"_index":642,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"coverage.html":{}}}],["filtercomponent",{"_index":103,"title":{"components/FilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredfeatures",{"_index":708,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredfeatures.filter((feature",{"_index":711,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredtreks",{"_index":576,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["filteredtreks.sort((a",{"_index":716,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filters",{"_index":564,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["filters'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filters.cancelbutton",{"_index":1865,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filters.component.html",{"_index":786,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":785,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.confirmbutton",{"_index":1866,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filters.erase",{"_index":884,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.foreach((filter",{"_index":710,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filters.module",{"_index":917,"title":{},"body":{"modules/FiltersComponentModule.html":{}}}],["filters.module.ts",{"_index":2021,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["filters.oneresult",{"_index":886,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.push(filter",{"_index":1963,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filters.results",{"_index":887,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.selectplaceholder",{"_index":665,"title":{},"body":{"components/FilterComponent.html":{}}}],["filters.title",{"_index":882,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.zeroresult",{"_index":885,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filterscomponent",{"_index":105,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterscomponentmodule",{"_index":910,"title":{"modules/FiltersComponentModule.html":{}},"body":{"modules/FiltersComponentModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["filterssubscription",{"_index":787,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtertreks",{"_index":1613,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["filtertreksservice",{"_index":670,"title":{"injectables/FilterTreksService.html":{}},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["filtertreksservice.containsfilter",{"_index":714,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.filter(treks",{"_index":757,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{}}}],["filtertreksservice.getcheckedidforfilter",{"_index":731,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).indexof(feature",{"_index":740,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedinterval(filter).foreach",{"_index":733,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getnumberofactivefilters(filters",{"_index":751,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.intervalfilter",{"_index":715,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.isfilteractive(filter",{"_index":712,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.sort",{"_index":756,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtervalue",{"_index":552,"title":{"interfaces/FilterValue.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filtervalue.checked",{"_index":660,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filtervaluecomponent",{"_index":107,"title":{"components/FilterValueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtervaluesbystep",{"_index":1836,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["finally",{"_index":1120,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["find",{"_index":2623,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1244,"title":{},"body":{"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["finish(id",{"_index":1226,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["firebase",{"_index":2534,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["firebaseanalytics",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["first",{"_index":2347,"title":{},"body":{"components/TreksMapPage.html":{},"index.html":{}}}],["first_picture",{"_index":503,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["fit",{"_index":2668,"title":{},"body":{"index.html":{}}}],["fitbounds",{"_index":1287,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fitness",{"_index":2740,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1194,"title":{},"body":{"components/LoaderComponent.html":{}}}],["flex",{"_index":893,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["fly",{"_index":1286,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["flytouserlocation",{"_index":1270,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["following",{"_index":2717,"title":{},"body":{"license.html":{}}}],["font",{"_index":478,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["foreground",{"_index":971,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["forkjoin",{"_index":2199,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["form",{"_index":2726,"title":{},"body":{"license.html":{}}}],["forms",{"_index":2714,"title":{},"body":{"license.html":{}}}],["found",{"_index":2214,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fr",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fromcoordinates",{"_index":948,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["full",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["function",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{}}}],["functions",{"_index":2572,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2591,"title":{},"body":{"index.html":{}}}],["geographical",{"_index":2649,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":494,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["geojsonproperties",{"_index":1300,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource",{"_index":1301,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterexpansionzoom",{"_index":1446,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterleaves",{"_index":1439,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsourceraw",{"_index":1302,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geolocate",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["geolocate.asklocatepermission",{"_index":1027,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.cancel",{"_index":1028,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.open",{"_index":1029,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocatenotificationscomponent",{"_index":110,"title":{"components/GeolocateNotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geolocateservice",{"_index":940,"title":{"injectables/GeolocateService.html":{}},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{}}}],["geolocation",{"_index":1934,"title":{},"body":{"injectables/SettingsService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["geolocation/ngx",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["geolocationconfig",{"_index":1080,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["geometry",{"_index":508,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["geosjon",{"_index":2645,"title":{},"body":{"index.html":{}}}],["geotrek",{"_index":2577,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["get('geolocate.error",{"_index":1481,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["get('geolocate.notificationtitle",{"_index":1078,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["get('trekcard",{"_index":2141,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["get(url",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcheckedidforfilter",{"_index":676,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedidforfilter(filter",{"_index":688,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval",{"_index":677,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval(filter",{"_index":690,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcommonimgsrc",{"_index":589,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getcurrentposition",{"_index":1051,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["getfilteredtreks",{"_index":678,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilteredtreks(treks",{"_index":692,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilters",{"_index":1908,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getfilters(settings",{"_index":1919,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek",{"_index":1909,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek(trek",{"_index":1921,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getmapconfigfortrekbyid",{"_index":1604,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getmapconfigfortrekbyid(trek",{"_index":587,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getminimaltrekbyid",{"_index":1605,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getminimaltrekbyid(trekid",{"_index":1617,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getmoreitembyid",{"_index":1502,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitembyid(id",{"_index":1506,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitems",{"_index":1503,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getnumberofactivefilters",{"_index":679,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getnumberofactivefilters(filters",{"_index":694,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getpoisfortrekbyid",{"_index":1606,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(id",{"_index":579,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(trekid",{"_index":1620,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gets",{"_index":366,"title":{},"body":{"injectables/CacheService.html":{}}}],["getsettings",{"_index":1910,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getting",{"_index":2575,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettouristiccategorieswithfeatures",{"_index":1911,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccategorieswithfeatures(touristiccontents",{"_index":1924,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccontentsfortrekbyid",{"_index":580,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(id",{"_index":2425,"title":{},"body":{"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(trekid",{"_index":1622,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettouristiceventsfortrekbyid",{"_index":581,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(id",{"_index":2427,"title":{},"body":{"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(trekid",{"_index":1624,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekbyid",{"_index":1607,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(id",{"_index":577,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(trekid",{"_index":1626,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekdetailsurl",{"_index":1608,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekdetailsurl(trekid",{"_index":583,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc",{"_index":1609,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc(trek",{"_index":584,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl",{"_index":1610,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl(trekid",{"_index":586,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreks",{"_index":1611,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettreksmapurl",{"_index":585,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreksurl",{"_index":582,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getvalue",{"_index":1228,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["getvalueforpropertybyid",{"_index":1912,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getvalueforpropertybyid(propertyname",{"_index":1926,"title":{},"body":{"injectables/SettingsService.html":{}}}],["git",{"_index":2594,"title":{},"body":{"index.html":{}}}],["git@github.com:geotrekce/geotrek",{"_index":2596,"title":{},"body":{"index.html":{}}}],["given",{"_index":1645,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gl",{"_index":498,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":2676,"title":{},"body":{"index.html":{}}}],["globalization",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["globalmapiconsize",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyphs",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["goods",{"_index":2756,"title":{},"body":{"license.html":{}}}],["google",{"_index":2555,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["googleservice",{"_index":2681,"title":{},"body":{"index.html":{}}}],["gradle",{"_index":2525,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graph",{"_index":2779,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1555,"title":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1556,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"overview.html":{}}}],["h",{"_index":2168,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["handlefiltersstate",{"_index":795,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handlefiltersstate(checkstate",{"_index":811,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handler",{"_index":1043,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["handleselect",{"_index":796,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handleselect(event",{"_index":814,"title":{},"body":{"components/FiltersComponent.html":{}}}],["header",{"_index":1033,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1512,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["height",{"_index":891,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["here",{"_index":2639,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":2189,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hidealllabel",{"_index":428,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["hits",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{}}}],["holder",{"_index":2745,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2732,"title":{},"body":{"license.html":{}}}],["html",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["htmlionmodalelement",{"_index":2264,"title":{},"body":{"components/TrekMapPage.html":{}}}],["http",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/functions.html":{}}}],["http://geotrek.fr",{"_index":2581,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpclientmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1564,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["httpevent",{"_index":1206,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httphandler",{"_index":1203,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpheaders",{"_index":1509,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpinterceptor",{"_index":1207,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpoptions",{"_index":1511,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httprequest",{"_index":1201,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpresponse",{"_index":1208,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://b.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://c.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://my",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://rando",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydratedtrek",{"_index":531,"title":{"interfaces/HydratedTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["hydratedtrek.properties.arrival_city",{"_index":1985,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.cities",{"_index":1987,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure",{"_index":2164,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.departure_city",{"_index":1983,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure_city?.name",{"_index":2163,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.difficulty",{"_index":1976,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.difficulty?.name",{"_index":2165,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.duration",{"_index":2166,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.id",{"_index":1467,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.information_desks.foreach((information_desk",{"_index":2001,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.length",{"_index":2171,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.name",{"_index":1468,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.networks",{"_index":1992,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice",{"_index":1979,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice.color",{"_index":1470,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.practice.pictogram",{"_index":1469,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.route",{"_index":1981,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.themes",{"_index":1996,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties?.name",{"_index":2161,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrekproperties",{"_index":532,"title":{"interfaces/HydratedTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["icon",{"_index":467,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":2642,"title":{},"body":{"index.html":{}}}],["iconsize",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":485,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ideally",{"_index":2656,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1212,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.length",{"_index":1216,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.push(id",{"_index":1224,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ignore",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1373,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":1711,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["imgpoi",{"_index":1882,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["imgpractice",{"_index":1463,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SelectTrekComponent.html":{}}}],["imgpracticesrc",{"_index":2095,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["imgsrc",{"_index":2096,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["implements",{"_index":414,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["implied",{"_index":2735,"title":{},"body":{"license.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["important",{"_index":2654,"title":{},"body":{"index.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["incidental",{"_index":2749,"title":{},"body":{"license.html":{}}}],["including",{"_index":2737,"title":{},"body":{"license.html":{}}}],["increment",{"_index":403,"title":{},"body":{"injectables/CacheService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2748,"title":{},"body":{"license.html":{}}}],["infinitescroll",{"_index":1785,"title":{},"body":{"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{}}}],["infinitescroll.target.complete",{"_index":1818,"title":{},"body":{"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{}}}],["infinity",{"_index":1440,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["info.plist",{"_index":2682,"title":{},"body":{"index.html":{}}}],["inform",{"_index":1482,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["information",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["information_desk.type",{"_index":2002,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desk_types",{"_index":2003,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desks",{"_index":526,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["informationdesk",{"_index":527,"title":{"interfaces/InformationDesk.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationdesk.municipality",{"_index":1145,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.name",{"_index":1143,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.phone",{"_index":1147,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.postal_code",{"_index":1144,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdeskdetailscomponent",{"_index":113,"title":{"components/InformationDeskDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationdeskpicture",{"_index":1127,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationiconsize",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["informationintro",{"_index":560,"title":{"interfaces/InformationIntro.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationitem",{"_index":561,"title":{"interfaces/InformationItem.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informations.service",{"_index":1566,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["informations.service.ts",{"_index":1500,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["informations.service.ts:14",{"_index":1505,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:21",{"_index":1508,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:33",{"_index":1507,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations/more",{"_index":1499,"title":{},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["inherited",{"_index":824,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["initializeapp",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["initialsize",{"_index":429,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["initialstate",{"_index":430,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["injectable",{"_index":310,"title":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["inner",{"_index":778,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["input",{"_index":449,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{}}}],["inputs",{"_index":427,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{}}}],["inside",{"_index":1437,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["install",{"_index":2590,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2582,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2589,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2599,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1457,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["instanceof",{"_index":1241,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["intercept",{"_index":1198,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["intercept(req",{"_index":1200,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interceptor",{"_index":1195,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1196,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interface",{"_index":480,"title":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["interfaces",{"_index":482,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["internationalization",{"_index":2637,"title":{},"body":{"index.html":{}}}],["interruption",{"_index":2760,"title":{},"body":{"license.html":{}}}],["interval",{"_index":550,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["intervalfilter",{"_index":555,"title":{"interfaces/IntervalFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["intervalfilter(filter",{"_index":696,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["ion",{"_index":668,"title":{},"body":{"components/FilterComponent.html":{},"components/TrekMapPage.html":{}}}],["ionic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["ionic/storage",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"dependencies.html":{}}}],["ionic@5.4.11",{"_index":2592,"title":{},"body":{"index.html":{}}}],["ionicmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ionicmodule.forroot",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewdidenter",{"_index":797,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["ionviewdidleave",{"_index":2328,"title":{},"body":{"components/TreksMapPage.html":{}}}],["ionviewwillenter",{"_index":1129,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["ionviewwillleave",{"_index":1754,"title":{},"body":{"components/ProgressComponent.html":{}}}],["ios",{"_index":2528,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["iosandroid",{"_index":2614,"title":{},"body":{"index.html":{}}}],["is_park_centered",{"_index":519,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isalert",{"_index":2119,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["isfilteractive",{"_index":680,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfilteractive(filter",{"_index":698,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfirstcheck",{"_index":2385,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["isininterval",{"_index":732,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isinview",{"_index":2324,"title":{},"body":{"components/TreksMapPage.html":{}}}],["isloading",{"_index":1218,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isloading(id",{"_index":1231,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isoffline",{"_index":588,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isonline",{"_index":802,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["isstage",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["item",{"_index":1521,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{}}}],["item'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["item.module#moreitempagemodule",{"_index":2090,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["item.module.ts",{"_index":1548,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page",{"_index":1550,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page.html",{"_index":1523,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.scss",{"_index":1522,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts",{"_index":1520,"title":{},"body":{"components/MoreItemPage.html":{},"coverage.html":{}}}],["item.page.ts:13",{"_index":1534,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:14",{"_index":1535,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:15",{"_index":1531,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:21",{"_index":1532,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:36",{"_index":1533,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.resolver",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["item.resolver.ts",{"_index":1558,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:16",{"_index":1560,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.resolver.ts:23",{"_index":1563,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.title",{"_index":1574,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item/more",{"_index":1519,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["items",{"_index":431,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["itemtemplate",{"_index":432,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["j",{"_index":2170,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["js",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(await",{"_index":1953,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(settings",{"_index":1949,"title":{},"body":{"injectables/SettingsService.html":{}}}],["justify",{"_index":894,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["key",{"_index":358,"title":{},"body":{"injectables/CacheService.html":{}}}],["keyboard",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["kilometers",{"_index":1012,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["km",{"_index":2174,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["kmtonotify",{"_index":1009,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["language",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":395,"title":{},"body":{"injectables/CacheService.html":{}}}],["latest",{"_index":2585,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":541,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["launch",{"_index":974,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["layer",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layer.name",{"_index":1167,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layers",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["layersvisibilitycomponent",{"_index":117,"title":{"components/LayersVisibilityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layervisibilitychange",{"_index":1154,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layervisibilitychange(event",{"_index":1158,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layout",{"_index":1412,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1351,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["legend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["length",{"_index":507,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["letter",{"_index":2306,"title":{},"body":{"components/TrekMapPage.html":{}}}],["liability",{"_index":2763,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2746,"title":{},"body":{"license.html":{}}}],["licence",{"_index":2696,"title":{},"body":{"index.html":{}}}],["license",{"_index":2707,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":2738,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2648,"title":{},"body":{"index.html":{}}}],["line",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lines",{"_index":777,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["linux",{"_index":2616,"title":{},"body":{"index.html":{}}}],["list",{"_index":418,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["list.component",{"_index":2052,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["list.component.html",{"_index":421,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.scss",{"_index":420,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts",{"_index":413,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["list.component.ts:16",{"_index":440,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:17",{"_index":443,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:18",{"_index":435,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:19",{"_index":437,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:20",{"_index":439,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:21",{"_index":442,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:23",{"_index":446,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:24",{"_index":447,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:25",{"_index":434,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:29",{"_index":444,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:38",{"_index":445,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list/collapsible",{"_index":412,"title":{},"body":{"components/CollapsibleListComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["literal",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/Poi.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicEvent.html":{},"interfaces/Trek.html":{}}}],["loadchildren",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loaded",{"_index":2275,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loader",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["loader.component.html",{"_index":1170,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1169,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.dismiss",{"_index":2148,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loader.present",{"_index":2144,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadercomponent",{"_index":120,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderstatus",{"_index":1171,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["loadimages",{"_index":1366,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loadimages.subscribe",{"_index":1388,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loading",{"_index":1172,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loadingcontroller",{"_index":2104,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadingid",{"_index":1230,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids",{"_index":1211,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids.indexof(id",{"_index":1234,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadinginterceptor",{"_index":176,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"overview.html":{}}}],["loadingservice",{"_index":1176,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["loadsettings",{"_index":1913,"title":{},"body":{"injectables/SettingsService.html":{}}}],["loadtreks",{"_index":1612,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["local",{"_index":2540,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["localefr",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["localnotifications",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["located",{"_index":2658,"title":{},"body":{"index.html":{}}}],["location",{"_index":554,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{}}}],["location.latitude",{"_index":1108,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["locationprovider",{"_index":1081,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["lockscreen",{"_index":975,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["lodash",{"_index":1307,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["lodash.clonedeep",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["lodash.deburr",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["lodash.throttle",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["longitude",{"_index":542,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["loss",{"_index":2757,"title":{},"body":{"license.html":{}}}],["lot",{"_index":2631,"title":{},"body":{"index.html":{}}}],["lowerround",{"_index":1253,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"components/TrekCardComponent.html":{}}}],["lowerroundpipe",{"_index":604,"title":{"pipes/LowerRoundPipe.html":{}},"body":{"modules/CustomPipesModule.html":{},"pipes/LowerRoundPipe.html":{},"coverage.html":{},"overview.html":{}}}],["macos",{"_index":2613,"title":{},"body":{"index.html":{}}}],["make",{"_index":407,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["makina",{"_index":2701,"title":{},"body":{"index.html":{},"license.html":{}}}],["map",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["map(([treks",{"_index":755,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((checkedvalue",{"_index":744,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((data",{"_index":2360,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map((filters",{"_index":750,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((loadingids",{"_index":1233,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["map((touristiccontent",{"_index":2007,"title":{},"body":{"injectables/SettingsService.html":{}}}],["map.module#trekmappagemodule",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map.module#treksmappagemodule",{"_index":2087,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["map.module.ts",{"_index":2313,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page",{"_index":2315,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page.html",{"_index":2238,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.scss",{"_index":2237,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts",{"_index":2236,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["map.page.ts:104",{"_index":2252,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:109",{"_index":2256,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:111",{"_index":2333,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:116",{"_index":2338,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:125",{"_index":2339,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:127",{"_index":2254,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:137",{"_index":2249,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:141",{"_index":2257,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:145",{"_index":2251,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:30",{"_index":2261,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:31",{"_index":2260,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:32",{"_index":2268,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:33",{"_index":2262,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:34",{"_index":2269,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:35",{"_index":2259,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:36",{"_index":2265,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:37",{"_index":2263,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:38",{"_index":2258,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:39",{"_index":2266,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:40",{"_index":2246,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:41",{"_index":2340,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:42",{"_index":2342,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:43",{"_index":2331,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:46",{"_index":2341,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:47",{"_index":2267,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:49",{"_index":2343,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:52",{"_index":2344,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:55",{"_index":2247,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:59",{"_index":2337,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:82",{"_index":2336,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:87",{"_index":2334,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:93",{"_index":2332,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map/trek",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["map/treks",{"_index":2086,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["mapbox",{"_index":497,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":1308,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl.accesstoken",{"_index":1312,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.attributioncontrol",{"_index":1355,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.lnglatbounds(coordinates[0",{"_index":1342,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.map",{"_index":1344,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.marker",{"_index":1384,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.navigationcontrol",{"_index":1348,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.scalecontrol",{"_index":1352,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxoptions",{"_index":496,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig",{"_index":595,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig.center",{"_index":1672,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["mapgenerally",{"_index":2646,"title":{},"body":{"index.html":{}}}],["mapisloaded",{"_index":1273,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["mapisloaded(event",{"_index":2248,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mapisloaded(loaded",{"_index":2335,"title":{},"body":{"components/TreksMapPage.html":{}}}],["maptrek.disablenotification",{"_index":1047,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.enablenotification",{"_index":1046,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.poisalert.cancelbutton",{"_index":1886,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["maptrek.poisalert.confirmbutton",{"_index":1887,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["maptreks.treksalert.cancelbutton",{"_index":1904,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreks.treksalert.confirmbutton",{"_index":1905,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreks.treksalert.informuser",{"_index":1902,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreks.treksalert.title",{"_index":1901,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreksvizcomponent",{"_index":122,"title":{"components/MapTreksVizComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maptrekvizcomponent",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapviz",{"_index":1265,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["margin",{"_index":1713,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TreksMapPage.html":{}}}],["marker",{"_index":1296,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["markerposition",{"_index":1266,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["matching",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":2729,"title":{},"body":{"license.html":{}}}],["math.floor(value",{"_index":1258,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["mauron85/cordova",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":735,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["maximumage",{"_index":1097,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["maxlocations",{"_index":1083,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["maxsize",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{}}}],["maxzoom",{"_index":1392,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":906,"title":{},"body":{"components/FiltersComponent.html":{}}}],["medium",{"_index":669,"title":{},"body":{"components/FilterComponent.html":{}}}],["merchantability",{"_index":2739,"title":{},"body":{"license.html":{}}}],["mergefilterstreks",{"_index":2325,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap",{"_index":2346,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap((context",{"_index":2361,"title":{},"body":{"components/TreksMapPage.html":{}}}],["message",{"_index":1035,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["met",{"_index":2719,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["meterstonotify",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["metric",{"_index":1354,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["millevaches.fr/mobile",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":734,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TrekCardComponent.html":{}}}],["minimaltrek",{"_index":501,"title":{"interfaces/MinimalTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltrekproperties",{"_index":502,"title":{"interfaces/MinimalTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltreks",{"_index":499,"title":{"interfaces/MinimalTreks.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimize",{"_index":2190,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["minimum",{"_index":2600,"title":{},"body":{"index.html":{}}}],["minzoom",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2571,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2578,"title":{},"body":{"index.html":{}}}],["mobile.git",{"_index":2597,"title":{},"body":{"index.html":{}}}],["modal",{"_index":648,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modal.dismiss",{"_index":2293,"title":{},"body":{"components/TrekMapPage.html":{}}}],["modal.ondiddismiss",{"_index":655,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{}}}],["modal.present",{"_index":654,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalcontroller",{"_index":623,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalctrl",{"_index":807,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["modalpoidetails",{"_index":2240,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mode",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["modification",{"_index":2715,"title":{},"body":{"license.html":{}}}],["module",{"_index":162,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["modules",{"_index":164,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["more'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["more.page",{"_index":1596,"title":{},"body":{"modules/MorePageModule.html":{}}}],["more.page.html",{"_index":1579,"title":{},"body":{"components/MorePage.html":{}}}],["more.page.scss",{"_index":1578,"title":{},"body":{"components/MorePage.html":{}}}],["more/more",{"_index":2089,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["more/more.module",{"_index":2078,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["more/more.module#morepagemodule",{"_index":2088,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["moreinformationintro.title",{"_index":1590,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsintro",{"_index":1581,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsservice",{"_index":1497,"title":{"injectables/MoreInformationsService.html":{}},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["moreitem",{"_index":1525,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.external_url",{"_index":1542,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.title",{"_index":1541,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitemid",{"_index":1526,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"modules/TabsPageRoutingModule.html":{}}}],["moreitempage",{"_index":128,"title":{"components/MoreItemPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moreitempagemodule",{"_index":1543,"title":{"modules/MoreItemPageModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreitemresolver",{"_index":195,"title":{"guards/MoreItemResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["morepage",{"_index":131,"title":{"components/MorePage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["morepagemodule",{"_index":1591,"title":{"modules/MorePageModule.html":{}},"body":{"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreresolver",{"_index":198,"title":{"guards/MoreResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["ms",{"_index":374,"title":{},"body":{"injectables/CacheService.html":{}}}],["multi",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["multipoint",{"_index":492,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["municipality",{"_index":543,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["national",{"_index":2704,"title":{},"body":{"index.html":{}}}],["native",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["native/background",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["native/file/ngx",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["native/firebase",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"dependencies.html":{}}}],["native/globalization",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["native/globalization/ngx",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["native/ionic",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/local",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["native/network",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["native/network/ngx",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["native/screen",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"dependencies.html":{}}}],["native/social",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/splash",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/zip",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["native/zip/ngx",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["navanimation",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["navigatetochildren",{"_index":2242,"title":{},"body":{"components/TrekMapPage.html":{}}}],["navigatetochildren(id",{"_index":2250,"title":{},"body":{"components/TrekMapPage.html":{}}}],["navigatetotrek",{"_index":1274,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigatetotrek(id",{"_index":1787,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigation",{"_index":590,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["navigator",{"_index":2409,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.geolocation.getcurrentposition",{"_index":2410,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.language.slice(0",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["navparams",{"_index":1128,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TreksOrderComponent.html":{}}}],["nb",{"_index":888,"title":{},"body":{"components/FiltersComponent.html":{}}}],["nbtemporaryfilterstreks",{"_index":788,"title":{},"body":{"components/FiltersComponent.html":{}}}],["need",{"_index":1360,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["negligence",{"_index":2768,"title":{},"body":{"license.html":{}}}],["network",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["networks",{"_index":524,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["new",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["next",{"_index":1202,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"guards/TrekContextResolver.html":{}}}],["next.handle(req).pipe",{"_index":1239,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ngdocheck",{"_index":615,"title":{},"body":{"components/FilterComponent.html":{}}}],["ngmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ngonchanges",{"_index":935,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngonchanges(changes",{"_index":951,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngondestroy",{"_index":798,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngoninit",{"_index":425,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["noanimation",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["noanimation(animationc",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["node.js",{"_index":2587,"title":{},"body":{"index.html":{}}}],["none",{"_index":2356,"title":{},"body":{"components/TreksMapPage.html":{}}}],["nonetwork",{"_index":2326,"title":{},"body":{"components/TreksMapPage.html":{}}}],["notice",{"_index":2724,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["notifications",{"_index":923,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["notifications'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["notifications.component",{"_index":2033,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifications.component.html",{"_index":925,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":924,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":921,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications.component.ts:121",{"_index":950,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:127",{"_index":949,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:131",{"_index":947,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:176",{"_index":957,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:32",{"_index":960,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:33",{"_index":959,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:34",{"_index":962,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:35",{"_index":942,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:36",{"_index":943,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:37",{"_index":944,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:38",{"_index":941,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:41",{"_index":963,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:42",{"_index":961,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:43",{"_index":958,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:48",{"_index":956,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:71",{"_index":953,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:84",{"_index":955,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:94",{"_index":945,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications/geolocate",{"_index":920,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications/ngx",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["notificationsmodeisactive",{"_index":930,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notificationtext",{"_index":1065,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notificationtitle",{"_index":1077,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notifiedindex",{"_index":1014,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notify",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nowrap",{"_index":2188,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["npm",{"_index":2588,"title":{},"body":{"index.html":{}}}],["null",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":340,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["numberofactivefilters",{"_index":730,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksMapPage.html":{}}}],["numstage",{"_index":2101,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["object",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(this.cache).length",{"_index":378,"title":{},"body":{"injectables/CacheService.html":{}}}],["observable",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"interfaces/TreksService.html":{}}}],["observable.create",{"_index":1367,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["observable.pipe",{"_index":408,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer",{"_index":400,"title":{},"body":{"injectables/CacheService.html":{},"components/MapTreksVizComponent.html":{}}}],["observer.complete",{"_index":1376,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["of('connectionerror",{"_index":1576,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["of(null",{"_index":2211,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["offline",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["offline/:trekid",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offline/:trekid/:stageid",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offlinemapconfig",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offlinetreks",{"_index":804,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["offlinetreksservice",{"_index":805,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["offset",{"_index":1418,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["on('click",{"_index":978,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["on(backgroundgeolocationevents.location",{"_index":1105,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["on(backgroundgeolocationevents.start",{"_index":1091,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["onchanges",{"_index":922,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ondestroy",{"_index":784,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["one",{"_index":2225,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["oninit",{"_index":415,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["online",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinebaseurl",{"_index":2603,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["onlinemapconfig",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinetreks",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["onlinetrekserror",{"_index":1603,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["onlinetreksservice",{"_index":28,"title":{"injectables/OnlineTreksService.html":{}},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["onsameurlnavigation",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["opacity",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":2692,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["openselect",{"_index":617,"title":{},"body":{"components/FilterComponent.html":{}}}],["opensource",{"_index":2697,"title":{},"body":{"index.html":{}}}],["openstreetmap",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opentopomap",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["optionnal",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options).pipe",{"_index":385,"title":{},"body":{"injectables/CacheService.html":{}}}],["order",{"_index":553,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["order'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["order.component",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["order.component.html",{"_index":2383,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.scss",{"_index":2382,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts",{"_index":2381,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:15",{"_index":2393,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:16",{"_index":2392,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:17",{"_index":2388,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:29",{"_index":2389,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:39",{"_index":2391,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.name",{"_index":2414,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.type",{"_index":758,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksOrderComponent.html":{}}}],["order.value",{"_index":759,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["order/treks",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["ordering",{"_index":1945,"title":{},"body":{"injectables/SettingsService.html":{}}}],["orders",{"_index":2386,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["orientation",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["orientation/ngx",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["originaltrek",{"_index":593,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["others",{"_index":2674,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":2769,"title":{},"body":{"license.html":{}}}],["out",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1402,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":476,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["outputs",{"_index":469,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["overflow",{"_index":2186,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["overlap",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":2780,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2626,"title":{},"body":{"index.html":{}}}],["package",{"_index":2485,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":2192,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["pages/tabs/tabs.module#tabspagemodule",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/trek",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paint",{"_index":1407,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["parc",{"_index":2703,"title":{},"body":{"index.html":{}}}],["parent",{"_index":2219,"title":{},"body":{"guards/TrekContextResolver.html":{},"miscellaneous/variables.html":{}}}],["parentid",{"_index":578,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parenttrek",{"_index":598,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parking",{"_index":2643,"title":{},"body":{"index.html":{}}}],["parking_location",{"_index":535,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parkingiconsize",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":2741,"title":{},"body":{"license.html":{}}}],["path",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["pathmatch",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["permissions",{"_index":1034,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["permitted",{"_index":2716,"title":{},"body":{"license.html":{}}}],["persmissionsconfirm",{"_index":1031,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["persmissionsconfirm.present",{"_index":1045,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["personal",{"_index":2605,"title":{},"body":{"index.html":{}}}],["phone",{"_index":544,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["photo_url",{"_index":545,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picto",{"_index":2181,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["pictogram",{"_index":558,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picture",{"_index":512,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["picture!.author",{"_index":1704,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture!.legend",{"_index":1703,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture.url",{"_index":1648,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["pictures",{"_index":511,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pipe",{"_index":754,"title":{"pipes/LowerRoundPipe.html":{}},"body":{"injectables/FilterTreksService.html":{},"pipes/LowerRoundPipe.html":{},"guards/TrekContextResolver.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(delay(0",{"_index":1189,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["pipe(map((ids",{"_index":1215,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["pipes",{"_index":1250,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["pipes.module",{"_index":2046,"title":{},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{}}}],["pipes.module.ts",{"_index":606,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["pipetransform",{"_index":1257,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["placeholder",{"_index":667,"title":{},"body":{"components/FilterComponent.html":{}}}],["placement",{"_index":2856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["platforms",{"_index":2687,"title":{},"body":{"index.html":{}}}],["play",{"_index":2523,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["plugin",{"_index":2507,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["poi",{"_index":136,"title":{"interfaces/Poi.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["poi'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["poi.component",{"_index":2316,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["poi.component.html",{"_index":1675,"title":{},"body":{"components/PoiComponent.html":{},"components/SelectPoiComponent.html":{}}}],["poi.component.scss",{"_index":1674,"title":{},"body":{"components/PoiComponent.html":{},"components/SelectPoiComponent.html":{}}}],["poi.component.ts",{"_index":1868,"title":{},"body":{"components/SelectPoiComponent.html":{},"coverage.html":{}}}],["poi.component.ts:10",{"_index":1875,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:11",{"_index":1874,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:16",{"_index":1873,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:20",{"_index":1877,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:22",{"_index":1876,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:26",{"_index":1878,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:30",{"_index":1880,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.name",{"_index":1885,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.properties.email",{"_index":1707,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.name",{"_index":1705,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0].author",{"_index":1746,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0]?.legend",{"_index":1745,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.website",{"_index":1708,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi/select",{"_index":1867,"title":{},"body":{"components/SelectPoiComponent.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["poi_types",{"_index":1742,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poicollapseinitialsize",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poicomponent",{"_index":133,"title":{"components/PoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poidetailscomponent",{"_index":135,"title":{"components/PoiDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poiimg",{"_index":1716,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["point",{"_index":493,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["point(a.geometry.coordinates",{"_index":721,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point(b.geometry.coordinates",{"_index":724,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point(feature.coordinates",{"_index":1017,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(fromcoordinates",{"_index":1013,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(userlocation",{"_index":722,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point).coordinates",{"_index":1448,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count",{"_index":1406,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count_abbreviated",{"_index":1414,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointer",{"_index":1453,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointreferencelayersproperties",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["points",{"_index":1323,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["points_reference",{"_index":538,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pois",{"_index":565,"title":{"interfaces/Pois.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["poislayersproperties",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popover",{"_index":2289,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popover.dismiss",{"_index":2291,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popovercontroller",{"_index":2245,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["popoverctrl",{"_index":2244,"title":{},"body":{"components/TrekMapPage.html":{}}}],["position",{"_index":1111,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["position.coords.latitude",{"_index":2412,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["position.coords.longitude",{"_index":2411,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["possibility",{"_index":2774,"title":{},"body":{"license.html":{}}}],["postal_code",{"_index":546,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practical_info",{"_index":566,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice",{"_index":506,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practices",{"_index":1267,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.foreach((practice",{"_index":1370,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.length",{"_index":1375,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pratiques",{"_index":1706,"title":{},"body":{"components/PoiComponent.html":{}}}],["presentconfirmfeatures",{"_index":1271,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentconfirmfeatures(features",{"_index":1290,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentdeleteconfirm",{"_index":2100,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentdeleteconfirm(isalert",{"_index":2116,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentfilters",{"_index":2329,"title":{},"body":{"components/TreksMapPage.html":{}}}],["presentinformationdeskdetails",{"_index":2243,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentinformationdeskdetails(informationdesk",{"_index":2253,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentpersmissionsconfirm",{"_index":936,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["presentpoidetails",{"_index":939,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["presentpoidetails(poi",{"_index":2255,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentsearch",{"_index":2330,"title":{},"body":{"components/TreksMapPage.html":{}}}],["prevent",{"_index":1184,"title":{},"body":{"components/LoaderComponent.html":{}}}],["previous",{"_index":2221,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["previously",{"_index":2688,"title":{},"body":{"index.html":{}}}],["primary",{"_index":2655,"title":{},"body":{"index.html":{}}}],["primarycolor",{"_index":2482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["priority",{"_index":972,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["private",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["problem",{"_index":1483,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["proceeding",{"_index":2583,"title":{},"body":{"index.html":{}}}],["procurement",{"_index":2754,"title":{},"body":{"license.html":{}}}],["prod",{"_index":2620,"title":{},"body":{"index.html":{}}}],["production",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":536,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["profits",{"_index":2758,"title":{},"body":{"license.html":{}}}],["progress",{"_index":904,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["progress'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["progress.component.html",{"_index":1752,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progress.component.scss",{"_index":1751,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progressbarwidth",{"_index":1174,"title":{},"body":{"components/LoaderComponent.html":{}}}],["progresscomponent",{"_index":137,"title":{"components/ProgressComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["promise.resolve(new",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["properties",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["properties[filter.id",{"_index":741,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["property",{"_index":534,"title":{"interfaces/Property.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["property.values.find((value",{"_index":1973,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyname",{"_index":1928,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyvalue",{"_index":1972,"title":{},"body":{"injectables/SettingsService.html":{}}}],["protected",{"_index":790,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["provide",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2406,"title":{},"body":{"components/TreksOrderComponent.html":{},"index.html":{},"license.html":{}}}],["providedin",{"_index":357,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["providers",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"components/SearchComponent.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["public",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["publishreplay",{"_index":352,"title":{},"body":{"injectables/CacheService.html":{}}}],["publishreplay(1",{"_index":397,"title":{},"body":{"injectables/CacheService.html":{}}}],["pulse",{"_index":1383,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["purpose",{"_index":2742,"title":{},"body":{"license.html":{}}}],["radiopois",{"_index":1871,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["radiotreks",{"_index":1462,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SelectTrekComponent.html":{}}}],["radiotreks.push(trek",{"_index":1471,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["radius",{"_index":1427,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["rando",{"_index":2580,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["raster",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["redistribution",{"_index":2712,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":2720,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1755,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["refcount",{"_index":353,"title":{},"body":{"injectables/CacheService.html":{}}}],["refresh",{"_index":1527,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["refreshdelay",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{}}}],["registerlocaledata",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localefr",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":1416,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["release",{"_index":2526,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["releaseandroid",{"_index":2621,"title":{},"body":{"index.html":{}}}],["releasecustomization",{"_index":2622,"title":{},"body":{"index.html":{}}}],["reload",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remove",{"_index":2685,"title":{},"body":{"index.html":{}}}],["removetrek",{"_index":2145,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["replaysubject",{"_index":368,"title":{},"body":{"injectables/CacheService.html":{}}}],["represents",{"_index":2647,"title":{},"body":{"index.html":{}}}],["reproduce",{"_index":2727,"title":{},"body":{"license.html":{}}}],["req",{"_index":1205,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.method",{"_index":1236,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.urlwithparams",{"_index":1237,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["request",{"_index":371,"title":{},"body":{"injectables/CacheService.html":{}}}],["requests",{"_index":2224,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["require('@turf/distance').default",{"_index":707,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["require('lodash.clonedeep",{"_index":1639,"title":{},"body":{"injectables/OnlineTreksService.html":{},"miscellaneous/variables.html":{}}}],["require('mapbox",{"_index":1309,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":2601,"title":{},"body":{"index.html":{}}}],["res://ic_stat_panorama",{"_index":969,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["res://icon",{"_index":967,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["reserved",{"_index":2711,"title":{},"body":{"license.html":{}}}],["reset",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":1914,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resize",{"_index":1362,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["resolve",{"_index":1553,"title":{},"body":{"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{}}}],["resolve(route",{"_index":1561,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["resources",{"_index":2673,"title":{},"body":{"index.html":{}}}],["resources/icon.png",{"_index":2659,"title":{},"body":{"index.html":{}}}],["resources/splash.png",{"_index":2663,"title":{},"body":{"index.html":{}}}],["resourcesother",{"_index":2672,"title":{},"body":{"index.html":{}}}],["response",{"_index":370,"title":{},"body":{"injectables/CacheService.html":{}}}],["ressources",{"_index":2638,"title":{},"body":{"index.html":{}}}],["result",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2722,"title":{},"body":{"license.html":{}}}],["retry",{"_index":470,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["return",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["returs",{"_index":1646,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["revoke",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoked",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking(observable",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{}}}],["rgba(189",{"_index":900,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["right",{"_index":1495,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["rights",{"_index":2710,"title":{},"body":{"license.html":{}}}],["rm",{"_index":2689,"title":{},"body":{"index.html":{}}}],["roboto",{"_index":1415,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":1039,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["roughly",{"_index":2667,"title":{},"body":{"index.html":{}}}],["round.pipe",{"_index":608,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["round.pipe.ts",{"_index":1252,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"coverage.html":{}}}],["round.pipe.ts:5",{"_index":1256,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["route",{"_index":517,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["route.component",{"_index":1572,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["route.data['isstage",{"_index":2201,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["route.data['offline",{"_index":2200,"title":{},"body":{"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["route.parammap.get('moreitemid",{"_index":1567,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["route.parammap.get('stageid",{"_index":2204,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["route.parammap.get('trekid",{"_index":2202,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["router",{"_index":1530,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["routereusestrategy",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["routerlink",{"_index":2097,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["routermodule",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["routermodule.forchild",{"_index":2421,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":1554,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":288,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2608,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1551,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["rxjs",{"_index":350,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":495,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["rxjs/internal/observable/of",{"_index":1599,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/observable/throwerror",{"_index":1600,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/subscription",{"_index":2345,"title":{},"body":{"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["rxjs/operators",{"_index":356,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksMapPage.html":{}}}],["savefiltersstate",{"_index":1915,"title":{},"body":{"injectables/SettingsService.html":{}}}],["savefiltersstate(filters",{"_index":1931,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate",{"_index":1916,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate(order",{"_index":1933,"title":{},"body":{"injectables/SettingsService.html":{}}}],["screen",{"_index":907,"title":{},"body":{"components/FiltersComponent.html":{},"dependencies.html":{}}}],["screen's",{"_index":2665,"title":{},"body":{"index.html":{}}}],["screen/ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["screenorientation",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["screens",{"_index":2661,"title":{},"body":{"index.html":{}}}],["search",{"_index":1771,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["search'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["search(searchvalue",{"_index":1790,"title":{},"body":{"components/SearchComponent.html":{}}}],["search(treks",{"_index":1824,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["search.component.html",{"_index":1773,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1772,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.noresult",{"_index":1822,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.title",{"_index":1819,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcomponent",{"_index":139,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchtreks",{"_index":1780,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchtreksservice",{"_index":1770,"title":{"injectables/SearchTreksService.html":{}},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["searchvalue",{"_index":1792,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["searchvalue.tolowercase",{"_index":1829,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["secondary",{"_index":1041,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["select",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["selectchange",{"_index":620,"title":{},"body":{"components/FilterComponent.html":{}}}],["selecteditems",{"_index":614,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["selecteditems.join",{"_index":663,"title":{},"body":{"components/FilterComponent.html":{}}}],["selecteditems.push(filtervalue.name",{"_index":661,"title":{},"body":{"components/FilterComponent.html":{}}}],["selectedpoichange",{"_index":1870,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["selectedpoichange(evt",{"_index":1879,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["selectedpoiid",{"_index":1869,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["selectedtrekchange",{"_index":1892,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["selectedtrekchange(evt",{"_index":1898,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["selectedtrekid",{"_index":1891,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["selectfiltercomponent",{"_index":141,"title":{"components/SelectFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["selectpoicomponent",{"_index":143,"title":{"components/SelectPoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selecttrekcomponent",{"_index":144,"title":{"components/SelectTrekComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sending",{"_index":376,"title":{},"body":{"injectables/CacheService.html":{}}}],["sent",{"_index":390,"title":{},"body":{"injectables/CacheService.html":{}}}],["serverun",{"_index":2607,"title":{},"body":{"index.html":{}}}],["service",{"_index":1213,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.getvalue",{"_index":1219,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.next(isloading",{"_index":1220,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["services",{"_index":2524,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["services.json",{"_index":2680,"title":{},"body":{"index.html":{}}}],["set",{"_index":386,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["setlnglat(coordinates",{"_index":1385,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["setofflinesettings",{"_index":1917,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setting.id",{"_index":1741,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings",{"_index":29,"title":{"interfaces/Settings.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["settings.data",{"_index":1958,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.data.find",{"_index":1961,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters",{"_index":1957,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters$.pipe",{"_index":749,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["settings.filters.foreach((filter",{"_index":1959,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.find((setting",{"_index":1740,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings.json",{"_index":1965,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":30,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["settingssub",{"_index":1717,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["setup",{"_index":2612,"title":{},"body":{"index.html":{}}}],["shall",{"_index":2744,"title":{},"body":{"license.html":{}}}],["sharedfiltersmodule",{"_index":913,"title":{"modules/SharedFiltersModule.html":{}},"body":{"modules/FiltersComponentModule.html":{},"modules/SharedFiltersModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule",{"_index":2027,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedtreksmodule",{"_index":2036,"title":{"modules/SharedTreksModule.html":{}},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shareduimodule",{"_index":1547,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharing",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["sharing/ngx",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["showalldata",{"_index":2102,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["showalllabel",{"_index":433,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["showappsettings",{"_index":1052,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["showcompass",{"_index":1349,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["showimgrulesifparkcentered",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showlocationsettings",{"_index":1053,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["silent",{"_index":973,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["simplechange",{"_index":964,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["simplechanges",{"_index":952,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["size",{"_index":477,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["slug",{"_index":537,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["smallicon",{"_index":968,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["socialsharing",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["software",{"_index":2731,"title":{},"body":{"license.html":{}}}],["sort",{"_index":681,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(filteredtreks",{"_index":700,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(function(a",{"_index":1832,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sources",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2179,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["spacing",{"_index":2307,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":2750,"title":{},"body":{"license.html":{}}}],["splash",{"_index":2660,"title":{},"body":{"index.html":{}}}],["splashscreen",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["sqlite",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["square",{"_index":2670,"title":{},"body":{"index.html":{}}}],["src",{"_index":1464,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["src/.../app.module.ts",{"_index":2573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../geolocate",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":2785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../map",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../offline",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../online",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unsubscribe.ts",{"_index":2574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../variables.ts",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts",{"_index":2436,"title":{},"body":{"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts:11",{"_index":2439,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:17",{"_index":2438,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:5",{"_index":2437,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/collapsible",{"_index":411,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["src/app/components/connect",{"_index":459,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/filter",{"_index":760,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts",{"_index":609,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts:20",{"_index":626,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:21",{"_index":625,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:22",{"_index":628,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:26",{"_index":627,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:27",{"_index":639,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:28",{"_index":638,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:29",{"_index":624,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:33",{"_index":630,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:37",{"_index":629,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:47",{"_index":636,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:57",{"_index":631,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:74",{"_index":633,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filters/filters.component.ts",{"_index":782,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/components/filters/filters.component.ts:100",{"_index":810,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:108",{"_index":809,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:112",{"_index":822,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:116",{"_index":823,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:122",{"_index":817,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:127",{"_index":820,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:18",{"_index":834,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:19",{"_index":831,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:20",{"_index":827,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:21",{"_index":828,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:22",{"_index":830,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:23",{"_index":806,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:27",{"_index":832,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:35",{"_index":818,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:39",{"_index":816,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:67",{"_index":812,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:83",{"_index":815,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:94",{"_index":808,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.module.ts",{"_index":914,"title":{},"body":{"modules/FiltersComponentModule.html":{}}}],["src/app/components/geolocate",{"_index":919,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/information",{"_index":1121,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/layers",{"_index":1148,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":1168,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:12",{"_index":1179,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":1178,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:14",{"_index":1181,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":1177,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:17",{"_index":1182,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:24",{"_index":1180,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/map",{"_index":1259,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/poi",{"_index":1715,"title":{},"body":{"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts",{"_index":1673,"title":{},"body":{"components/PoiComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts:20",{"_index":1682,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:21",{"_index":1681,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:22",{"_index":1680,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:23",{"_index":1683,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:25",{"_index":1685,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:26",{"_index":1688,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:27",{"_index":1679,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:30",{"_index":1686,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:31",{"_index":1687,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:34",{"_index":1684,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/progress/progress.component.ts",{"_index":1749,"title":{},"body":{"components/ProgressComponent.html":{},"coverage.html":{}}}],["src/app/components/progress/progress.component.ts:16",{"_index":1760,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:17",{"_index":1757,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:20",{"_index":1761,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:24",{"_index":1758,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:33",{"_index":1759,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/search/search.component.ts",{"_index":1769,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:24",{"_index":1797,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:25",{"_index":1796,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:26",{"_index":1800,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:27",{"_index":1798,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:28",{"_index":1799,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:29",{"_index":1781,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:43",{"_index":1789,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:47",{"_index":1786,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:65",{"_index":1782,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:69",{"_index":1791,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:81",{"_index":1788,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:85",{"_index":1794,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:89",{"_index":1784,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/select",{"_index":1833,"title":{},"body":{"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"coverage.html":{}}}],["src/app/components/trek",{"_index":2091,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["src/app/components/treks",{"_index":2380,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces.ts",{"_index":483,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/interfaces.ts:256",{"_index":2429,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:257",{"_index":2424,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:258",{"_index":2426,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:262",{"_index":2428,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:266",{"_index":2434,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:267",{"_index":2430,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:268",{"_index":2431,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:269",{"_index":2433,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:270",{"_index":2432,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:271",{"_index":2423,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:272",{"_index":2422,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/pages/more/more",{"_index":1518,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"coverage.html":{}}}],["src/app/pages/more/more.module.ts",{"_index":1595,"title":{},"body":{"modules/MorePageModule.html":{}}}],["src/app/pages/more/more.page.ts",{"_index":1577,"title":{},"body":{"components/MorePage.html":{},"coverage.html":{}}}],["src/app/pages/more/more.page.ts:14",{"_index":1587,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:15",{"_index":1586,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:16",{"_index":1582,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:22",{"_index":1583,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:37",{"_index":1584,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/tabs/tabs.module.ts",{"_index":2074,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/pages/tabs/tabs.page.ts",{"_index":2056,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/pages/tabs/tabs.page.ts:10",{"_index":2060,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/pages/tabs/tabs.routing.module.ts",{"_index":2079,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/pages/trek",{"_index":2231,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks",{"_index":2323,"title":{},"body":{"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks/treks.module.ts",{"_index":2418,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["src/app/pages/treks/treks.page.ts",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["src/app/pipes/lower",{"_index":1251,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"coverage.html":{}}}],["src/app/resolvers/more",{"_index":1557,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts",{"_index":1597,"title":{},"body":{"guards/MoreResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts:16",{"_index":1598,"title":{},"body":{"guards/MoreResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts",{"_index":2196,"title":{},"body":{"guards/TrekContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/trek.resolver.ts:27",{"_index":2197,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts:38",{"_index":2198,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts",{"_index":2317,"title":{},"body":{"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/treks.resolver.ts:13",{"_index":2319,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts:21",{"_index":2320,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/services/cache/cache.service.ts",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/app/services/cache/cache.service.ts:10",{"_index":339,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:11",{"_index":346,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:12",{"_index":342,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:13",{"_index":348,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:14",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:34",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:68",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/filter",{"_index":671,"title":{},"body":{"injectables/FilterTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/geolocate/geolocate.service.ts",{"_index":1048,"title":{},"body":{"injectables/GeolocateService.html":{},"coverage.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:102",{"_index":1061,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:106",{"_index":1062,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:110",{"_index":1060,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:18",{"_index":1057,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:21",{"_index":1067,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:22",{"_index":1069,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:26",{"_index":1058,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:31",{"_index":1059,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:36",{"_index":1064,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:94",{"_index":1066,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/loading/loading.service.ts",{"_index":1197,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading/loading.service.ts:16",{"_index":1249,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:18",{"_index":1245,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:32",{"_index":1246,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:38",{"_index":1247,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:49",{"_index":1248,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:59",{"_index":1199,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/loading/loading.service.ts:62",{"_index":1204,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/more",{"_index":1498,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["src/app/services/offline",{"_index":2477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/online",{"_index":1602,"title":{},"body":{"injectables/OnlineTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/search",{"_index":1823,"title":{},"body":{"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts",{"_index":1906,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts:100",{"_index":1935,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:104",{"_index":1930,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:116",{"_index":1927,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:137",{"_index":1922,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:206",{"_index":1925,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:28",{"_index":1937,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:30",{"_index":1938,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:31",{"_index":1940,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:39",{"_index":1943,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:40",{"_index":1918,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:43",{"_index":1939,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:44",{"_index":1941,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:48",{"_index":1929,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:58",{"_index":1936,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:66",{"_index":1920,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:87",{"_index":1923,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:96",{"_index":1932,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/custom",{"_index":605,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["src/app/shared/shared",{"_index":2020,"title":{},"body":{"modules/SharedFiltersModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2031,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/assets/i18n",{"_index":2636,"title":{},"body":{"index.html":{}}}],["src/assets/map/icons",{"_index":2641,"title":{},"body":{"index.html":{}}}],["src/assets/map/zone/zone.geojson",{"_index":2644,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environments.prod.ts",{"_index":2618,"title":{},"body":{"index.html":{}}}],["src/environments/environments.ts",{"_index":2604,"title":{},"body":{"index.html":{}}}],["src/environments/variables.ts",{"_index":2481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/theme/variables.scss",{"_index":2651,"title":{},"body":{"index.html":{}}}],["stage",{"_index":2220,"title":{},"body":{"guards/TrekContextResolver.html":{},"miscellaneous/variables.html":{}}}],["stageid",{"_index":2203,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["stagepaint",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":2183,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["started",{"_index":2576,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startersrc/environments/environment.ts",{"_index":2629,"title":{},"body":{"index.html":{}}}],["startforeground",{"_index":1085,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startlocation",{"_index":1093,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.latitude",{"_index":1102,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.longitude",{"_index":1101,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["starttracking",{"_index":1054,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["starttracking(notificationtext",{"_index":1063,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["state",{"_index":1210,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["statements",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":675,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{}}}],["stationaryradius",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":1073,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TreksMapPage.html":{}}}],["status.authorization",{"_index":1075,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["status.isrunning",{"_index":1076,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["statusbar",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["stoponterminate",{"_index":1086,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoptracking",{"_index":1055,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["storage",{"_index":1907,"title":{},"body":{"injectables/SettingsService.html":{},"dependencies.html":{}}}],["store",{"_index":2679,"title":{},"body":{"index.html":{}}}],["stores",{"_index":393,"title":{},"body":{"injectables/CacheService.html":{}}}],["street",{"_index":547,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["strict",{"_index":2766,"title":{},"body":{"license.html":{}}}],["string",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":410,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["styleurls",{"_index":419,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["subheader",{"_index":1486,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["subscribe",{"_index":979,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["subscribe(([filteredtreks",{"_index":2364,"title":{},"body":{"components/TreksMapPage.html":{}}}],["subscribe((isloading",{"_index":1217,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["subscribe((location",{"_index":1106,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["subscribe((status",{"_index":1190,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["subscribe(async",{"_index":1030,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{}}}],["subscribed",{"_index":404,"title":{},"body":{"injectables/CacheService.html":{}}}],["subscription",{"_index":829,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["subscription.unsubscribe",{"_index":2443,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["subscriptions",{"_index":791,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["substitute",{"_index":2755,"title":{},"body":{"license.html":{}}}],["such",{"_index":2775,"title":{},"body":{"license.html":{}}}],["super",{"_index":840,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["super.ngondestroy",{"_index":881,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["super.ngoninit",{"_index":841,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["support",{"_index":2553,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":2584,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2777,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1410,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{}}}],["tabbar.more",{"_index":2067,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.offline",{"_index":2066,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.treks",{"_index":2065,"title":{},"body":{"components/TabsPage.html":{}}}],["table",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2057,"title":{},"body":{"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["tabs.page",{"_index":2075,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":2059,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":2058,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.routing.module",{"_index":2076,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabspage",{"_index":146,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":2068,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tabspageroutingmodule",{"_index":2072,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":354,"title":{},"body":{"injectables/CacheService.html":{}}}],["take(1",{"_index":402,"title":{},"body":{"injectables/CacheService.html":{}}}],["tap",{"_index":355,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["tap((event",{"_index":1240,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["tap((item",{"_index":1569,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["tempfilter",{"_index":860,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempfilter.id",{"_index":861,"title":{},"body":{"components/FiltersComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["templateref",{"_index":441,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["temporaryfilter",{"_index":634,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["temporaryfilter.values",{"_index":659,"title":{},"body":{"components/FilterComponent.html":{}}}],["temporaryfilter.values.find",{"_index":863,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilterindex",{"_index":868,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters",{"_index":789,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters).length",{"_index":857,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.find",{"_index":859,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.findindex",{"_index":869,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.foreach((filter",{"_index":876,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters[temporaryfilterindex",{"_index":871,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue",{"_index":864,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue.id",{"_index":865,"title":{},"body":{"components/FiltersComponent.html":{}}}],["test",{"_index":1459,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["testing",{"_index":2691,"title":{},"body":{"index.html":{}}}],["text",{"_index":1021,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":1998,"title":{},"body":{"injectables/SettingsService.html":{}}}],["themepois",{"_index":1872,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["themes",{"_index":487,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["theory",{"_index":2762,"title":{},"body":{"license.html":{}}}],["this.activefiltersnumber",{"_index":748,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.addsourceslayersevents",{"_index":1389,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.alertcontroller.create",{"_index":1032,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.alwaysdisplayeditems",{"_index":453,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.apiurl}/${parentid}/pois/${trekid}.geojson",{"_index":1661,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${parentid}/touristic_contents/${trekid}.geojson",{"_index":1663,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${parentid}/touristic_events/${trekid}.geojson",{"_index":1665,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${parentid}/treks/${trekid}.geojson",{"_index":1659,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/pois.geojson",{"_index":1662,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/touristic_contents.geojson",{"_index":1664,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/touristic_events.geojson",{"_index":1666,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/trek.geojson",{"_index":1660,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/flatpages.json",{"_index":1516,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.apiurl}/flatpages/${id}.json",{"_index":1517,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.apiurl}/treks.geojson",{"_index":1658,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.backgroundgeolocation",{"_index":1090,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.checkstatus",{"_index":1074,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.configure(geolocationconfig",{"_index":1089,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.getcurrentlocation",{"_index":1094,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["this.backgroundgeolocation.showappsettings",{"_index":1117,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showlocationsettings",{"_index":1118,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.start",{"_index":1109,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.stop",{"_index":1115,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.baseurl}${this.informationdesk.picture",{"_index":1142,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.cache",{"_index":361,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.get",{"_index":1515,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["this.cache.hasownproperty(url",{"_index":377,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[revoked",{"_index":364,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[url",{"_index":383,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.changelayervisibility",{"_index":1161,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.changelayervisibility(event.detail.checked",{"_index":1165,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.checktonotify(coordinates",{"_index":1006,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications",{"_index":976,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications$.unsubscribe",{"_index":994,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.close",{"_index":853,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.commonsrc",{"_index":652,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.commonsrc}${practice.pictogram",{"_index":1372,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.connectionerror",{"_index":1538,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.createmap",{"_index":1319,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.currentmaxfiltervalues",{"_index":1858,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.currentmaxtreks",{"_index":1815,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentorder",{"_index":2397,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.currentpois",{"_index":988,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["this.currentpois.features.find",{"_index":980,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpois.features.map((feature",{"_index":991,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify",{"_index":990,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.findindex",{"_index":1015,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.length",{"_index":1008,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.splice(notifiedindex",{"_index":1023,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex",{"_index":1025,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].id",{"_index":1019,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].name",{"_index":1022,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition",{"_index":995,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition$.next",{"_index":1100,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([0",{"_index":1116,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([0.705824",{"_index":1113,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([location.longitude",{"_index":1107,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next(null",{"_index":1104,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.unsubscribe",{"_index":1007,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentprogress",{"_index":1762,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentprogress$.unsubscribe",{"_index":1766,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentsearchvalue",{"_index":1810,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currenttrek",{"_index":2277,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.currenttrek.properties.id",{"_index":2299,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.data$.getvalue",{"_index":1970,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(defaultsettings.data",{"_index":1956,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(settings.data",{"_index":1951,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.datasettings.find",{"_index":1368,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.deletetrek",{"_index":2158,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.disablegeolocationnotification",{"_index":996,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.enablegeolocationnotification",{"_index":1003,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.expandableitems",{"_index":456,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.expanded",{"_index":451,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.filter",{"_index":651,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["this.filter.values.find((value",{"_index":645,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.filter.values.length",{"_index":1859,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.filteredtreks",{"_index":1324,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["this.filteredtreks.length",{"_index":1816,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filteredtreks.map",{"_index":1337,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.filters",{"_index":849,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters$.next(filters",{"_index":1966,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(defaultsettings",{"_index":1955,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(settings",{"_index":1950,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filterssubscription",{"_index":847,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filterssubscription.unsubscribe",{"_index":880,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filtertreks.activefiltersnumber",{"_index":2363,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.filtertreks.getfilteredtreks(this.treks",{"_index":1640,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.filtervaluesbystep",{"_index":1860,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.firebaseanalytics.setcurrentscreen",{"_index":1571,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.flytouserlocation",{"_index":1313,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.checkauthorization",{"_index":998,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.checkiftrackerisrunning",{"_index":1000,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.currentposition$.subscribe",{"_index":1005,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.currentposition$.subscribe((coordinates",{"_index":1377,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.getcurrentposition",{"_index":1474,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.showappsettings",{"_index":1044,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.starttracking",{"_index":1390,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.starttracking(this.trekname",{"_index":1001,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.stoptracking",{"_index":1327,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.getsettings().subscribe(async",{"_index":1947,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettreks().subscribe",{"_index":1642,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.getvalueforpropertybyid",{"_index":1977,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('cities",{"_index":1990,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('networks",{"_index":1994,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('themes",{"_index":1999,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.globalization.getpreferredlanguage()).value.slice",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hits",{"_index":362,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[revoked",{"_index":365,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[url",{"_index":391,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.http.get",{"_index":1657,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.http.get(this.apiurl",{"_index":1964,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.http.get(url",{"_index":384,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hydratedtrek",{"_index":2126,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice",{"_index":2130,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice.pictogram",{"_index":2132,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgpracticesrc",{"_index":2131,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgsrc",{"_index":2128,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.informationdesk",{"_index":1138,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdesk.picture",{"_index":1140,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdeskpicture",{"_index":1141,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.initializeapp",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initialsize",{"_index":455,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.initialstate",{"_index":452,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.isfirstcheck",{"_index":2398,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.isinview",{"_index":2366,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.isonline",{"_index":842,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.isstage",{"_index":2134,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.items.length",{"_index":458,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice",{"_index":457,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(0",{"_index":454,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.layers",{"_index":1163,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.loaderstatus",{"_index":1187,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loaderstatus$.unsubscribe",{"_index":1191,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loading.begin('trek",{"_index":2270,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.begin('treks",{"_index":2348,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.begin(loadingid",{"_index":1238,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.finish",{"_index":2222,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.loading.finish('trek",{"_index":2272,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.finish('treks",{"_index":2371,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.finish(loadingid",{"_index":1242,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.status",{"_index":1188,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loadingcontroller.create",{"_index":2142,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.loadingids",{"_index":1214,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.getvalue",{"_index":1223,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next",{"_index":1227,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next(ids",{"_index":1225,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe",{"_index":1232,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.localnotifications",{"_index":977,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.haspermission",{"_index":1002,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.requestpermission",{"_index":1004,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.schedule",{"_index":1018,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.setdefaults",{"_index":966,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.location.back",{"_index":2064,"title":{},"body":{"components/TabsPage.html":{},"components/TrekMapPage.html":{}}}],["this.map",{"_index":1320,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addcontrol",{"_index":1347,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addimage(practice.id.tostring",{"_index":1374,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addlayer",{"_index":1399,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('treks",{"_index":1391,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('zone",{"_index":1397,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.easeto",{"_index":1449,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.fitbounds(bounds",{"_index":1345,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.flyto",{"_index":1475,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getcanvas().style.cursor",{"_index":1452,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getsource",{"_index":1438,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getsource('treks",{"_index":1322,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getzoom",{"_index":1436,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.loadimage",{"_index":1371,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('click",{"_index":1429,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('load",{"_index":1365,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseenter",{"_index":1451,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseleave",{"_index":1454,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.queryrenderedfeatures(e.point",{"_index":1431,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.remove",{"_index":1326,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.resize",{"_index":1364,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig",{"_index":1328,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.mapconfig.maxzoom",{"_index":1393,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig.style",{"_index":1329,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapisloaded(false",{"_index":2357,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.mapisloaded.emit(true",{"_index":1461,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapviz.nativeelement.mapinstance",{"_index":1460,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition",{"_index":1378,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.addto(this.map",{"_index":1386,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.remove",{"_index":1387,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.setlnglat(coordinates",{"_index":1379,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.maxsize",{"_index":379,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.mergefilterstreks",{"_index":2358,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.modalcontroller.create",{"_index":649,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.modalcontroller.dismiss",{"_index":1857,"title":{},"body":{"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["this.modalcontroller.gettop",{"_index":2292,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalctrl.dismiss",{"_index":878,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(id",{"_index":1813,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(true",{"_index":875,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.modalpoidetails",{"_index":2294,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.dismiss",{"_index":2295,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.ondiddismiss().then",{"_index":2296,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.present",{"_index":2297,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.more.getmoreitembyid(moreitemid).pipe",{"_index":1568,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["this.more.getmoreitems().pipe",{"_index":1601,"title":{},"body":{"guards/MoreResolver.html":{}}}],["this.moreinformationsintro",{"_index":1589,"title":{},"body":{"components/MorePage.html":{}}}],["this.moreitem",{"_index":1539,"title":{},"body":{"components/MoreItemPage.html":{}}}],["this.navigatetotrek(data",{"_index":2369,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.navigatetotrek.emit(data.selectedtrekid",{"_index":1473,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navigatetotrek.emit(feature.properties.id",{"_index":1456,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navparams.get('changelayervisibility",{"_index":1162,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('commonsrc",{"_index":1734,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('informationdesk",{"_index":1139,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.navparams.get('isonline",{"_index":1803,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.navparams.get('layers",{"_index":1164,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('offline",{"_index":1733,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('orders",{"_index":2395,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.navparams.get('poi",{"_index":1732,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.nbtemporaryfilterstreks",{"_index":856,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.network.type",{"_index":2355,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.nonetwork",{"_index":2354,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.notificationsmodeisactive",{"_index":997,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.numberofactivefilters",{"_index":2365,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.offline",{"_index":1330,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.offlinetreks",{"_index":1805,"title":{},"body":{"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.offlinetreks.currentprogressdownload$.subscribe",{"_index":1763,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.offlinetreks.getcommonimgsrc",{"_index":846,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc",{"_index":1701,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc(this.trek",{"_index":2129,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.treks",{"_index":844,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks",{"_index":1804,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.onlinetreks.getcommonimgsrc",{"_index":845,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc",{"_index":1702,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc(this.trek",{"_index":2133,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.onlinetreks.loadtreks",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onlinetreks.onlinetrekserror$.subscribe((error",{"_index":2353,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.onlinetreks.treks",{"_index":843,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetrekserror$.next(error",{"_index":1644,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.onlinetrekserror$.next(null",{"_index":1641,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.order$.next",{"_index":1967,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.orders",{"_index":2394,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.parentid",{"_index":2146,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.picture",{"_index":1699,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(9999",{"_index":2061,"title":{},"body":{"components/TabsPage.html":{}}}],["this.platform.backbutton.subscribewithpriority(99999",{"_index":852,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["this.platform.is('android",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.is('ios",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.ready().then(async",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.poi",{"_index":1731,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties",{"_index":1735,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures",{"_index":1736,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures.length",{"_index":1698,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0",{"_index":1700,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0].url",{"_index":1737,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.type",{"_index":1691,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.popovercontroller.dismiss",{"_index":2408,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.popovercontroller.gettop",{"_index":2403,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.popoverctrl.gettop",{"_index":2290,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.practices",{"_index":1369,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.practices.values.foreach((practice",{"_index":1423,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentconfirmfeatures(featuresincluster",{"_index":1444,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentdeleteconfirm",{"_index":2139,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentdeleteconfirm(true",{"_index":2150,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentpersmissionsconfirm",{"_index":999,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.presentpoidetails.emit(poi",{"_index":983,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.ref.detectchanges",{"_index":1765,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["this.refreshdelay",{"_index":373,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit",{"_index":382,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit(revoked",{"_index":409,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.subscribe((revoked",{"_index":360,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.route.data.pipe",{"_index":2359,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.route.data.subscribe((data",{"_index":1536,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.router.navigate",{"_index":2212,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.router.url",{"_index":1540,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.trekstool.gettrekdetailsurl(id",{"_index":2370,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.router.url",{"_index":2062,"title":{},"body":{"components/TabsPage.html":{}}}],["this.routerlink",{"_index":2135,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.savefiltersstate(filters",{"_index":1969,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.screenorientation.onchange().subscribe",{"_index":1359,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.searchtreks.search",{"_index":1811,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtreks.search(this.treks.features",{"_index":1808,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selectchange.emit",{"_index":658,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selecteditems",{"_index":662,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selectedpoiid",{"_index":1883,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["this.selectedtrekid",{"_index":1900,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["this.setofflinesettings",{"_index":1946,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settings.data$.subscribe((settings",{"_index":1739,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settings.filters",{"_index":752,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.filters$.subscribe((filters",{"_index":848,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.gethydratedtrek(feature",{"_index":1466,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.settings.gethydratedtrek(this.trek",{"_index":2127,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.settings.loadsettings",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.settings.order",{"_index":753,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.order$.subscribe((order",{"_index":2396,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.savefiltersstate(this.temporaryfilters$.getvalue",{"_index":874,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.saveorderstate('default",{"_index":2407,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.saveorderstate(event.detail.value",{"_index":2405,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settingsservice.gethydratedtrek",{"_index":2216,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingsservice.gettouristiccategorieswithfeatures",{"_index":2218,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingssub",{"_index":1738,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settingssub.unsubscribe",{"_index":1744,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.splashscreen.hide",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status.subscribe",{"_index":1221,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.statusbar.stylelightcontent",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get(`settings",{"_index":1954,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.set('settings",{"_index":1948,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.subscriptions",{"_index":2440,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.foreach((subscription",{"_index":2441,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.push",{"_index":851,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.subscriptions$$.push(this.mergefilterstreks",{"_index":2367,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.temporaryfilter",{"_index":1856,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.temporaryfilter.values.find",{"_index":1861,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.temporaryfilters$).subscribe",{"_index":855,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.getvalue",{"_index":858,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(filters",{"_index":850,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(temporaryfilters",{"_index":867,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.touristiccategorieswithfeatures",{"_index":2280,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.translate",{"_index":1026,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.translate.getdefaultlang",{"_index":1514,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["this.translate.setdefaultlang(defaultlanguage",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.trek.properties.id",{"_index":2147,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.treks",{"_index":1807,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treks$.getvalue",{"_index":1667,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks$.next(data",{"_index":1643,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks.features",{"_index":1812,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treksbystep",{"_index":1817,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.trekstool",{"_index":2283,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.trekstool.getcommonimgsrc",{"_index":2352,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.gettrekdetailsurl(id",{"_index":2298,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.trekstool.gettreksurl",{"_index":2350,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.treksurl",{"_index":2349,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekurl",{"_index":2286,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.typeimgsrc",{"_index":1696,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.typepois",{"_index":1690,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.typepois.values.find",{"_index":1693,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.unsubscribefilters",{"_index":873,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.updateselecteditems(data.temporaryfilter",{"_index":657,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.updateselecteditems(this.filter",{"_index":644,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.valuechange.emit",{"_index":647,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["this.viewisload",{"_index":1809,"title":{},"body":{"components/SearchComponent.html":{}}}],["throttle",{"_index":1306,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throttle(this.flytouserlocation",{"_index":1314,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throw",{"_index":1443,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throwerror",{"_index":349,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["throwerror(error",{"_index":406,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["thumbnail",{"_index":533,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["tiles",{"_index":1335,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["tiles/{z}/{x}/{y}.png",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiles[0",{"_index":1336,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["tilesize",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":388,"title":{},"body":{"injectables/CacheService.html":{}}}],["timeout",{"_index":1095,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["title",{"_index":468,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["todo",{"_index":380,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["toggleexpandables",{"_index":426,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["toolbar.filters",{"_index":2372,"title":{},"body":{"components/TreksMapPage.html":{}}}],["toolbar.ordertitle",{"_index":2413,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["toolbar.search",{"_index":2373,"title":{},"body":{"components/TreksMapPage.html":{}}}],["top",{"_index":1350,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["topo",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["topromise",{"_index":1079,"title":{},"body":{"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["tort",{"_index":2767,"title":{},"body":{"license.html":{}}}],["touristiccategorie",{"_index":571,"title":{"interfaces/TouristicCategorie.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccategorieswithfeatures",{"_index":596,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["touristiccategorieswithfeatures.push",{"_index":2014,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccategorywithfeatures",{"_index":572,"title":{"interfaces/TouristicCategoryWithFeatures.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontent",{"_index":569,"title":{"interfaces/TouristicContent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["touristiccontent.properties.category",{"_index":2008,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontent_categories",{"_index":2012,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontentcollapseinitialsize",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontentlayersproperties",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontents",{"_index":568,"title":{"interfaces/TouristicContents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontents.features",{"_index":2006,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontents.features.filter",{"_index":2016,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristicevent",{"_index":574,"title":{"interfaces/TouristicEvent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristicevents",{"_index":573,"title":{"interfaces/TouristicEvents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trackbyfilterid",{"_index":799,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackbyfilterid(index",{"_index":819,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters",{"_index":800,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters(index",{"_index":821,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfiltervalues",{"_index":1838,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["trackfiltervalues(index",{"_index":1848,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["tracktrek",{"_index":1779,"title":{},"body":{"components/SearchComponent.html":{}}}],["tracktrek(index",{"_index":1793,"title":{},"body":{"components/SearchComponent.html":{}}}],["trad",{"_index":1020,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.asklocatepermission",{"_index":1036,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.cancel",{"_index":1038,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.open",{"_index":1042,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["transform",{"_index":1254,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"components/TreksMapPage.html":{}}}],["transform(value",{"_index":1255,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["translate",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["translate/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forchild",{"_index":918,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forroot",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{}}}],["translationtrekcard",{"_index":2140,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.askdelete",{"_index":2154,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.cancelbutton",{"_index":2156,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.confirmbutton",{"_index":2155,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletelabel",{"_index":2157,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletetitle",{"_index":2153,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletioninprogress",{"_index":2143,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.errorwhiledeleting",{"_index":2149,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.trekisdelete",{"_index":2151,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trash",{"_index":2175,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["trek",{"_index":127,"title":{"interfaces/Trek.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trek'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["trek.bbox",{"_index":1671,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.component",{"_index":1304,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/TreksMapPageModule.html":{}}}],["trek.component.html",{"_index":1890,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.scss",{"_index":1889,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts",{"_index":1888,"title":{},"body":{"components/SelectTrekComponent.html":{},"coverage.html":{}}}],["trek.component.ts:10",{"_index":1894,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:15",{"_index":1893,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:19",{"_index":1896,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:21",{"_index":1895,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:25",{"_index":1897,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:29",{"_index":1899,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.details.contact",{"_index":1748,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.details.informationdesk.website",{"_index":1146,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["trek.details.stage",{"_index":2160,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trek.details.usefulinformation",{"_index":1747,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.downloadalert.loading",{"_index":1767,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.downloadalert.storage",{"_index":1768,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.features.find((feature",{"_index":1668,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.name",{"_index":1903,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.properties.arrival_city",{"_index":1984,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities",{"_index":1986,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities.map",{"_index":1988,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.departure_city",{"_index":1982,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.difficulty",{"_index":1975,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.first_picture",{"_index":1647,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.first_picture.url",{"_index":1649,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.information_desks",{"_index":2000,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.name",{"_index":1821,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{}}}],["trek.properties.networks",{"_index":1991,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.networks.map",{"_index":1993,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.practice",{"_index":1978,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.route",{"_index":1980,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes",{"_index":1995,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes.map",{"_index":1997,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek/select",{"_index":1303,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SelectTrekComponent.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["trekarrowlayerproperties",{"_index":2855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekcardcomponent",{"_index":148,"title":{"components/TrekCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekcontext",{"_index":592,"title":{"interfaces/TrekContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekcontextresolver",{"_index":214,"title":{"guards/TrekContextResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["trekdetails",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekdetailspage",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekdetailspagemodule",{"_index":2227,"title":{"modules/TrekDetailsPageModule.html":{}},"body":{"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekfitboundsoptions",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekid",{"_index":1619,"title":{},"body":{"injectables/OnlineTreksService.html":{},"guards/TrekContextResolver.html":{},"interfaces/TreksService.html":{}}}],["treklinelayerproperties",{"_index":2853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekmappage",{"_index":151,"title":{"components/TrekMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekmappagemodule",{"_index":2309,"title":{"modules/TrekMapPageModule.html":{}},"body":{"modules/TrekMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekname",{"_index":938,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trekorderpopover",{"_index":2402,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["trekorderpopover.__zone_symbol__value.backdropdismiss",{"_index":2404,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["trekproperties",{"_index":510,"title":{"interfaces/TrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treks",{"_index":124,"title":{"interfaces/Treks.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.departure",{"_index":2162,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks.features",{"_index":709,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.module",{"_index":2233,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{}}}],["treks.module.ts",{"_index":2040,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["treks.page",{"_index":2420,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["treks.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["treks.service.ts",{"_index":673,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.service.ts:101",{"_index":699,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:105",{"_index":695,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:117",{"_index":697,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:120",{"_index":1621,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:131",{"_index":685,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:143",{"_index":1623,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:150",{"_index":689,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:156",{"_index":691,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:160",{"_index":683,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:165",{"_index":1625,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:168",{"_index":693,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:187",{"_index":1618,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:196",{"_index":1616,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:22",{"_index":703,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:24",{"_index":687,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:27",{"_index":1636,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:28",{"_index":1634,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:30",{"_index":1637,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:31",{"_index":1635,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:32",{"_index":1614,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:43",{"_index":1633,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:56",{"_index":1628,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:61",{"_index":702,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:66",{"_index":1615,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:70",{"_index":1632,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:74",{"_index":1627,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:80",{"_index":1629,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:84",{"_index":1631,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:88",{"_index":1630,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:9",{"_index":1825,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.sort(function(a",{"_index":1827,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks/filter",{"_index":672,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/offline",{"_index":839,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/online",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/search",{"_index":1802,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["treks/treks.module",{"_index":2077,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["treks/treks.page",{"_index":2080,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["treksbystep",{"_index":1776,"title":{},"body":{"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["trekscontext",{"_index":599,"title":{"interfaces/TreksContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekscontextresolver",{"_index":216,"title":{"guards/TreksContextResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["treksfitboundsoptions",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["treksmappage",{"_index":153,"title":{"components/TreksMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treksmappagemodule",{"_index":2376,"title":{"modules/TreksMapPageModule.html":{}},"body":{"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksorderchange",{"_index":2387,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksorderchange(event",{"_index":2390,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksordercomponent",{"_index":154,"title":{"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekspage",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["trekspagemodule",{"_index":2073,"title":{"modules/TreksPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksservice",{"_index":575,"title":{"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treksservice.getcommonimgsrc",{"_index":2217,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getmapconfigfortrekbyid",{"_index":2215,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getpoisfortrekbyid(currenttrekid",{"_index":2207,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiccontentsfortrekbyid(currenttrekid",{"_index":2208,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiceventsfortrekbyid(currenttrekid",{"_index":2209,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(currenttrekid",{"_index":2206,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(parentid",{"_index":2210,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["trekssource",{"_index":1321,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekssource.setdata",{"_index":1325,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekstool",{"_index":594,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["trekstool.treks$.subscribe((treks",{"_index":1806,"title":{},"body":{"components/SearchComponent.html":{}}}],["treksurl",{"_index":2327,"title":{},"body":{"components/TreksMapPage.html":{}}}],["trekurl",{"_index":2241,"title":{},"body":{"components/TrekMapPage.html":{}}}],["trekzoom",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1092,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["turf/distance",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["turf/helpers",{"_index":705,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["two",{"_index":2223,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2783,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeimgsrc",{"_index":1676,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepoi",{"_index":1694,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepoi.id",{"_index":1695,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois",{"_index":1677,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois.values.find",{"_index":1743,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["types/lodash.clonedeep",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["types/lodash.deburr",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["types/mapbox",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["ui.module",{"_index":1549,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ui.module.ts",{"_index":2050,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":739,"title":{},"body":{"injectables/FilterTreksService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{}}}],["unit",{"_index":1353,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["units",{"_index":1011,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["unsubscribe",{"_index":783,"title":{"classes/UnSubscribe.html":{}},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(subscription",{"_index":2442,"title":{},"body":{"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(this.mergefilterstreks",{"_index":2368,"title":{},"body":{"components/TreksMapPage.html":{}}}],["unsubscribe:11",{"_index":826,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:17",{"_index":825,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:5",{"_index":835,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribefilters",{"_index":801,"title":{},"body":{"components/FiltersComponent.html":{}}}],["updateselecteditems",{"_index":618,"title":{},"body":{"components/FilterComponent.html":{}}}],["updateselecteditems(temporaryfilter",{"_index":632,"title":{},"body":{"components/FilterComponent.html":{}}}],["uppercase",{"_index":883,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["url",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":488,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["use",{"_index":2634,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1944,"title":{},"body":{"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["usedthe",{"_index":2653,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["usefirebase",{"_index":2683,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userlocation",{"_index":701,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["userlocation.latitude",{"_index":1477,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["userlocation.longitude",{"_index":1476,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["usermsg",{"_index":1820,"title":{},"body":{"components/SearchComponent.html":{}}}],["val",{"_index":1764,"title":{},"body":{"components/ProgressComponent.html":{}}}],["value",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["value'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["value.checked",{"_index":646,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.checked).length",{"_index":729,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.component",{"_index":2025,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["value.component.html",{"_index":764,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.scss",{"_index":763,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts",{"_index":762,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["value.component.ts:10",{"_index":768,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:11",{"_index":767,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:12",{"_index":769,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:15",{"_index":766,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:19",{"_index":770,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:21",{"_index":773,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.id",{"_index":866,"title":{},"body":{"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{}}}],["value.interval",{"_index":746,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.name",{"_index":776,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value/filter",{"_index":761,"title":{},"body":{"components/FilterValueComponent.html":{},"modules/SharedFiltersModule.html":{},"coverage.html":{}}}],["valuechange",{"_index":621,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["valuechanged",{"_index":619,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["valuechanged(event",{"_index":1850,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["valuechanged(undefined",{"_index":635,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuecheckchanged",{"_index":765,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["valuecheckchanged($event",{"_index":771,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["values",{"_index":551,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["var",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["variable",{"_index":2455,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2786,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2586,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vibrate",{"_index":970,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["viewchild",{"_index":1299,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viewchild('mapviz",{"_index":1294,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viewisload",{"_index":1777,"title":{},"body":{"components/SearchComponent.html":{}}}],["visibility",{"_index":1150,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"miscellaneous/variables.html":{}}}],["visibility'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["visibility.component",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["visibility.component.html",{"_index":1152,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.scss",{"_index":1151,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts",{"_index":1149,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["visibility.component.ts:10",{"_index":1160,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:11",{"_index":1156,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:15",{"_index":1157,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:20",{"_index":1159,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility/layers",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["visible",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viz",{"_index":1262,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["viz.component",{"_index":2035,"title":{},"body":{"modules/SharedModule.html":{}}}],["viz.component.html",{"_index":1264,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.scss",{"_index":1263,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts",{"_index":1261,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viz.component.ts:104",{"_index":1284,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:217",{"_index":1283,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:383",{"_index":1291,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:42",{"_index":1292,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:423",{"_index":1285,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:43",{"_index":1297,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:44",{"_index":1298,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:46",{"_index":1295,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:48",{"_index":1279,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:49",{"_index":1280,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:50",{"_index":1278,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:51",{"_index":1277,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:52",{"_index":1281,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:54",{"_index":1282,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:55",{"_index":1276,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:74",{"_index":1288,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:94",{"_index":1289,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz/map",{"_index":1260,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["warranties",{"_index":2736,"title":{},"body":{"license.html":{}}}],["way",{"_index":2771,"title":{},"body":{"license.html":{}}}],["website",{"_index":548,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["webview",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["webview/ngx",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["weight",{"_index":2304,"title":{},"body":{"components/TrekMapPage.html":{}}}],["whether",{"_index":2764,"title":{},"body":{"license.html":{}}}],["white",{"_index":2187,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["whitelist",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":780,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["window.settimeout",{"_index":1363,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["windows",{"_index":2615,"title":{},"body":{"index.html":{}}}],["within",{"_index":2669,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":375,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":2274,"title":{},"body":{"components/TrekMapPage.html":{}}}],["wrap",{"_index":2184,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["x",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"interfaces/TreksService.html":{}}}],["z",{"_index":897,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["zip",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["zone",{"_index":1400,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["zone.js",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["zonelayerproperties",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoneoutlinelayerproperties",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, translate: TranslateService, globalization: Globalization, onlineTreks: OnlineTreksService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalization\n                                                  \n                                                        \n                                                                    Globalization\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '@env/environment';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private translate: TranslateService,\n    private globalization: Globalization,\n    private onlineTreks: OnlineTreksService,\n    private settings: SettingsService\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      let defaultLanguage;\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        defaultLanguage = (await this.globalization.getPreferredLanguage()).value.slice(\n          0,\n          2\n        );\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n      } else {\n        defaultLanguage = navigator.language.slice(0, 2);\n      }\n\n      // we assume that availableLanguage[0] is default language if user language is not available\n      if (\n        environment.availableLanguage &&\n        environment.availableLanguage.length > 0\n      ) {\n        if (environment.availableLanguage.indexOf(defaultLanguage) === -1) {\n          defaultLanguage = environment.availableLanguage[0];\n        }\n      } else {\n        // or 'fr' if array is empty\n        defaultLanguage = 'fr';\n      }\n\n      this.translate.setDefaultLang(defaultLanguage);\n\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoadingInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { LoadingInterceptor } from '@app/services/loading/loading.service';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { Animation } from '@ionic/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\n\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport { ProgressComponent } from '@app/components/progress/progress.component';\nimport { LayersVisibilityComponent } from '@app/components/layers-visibility/layers-visibility.component';\n\nimport { TreksOrderComponent } from './components/treks-order/treks-order.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function noAnimation(AnimationC: Animation): Promise {\n  return Promise.resolve(new AnimationC());\n}\n\nregisterLocaleData(localeFr, 'fr');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  entryComponents: [\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    IonicModule.forRoot({\n      mode: 'md',\n      animated: true,\n      navAnimation: noAnimation\n    }),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    IonicStorageModule.forRoot()\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    File,\n    Zip,\n    WebView,\n    BackgroundGeolocation,\n    LocalNotifications,\n    ScreenOrientation,\n    Globalization,\n    SocialSharing,\n    Network,\n    FirebaseAnalytics,\n    MoreResolver,\n    MoreItemResolver,\n    TrekContextResolver,\n    TreksContextResolver,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'app', pathMatch: 'full' },\n  {\n    path: 'app',\n    loadChildren: './pages/tabs/tabs.module#TabsPageModule'\n  },\n  {\n    path: 'app/map/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule'\n  },\n  {\n    path: 'app/map/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { isStage: true }\n  },\n  {\n    path: 'app/map-offline/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true }\n  },\n  {\n    path: 'app/map-offline/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true, isStage: true }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Public\n                                hits\n                            \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                refreshDelay\n                            \n                            \n                                    Public\n                                revoke\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                revoking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            revoking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoking(observable: Observable, revoked?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:68\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    revoked\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 4 * 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            revoke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, publishReplay, refCount, take, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n  private cache: { [key: string]: Observable } = {};\n  private refreshDelay = 4 * 60 * 60 * 1000;\n  private maxSize = 200;\n  public revoke: EventEmitter = new EventEmitter();\n  public hits: { [key: string]: number } = {};\n\n  constructor(private http: HttpClient) {\n    this.revoke.subscribe((revoked: string | null) => {\n      if (!revoked) {\n        this.cache = {};\n        this.hits = {};\n      } else {\n        delete this.cache[revoked];\n        delete this.hits[revoked];\n      }\n    });\n  }\n\n  /*\n   * gets an observable\n   * that broadcasts a ReplaySubject\n   * which emits the response of a get request\n   * during this.refreshDelay ms without sending a new http request\n   */\n  public get(url: string, options: any): Observable {\n    if (!this.cache.hasOwnProperty(url)) {\n      if (Object.keys(this.cache).length >= this.maxSize) {\n        // TODO: do not revoke everything\n        this.revoke.emit();\n      }\n      this.cache[url] = this.http.get(url, options).pipe(\n        // set hits to 0 each time request is actually sent\n        tap(() => {\n          this.hits[url] = 0;\n        }),\n        // create a ReplaySubject that stores and emit last response during delay\n        publishReplay(1, this.refreshDelay),\n        // broadcast ReplaySubject\n        refCount(),\n        // complete each observer after response has been emitted\n        take(1),\n        // increment hits each time request is subscribed\n        tap(() => {\n          const hits = this.hits[url];\n          this.hits[url] = hits ? hits + 1 : 1;\n        }),\n        catchError((error) => {\n          delete this.cache[url];\n          return throwError(error);\n        })\n      );\n    }\n    return this.cache[url];\n  }\n\n  /*\n   Make the observable revoke the cache when it emits\n   */\n  public revoking(\n    observable: Observable,\n    revoked?: string | null\n  ): Observable {\n    return observable.pipe(\n      tap(() => {\n        this.revoke.emit(revoked);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsibleListComponent.html":{"url":"components/CollapsibleListComponent.html","title":"component - CollapsibleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsibleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/collapsible-list/collapsible-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapsible-list\n            \n\n            \n                styleUrls\n                ./collapsible-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collapsible-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alwaysDisplayedItems\n                            \n                            \n                                    Public\n                                expandableItems\n                            \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleExpandables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideAllLabel\n                            \n                            \n                                initialSize\n                            \n                            \n                                initialState\n                            \n                            \n                                items\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                showAllLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/collapsible-list/collapsible-list.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialSize\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialState\n                    \n                \n                \n                    \n                        Type :     \"expanded\" | \"collapsed\"\n\n                    \n                \n                \n                    \n                        Default value : 'collapsed'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpandables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpandables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alwaysDisplayedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandableItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  TemplateRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'app-collapsible-list',\n  templateUrl: './collapsible-list.component.html',\n  styleUrls: ['./collapsible-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollapsibleListComponent implements OnInit {\n  @Input() items: T[];\n  @Input() showAllLabel: string;\n  @Input() hideAllLabel: string;\n  @Input() initialSize = 5;\n  @Input() initialState: 'expanded' | 'collapsed' = 'collapsed';\n  @Input() itemTemplate: TemplateRef;\n\n  public alwaysDisplayedItems: T[] = [];\n  public expandableItems: T[] = [];\n  public expanded = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.expanded = this.initialState === 'expanded';\n    this.alwaysDisplayedItems = this.items.slice(0, this.initialSize);\n    this.expandableItems = this.items.slice(\n      this.initialSize,\n      this.items.length\n    );\n  }\n\n  public toggleExpandables() {\n    this.expanded = !this.expanded;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n    \n  \n\n 0\">\n  \n    \n      {{ showAllLabel }}\n    \n    \n      {{ hideAllLabel }}\n    \n  \n\n\n    \n\n    \n                \n                    ./collapsible-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 0\">            {{ showAllLabel }}              {{ hideAllLabel }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollapsibleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectErrorComponent.html":{"url":"components/ConnectErrorComponent.html","title":"component - ConnectErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConnectErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connect-error/connect-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-error\n            \n\n            \n                styleUrls\n                ./connect-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        retry\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-connect-error',\n  templateUrl: './connect-error.component.html',\n  styleUrls: ['./connect-error.component.scss']\n})\nexport class ConnectErrorComponent {\n  @Input() public title = '';\n  @Input() public content = '';\n  @Input() public icon = '';\n  @Input() public buttonText = '';\n  @Output() public retry = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      {{ title }}\n    \n  \n  \n    \n      {{ content }}\n    \n  \n  \n    \n      \n        {{ buttonText }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./connect-error.component.scss\n                \n                .icon-size {\n  font-size: 4em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ title }}                  {{ content }}                          {{ buttonText }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainsFilter.html":{"url":"interfaces/ContainsFilter.html","title":"interface - ContainsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomPipesModule.html":{"url":"modules/CustomPipesModule.html","title":"module - CustomPipesModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomPipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomPipesModule\n\n\n\ncluster_CustomPipesModule_declarations\n\n\n\ncluster_CustomPipesModule_exports\n\n\n\n\nLowerRoundPipe\n\nLowerRoundPipe\n\n\n\nCustomPipesModule\n\nCustomPipesModule\n\nCustomPipesModule -->\n\nLowerRoundPipe->CustomPipesModule\n\n\n\n\n\nLowerRoundPipe \n\nLowerRoundPipe \n\nLowerRoundPipe  -->\n\nCustomPipesModule->LowerRoundPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/custom-pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LowerRoundPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LowerRoundPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LowerRoundPipe } from '@app/pipes/lower-round.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [LowerRoundPipe],\n  exports: [LowerRoundPipe]\n})\nexport class CustomPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSetting.html":{"url":"interfaces/DataSetting.html","title":"interface - DataSetting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSetting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hideAllLabel\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        showAllLabel\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideAllLabel\n                                    \n                                \n                                \n                                    \n                                        hideAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllLabel\n                                    \n                                \n                                \n                                    \n                                        showAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\" | \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\" | \"interval\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     FilterValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containsFilterShouldUseSelectAbove\n                            \n                            \n                                    Public\n                                selectedItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                openSelect\n                            \n                            \n                                    Public\n                                updateSelectedItems\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter/filter.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            openSelect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSelect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateSelectedItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems(temporaryFilter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    temporaryFilter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containsFilterShouldUseSelectAbove\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.containsFilterShouldUseSelectAbove\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  DoCheck\n} from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit, DoCheck {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n  @Output() public selectChange = new EventEmitter();\n  public selectedItems = '';\n  public containsFilterShouldUseSelectAbove =\n    environment.containsFilterShouldUseSelectAbove;\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {\n    this.updateSelectedItems(this.filter);\n  }\n\n  ngDoCheck() {\n    if (\n      !this.filter.values.find((value) => {\n        return value.checked;\n      })\n    ) {\n      this.updateSelectedItems(this.filter);\n    }\n  }\n\n  public valueChanged({\n    checked,\n    value\n  }: {\n    checked: boolean;\n    value: FilterValue;\n  }): void {\n    this.valueChange.emit({ checked: checked, value: value });\n  }\n\n  public async openSelect(): Promise {\n    const modal = await this.modalController.create({\n      component: SelectFilterComponent,\n      componentProps: { filter: this.filter, commonSrc: this.commonSrc },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.temporaryFilter) {\n      this.updateSelectedItems(data.temporaryFilter);\n      this.selectChange.emit({ filter: data.temporaryFilter });\n    }\n  }\n\n  public updateSelectedItems(temporaryFilter: Filter) {\n    const selectedItems: string[] = [];\n\n    for (const filterValue of temporaryFilter.values) {\n      if (filterValue.checked) {\n        selectedItems.push(filterValue.name);\n      }\n    }\n    this.selectedItems = selectedItems.join(', ');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ filter.name }}\n  \n\n\n  \n  \n\n\n\n  \n    \n      {{\n        selectedItems === ''\n          ? ('filters.selectPlaceholder' | translate) +\n            ' ' +\n            filter.name.toLowerCase()\n          : selectedItems\n      }}\n    \n  \n\n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .select-placeholder {\n  color: var(--ion-color-medium);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.name }}                  {{        selectedItems === \\'\\'          ? (\\'filters.selectPlaceholder\\' | translate) +            \\' \\' +            filter.name.toLowerCase()          : selectedItems      }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterTreksService.html":{"url":"injectables/FilterTreksService.html","title":"injectable - FilterTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter-treks/filter-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeFiltersNumber$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                containsFilter\n                            \n                            \n                                    Static\n                                filter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedIdForFilter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedInterval\n                            \n                            \n                                    Public\n                                getFilteredTreks\n                            \n                            \n                                    Private\n                                    Static\n                                getNumberOfActiveFilters\n                            \n                            \n                                    Private\n                                    Static\n                                intervalFilter\n                            \n                            \n                                    Private\n                                    Static\n                                isFilterActive\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter-treks/filter-treks.service.ts:160\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsFilter(filter: ContainsFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                ContainsFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(treks: MinimalTreks | null, filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTreks | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedIdForFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedIdForFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedInterval\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedInterval(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFilteredTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredTreks(treks$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getNumberOfActiveFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumberOfActiveFilters(filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            intervalFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intervalFilter(filter: IntervalFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IntervalFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isFilterActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFilterActive(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(filteredTreks: MinimalTrek[], order: Order, userLocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filteredTreks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeFiltersNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter-treks/filter-treks.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { point } from '@turf/helpers';\n\nimport {\n  ContainsFilter,\n  Filter,\n  IntervalFilter,\n  MinimalTrek,\n  MinimalTreks,\n  Order\n} from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\nconst distance = require('@turf/distance').default;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterTreksService {\n  public activeFiltersNumber$: Observable;\n\n  public static filter(\n    treks: MinimalTreks | null,\n    filters: Filter[] | null\n  ): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n\n    let filteredFeatures = treks.features;\n\n    if (filters) {\n      filters.forEach((filter) => {\n        filteredFeatures = filteredFeatures.filter((feature) => {\n          if (!FilterTreksService.isFilterActive(filter)) {\n            return true;\n          }\n\n          if (filter.type === 'contains') {\n            return FilterTreksService.containsFilter(\n              filter as ContainsFilter,\n              feature\n            );\n          } else if (filter.type === 'interval') {\n            return FilterTreksService.intervalFilter(\n              filter as IntervalFilter,\n              feature\n            );\n          }\n\n          return false;\n        });\n      });\n    }\n\n    return filteredFeatures;\n  }\n\n  public static sort(\n    filteredTreks: MinimalTrek[],\n    order: Order,\n    userLocation?: number[]\n  ): MinimalTrek[] {\n    return filteredTreks.sort((a: MinimalTrek, b: MinimalTrek) => {\n      // Sort by user location\n      if (order === 'location' && userLocation && userLocation !== null) {\n        if (!a.geometry || !b.geometry) {\n          return !a.geometry ? 1 : -1;\n        }\n\n        const distanceFromTrekA = distance(\n          point(a.geometry.coordinates),\n          point(userLocation)\n        );\n        const distanceFromTrekB = distance(\n          point(b.geometry.coordinates),\n          point(userLocation)\n        );\n\n        if (distanceFromTrekA  distanceFromTrekB) {\n          return 1;\n        }\n        return 0;\n      }\n      // Default order (alphabetically)\n      if (a.properties.name  b.properties.name) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  private static isFilterActive(filter: Filter): boolean {\n    return filter.values.filter((value) => value.checked).length > 0;\n  }\n\n  private static getNumberOfActiveFilters(filters: Filter[] | null): number {\n    let numberOfActiveFilters = 0;\n    if (!!filters) {\n      filters.forEach((filter) => {\n        numberOfActiveFilters += FilterTreksService.getCheckedIdForFilter(\n          filter\n        ).length;\n      });\n    }\n    return numberOfActiveFilters;\n  }\n\n  private static intervalFilter(filter: IntervalFilter, feature: MinimalTrek) {\n    let isInInterval = false;\n    FilterTreksService.getCheckedInterval(filter).forEach(\n      ([min, max]: [number, number]) => {\n        const criterionValue: number = feature.properties[filter.id];\n        if (criterionValue >= min && criterionValue \n            (feature.properties[filter.id] as any).indexOf(filterValue) !== -1\n        ) !== undefined\n      );\n    } else {\n      return (\n        FilterTreksService.getCheckedIdForFilter(filter).indexOf(feature\n          .properties[filter.id] as any) !== -1\n      );\n    }\n  }\n\n  private static getCheckedIdForFilter(filter: Filter): number[] {\n    return filter.values\n      .filter((value) => value.checked)\n      .map((checkedValue) => checkedValue.id);\n  }\n\n  private static getCheckedInterval(filter: Filter): [number, number][] {\n    return filter.values\n      .filter((value) => !!value.interval && value.checked)\n      .map((checkedValue) => checkedValue.interval) as [number, number][];\n  }\n\n  constructor(private settings: SettingsService) {\n    this.activeFiltersNumber$ = settings.filters$.pipe(\n      map((filters) => FilterTreksService.getNumberOfActiveFilters(filters))\n    );\n  }\n\n  public getFilteredTreks(\n    treks$: Observable\n  ): Observable {\n    return combineLatest(\n      treks$,\n      this.settings.filters$,\n      this.settings.order$\n    ).pipe(\n      map(([treks, filters, order]) => {\n        if (treks && filters && order) {\n          return FilterTreksService.sort(\n            FilterTreksService.filter(treks, filters),\n            order.type,\n            order.value\n          );\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterValue.html":{"url":"interfaces/FilterValue.html","title":"interface - FilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checked\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        interval\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterValueComponent.html":{"url":"components/FilterValueComponent.html","title":"component - FilterValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter-value/filter-value.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-value\n            \n\n            \n                styleUrls\n                ./filter-value.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-value.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueCheckChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter-value/filter-value.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         FilterValue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueCheckChanged($event: CustomEvent, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            CustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter-value',\n  templateUrl: './filter-value.component.html',\n  styleUrls: ['./filter-value.component.scss']\n})\nexport class FilterValueComponent implements OnInit {\n  @Input() value: FilterValue;\n  @Input() commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public valueCheckChanged($event: CustomEvent, value: FilterValue) {\n    this.valueChange.emit({ checked: $event.detail.checked, value: value });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ value.name }}\n  \n\n\n    \n\n    \n                \n                    ./filter-value.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ value.name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filters/filters.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Private\n                                filtersSubscription\n                            \n                            \n                                    Public\n                                nbTemporaryFiltersTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                temporaryFilters$\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilters\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                eraseFilters\n                            \n                            \n                                    Public\n                                handleFiltersState\n                            \n                            \n                                    Public\n                                handleSelect\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                trackByFilterId\n                            \n                            \n                                    Public\n                                trackFilters\n                            \n                            \n                                    Public\n                                unsubscribeFilters\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOnline\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, settings: SettingsService, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOnline\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            eraseFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eraseFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleSelect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSelect(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackByFilterId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackByFilterId(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilters(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribeFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Filter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filtersSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nbTemporaryFiltersTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temporaryFilters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { Filter, FilterValue, MinimalTreks } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss']\n})\nexport class FiltersComponent extends UnSubscribe implements OnInit, OnDestroy {\n  public temporaryFilters$ = new BehaviorSubject([]);\n  public nbTemporaryFiltersTreks = 0;\n  public commonSrc: string;\n  public filters: Filter[];\n  private filtersSubscription: Subscription;\n  @Input() public isOnline: boolean;\n\n  constructor(\n    private modalCtrl: ModalController,\n    public settings: SettingsService,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const treks$ = this.isOnline\n      ? this.onlineTreks.treks$\n      : this.offlineTreks.treks$;\n    this.commonSrc = this.isOnline\n      ? this.onlineTreks.getCommonImgSrc()\n      : this.offlineTreks.getCommonImgSrc();\n\n    this.filtersSubscription = this.settings.filters$.subscribe((filters) => {\n      this.filters = filters || [];\n      this.temporaryFilters$.next(filters || []);\n    });\n\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n\n      combineLatest(treks$, this.temporaryFilters$).subscribe(\n        ([treks, temporaryFilters]: [MinimalTreks | null, Filter[]]) => {\n          this.nbTemporaryFiltersTreks = !!treks\n            ? FilterTreksService.filter(treks, temporaryFilters).length\n            : 0;\n        }\n      )\n    );\n  }\n\n  public handleFiltersState(\n    checkState: boolean,\n    filter: Filter,\n    value: FilterValue\n  ): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    const temporaryFilter = temporaryFilters.find(\n      (tempFilter) => tempFilter.id === filter.id\n    ) as Filter;\n    const filterValue = temporaryFilter.values.find(\n      (tempValue) => tempValue.id === value.id\n    ) as FilterValue;\n    filterValue.checked = checkState;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public handleSelect(event: { filter: Filter }): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    let temporaryFilterIndex = temporaryFilters.findIndex(\n      (tempFilter) => tempFilter.id === event.filter.id\n    );\n    if (temporaryFilterIndex) {\n      temporaryFilters[temporaryFilterIndex] = event.filter;\n      this.temporaryFilters$.next(temporaryFilters);\n    }\n  }\n\n  public applyFilters(): void {\n    this.unsubscribeFilters();\n    this.settings.saveFiltersState(this.temporaryFilters$.getValue());\n    this.modalCtrl.dismiss(true);\n  }\n\n  public eraseFilters(): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    temporaryFilters.forEach((filter) => {\n      filter.values.forEach((value) => (value.checked = false));\n    });\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public trackFilters(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n\n  public unsubscribeFilters(): void {\n    if (this.filtersSubscription) {\n      this.filtersSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.unsubscribeFilters();\n  }\n\n  public trackByFilterId(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'filters.title' | translate | uppercase }}\n    \n      \n        {{ 'filters.erase' | translate }}\n      \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n    \n      \n        \n        \n      \n    \n  \n\n\n\n  \n    \n    filters.zeroresult\n    filters.oneresult\n     1\">\n      {{ 'filters.results' | translate: { nb: nbTemporaryFiltersTreks } }}\n    \n  \n\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n.loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n@media screen and (max-width: 540px) {\n  .min-font {\n    font-size: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'filters.title\\' | translate | uppercase }}                  {{ \\'filters.erase\\' | translate }}                                                                                filters.zeroresult    filters.oneresult     1\">      {{ \\'filters.results\\' | translate: { nb: nbTemporaryFiltersTreks } }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersComponentModule.html":{"url":"modules/FiltersComponentModule.html","title":"module - FiltersComponentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersComponentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersComponentModule\n\n\n\ncluster_FiltersComponentModule_imports\n\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\n\n\nFiltersComponentModule\n\nFiltersComponentModule\n\nFiltersComponentModule -->\n\nSharedFiltersModule->FiltersComponentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/filters/filters.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedFiltersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedFiltersModule } from '@app/shared/shared-filters.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedFiltersModule,\n    TranslateModule.forChild()\n  ]\n})\nexport class FiltersComponentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeolocateNotificationsComponent.html":{"url":"components/GeolocateNotificationsComponent.html","title":"component - GeolocateNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeolocateNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geolocate-notifications\n            \n\n            \n                styleUrls\n                ./geolocate-notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geolocate-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                clicklocalNotifications$\n                            \n                            \n                                currentPoisToNotify\n                            \n                            \n                                    Private\n                                currentPosition$\n                            \n                            \n                                    Public\n                                localNotifications\n                            \n                            \n                                notificationsModeIsActive\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeNotificationsMode\n                            \n                            \n                                checkToNotify\n                            \n                            \n                                disableGeolocationNotification\n                            \n                            \n                                enableGeolocationNotification\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentPersmissionsConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPois\n                            \n                            \n                                trekName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                presentPoiDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, localNotifications: LocalNotifications, alertController: AlertController, geolocate: GeolocateService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localNotifications\n                                                  \n                                                        \n                                                                    LocalNotifications\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPois\n                    \n                \n                \n                    \n                        Type :         Pois\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trekName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        presentPoiDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeNotificationsMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeNotificationsMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkToNotify\n                        \n                        \n                    \n                \n            \n            \n                \ncheckToNotify(fromCoordinates: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromCoordinates\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \ndisableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \nenableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPersmissionsConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPersmissionsConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clicklocalNotifications$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPoisToNotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalNotifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsModeIsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Subscription } from 'rxjs';\nimport { point } from '@turf/helpers';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst distance = require('@turf/distance').default;\n\nimport { Pois } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-geolocate-notifications',\n  templateUrl: './geolocate-notifications.component.html',\n  styleUrls: ['./geolocate-notifications.component.scss']\n})\nexport class GeolocateNotificationsComponent\n  implements OnInit, OnChanges, OnDestroy {\n  currentPoisToNotify: any[] = [];\n  clicklocalNotifications$: Subscription;\n  notificationsModeIsActive = false;\n  @Input() currentPois: Pois;\n  @Input() trekName: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  private currentPosition$: Subscription;\n\n  constructor(\n    public platform: Platform,\n    public localNotifications: LocalNotifications,\n    public alertController: AlertController,\n    private geolocate: GeolocateService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.localNotifications.setDefaults({\n        icon: 'res://icon',\n        smallIcon: 'res://ic_stat_panorama',\n        vibrate: true,\n        foreground: true,\n        priority: 2,\n        silent: false,\n        launch: true,\n        lockscreen: true\n      });\n      this.clicklocalNotifications$ = this.localNotifications\n        .on('click')\n        .subscribe(({ data }) => {\n          const poi = this.currentPois.features.find(\n            (feature) => feature.properties.id === data.id\n          );\n          this.presentPoiDetails.emit(poi);\n        });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    if (changesCurrentPois.currentValue && !changesCurrentPois.previousValue) {\n      if (this.currentPois && Array.isArray(this.currentPois.features)) {\n        this.currentPoisToNotify = this.currentPois.features.map((feature) => ({\n          id: feature.properties.id,\n          name: feature.properties.name,\n          coordinates: feature.geometry.coordinates\n        }));\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.clicklocalNotifications$) {\n      this.clicklocalNotifications$.unsubscribe();\n    }\n\n    if (this.currentPosition$) {\n      this.disableGeolocationNotification();\n    }\n  }\n\n  async changeNotificationsMode() {\n    if (!this.notificationsModeIsActive) {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        if (!(await this.geolocate.checkAuthorization())) {\n          this.presentPersmissionsConfirm();\n        } else {\n          if (!(await this.geolocate.checkIfTrackerIsRunning())) {\n            this.geolocate.startTracking(this.trekName);\n          }\n          if (await this.localNotifications.hasPermission()) {\n            this.notificationsModeIsActive = true;\n            this.enableGeolocationNotification();\n          } else {\n            await this.localNotifications.requestPermission();\n          }\n        }\n      } else {\n        this.geolocate.startTracking(this.trekName);\n        this.notificationsModeIsActive = true;\n        this.enableGeolocationNotification();\n      }\n    } else {\n      this.notificationsModeIsActive = false;\n      this.disableGeolocationNotification();\n    }\n  }\n\n  enableGeolocationNotification(): void {\n    this.currentPosition$ = this.geolocate.currentPosition$.subscribe(\n      (coordinates) => this.checkToNotify(coordinates)\n    );\n  }\n\n  disableGeolocationNotification(): void {\n    this.currentPosition$.unsubscribe();\n  }\n\n  checkToNotify(fromCoordinates: number[]) {\n    if (\n      fromCoordinates &&\n      this.currentPoisToNotify &&\n      this.currentPoisToNotify.length > 0\n    ) {\n      const kmToNotify = environment.metersToNotify / 1000;\n      const options = {\n        units: 'kilometers'\n      };\n      const from = point(fromCoordinates);\n      const notifiedIndex = this.currentPoisToNotify.findIndex(\n        (feature) =>\n          distance(from, point(feature.coordinates), options)  {\n            this.localNotifications.schedule({\n              id: this.currentPoisToNotify[notifiedIndex].id,\n              title: trad,\n              text: this.currentPoisToNotify[notifiedIndex].name,\n              data: {\n                id: this.currentPoisToNotify[notifiedIndex].id\n              },\n              icon: 'res://icon',\n              smallIcon: 'res://ic_stat_panorama',\n              vibrate: true,\n              foreground: true,\n              priority: 2,\n              silent: false,\n              launch: true,\n              lockscreen: true\n            });\n\n            this.currentPoisToNotify.splice(notifiedIndex, 1);\n          });\n        } else {\n          console.log('Poi', this.currentPoisToNotify[notifiedIndex]);\n        }\n      }\n    }\n  }\n\n  async presentPersmissionsConfirm() {\n    await this.translate\n      .get([\n        'geolocate.askLocatePermission',\n        'geolocate.cancel',\n        'geolocate.open'\n      ])\n      .subscribe(async (trad) => {\n        const persmissionsConfirm = await this.alertController.create({\n          header: 'Permissions',\n          message: trad['geolocate.askLocatePermission'],\n          buttons: [\n            {\n              text: trad['geolocate.cancel'],\n              role: 'cancel',\n              cssClass: 'secondary'\n            },\n            {\n              text: trad['geolocate.open'],\n              handler: () => {\n                this.geolocate.showAppSettings();\n              }\n            }\n          ]\n        });\n\n        await persmissionsConfirm.present();\n      });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ 'mapTrek.enableNotification' | translate }}\n\n\n\n  \n  {{ 'mapTrek.disableNotification' | translate }}\n\n\n    \n\n    \n                \n                    ./geolocate-notifications.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'mapTrek.enableNotification\\' | translate }}    {{ \\'mapTrek.disableNotification\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeolocateNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocateService.html":{"url":"injectables/GeolocateService.html","title":"injectable - GeolocateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeolocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocate/geolocate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundGeolocation\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuthorization\n                            \n                            \n                                    Async\n                                checkIfTrackerIsRunning\n                            \n                            \n                                    Async\n                                getCurrentPosition\n                            \n                            \n                                showAppSettings\n                            \n                            \n                                showLocationSettings\n                            \n                            \n                                    Async\n                                startTracking\n                            \n                            \n                                stopTracking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backgroundGeolocation: BackgroundGeolocation, platform: Platform, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAuthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkIfTrackerIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfTrackerIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCurrentPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAppSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowAppSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking(notificationText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \nstopTracking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backgroundGeolocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BackgroundGeolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  BackgroundGeolocation,\n  BackgroundGeolocationConfig,\n  BackgroundGeolocationEvents,\n  BackgroundGeolocationLocationProvider\n} from '@ionic-native/background-geolocation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocateService {\n  public currentPosition$: BehaviorSubject = new BehaviorSubject(null);\n\n  constructor(\n    public backgroundGeolocation: BackgroundGeolocation,\n    public platform: Platform,\n    private translate: TranslateService\n  ) {}\n\n  async checkAuthorization() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.authorization !== 0;\n  }\n\n  async checkIfTrackerIsRunning() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.isRunning;\n  }\n\n  async startTracking(notificationText: string) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const notificationTitle: string = await this.translate\n        .get('geolocate.notificationTitle')\n        .toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider:\n          BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        maxLocations: 10,\n        startForeground: true,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText,\n        ...environment.backgroundGeolocation\n      };\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.start)\n        .subscribe(async () => {\n          try {\n            const startLocation = await this.backgroundGeolocation.getCurrentLocation(\n              {\n                timeout: 3000,\n                maximumAge: 10000,\n                enableHighAccuracy: true\n              }\n            );\n            this.currentPosition$.next([\n              startLocation.longitude,\n              startLocation.latitude\n            ]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.location)\n        .subscribe((location) => {\n          try {\n            this.currentPosition$.next([location.longitude, location.latitude]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation.start();\n    } else {\n      // fake position for browser dev\n      this.currentPosition$.next([0.705824, 44.410157]);\n    }\n  }\n\n  stopTracking() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.backgroundGeolocation.stop();\n    }\n\n    this.currentPosition$.next([0, 0]);\n  }\n\n  showAppSettings() {\n    this.backgroundGeolocation.showAppSettings();\n  }\n\n  showLocationSettings() {\n    this.backgroundGeolocation.showLocationSettings();\n  }\n\n  async getCurrentPosition() {\n    let startLocation;\n    try {\n      startLocation = await this.backgroundGeolocation.getCurrentLocation({\n        timeout: 3000,\n        maximumAge: 60000,\n        enableHighAccuracy: true\n      });\n    } catch (error) {\n      startLocation = null;\n    } finally {\n      this.currentPosition$.next(\n        startLocation\n          ? [startLocation.longitude, startLocation.latitude]\n          : startLocation\n      );\n\n      return startLocation;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrek.html":{"url":"interfaces/HydratedTrek.html","title":"interface - HydratedTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         HydratedTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrekProperties.html":{"url":"interfaces/HydratedTrekProperties.html","title":"interface - HydratedTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        accessibilities\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        ambiance\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        children\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        networks\n                                \n                                \n                                        parking_location\n                                \n                                \n                                        pictures\n                                \n                                \n                                            Optional\n                                        points_reference\n                                \n                                \n                                        practice\n                                \n                                \n                                        profile\n                                \n                                \n                                        route\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                                \n                                        themes\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ambiance\n                                    \n                                \n                                \n                                    \n                                        ambiance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Treks\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking_location\n                                    \n                                \n                                \n                                    \n                                        parking_location:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points_reference\n                                    \n                                \n                                \n                                    \n                                        points_reference:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationDesk.html":{"url":"interfaces/InformationDesk.html","title":"interface - InformationDesk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationDesk\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        municipality\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        photo_url\n                                \n                                \n                                        picture\n                                \n                                \n                                        postal_code\n                                \n                                \n                                        street\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        municipality\n                                    \n                                \n                                \n                                    \n                                        municipality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url\n                                    \n                                \n                                \n                                    \n                                        photo_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postal_code\n                                    \n                                \n                                \n                                    \n                                        postal_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number | Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number | Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationDeskDetailsComponent.html":{"url":"components/InformationDeskDetailsComponent.html","title":"component - InformationDeskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationDeskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-desk-details/information-desk-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-desk-details\n            \n\n            \n                styleUrls\n                ./information-desk-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-desk-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                informationDesk\n                            \n                            \n                                informationDeskPicture\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDesk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationDesk\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDeskPicture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { InformationDesk } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-information-desk-details',\n  templateUrl: './information-desk-details.component.html',\n  styleUrls: ['./information-desk-details.component.scss']\n})\nexport class InformationDeskDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  informationDesk: InformationDesk;\n  informationDeskPicture = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.informationDesk = this.navParams.get('informationDesk');\n    if (this.informationDesk && this.informationDesk.picture) {\n      this.informationDeskPicture = `${this.baseUrl}${this.informationDesk.picture}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ informationDesk.name }}\n  \n\n\n\n  \n    \n    \n      \n      \n      \n        {{ informationDesk.postal_code }} {{ informationDesk.municipality }}\n      \n      \n        \n          {{ 'trek.details.informationDesk.website' | translate }}\n        \n        -  Email  -\n        {{\n          informationDesk.phone\n        }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./information-desk-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ informationDesk.name }}                                      {{ informationDesk.postal_code }} {{ informationDesk.municipality }}                              {{ \\'trek.details.informationDesk.website\\' | translate }}                -  Email  -        {{          informationDesk.phone        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationDeskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationIntro.html":{"url":"interfaces/InformationIntro.html","title":"interface - InformationIntro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationIntro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationItem.html":{"url":"interfaces/InformationItem.html","title":"interface - InformationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        external_url\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        external_url\n                                    \n                                \n                                \n                                    \n                                        external_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntervalFilter.html":{"url":"interfaces/IntervalFilter.html","title":"interface - IntervalFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntervalFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayersVisibilityComponent.html":{"url":"components/LayersVisibilityComponent.html","title":"component - LayersVisibilityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayersVisibilityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layers-visibility/layers-visibility.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layers-visibility\n            \n\n            \n                styleUrls\n                ./layers-visibility.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layers-visibility.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLayerVisibility\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                layerVisibilityChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layerVisibilityChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerVisibilityChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLayerVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-layers-visibility',\n  templateUrl: './layers-visibility.component.html',\n  styleUrls: ['./layers-visibility.component.scss']\n})\nexport class LayersVisibilityComponent {\n  changeLayerVisibility: any;\n  layers: any;\n\n  constructor(private navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.changeLayerVisibility = this.navParams.get('changeLayerVisibility');\n    this.layers = this.navParams.get('layers');\n  }\n\n  public layerVisibilityChange(event: any) {\n    this.changeLayerVisibility(event.detail.checked, event.detail.value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ layer.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./layers-visibility.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ layer.name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayersVisibilityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Private\n                                loaderStatus$\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                progressBarWidth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        condition\n                    \n                \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressBarWidth\n                    \n                \n                \n                    \n                        Default value : '50%'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { delay } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnDestroy {\n  @Input() public progressBarWidth = '50%';\n  @Input() public condition: boolean | null = null;\n  public loaderStatus: Boolean;\n  private loaderStatus$: Subscription;\n\n  constructor(public loading: LoadingService) {\n    // add delay to prevent expression has changed after it was checked\n    this.loaderStatus$ = this.loading.status\n      .pipe(delay(0))\n      .subscribe((status) => (this.loaderStatus = status));\n  }\n\n  ngOnDestroy(): void {\n    this.loaderStatus$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader-container {\n  height: calc(100% - 57px);\n  width: 100%;\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public status = new BehaviorSubject(false); // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds\n      .pipe(map((ids: string[]) => ids.length > 0))\n      .subscribe((isLoading: boolean) => {\n        if (isLoading !== service.status.getValue()) {\n          service.status.next(isLoading);\n        }\n      });\n    this.status.subscribe();\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds\n        .getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(\n      map((loadingIds: string[]) => {\n        return loadingIds.indexOf(id) >= 0;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next.handle(req).pipe(\n      tap((event: HttpEvent) => {\n        if (event instanceof HttpResponse) {\n          this.loading.finish(loadingId);\n        }\n      }),\n      catchError((error: any) => {\n        this.loading.finish(loadingId);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadingIds\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                begin\n                            \n                            \n                                finish\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            begin\n                        \n                        \n                    \n                \n            \n            \n                \nbegin(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finish\n                        \n                        \n                    \n                \n            \n            \n                \nfinish(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoading\n                        \n                        \n                    \n                \n            \n            \n                \nisLoading(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public status = new BehaviorSubject(false); // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds\n      .pipe(map((ids: string[]) => ids.length > 0))\n      .subscribe((isLoading: boolean) => {\n        if (isLoading !== service.status.getValue()) {\n          service.status.next(isLoading);\n        }\n      });\n    this.status.subscribe();\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds\n        .getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(\n      map((loadingIds: string[]) => {\n        return loadingIds.indexOf(id) >= 0;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next.handle(req).pipe(\n      tap((event: HttpEvent) => {\n        if (event instanceof HttpResponse) {\n          this.loading.finish(loadingId);\n        }\n      }),\n      catchError((error: any) => {\n        this.loading.finish(loadingId);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/LowerRoundPipe.html":{"url":"pipes/LowerRoundPipe.html","title":"pipe - LowerRoundPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  LowerRoundPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/lower-round.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        lowerRound\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/lower-round.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'lowerRound' })\nexport class LowerRoundPipe implements PipeTransform {\n  transform(value: number): number {\n    return Math.floor(value);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTreksVizComponent.html":{"url":"components/MapTreksVizComponent.html","title":"component - MapTreksVizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapTreksVizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-treks-viz\n            \n\n            \n                styleUrls\n                ./map-treks-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-treks-viz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                mapViz\n                            \n                            \n                                    Private\n                                markerPosition\n                            \n                            \n                                    Private\n                                practices\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSourcesLayersEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                    Public\n                                    Async\n                                flyToUserLocation\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                presentConfirmFeatures\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                dataSettings\n                            \n                            \n                                filteredTreks\n                            \n                            \n                                mapConfig\n                            \n                            \n                                offline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(screenOrientation: ScreenOrientation, platform: Platform, geolocate: GeolocateService, modalController: ModalController, settings: SettingsService, alertController: AlertController, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        screenOrientation\n                                                  \n                                                        \n                                                                    ScreenOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSettings\n                    \n                \n                \n                    \n                        Type :         DataSetting[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredTreks\n                    \n                \n                \n                    \n                        Type :     MinimalTrek[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Type :     MapboxOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mapIsLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateToTrek\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSourcesLayersEvents\n                        \n                        \n                    \n                \n            \n            \n                \naddSourcesLayersEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            flyToUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flyToUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:423\n                \n            \n\n\n            \n                \n                    Fly to user location else fitbounds to trek\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirmFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmFeatures(features: Feature[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:383\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                            Feature[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapViz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mapViz', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Marker | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            practices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataSetting\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport {\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  Map,\n  MapboxOptions,\n  Marker\n} from 'mapbox-gl';\nimport { Observable } from 'rxjs';\nimport { SelectTrekComponent } from '@app/components/select-trek/select-trek.component';\n\nimport { MinimalTrek, DataSetting, Trek } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '../abstract/unsubscribe';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { throttle } from 'lodash';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-treks-viz',\n  templateUrl: './map-treks-viz.component.html',\n  styleUrls: ['./map-treks-viz.component.scss']\n})\nexport class MapTreksVizComponent extends UnSubscribe\n  implements OnChanges, OnDestroy {\n  private map: Map;\n  private markerPosition: Marker | undefined;\n  private practices: DataSetting;\n\n  @ViewChild('mapViz', { static: false }) mapViz: any;\n\n  @Input() public filteredTreks: MinimalTrek[] | null = null;\n  @Input() public mapConfig: MapboxOptions;\n  @Input() public dataSettings: DataSetting[];\n  @Input() public commonSrc: string;\n  @Input() public offline: Boolean;\n\n  @Output() public navigateToTrek = new EventEmitter();\n  @Output() public mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private geolocate: GeolocateService,\n    private modalController: ModalController,\n    private settings: SettingsService,\n    private alertController: AlertController,\n    private translate: TranslateService\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n\n    this.flyToUserLocation = throttle(this.flyToUserLocation, 3000);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTreks: SimpleChange = changes.filteredTreks;\n    if (\n      changesCurrentTreks.currentValue &&\n      !changesCurrentTreks.previousValue\n    ) {\n      this.createMap();\n    } else {\n      if (this.map) {\n        const treksSource = this.map.getSource('treks-points') as GeoJSONSource;\n        if (treksSource && this.filteredTreks) {\n          treksSource.setData({\n            type: 'FeatureCollection',\n            features: this.filteredTreks\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap() {\n    if (this.mapConfig && this.mapConfig.style && this.filteredTreks) {\n      if (\n        this.offline &&\n        (this.platform.is('ios') || this.platform.is('android'))\n      ) {\n        (this.mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.commonSrc +\n          (environment.offlineMapConfig.style as any).sources[\n            'tiles-background'\n          ].tiles[0];\n      }\n\n      const coordinates: number[][] = this.filteredTreks.map(\n        (feature) => feature.geometry.coordinates\n      );\n      const bounds: any = coordinates.reduce(\n        (bounds, coord) => bounds.extend(coord),\n        new mapboxgl.LngLatBounds(coordinates[0], coordinates[0])\n      );\n\n      this.map = new mapboxgl.Map({\n        ...this.mapConfig,\n        container: 'map-treks'\n      });\n\n      this.map.fitBounds(bounds, environment.map.TreksfitBoundsOptions);\n\n      this.map.addControl(\n        new mapboxgl.NavigationControl({ showCompass: false }),\n        'top-left'\n      );\n\n      this.map.addControl(\n        new mapboxgl.ScaleControl({\n          unit: 'metric'\n        })\n      );\n\n      this.map.addControl(\n        new mapboxgl.AttributionControl({\n          compact: false,\n          customAttribution: environment.map.attributionText\n        })\n      );\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize ...\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          })\n        );\n      }\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create(\n          (observer: any) => {\n            const practices: DataSetting | undefined = this.dataSettings.find(\n              (data) => data.id === 'practice'\n            );\n            if (practices) {\n              this.practices = practices;\n              practices.values.forEach((practice, index: number) => {\n                this.map.loadImage(\n                  `${this.commonSrc}${practice.pictogram}`,\n                  (error: any, image: any) => {\n                    this.map.addImage(practice.id.toString(), image);\n                    if (index + 1 === practices.values.length) {\n                      observer.complete();\n                    }\n                  }\n                );\n              });\n            }\n          }\n        );\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$.subscribe((coordinates) => {\n            if (coordinates) {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates as any);\n              } else {\n                const el = document.createElement('div');\n                el.className = 'pulse';\n                this.markerPosition = new mapboxgl.Marker({\n                  element: el\n                }).setLngLat(coordinates);\n                if (this.markerPosition) {\n                  this.markerPosition.addTo(this.map);\n                }\n              }\n            } else {\n              if (this.markerPosition) {\n                this.markerPosition.remove();\n                this.markerPosition = undefined;\n              }\n            }\n          }),\n          loadImages.subscribe({\n            complete: () => {\n              this.addSourcesLayersEvents();\n              this.geolocate.startTracking('');\n            }\n          })\n        );\n      });\n    }\n  }\n\n  addSourcesLayersEvents() {\n    this.map.addSource('treks-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: this.filteredTreks\n      },\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50\n    } as GeoJSONSourceRaw);\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: 'assets/map/zone/zone.geojson'\n    });\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: {\n        'text-color': '#fff'\n      },\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 16,\n        'text-offset': [0, 0.1]\n      }\n    });\n\n    const circleColorExpression: any[] = [];\n    circleColorExpression.push('match');\n    circleColorExpression.push(['get', 'practice']);\n    this.practices.values.forEach((practice) => {\n      circleColorExpression.push(practice.id);\n      circleColorExpression.push(practice.color);\n    });\n    circleColorExpression.push(environment.map.clusterPaint['circle-color']);\n\n    this.map.addLayer({\n      id: 'trek-point',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        ...environment.map.clusterPaint,\n        'circle-color': circleColorExpression as any,\n        'circle-radius': 16\n      }\n    });\n\n    this.map.addLayer({\n      id: 'trek-point-icon',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['get', 'practice'],\n        'icon-size': environment.map.globalMapIconSize\n      }\n    });\n\n    this.map.on('click', 'clusters-circle', (e) => {\n      const features = this.map.queryRenderedFeatures(e.point, {\n        layers: ['clusters-circle']\n      });\n\n      const featureProperties = features[0].properties;\n      if (!!featureProperties) {\n        const clusterId = featureProperties.cluster_id;\n\n        if (this.map.getZoom() === this.mapConfig.maxZoom) {\n          // no more zoom, display features inside cluster\n          (this.map.getSource(\n            'treks-points'\n          ) as GeoJSONSource).getClusterLeaves(\n            featureProperties.cluster_id,\n            Infinity,\n            0,\n            (\n              err: any,\n              featuresInCluster: Feature[]\n            ) => {\n              if (err) {\n                throw err;\n              }\n              this.presentConfirmFeatures(featuresInCluster as Feature[]);\n            }\n          );\n        } else {\n          // zoom to next cluster expansion\n          (this.map.getSource(\n            'treks-points'\n          ) as GeoJSONSource).getClusterExpansionZoom(\n            clusterId,\n            (err: any, zoom: number) => {\n              if (err) {\n                return;\n              }\n              const coordinates = (features[0].geometry as Point).coordinates;\n              this.map.easeTo({\n                center: [coordinates[0], coordinates[1]],\n                zoom: zoom\n              });\n            }\n          );\n        }\n      }\n    });\n\n    this.map.on('mouseenter', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.map.on('click', 'trek-point', (e) => {\n      const feature = this.map.queryRenderedFeatures(e.point, {\n        layers: ['trek-point']\n      })[0];\n      if (!!feature.properties) {\n        this.navigateToTrek.emit(feature.properties.id);\n      }\n    });\n\n    this.map.on('mouseenter', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n\n    this.map.on('mouseleave', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    // map instance for cypress test\n    this.mapViz.nativeElement.mapInstance = this.map;\n\n    this.mapIsLoaded.emit(true);\n  }\n\n  async presentConfirmFeatures(\n    features: Feature[]\n  ) {\n    const radioTreks: {\n      id: number;\n      name: string;\n      imgPractice: { src: string; color: string | undefined };\n    }[] = [];\n\n    features.forEach((feature) => {\n      const hydratedTrek = this.settings.getHydratedTrek(feature as Trek);\n      const trek = {\n        id: hydratedTrek.properties.id,\n        name: hydratedTrek.properties.name,\n        imgPractice: {\n          src: this.commonSrc + hydratedTrek.properties.practice.pictogram,\n          color: hydratedTrek.properties.practice.color\n        }\n      };\n      radioTreks.push(trek);\n    });\n\n    const modal = await this.modalController.create({\n      component: SelectTrekComponent,\n      componentProps: { radioTreks },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.selectedTrekId) {\n      this.navigateToTrek.emit(data.selectedTrekId);\n    }\n  }\n\n  /**\n   * Fly to user location else fitbounds to trek\n   */\n  public async flyToUserLocation() {\n    const userLocation = await this.geolocate.getCurrentPosition();\n    if (userLocation) {\n      this.map.flyTo({\n        center: [userLocation.longitude, userLocation.latitude],\n        animate: false,\n        zoom: environment.trekZoom.zoom\n      });\n    } else {\n      const errorTranslation: any = await this.translate\n        .get('geolocate.error')\n        .toPromise();\n      // Inform user about problem\n      const alertLocation = await this.alertController.create({\n        header: errorTranslation['header'],\n        subHeader: errorTranslation['subHeader'],\n        message: errorTranslation['message'],\n        buttons: [errorTranslation['confirmButton']]\n      });\n\n      await alertLocation.present();\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./map-treks-viz.component.scss\n                \n                .options-button-container {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 24px;\n  top: 24px;\n  z-index: 5;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapTreksVizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrek.html":{"url":"interfaces/MinimalTrek.html","title":"interface - MinimalTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         MinimalTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MinimalTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrekProperties.html":{"url":"interfaces/MinimalTrekProperties.html","title":"interface - MinimalTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessibilities\n                                \n                                \n                                        departure\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        first_picture\n                                \n                                \n                                        id\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        practice\n                                \n                                \n                                        themes\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_picture\n                                    \n                                \n                                \n                                    \n                                        first_picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTreks.html":{"url":"interfaces/MinimalTreks.html","title":"interface - MinimalTreks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTreks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     MinimalTrek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreInformationsService.html":{"url":"injectables/MoreInformationsService.html","title":"injectable - MoreInformationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MoreInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/more-informations/more-informations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMoreItemById\n                            \n                            \n                                    Public\n                                getMoreItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: CacheService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItemById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItemById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InformationIntro, InformationItem } from '@app/interfaces/interfaces';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoreInformationsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  constructor(\n    private cache: CacheService,\n    private translate: TranslateService\n  ) {}\n\n  public getMoreItems(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.cache.get(\n      `${this.apiUrl}/flatpages.json`,\n      httpOptions\n    );\n  }\n\n  public getMoreItemById(id: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.cache.get(\n      `${this.apiUrl}/flatpages/${id}.json`,\n      httpOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoreItemPage.html":{"url":"components/MoreItemPage.html","title":"component - MoreItemPage","body":"\n                   \n\n\n\n\n\n  Components\n  MoreItemPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more-item/more-item.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more-item\n            \n\n            \n                styleUrls\n                ./more-item.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more-item.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectionError\n                            \n                            \n                                moreItem\n                            \n                            \n                                moreItemId\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationItem } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more-item',\n  templateUrl: './more-item.page.html',\n  styleUrls: ['./more-item.page.scss']\n})\nexport class MoreItemPage extends UnSubscribe implements OnInit, OnDestroy {\n  moreItem: InformationItem;\n  moreItemId: number;\n  connectionError = false;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data) => {\n        const item = data['item'] as (InformationItem | 'connectionError');\n        if (item === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreItem = item;\n        }\n      })\n    );\n  }\n\n  refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ moreItem.title }}\n  \n\n\n  \n  \n  \n  \n    \n      \n        \n          \n          \n             {{ moreItem.external_url }} \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more-item.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ moreItem.title }}                                                             {{ moreItem.external_url }}                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoreItemPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoreItemPageModule.html":{"url":"modules/MoreItemPageModule.html","title":"module - MoreItemPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MoreItemPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more-item/more-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoreItemPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { MoreItemPage } from './more-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoreItemPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      item: MoreItemResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MoreItemPage]\n})\nexport class MoreItemPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreItemResolver.html":{"url":"guards/MoreItemResolver.html","title":"guard - MoreItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more-item.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more-item.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/more-item.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { InformationItem } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreItemResolver\n  implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const moreItemId = +(route.paramMap.get('moreItemId'));\n    return this.more.getMoreItemById(moreItemId).pipe(\n      tap((item) => {\n        if (\n          (this.platform.is('ios') || this.platform.is('android')) &&\n          environment.useFirebase\n        ) {\n          this.firebaseAnalytics.setCurrentScreen(\n            `${(route.component as any).name} ${item.title}`\n          );\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorePage.html":{"url":"components/MorePage.html","title":"component - MorePage","body":"\n                   \n\n\n\n\n\n  Components\n  MorePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more\n            \n\n            \n                styleUrls\n                ./more.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                connectionError\n                            \n                            \n                                moreInformationsIntro\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreInformationsIntro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationIntro[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '@env/environment';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationIntro } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.page.html',\n  styleUrls: ['./more.page.scss']\n})\nexport class MorePage extends UnSubscribe implements OnInit {\n  moreInformationsIntro: InformationIntro[];\n  connectionError = false;\n  public appName: string = environment.appName;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const items: InformationIntro[] | 'connectionError' = data.items;\n        if (items === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreInformationsIntro = items;\n        }\n      })\n    );\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n\n\n\n  \n  \n  \n\n  \n    \n      \n        \n          {{ moreInformationIntro.title }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}                                       {{ moreInformationIntro.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MorePageModule.html":{"url":"modules/MorePageModule.html","title":"module - MorePageModule","body":"\n                   \n\n\n\n\n    Modules\n    MorePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_MorePageModule_imports\n\n\n\n\nMorePage\n\nMorePage\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MorePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MorePage } from './more.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    component: MorePage,\n    resolve: {\n      items: MoreResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MorePage]\n})\nexport class MorePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreResolver.html":{"url":"guards/MoreResolver.html","title":"guard - MoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { InformationIntro } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreResolver\n  implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve = (route: ActivatedRouteSnapshot) =>\n    this.more.getMoreItems().pipe(\n      tap(() => {\n        if (\n          (this.platform.is('ios') || this.platform.is('android')) &&\n          environment.useFirebase\n        ) {\n          this.firebaseAnalytics.setCurrentScreen(\n            `${(route.component as any).name}`\n          );\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineTreksService.html":{"url":"injectables/OnlineTreksService.html","title":"injectable - OnlineTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OnlineTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online-treks/online-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                filteredTreks$\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreksError$\n                            \n                            \n                                    Public\n                                treks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCommonImgSrc\n                            \n                            \n                                    Public\n                                getMapConfigForTrekById\n                            \n                            \n                                    Public\n                                getMinimalTrekById\n                            \n                            \n                                    Public\n                                getPoisForTrekById\n                            \n                            \n                                    Public\n                                getTouristicContentsForTrekById\n                            \n                            \n                                    Public\n                                getTouristicEventsForTrekById\n                            \n                            \n                                    Public\n                                getTrekById\n                            \n                            \n                                    Public\n                                getTrekDetailsUrl\n                            \n                            \n                                    Public\n                                getTrekImageSrc\n                            \n                            \n                                    Public\n                                getTrekMapUrl\n                            \n                            \n                                    Private\n                                getTreks\n                            \n                            \n                                    Public\n                                getTreksMapUrl\n                            \n                            \n                                    Public\n                                getTreksUrl\n                            \n                            \n                                    Public\n                                loadTreks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cache: CacheService, filterTreks: FilterTreksService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapConfigForTrekById(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinimalTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinimalTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoisForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicContentsForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicEventsForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekDetailsUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekMapUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreksError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents\n} from '@app/interfaces/interfaces';\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { environment } from '@env/environment';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnlineTreksService implements TreksService {\n  public offline = false;\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public onlineTreksError$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private cache: CacheService,\n    private filterTreks: FilterTreksService,\n    private translate: TranslateService\n  ) {\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n  }\n\n  public loadTreks() {\n    this.onlineTreksError$.next(null);\n    this.getTreks().subscribe(\n      (data) => {\n        this.treks$.next(data);\n      },\n      (error) => {\n        this.onlineTreksError$.next(error);\n      }\n    );\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      return (\n        environment.onlineBaseUrl +\n        (!!picture ? picture.url : trek.properties.first_picture.url)\n      );\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    return `${environment.onlineBaseUrl}`;\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks';\n  }\n\n  public getTrekDetailsUrl(trekId: number, parentId?: number): string {\n    return !parentId\n      ? `/app/tabs/treks/trek-details/${trekId}`\n      : `/app/tabs/treks/trek-details/${parentId}/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number, parentId?: number): string {\n    return !parentId ? `/app/map/${trekId}` : `/app/map/${parentId}/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n\n    return this.http.get(\n      `${this.apiUrl}/treks.geojson`,\n      httpOptions\n    );\n  }\n\n  public getTrekById(trekId: number, parentId?: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/treks/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/trek.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getPoisForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/pois/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/pois.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getTouristicContentsForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_contents/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/touristic_contents.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getTouristicEventsForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_events/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/touristic_events.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getMinimalTrekById(trekId: number): MinimalTrek | undefined {\n    const trek = this.treks$.getValue();\n    if (!!trek) {\n      return trek.features.find((feature) => feature.properties.id === trekId);\n    } else {\n      return undefined;\n    }\n  }\n\n  public getMapConfigForTrekById(trek: Trek): MapboxOptions {\n    const mapConfig: MapboxOptions = {\n      ...cloneDeep(environment.onlineMapConfig),\n      zoom: environment.trekZoom.zoom\n    };\n    (mapConfig as any).trekBounds = trek.bbox as [\n      number,\n      number,\n      number,\n      number\n    ];\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        legend\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiComponent.html":{"url":"components/PoiComponent.html","title":"component - PoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi/poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi\n            \n\n            \n                styleUrls\n                ./poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                offline\n                            \n                            \n                                poi\n                            \n                            \n                                typePois\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi/poi.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        poi\n                    \n                \n                \n                    \n                        Type :         Poi\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typePois\n                    \n                \n                \n                    \n                        Type :         DataSetting | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi/poi.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Picture, Poi, Trek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-poi',\n  templateUrl: './poi.component.html',\n  styleUrls: ['./poi.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoiComponent implements OnChanges {\n  @Input() public poi: Poi;\n  @Input() public offline = false;\n  @Input() public commonSrc: string;\n  @Input() public typePois: DataSetting | undefined;\n\n  public baseUrl = environment.onlineBaseUrl;\n  public picture: Picture | null = null;\n  public typeImgSrc: string | null = null;\n\n  constructor(\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.poi) {\n      if (this.typePois && this.poi.properties.type) {\n        const currentTypePoi = this.typePois.values.find(\n          (typePoi) => typePoi.id === this.poi.properties.type\n        );\n        if (currentTypePoi) {\n          this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n        }\n      }\n\n      if (this.poi.properties.pictures.length > 0) {\n        this.picture = this.poi.properties.pictures[0];\n        if (this.offline) {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.offlineTreks.getTrekImageSrc(\n              {} as Trek,\n              this.poi.properties.pictures[0]\n            )\n          };\n        } else {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.onlineTreks.getTrekImageSrc(\n              {} as Trek,\n              this.poi.properties.pictures[0]\n            )\n          };\n        }\n      } else {\n        this.picture = null;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ picture!.legend }}\n      ({{ picture!.author }})\n    \n  \n  \n    \n      \n      \n        {{ poi.properties.name }}\n      \n    \n  \n  \n    \n      \n        \n      \n    \n\n    \n      \n        Information pratiques\n        \n      \n    \n\n    \n      \n        Contact\n        \n        \n          \n            {{ poi.properties.email }}\n          \n        \n        \n           {{ poi.properties.website }} \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi.component.scss\n                \n                .card-header-container {\n  align-items: flex-end;\n  display: flex;\n  .img-header {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ picture!.legend }}      ({{ picture!.author }})                                {{ poi.properties.name }}                                                            Information pratiques                                    Contact                                      {{ poi.properties.email }}                                     {{ poi.properties.website }}                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiDetailsComponent.html":{"url":"components/PoiDetailsComponent.html","title":"component - PoiDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi-details/poi-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi-details\n            \n\n            \n                styleUrls\n                ./poi-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                poi\n                            \n                            \n                                    Public\n                                poiImg\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                settingsSub\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams, settings: SettingsService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poiImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { Poi, Picture, Trek } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-poi-details',\n  templateUrl: './poi-details.component.html',\n  styleUrls: ['./poi-details.component.scss']\n})\nexport class PoiDetailsComponent {\n  public offline = false;\n  public baseUrl = environment.onlineBaseUrl;\n  public poi: Poi;\n  public poiImg = '';\n  public typeImgSrc: string | null = null;\n  public settingsSub: Subscription;\n  public picture: Picture | null = null;\n  public commonSrc: string;\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navParams: NavParams,\n    public settings: SettingsService,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService\n  ) {}\n\n  ionViewWillEnter() {\n    this.poi = this.navParams.get('poi');\n    this.offline = this.navParams.get('offline');\n    this.commonSrc = this.navParams.get('commonSrc');\n\n    if (\n      this.poi &&\n      this.poi.properties &&\n      this.poi.properties.pictures &&\n      this.poi.properties.pictures.length > 0 &&\n      this.poi.properties.pictures[0].url\n    ) {\n      this.picture = this.poi.properties.pictures[0];\n      if (this.offline) {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.offlineTreks.getTrekImageSrc(\n            {} as Trek,\n            this.poi.properties.pictures[0]\n          )\n        };\n      } else {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.onlineTreks.getTrekImageSrc(\n            {} as Trek,\n            this.poi.properties.pictures[0]\n          )\n        };\n      }\n    } else {\n      this.picture = null;\n    }\n\n    this.settingsSub = this.settings.data$.subscribe((settings) => {\n      if (settings) {\n        const typePois = settings.find((setting) => setting.id === 'poi_types');\n\n        if (typePois && this.poi.properties.type) {\n          const currentTypePoi = typePois.values.find(\n            (typePoi) => typePoi.id === this.poi.properties.type\n          );\n          if (currentTypePoi) {\n            this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n          }\n        }\n      }\n    });\n  }\n\n  close(): void {\n    this.settingsSub.unsubscribe();\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ poi.properties.name }}\n  \n\n\n\n  \n    \n      \n      \n        \n        {{ poi.properties.pictures[0]?.legend }}\n        ({{ poi.properties.pictures[0].author }})\n      \n    \n\n    \n      \n        \n          \n        \n      \n\n      \n        \n          trek.details.usefulInformation\n          \n        \n      \n\n      \n        \n          trek.details.contact\n          \n          \n            \n              {{ poi.properties.email }}\n            \n          \n          \n            \n              {{ poi.properties.website }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi-details.component.scss\n                \n                .card-legend {\n  align-items: flex-end;\n  display: flex;\n  .img-legend {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ poi.properties.name }}                                    {{ poi.properties.pictures[0]?.legend }}        ({{ poi.properties.pictures[0].author }})                                                                            trek.details.usefulInformation                                                trek.details.contact                                              {{ poi.properties.email }}                                                          {{ poi.properties.website }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pois.html":{"url":"interfaces/Pois.html","title":"interface - Pois","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pois\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressComponent.html":{"url":"components/ProgressComponent.html","title":"component - ProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/progress/progress.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress\n            \n\n            \n                styleUrls\n                ./progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentProgress\n                            \n                            \n                                    Private\n                                currentProgress$\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/progress/progress.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentProgress$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  changeDetection: ChangeDetectionStrategy.Default,\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss']\n})\nexport class ProgressComponent {\n  public currentProgress: number;\n  private currentProgress$: Subscription;\n\n  constructor(\n    public offlineTreks: OfflineTreksService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(\n      (val) => {\n        this.currentProgress = val;\n        this.ref.detectChanges();\n      }\n    );\n  }\n\n  ionViewWillLeave(): void {\n    this.currentProgress$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ 'trek.downloadAlert.loading' | translate }}\n        \n        \n          \n          \n        \n      \n      \n        \n          \n          \n            {{ 'trek.downloadAlert.storage' | translate }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./progress.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'trek.downloadAlert.loading\\' | translate }}                                                                                                {{ \\'trek.downloadAlert.storage\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Property.html":{"url":"interfaces/Property.html","title":"interface - Property","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Property\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SearchTreksService\n                \n            \n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentMaxTreks\n                            \n                            \n                                    Public\n                                currentSearchValue\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Private\n                                treks\n                            \n                            \n                                    Public\n                                treksByStep\n                            \n                            \n                                    Public\n                                viewIsLoad\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                expandTreks\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                navigateToTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Public\n                                trackTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, searchTreks: SearchTreksService, navParams: NavParams, platform: Platform, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchTreks\n                                                  \n                                                        \n                                                                        SearchTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            expandTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    expandTreks(infiniteScroll: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infiniteScroll\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackTrek(index: number, element: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentMaxTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentSearchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTreks | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksByStep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewIsLoad\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\n\nimport { MinimalTrek, MinimalTreks, Trek } from '@app/interfaces/interfaces';\nimport { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\n\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchTreksService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent extends UnSubscribe implements OnInit {\n  public filteredTreks: MinimalTrek[] = [];\n  public currentSearchValue: string;\n  public viewIsLoad = false;\n  private treks: MinimalTreks | null = null;\n  public treksByStep = 30;\n  public currentMaxTreks = 30;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private searchTreks: SearchTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n    private ref: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const isOnline = this.navParams.get('isOnline');\n    const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      treksTool.treks$.subscribe((treks) => {\n        this.treks = treks;\n        if (this.treks) {\n          this.filteredTreks = this.searchTreks.search(this.treks.features, '');\n        }\n        this.viewIsLoad = true;\n        this.ref.detectChanges();\n      })\n    );\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public search(searchValue: string): void {\n    this.currentSearchValue = searchValue;\n    if (this.treks) {\n      this.filteredTreks = this.searchTreks.search(\n        this.treks.features,\n        searchValue\n      );\n    } else {\n      this.filteredTreks = [];\n    }\n  }\n\n  public navigateToTrek(id: number) {\n    this.modalCtrl.dismiss(id);\n  }\n\n  public trackTrek(index: number, element: Trek): number | null {\n    return element ? element.properties.id : null;\n  }\n\n  public expandTreks(infiniteScroll: any) {\n    if (this.currentMaxTreks  this.filteredTreks.length) {\n        this.currentMaxTreks = this.filteredTreks.length;\n      } else {\n        this.currentMaxTreks += this.treksByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'search.title' | translate | uppercase }}\n  \n  \n    \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n     0; else userMsg\">\n      \n        {{ trek.properties.name }}\n        \n      \n    \n    \n      \n        \n          \n            {{ 'search.noResult' | translate }}\n          \n        \n      \n    \n    \n       \n    \n  \n\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'search.title\\' | translate | uppercase }}                                       0; else userMsg\">              {{ trek.properties.name }}                                                          {{ \\'search.noResult\\' | translate }}                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchTreksService.html":{"url":"injectables/SearchTreksService.html","title":"injectable - SearchTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-treks/search-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(treks: MinimalTrek[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search-treks/search-treks.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MinimalTrek } from '@app/interfaces/interfaces';\nimport { deburr } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchTreksService {\n  public search(treks: MinimalTrek[], searchValue: string): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n    if (!!!searchValue) {\n      return treks.sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n    }\n    searchValue = searchValue.toLowerCase();\n    return treks\n      .filter((trek) => {\n        return deburr(trek.properties.name.toLowerCase()).includes(searchValue);\n      })\n      .sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectFilterComponent.html":{"url":"components/SelectFilterComponent.html","title":"component - SelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/select-filter/select-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-filter\n            \n\n            \n                styleUrls\n                ./select-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentMaxFilterValues\n                            \n                            \n                                filterValuesByStep\n                            \n                            \n                                selectedItems\n                            \n                            \n                                temporaryFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                expandFilterValues\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                trackFilterValues\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/select-filter/select-filter.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            expandFilterValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    expandFilterValues(infiniteScroll: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infiniteScroll\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilterValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilterValues(index: number, element: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentMaxFilterValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterValuesByStep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temporaryFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Filter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-select-filter',\n  templateUrl: './select-filter.component.html',\n  styleUrls: ['./select-filter.component.scss']\n})\nexport class SelectFilterComponent implements OnInit {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  selectedItems: any[];\n  currentMaxFilterValues = 20;\n  filterValuesByStep = 20;\n  temporaryFilter: Filter;\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {}\n\n  ionViewDidEnter(): void {\n    this.temporaryFilter = this.filter;\n  }\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ temporaryFilter: this.temporaryFilter });\n  }\n\n  public expandFilterValues(infiniteScroll: any): void {\n    if (this.currentMaxFilterValues \n        this.filter.values.length\n      ) {\n        this.currentMaxFilterValues = this.filter.values.length;\n      } else {\n        this.currentMaxFilterValues += this.filterValuesByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n\n  public trackFilterValues(index: number, element: FilterValue): number | null {\n    return element ? element.id : null;\n  }\n\n  public valueChanged(event: { checked: boolean; value: FilterValue }): void {\n    const filterValue = this.temporaryFilter.values.find(\n      (value) => value.id === event.value.id\n    );\n    if (filterValue) {\n      filterValue.checked = event.checked;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ filter.values.length + ' ' + filter.name }}\n  \n\n\n\n  \n  \n\n  \n     \n  \n\n\n\n  \n    \n      \n        {{ 'filters.cancelButton' | translate }}\n      \n      \n        {{ 'filters.confirmButton' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select-filter.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.values.length + \\' \\' + filter.name }}                                   {{ \\'filters.cancelButton\\' | translate }}                    {{ \\'filters.confirmButton\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectPoiComponent.html":{"url":"components/SelectPoiComponent.html","title":"component - SelectPoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectPoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/select-poi/select-poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-poi\n            \n\n            \n                styleUrls\n                ./select-poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select-poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedPoiId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                selectedPoiChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                radioPois\n                            \n                            \n                                themePois\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/select-poi/select-poi.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        radioPois\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-poi/select-poi.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        themePois\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-poi/select-poi.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectedPoiChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedPoiChange(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPoiId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-poi/select-poi.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-select-poi',\n  templateUrl: './select-poi.component.html',\n  styleUrls: ['./select-poi.component.scss']\n})\nexport class SelectPoiComponent implements OnInit {\n  @Input() public themePois: string;\n  @Input() public radioPois: {\n    id: number;\n    name: string;\n    imgPoi: { src: string; color: string | undefined };\n  }[];\n  selectedPoiId: number;\n\n  constructor(private modalController: ModalController) {}\n\n  ngOnInit() {}\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ selectedPoiId: this.selectedPoiId });\n  }\n\n  public selectedPoiChange(evt: any): void {\n    this.selectedPoiId = evt.detail.value;\n  }\n}\n\n    \n\n    \n        \n  \n     {{ themePois | translate }} \n  \n\n\n\n  \n    \n      \n        \n        \n        {{ poi.name }}\n      \n    \n  \n\n\n\n  \n    \n      \n        {{ 'mapTrek.poisAlert.cancelButton' | translate }}\n      \n      \n        {{ 'mapTrek.poisAlert.confirmButton' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select-poi.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ themePois | translate }}                                       {{ poi.name }}                                {{ \\'mapTrek.poisAlert.cancelButton\\' | translate }}                    {{ \\'mapTrek.poisAlert.confirmButton\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectPoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectTrekComponent.html":{"url":"components/SelectTrekComponent.html","title":"component - SelectTrekComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectTrekComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/select-trek/select-trek.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-trek\n            \n\n            \n                styleUrls\n                ./select-trek.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select-trek.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTrekId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                selectedTrekChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                radioTreks\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/select-trek/select-trek.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        radioTreks\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-trek/select-trek.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectedTrekChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedTrekChange(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTrekId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-trek/select-trek.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-select-trek',\n  templateUrl: './select-trek.component.html',\n  styleUrls: ['./select-trek.component.scss']\n})\nexport class SelectTrekComponent implements OnInit {\n  @Input() public radioTreks: {\n    id: number;\n    name: string;\n    imgPractice: { src: string; color: string | undefined };\n  }[];\n  selectedTrekId: number;\n\n  constructor(private modalController: ModalController) {}\n\n  ngOnInit() {}\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ selectedTrekId: this.selectedTrekId });\n  }\n\n  public selectedTrekChange(evt: any): void {\n    this.selectedTrekId = evt.detail.value;\n  }\n}\n\n    \n\n    \n        \n  \n     {{ 'mapTreks.treksAlert.title' | translate }} \n  \n\n\n\n  \n    \n      \n        {{ 'mapTreks.treksAlert.informUser' | translate }}\n      \n\n      \n        \n        \n        {{ trek.name }}\n      \n    \n  \n\n\n\n  \n    \n      \n        {{ 'mapTreks.treksAlert.cancelButton' | translate }}\n      \n      \n        {{ 'mapTreks.treksAlert.confirmButton' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select-trek.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ \\'mapTreks.treksAlert.title\\' | translate }}                       {{ \\'mapTreks.treksAlert.informUser\\' | translate }}                                    {{ trek.name }}                                {{ \\'mapTreks.treksAlert.cancelButton\\' | translate }}                    {{ \\'mapTreks.treksAlert.confirmButton\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectTrekComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         DataSetting[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataSetting[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Public\n                                filters$\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                order$\n                            \n                            \n                                    Public\n                                storage\n                            \n                            \n                                    Public\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFilters\n                            \n                            \n                                    Public\n                                getHydratedTrek\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getTouristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                getValueForPropertyById\n                            \n                            \n                                    Public\n                                loadSettings\n                            \n                            \n                                    Public\n                                resetFilters\n                            \n                            \n                                    Public\n                                saveFiltersState\n                            \n                            \n                                    Public\n                                saveOrderState\n                            \n                            \n                                    Private\n                                    Async\n                                setOfflineSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: Storage, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings/settings.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilters(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHydratedTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHydratedTrek(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HydratedTrek\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicCategoriesWithFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicCategoriesWithFeatures(touristicContents: TouristicContents)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touristicContents\n                                    \n                                                TouristicContents\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TouristicCategoryWithFeatures[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueForPropertyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueForPropertyById(propertyName: string, id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Property | InformationDesk | TouristicCategorie | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFiltersState(filters: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveOrderState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrderState(order: Order, geolocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    geolocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setOfflineSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOfflineSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            order$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({\n    type: 'default',\n    value: undefined\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([0, 0])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  Trek,\n  Filter,\n  Settings,\n  DataSetting,\n  HydratedTrek,\n  Property,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  TouristicCategorie,\n  Order\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public filters$ = new BehaviorSubject(null);\n  public order$ = new BehaviorSubject({\n    type: 'default',\n    value: undefined\n  });\n  // User location, used for ordering treks by distance\n  public userLocation$ = new BehaviorSubject([0, 0]);\n  public data$ = new BehaviorSubject(null);\n\n  constructor(\n    public http: HttpClient,\n    public storage: Storage,\n    private translate: TranslateService\n  ) {}\n\n  public loadSettings() {\n    this.setOfflineSettings();\n\n    this.getSettings().subscribe(async (settings) => {\n      await this.storage.set('settings', JSON.stringify(settings));\n      this.filters$.next(this.getFilters(settings));\n      this.data$.next(settings.data);\n    });\n  }\n\n  private async setOfflineSettings() {\n    const defaultSettings = JSON.parse(await this.storage.get(`settings`));\n    if (defaultSettings) {\n      this.filters$.next(this.getFilters(defaultSettings));\n      this.data$.next(defaultSettings.data);\n    }\n  }\n\n  private getFilters(settings: Settings) {\n    const filters: Filter[] = [];\n    if (settings && settings.filters && settings.data) {\n      settings.filters.forEach((filter) => {\n        const currentDataSetting = settings.data.find(\n          (data: DataSetting) => data.id === filter.id\n        );\n        if (currentDataSetting) {\n          filter = { ...filter, ...currentDataSetting, values: [] };\n          filter.values = currentDataSetting.values.map((value) => ({\n            ...value,\n            checked: false\n          }));\n          filters.push(filter);\n        }\n      });\n    }\n\n    return filters;\n  }\n\n  public getSettings(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.http.get(this.apiUrl + '/settings.json', httpOptions);\n  }\n\n  public saveFiltersState(filters: Filter[]): void {\n    this.filters$.next(filters);\n  }\n\n  public saveOrderState(order: Order, geolocation?: number[]): void {\n    this.order$.next({ type: order, value: geolocation });\n  }\n\n  public resetFilters(): void {\n    let filters = cloneDeep(this.filters$.getValue());\n    if (!!filters) {\n      filters.forEach((filter) => {\n        filter.values.forEach((value) => (value.checked = false));\n      });\n    } else {\n      filters = [];\n    }\n    this.saveFiltersState(filters);\n  }\n\n  private getValueForPropertyById(\n    propertyName: string,\n    id: number | string\n  ): Property | InformationDesk | TouristicCategorie | string {\n    const dataSetting = this.data$.getValue();\n\n    if (dataSetting) {\n      const property = dataSetting.find((data) => data.id === propertyName);\n      if (property) {\n        const propertyValue = property.values.find((value) => value.id === id);\n        if (propertyValue) {\n          return propertyValue;\n        } else {\n          return { id: -1, name: '' };\n        }\n      }\n    }\n\n    return { id: -1, name: '' };\n  }\n\n  public getHydratedTrek(trek: Trek): HydratedTrek {\n    const hydratedTrek: HydratedTrek = cloneDeep(trek) as any;\n\n    if (trek.properties.difficulty) {\n      hydratedTrek.properties.difficulty = this.getValueForPropertyById(\n        'difficulty',\n        trek.properties.difficulty\n      ) as Property;\n    }\n\n    if (trek.properties.practice) {\n      hydratedTrek.properties.practice = this.getValueForPropertyById(\n        'practice',\n        trek.properties.practice\n      ) as Property;\n    }\n\n    if (trek.properties.route) {\n      hydratedTrek.properties.route = this.getValueForPropertyById(\n        'route',\n        trek.properties.route\n      ) as Property;\n    }\n\n    if (trek.properties.departure_city) {\n      hydratedTrek.properties.departure_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.departure_city\n      ) as Property;\n    }\n\n    if (trek.properties.arrival_city) {\n      hydratedTrek.properties.arrival_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.arrival_city\n      ) as Property;\n    }\n\n    if (trek.properties.cities) {\n      hydratedTrek.properties.cities = trek.properties.cities.map(\n        (city) => this.getValueForPropertyById('cities', city) as Property\n      );\n    }\n\n    if (trek.properties.networks) {\n      hydratedTrek.properties.networks = trek.properties.networks.map(\n        (network) =>\n          this.getValueForPropertyById('networks', network) as Property\n      );\n    }\n\n    if (trek.properties.themes) {\n      hydratedTrek.properties.themes = trek.properties.themes.map(\n        (theme) => this.getValueForPropertyById('themes', theme) as Property\n      );\n    }\n\n    if (trek.properties.information_desks) {\n      hydratedTrek.properties.information_desks.forEach((information_desk) => {\n        information_desk.type = this.getValueForPropertyById(\n          'information_desk_types',\n          information_desk.type as number\n        ) as Property;\n      });\n    }\n\n    return hydratedTrek;\n  }\n\n  public getTouristicCategoriesWithFeatures(\n    touristicContents: TouristicContents\n  ): TouristicCategoryWithFeatures[] {\n    const touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[] = [];\n    if (touristicContents && Array.isArray(touristicContents.features)) {\n      const categories = touristicContents.features\n        .map((touristicContent) => touristicContent.properties.category)\n        .filter((v, i, a) => a.indexOf(v) === i);\n      categories.forEach((categoryId) => {\n        const category = this.getValueForPropertyById(\n          'touristiccontent_categories',\n          categoryId\n        ) as TouristicCategorie;\n        touristicCategoriesWithFeatures.push({\n          id: categoryId,\n          name: category ? category.name : '',\n          features: touristicContents.features.filter(\n            (touristicContent) =>\n              touristicContent.properties.category === categoryId\n          )\n        });\n      });\n    }\n\n    return touristicCategoriesWithFeatures;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedFiltersModule.html":{"url":"modules/SharedFiltersModule.html","title":"module - SharedFiltersModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedFiltersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedFiltersModule\n\n\n\ncluster_SharedFiltersModule_declarations\n\n\n\ncluster_SharedFiltersModule_exports\n\n\n\n\nFilterComponent\n\nFilterComponent\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\nSharedFiltersModule -->\n\nFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nSharedFiltersModule -->\n\nFilterValueComponent->SharedFiltersModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nSharedFiltersModule -->\n\nFiltersComponent->SharedFiltersModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSharedFiltersModule -->\n\nSearchComponent->SharedFiltersModule\n\n\n\n\n\nSelectFilterComponent\n\nSelectFilterComponent\n\nSharedFiltersModule -->\n\nSelectFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterComponent \n\nFilterComponent \n\nFilterComponent  -->\n\nSharedFiltersModule->FilterComponent \n\n\n\n\n\nFilterValueComponent \n\nFilterValueComponent \n\nFilterValueComponent  -->\n\nSharedFiltersModule->FilterValueComponent \n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nSharedFiltersModule->FiltersComponent \n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSharedFiltersModule->SearchComponent \n\n\n\n\n\nSelectFilterComponent \n\nSelectFilterComponent \n\nSelectFilterComponent  -->\n\nSharedFiltersModule->SelectFilterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-filters.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FiltersComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { FilterComponent } from '@app/components/filter/filter.component';\nimport { FilterValueComponent } from '@app/components/filter-value/filter-value.component';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SearchComponent } from '@app/components/search/search.component';\n\n@NgModule({\n  declarations: [\n    FiltersComponent,\n    FilterComponent,\n    FilterValueComponent,\n    SelectFilterComponent,\n    SearchComponent\n  ],\n  imports: [CommonModule, TranslateModule.forChild()],\n  entryComponents: [FiltersComponent, SelectFilterComponent],\n  exports: [\n    FiltersComponent,\n    FilterComponent,\n    FilterValueComponent,\n    SelectFilterComponent,\n    SearchComponent\n  ]\n})\nexport class SharedFiltersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { GeolocateNotificationsComponent } from '@app/components/geolocate-notifications/geolocate-notifications.component';\nimport { MapTrekVizComponent } from '@app/components/map-trek-viz/map-trek-viz.component';\nimport { MapTreksVizComponent } from '@app/components/map-treks-viz/map-treks-viz.component';\n\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [\n    MapTreksVizComponent,\n    MapTrekVizComponent,\n    GeolocateNotificationsComponent\n  ],\n  imports: [CommonModule, IonicModule, TranslateModule.forChild()],\n  exports: [\n    MapTreksVizComponent,\n    MapTrekVizComponent,\n    GeolocateNotificationsComponent\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedTreksModule.html":{"url":"modules/SharedTreksModule.html","title":"module - SharedTreksModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedTreksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PoiComponent } from '@app/components/poi/poi.component';\nimport { TrekCardComponent } from '@app/components/trek-card/trek-card.component';\nimport { CustomPipesModule } from './custom-pipes.module';\n\n@NgModule({\n  declarations: [PoiComponent, TrekCardComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule,\n    TranslateModule.forChild(),\n    CustomPipesModule\n  ],\n  exports: [PoiComponent, TrekCardComponent]\n})\nexport class SharedTreksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapsibleListComponent } from '@app/components/collapsible-list/collapsible-list.component';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectErrorComponent } from '@app/components/connect-error/connect-error.component';\nimport { LoaderComponent } from '@app/components/loader/loader.component';\n\n@NgModule({\n  declarations: [\n    CollapsibleListComponent,\n    ConnectErrorComponent,\n    LoaderComponent\n  ],\n  imports: [CommonModule, IonicModule, RouterModule],\n  exports: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent]\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tabs/tabs.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss']\n})\nexport class TabsPage {\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private location: Location\n  ) {\n    this.platform.backButton.subscribeWithPriority(9999, () => {\n      const url = this.router.url;\n      if (\n        url !== '/app/tabs/treks' &&\n        url !== '/app/tabs/treks-offline' &&\n        url !== '/app/tabs/more'\n      ) {\n        this.location.back();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'tabbar.treks' | translate }}\n    \n    \n      \n      {{ 'tabbar.offline' | translate }}\n    \n    \n      \n      {{ 'tabbar.more' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'tabbar.treks\\' | translate }}                    {{ \\'tabbar.offline\\' | translate }}                    {{ \\'tabbar.more\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MorePageModule\n                        \n                        \n                            SharedUiModule\n                        \n                        \n                            TabsPageRoutingModule\n                        \n                        \n                            TreksPageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\nimport { TabsPageRoutingModule } from './tabs.routing.module';\nimport { TreksPageModule } from '../treks/treks.module';\nimport { MorePageModule } from '../more/more.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n    TreksPageModule,\n    MorePageModule,\n    TranslateModule.forChild(),\n    SharedUiModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { TreksPage } from '../treks/treks.page';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'treks',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule'\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { isStage: true }\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule'\n          }\n        ]\n      },\n      {\n        path: 'treks-offline',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            data: { offline: true },\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true }\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true, isStage: true }\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n            data: { offline: true }\n          }\n        ]\n      },\n      {\n        path: 'more',\n        children: [\n          {\n            path: '',\n            loadChildren: '../more/more.module#MorePageModule'\n          },\n          {\n            path: ':moreItemId',\n            loadChildren:\n              '../more/more-item/more-item.module#MoreItemPageModule'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/app/tabs/treks',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategorie.html":{"url":"interfaces/TouristicCategorie.html","title":"interface - TouristicCategorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategoryWithFeatures.html":{"url":"interfaces/TouristicCategoryWithFeatures.html","title":"interface - TouristicCategoryWithFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategoryWithFeatures\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContent.html":{"url":"interfaces/TouristicContent.html","title":"interface - TouristicContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContents.html":{"url":"interfaces/TouristicContents.html","title":"interface - TouristicContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvent.html":{"url":"interfaces/TouristicEvent.html","title":"interface - TouristicEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvents.html":{"url":"interfaces/TouristicEvents.html","title":"interface - TouristicEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trek.html":{"url":"interfaces/Trek.html","title":"interface - Trek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Trek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         TrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekCardComponent.html":{"url":"components/TrekCardComponent.html","title":"component - TrekCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrekCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trek-card/trek-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-card\n            \n\n            \n                styleUrls\n                ./trek-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hydratedTrek\n                            \n                            \n                                    Public\n                                imgPracticeSrc\n                            \n                            \n                                    Public\n                                imgSrc\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                routerLink\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickDeleteConfirm\n                            \n                            \n                                    Private\n                                    Async\n                                deleteTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                presentDeleteConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isStage\n                            \n                            \n                                numStage\n                            \n                            \n                                offline\n                            \n                            \n                                parentId\n                            \n                            \n                                showAllData\n                            \n                            \n                                trek\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, loadingController: LoadingController, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, settings: SettingsService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trek-card/trek-card.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isStage\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        numStage\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trek\n                    \n                \n                \n                    \n                        Type :         Trek\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickDeleteConfirm($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            deleteTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTrek()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            presentDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentDeleteConfirm(isAlert?: boolean, alertMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAlert\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alertMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hydratedTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HydratedTrek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgPracticeSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routerLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Trek, HydratedTrek, Picture } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trek-card',\n  templateUrl: './trek-card.component.html',\n  styleUrls: ['./trek-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrekCardComponent implements OnInit {\n  @Input() public trek: Trek;\n  @Input() public offline = false;\n  @Input() public showAllData: boolean;\n  @Input() public isStage = false;\n  @Input() public numStage = 0;\n  @Input() public parentId: number | undefined = undefined;\n\n  public hydratedTrek: HydratedTrek;\n  public imgSrc: string;\n  public routerLink: string;\n  public imgPracticeSrc: string;\n\n  constructor(\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    public settings: SettingsService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.hydratedTrek = this.settings.getHydratedTrek(this.trek);\n    if (this.offline) {\n      this.imgSrc = this.offlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.offlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram\n          } as Picture\n        );\n      }\n    } else {\n      this.imgSrc = this.onlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.onlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram\n          } as Picture\n        );\n      }\n    }\n\n    if (this.isStage) {\n      this.routerLink = `/app/tabs/treks${\n        this.offline ? '-offline' : ''\n      }/trek-details/${this.parentId}/${this.trek.properties.id}`;\n    } else {\n      this.routerLink = `/app/tabs/treks${\n        this.offline ? '-offline' : ''\n      }/trek-details/${this.trek.properties.id}`;\n    }\n  }\n\n  public clickDeleteConfirm($event: Event) {\n    $event.stopPropagation();\n    this.presentDeleteConfirm();\n  }\n\n  private async deleteTrek() {\n    const translationTrekCard = await this.translate\n      .get('trekCard')\n      .toPromise();\n\n    const loader = await this.loadingController.create({\n      message: translationTrekCard.deletionInProgress\n    });\n    await loader.present();\n\n    this.offlineTreks\n      .removeTrek(\n        this.isStage && this.parentId ? this.parentId : this.trek.properties.id,\n        true\n      )\n      .subscribe(\n        () => {},\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(\n            true,\n            translationTrekCard.errorWhileDeleting\n          );\n        },\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(true, translationTrekCard.trekIsDelete);\n        }\n      );\n  }\n\n  private async presentDeleteConfirm(isAlert?: boolean, alertMsg?: string) {\n    const translationTrekCard = await this.translate\n      .get('trekCard')\n      .toPromise();\n    const deleteConfirm = await this.alertController.create({\n      header: translationTrekCard.deleteTitle,\n      message: isAlert ? alertMsg : translationTrekCard.askDelete,\n      buttons: isAlert\n        ? [translationTrekCard.confirmButton]\n        : [\n            {\n              text: translationTrekCard.cancelButton,\n              role: 'cancel',\n              cssClass: 'secondary'\n            },\n            {\n              text: translationTrekCard.deleteLabel,\n              handler: () => {\n                this.deleteTrek();\n              }\n            }\n          ]\n    });\n\n    await deleteConfirm.present();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n  \n    \n    \n      \n        {{\n          isStage\n            ? ('trek.details.stage' | translate) + ' ' + numStage + ' - '\n            : ''\n        }}\n        {{ hydratedTrek.properties?.name }}\n      \n    \n  \n  \n    \n      \n        {{ 'treks.departure' | translate }}\n        \n          {{ hydratedTrek.properties.departure_city?.name }}\n        \n        \n          {{ hydratedTrek.properties.departure }}\n        \n      \n      \n        \n          \n        \n        \n          {{ hydratedTrek.properties.difficulty?.name }}\n        \n        \n          {{\n            hydratedTrek.properties.duration | lowerRound | number: '1.0-0'\n          }}h 0\"\n            >{{\n              60 * (hydratedTrek.properties.duration % 1) | number: '1.0-0'\n            }}min\n        \n        = 24 && showAllData\"\n        >\n          {{ hydratedTrek.properties.duration / 24 | number: '1.0-0' }}j\n        \n        \n          {{ hydratedTrek.properties.length / 1000 | number: '1.1-1':'fr' }} km\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-card.component.scss\n                \n                .trash-button {\n  position: absolute;\n  z-index: 10;\n  top: 12px;\n  right: 12px;\n}\n\n.extand-card {\n  height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.picto-practice {\n  max-width: 24px;\n  max-height: 24px;\n}\n\n.extra-content-card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.minimize-title {\n  font-size: 15px;\n}\n\n.minimize-padding-bottom {\n  padding-bottom: 8px;\n}\n\n.no-padding-top {\n  padding-top: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{          isStage            ? (\\'trek.details.stage\\' | translate) + \\' \\' + numStage + \\' - \\'            : \\'\\'        }}        {{ hydratedTrek.properties?.name }}                                {{ \\'treks.departure\\' | translate }}                  {{ hydratedTrek.properties.departure_city?.name }}                          {{ hydratedTrek.properties.departure }}                                                                {{ hydratedTrek.properties.difficulty?.name }}                          {{            hydratedTrek.properties.duration | lowerRound | number: \\'1.0-0\\'          }}h 0\"            >{{              60 * (hydratedTrek.properties.duration % 1) | number: \\'1.0-0\\'            }}min                = 24 && showAllData\"        >          {{ hydratedTrek.properties.duration / 24 | number: \\'1.0-0\\' }}j                          {{ hydratedTrek.properties.length / 1000 | number: \\'1.1-1\\':\\'fr\\' }} km                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekContext.html":{"url":"interfaces/TrekContext.html","title":"interface - TrekContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonSrc\n                                \n                                \n                                        isStage\n                                \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        originalTrek\n                                \n                                \n                                        parentTrek\n                                \n                                \n                                        pois\n                                \n                                \n                                        touristicCategoriesWithFeatures\n                                \n                                \n                                        touristicContents\n                                \n                                \n                                        touristicEvents\n                                \n                                \n                                        trek\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonSrc\n                                    \n                                \n                                \n                                    \n                                        commonSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStage\n                                    \n                                \n                                \n                                    \n                                        isStage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     MapboxOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MapboxOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalTrek\n                                    \n                                \n                                \n                                    \n                                        originalTrek:         Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTrek\n                                    \n                                \n                                \n                                    \n                                        parentTrek:         Trek | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Pois\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pois\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicCategoriesWithFeatures\n                                    \n                                \n                                \n                                    \n                                        touristicCategoriesWithFeatures:         TouristicCategoryWithFeatures[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicCategoryWithFeatures[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicContents\n                                    \n                                \n                                \n                                    \n                                        touristicContents:         TouristicContents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicEvents\n                                    \n                                \n                                \n                                    \n                                        touristicEvents:         TouristicEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trek\n                                    \n                                \n                                \n                                    \n                                        trek:         HydratedTrek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TrekContextResolver.html":{"url":"guards/TrekContextResolver.html","title":"guard - TrekContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TrekContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/trek.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, router: Router, settingsService: SettingsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/trek.resolver.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/trek.resolver.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Pois,\n  Trek,\n  HydratedTrek,\n  TrekContext,\n  TreksService,\n  TouristicContents,\n  TouristicEvents\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class TrekContextResolver\n  implements Resolve {\n  constructor(\n    private loading: LoadingService,\n    private offlineTreks: OfflineTreksService,\n    private onlineTreks: OnlineTreksService,\n    private router: Router,\n    private settingsService: SettingsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const offline = !!route.data['offline'];\n    const isStage = !!route.data['isStage'];\n    const trekId = +(route.paramMap.get('trekId'));\n    const stageId = +(route.paramMap.get('stageId'));\n    const currentTrekId = isStage ? stageId : trekId;\n    const parentId: number | undefined = isStage ? trekId : undefined;\n\n    const treksService: TreksService = offline\n      ? this.offlineTreks\n      : this.onlineTreks;\n\n    return forkJoin(\n      treksService.getTrekById(currentTrekId, parentId),\n      treksService.getPoisForTrekById(currentTrekId, parentId),\n      treksService.getTouristicContentsForTrekById(currentTrekId, parentId),\n      treksService.getTouristicEventsForTrekById(currentTrekId, parentId),\n      isStage && parentId ? treksService.getTrekById(parentId) : of(null)\n    ).pipe(\n      map(\n        ([trek, pois, touristicContents, touristicEvents, parentTrek]: [\n          Trek | null,\n          Pois,\n          TouristicContents,\n          TouristicEvents,\n          Trek | null\n        ]): TrekContext | null => {\n          if (trek === null) {\n            this.router.navigate(['/']);\n            console.error('No trek found: ', currentTrekId);\n            return null;\n          } else {\n            const mapConfig: MapboxOptions = treksService.getMapConfigForTrekById(\n              trek,\n              offline\n            );\n            const hydratedTrek: HydratedTrek = this.settingsService.getHydratedTrek(\n              trek\n            );\n            const commonSrc = treksService.getCommonImgSrc();\n            const touristicCategoriesWithFeatures = this.settingsService.getTouristicCategoriesWithFeatures(\n              touristicContents\n            );\n\n            if (\n              (this.platform.is('ios') || this.platform.is('android')) &&\n              environment.useFirebase\n            ) {\n              this.firebaseAnalytics.setCurrentScreen(\n                `${(route.component as any).name}  ${trek.properties.name}`\n              );\n            }\n\n            // get parent trek to display trek name\n            // trek stage\n            // trek previous\n            // trek next\n\n            return {\n              treksTool: treksService,\n              offline: offline,\n              originalTrek: trek,\n              trek: hydratedTrek,\n              pois,\n              touristicContents,\n              touristicCategoriesWithFeatures,\n              touristicEvents,\n              mapConfig,\n              commonSrc,\n              isStage,\n              parentTrek\n            };\n          }\n        }\n      ),\n      catchError((error: HttpErrorResponse) => {\n        this.loading.finish(); // there are two requests. finish loading if one fails\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekDetailsPageModule.html":{"url":"modules/TrekDetailsPageModule.html","title":"module - TrekDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekDetailsPageModule_imports\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-details/trek-details.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TrekDetailsPage } from './trek-details.page';\nimport { CustomPipesModule } from '@app/shared/custom-pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    },\n    component: TrekDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedTreksModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n    CustomPipesModule\n  ],\n  declarations: [TrekDetailsPage]\n})\nexport class TrekDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekMapPage.html":{"url":"components/TrekMapPage.html","title":"component - TrekMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrekMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/trek-map/trek-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-map\n            \n\n            \n                styleUrls\n                ./trek-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                connectionError\n                            \n                            \n                                    Public\n                                currentPois\n                            \n                            \n                                    Public\n                                currentTrek\n                            \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                modalPoiDetails\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                touristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                trekUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                    Public\n                                navigateToChildren\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                presentInformationDeskDetails\n                            \n                            \n                                    Public\n                                    Async\n                                presentPoiDetails\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, modalController: ModalController, route: ActivatedRoute, router: Router, settings: SettingsService, platform: Platform, popoverCtrl: PopoverController, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/trek-map/trek-map.page.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToChildren\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToChildren(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInformationDeskDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInformationDeskDetails(informationDesk: InformationDesk)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    informationDesk\n                                    \n                                                InformationDesk\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentPoiDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPoiDetails(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPois\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pois\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HydratedTrek | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalPoiDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLIonModalElement | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicCategoryWithFeatures[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trekUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ModalController, Platform, PopoverController } from '@ionic/angular';\n\nimport { MapboxOptions } from 'mapbox-gl';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport {\n  HydratedTrek,\n  Poi,\n  Pois,\n  TrekContext,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TreksService\n} from '@app/interfaces/interfaces';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-trek-map',\n  templateUrl: './trek-map.page.html',\n  styleUrls: ['./trek-map.page.scss']\n})\nexport class TrekMapPage extends UnSubscribe implements OnDestroy {\n  public currentTrek: HydratedTrek | null = null;\n  public currentPois: Pois;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public loader = true;\n  public trekUrl = '';\n  public connectionError = false;\n  public modalPoiDetails: HTMLIonModalElement | null;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public offline = false;\n  private treksTool: TreksService;\n\n  constructor(\n    private loading: LoadingService,\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public settings: SettingsService,\n    private platform: Platform,\n    private popoverCtrl: PopoverController,\n    private location: Location\n  ) {\n    super();\n  }\n\n  ionViewDidEnter(): void {\n    this.loading.begin('trek-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data): void => {\n        const context: TrekContext | 'connectionError' = data.context;\n        if (context === 'connectionError') {\n          this.connectionError = true;\n          this.loading.finish('trek-map'); // if there is a connection error, map won't be loaded\n        } else {\n          this.connectionError = false;\n          this.offline = context.offline;\n          this.currentTrek = context.trek;\n          this.currentPois = context.pois;\n          this.touristicCategoriesWithFeatures =\n            context.touristicCategoriesWithFeatures;\n          this.mapConfig = context.mapConfig;\n          this.treksTool = context.treksTool;\n          this.commonSrc = context.treksTool.getCommonImgSrc();\n          this.trekUrl = context.treksTool.getTrekDetailsUrl(\n            (this.currentTrek as any).properties.id\n          );\n        }\n      })\n    );\n\n    if (this.platform.is('android')) {\n      this.subscriptions$$.push(\n        this.platform.backButton.subscribeWithPriority(99999, async () => {\n          // close popover\n          try {\n            const popover = await this.popoverCtrl.getTop();\n            if (popover) {\n              popover.dismiss();\n              return;\n            }\n\n            const modal = await this.modalController.getTop();\n            if (modal) {\n              modal.dismiss();\n              return;\n            }\n\n            this.location.back();\n          } catch (error) {}\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  public async presentPoiDetails(poi: Poi): Promise {\n    if (this.modalPoiDetails) {\n      await this.modalPoiDetails.dismiss();\n    }\n\n    this.modalPoiDetails = await this.modalController.create({\n      component: PoiDetailsComponent,\n      componentProps: { poi, offline: this.offline, commonSrc: this.commonSrc },\n      cssClass: 'full-size'\n    });\n\n    this.modalPoiDetails.onDidDismiss().then(() => {\n      this.modalPoiDetails = null;\n    });\n\n    return await this.modalPoiDetails.present();\n  }\n\n  public async presentInformationDeskDetails(\n    informationDesk: InformationDesk\n  ): Promise {\n    const modal = await this.modalController.create({\n      component: InformationDeskDetailsComponent,\n      componentProps: { informationDesk }\n    });\n    return await modal.present();\n  }\n\n  public mapIsLoaded(event: Event): void {\n    this.loading.finish('trek-map');\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n  public navigateToChildren(id: number) {\n    if (this.currentTrek) {\n      this.router.navigate([\n        this.treksTool.getTrekDetailsUrl(id, this.currentTrek.properties.id)\n      ]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ currentTrek!.properties.name }}\n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-map.page.scss\n                \n                .bottom-container {\n  z-index: 8;\n  position: absolute;\n  bottom: 0;\n  padding: 0px 7px 5px 7px;\n  width: 100%;\n}\n\nion-header {\n  .custom-title {\n    padding-left: 20px;\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: 0.0125em;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ currentTrek!.properties.name }}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekMapPageModule.html":{"url":"modules/TrekMapPageModule.html","title":"module - TrekMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TrekMapPageModule_imports\n\n\n\n\nSelectPoiComponent\n\nSelectPoiComponent\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSelectPoiComponent->TrekMapPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-map/trek-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SelectPoiComponent\n                        \n                        \n                            TrekMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TrekMapPage } from './trek-map.page';\nimport { SelectPoiComponent } from '@app/components/select-poi/select-poi.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrekMapPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [TrekMapPage, SelectPoiComponent]\n})\nexport class TrekMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekProperties.html":{"url":"interfaces/TrekProperties.html","title":"interface - TrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MinimalTrekProperties\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        children\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        duration\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        networks\n                                \n                                \n                                        pictures\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Treks\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Treks.html":{"url":"interfaces/Treks.html","title":"interface - Treks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Treks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Trek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksContext.html":{"url":"interfaces/TreksContext.html","title":"interface - TreksContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TreksContextResolver.html":{"url":"guards/TreksContextResolver.html","title":"guard - TreksContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TreksContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/treks.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/treks.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/treks.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nimport { TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\n@Injectable()\nexport class TreksContextResolver implements Resolve {\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline\n      ? this.offlineTreks\n      : this.onlineTreks;\n    const mapConfig =\n      offline && (this.platform.is('ios') || this.platform.is('android'))\n        ? environment.offlineMapConfig\n        : environment.onlineMapConfig;\n\n    if (\n      (this.platform.is('ios') || this.platform.is('android')) &&\n      environment.useFirebase\n    ) {\n      this.firebaseAnalytics.setCurrentScreen(\n        `${(route.component as any).name}`\n      );\n    }\n\n    return of({\n      treksTool: treksService,\n      offline: offline,\n      mapConfig\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksMapPage.html":{"url":"components/TreksMapPage.html","title":"component - TreksMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TreksMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/treks-map/treks-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                FilterTreksService\n                \n            \n\n\n            \n                selector\n                app-treks-map\n            \n\n            \n                styleUrls\n                ./treks-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Public\n                                isInView\n                            \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Private\n                                mergeFiltersTreks$\n                            \n                            \n                                    Public\n                                noNetwork\n                            \n                            \n                                    Public\n                                numberOfActiveFilters\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                treksUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ionViewDidLeave\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentFilters\n                            \n                            \n                                    Public\n                                    Async\n                                presentSearch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, filterTreks: FilterTreksService, modalController: ModalController, onlineTreks: OnlineTreksService, router: Router, route: ActivatedRoute, settings: SettingsService, network: Network, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/treks-map/treks-map.page.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(loaded: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loaded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInView\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeFiltersTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberOfActiveFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { environment } from '@env/environment';\nimport { unsubscribe, UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport {\n  MinimalTrek,\n  TreksContext,\n  TreksService\n} from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, mergeMap, first, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-treks-map',\n  templateUrl: './treks-map.page.html',\n  styleUrls: ['./treks-map.page.scss'],\n  providers: [FilterTreksService]\n})\nexport class TreksMapPage extends UnSubscribe implements OnInit, OnDestroy {\n  private mergeFiltersTreks$: Subscription;\n  public filteredTreks: MinimalTrek[];\n  public numberOfActiveFilters: string;\n  public offline: boolean;\n  private treksTool: TreksService;\n  public isInView = false;\n  public treksUrl: string;\n  public appName: string = environment.appName;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public currentPosition$: Subscription;\n  public noNetwork = false;\n  public loaderStatus: Boolean;\n\n  constructor(\n    public loading: LoadingService,\n    private filterTreks: FilterTreksService,\n    private modalController: ModalController,\n    public onlineTreks: OnlineTreksService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public settings: SettingsService,\n    private network: Network,\n    private platform: Platform\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.loading.begin('treks-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const context: TreksContext = data.context;\n        this.offline = context.offline;\n        this.treksTool = context.treksTool;\n        this.treksUrl = this.treksTool.getTreksUrl();\n        this.mapConfig = cloneDeep(context.mapConfig);\n        this.commonSrc = this.treksTool.getCommonImgSrc();\n      }),\n      this.onlineTreks.onlineTreksError$.subscribe((error) => {\n        if (!!error) {\n          this.loading.finish(); // if there was a connection error, map could not be loaded\n        }\n      }),\n      this.loading.status\n        .pipe(delay(0))\n        .subscribe((status) => (this.loaderStatus = status))\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  ionViewWillEnter(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n\n  ionViewDidEnter(): void {\n    this.mapIsLoaded(false);\n    this.mergeFiltersTreks$ = combineLatest(\n      this.route.data.pipe(\n        first(),\n        map((data) => data.context),\n        mergeMap((context: TreksContext) => context.treksTool.filteredTreks$)\n      ),\n      this.filterTreks.activeFiltersNumber$\n    ).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n      this.numberOfActiveFilters =\n        numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n      this.filteredTreks = filteredTreks;\n      this.isInView = true;\n    });\n    this.subscriptions$$.push(this.mergeFiltersTreks$);\n  }\n\n  ionViewDidLeave(): void {\n    this.isInView = false;\n    unsubscribe(this.mergeFiltersTreks$);\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public mapIsLoaded(loaded: boolean): void {\n    if (loaded) {\n      this.loading.finish('treks-map');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n   0)\n    \"\n  >\n    \n      \n        \n          \n            {{ 'toolbar.filters' | translate }} {{ numberOfActiveFilters\n            }}\n          \n            {{ 'toolbar.search' | translate }}\n        \n      \n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-map.page.scss\n                \n                .custom-button {\n  width: 100px;\n  text-transform: capitalize;\n}\n\n.button-margin-left {\n  margin-left: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}      0)    \"  >                                        {{ \\'toolbar.filters\\' | translate }} {{ numberOfActiveFilters            }}                      {{ \\'toolbar.search\\' | translate }}                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksMapPageModule.html":{"url":"modules/TreksMapPageModule.html","title":"module - TreksMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule_imports\n\n\n\n\nSelectTrekComponent\n\nSelectTrekComponent\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSelectTrekComponent->TreksMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks-map/treks-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SelectTrekComponent\n                        \n                        \n                            TreksMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TreksMapPage } from './treks-map.page';\nimport { SelectTrekComponent } from '@app/components/select-trek/select-trek.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TreksMapPage,\n    resolve: {\n      context: TreksContextResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [TreksMapPage, SelectTrekComponent]\n})\nexport class TreksMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksOrderComponent.html":{"url":"components/TreksOrderComponent.html","title":"component - TreksOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreksOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/treks-order/treks-order.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treks-order\n            \n\n            \n                styleUrls\n                ./treks-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-order.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentOrder\n                            \n                            \n                                isFirstCheck\n                            \n                            \n                                orders\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                    Async\n                                treksOrderChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams, settings: SettingsService, platform: Platform, backgroundGeolocation: BackgroundGeolocation, popoverController: PopoverController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            treksOrderChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    treksOrderChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirstCheck\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\nimport { NavParams, Platform, PopoverController } from '@ionic/angular';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Order } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-treks-order',\n  templateUrl: './treks-order.component.html',\n  styleUrls: ['./treks-order.component.scss']\n})\nexport class TreksOrderComponent extends UnSubscribe {\n  orders: any;\n  currentOrder: Order;\n  isFirstCheck = true;\n\n  constructor(\n    private navParams: NavParams,\n    private settings: SettingsService,\n    private platform: Platform,\n    private backgroundGeolocation: BackgroundGeolocation,\n    private popoverController: PopoverController\n  ) {\n    super();\n  }\n\n  ionViewWillEnter() {\n    this.orders = this.navParams.get('orders');\n\n    this.subscriptions$$.push(\n      this.settings.order$.subscribe((order) => {\n        this.currentOrder = order.type;\n      })\n    );\n  }\n\n  public async treksOrderChange(event: any) {\n    let error = false;\n    if (!this.isFirstCheck) {\n      // disable backdrop dismiss while treksOrderChange\n      const trekOrderPopOver: any = this.popoverController.getTop();\n      trekOrderPopOver.__zone_symbol__value.backdropDismiss = false;\n      if (event.detail.value === 'location') {\n        if (this.platform.is('ios') || this.platform.is('android')) {\n          let startLocation;\n          try {\n            startLocation = await this.backgroundGeolocation.getCurrentLocation(\n              {\n                timeout: 3000,\n                maximumAge: 10000,\n                enableHighAccuracy: true\n              }\n            );\n          } catch (catchError) {\n            error = true;\n          }\n          if (startLocation) {\n            this.settings.saveOrderState(event.detail.value, [\n              startLocation.longitude,\n              startLocation.latitude\n            ]);\n          } else {\n            error = true;\n            // If location not provided, reset default order\n            this.settings.saveOrderState('default');\n          }\n          await this.popoverController.dismiss({ error });\n        } else if ('geolocation' in navigator) {\n          navigator.geolocation.getCurrentPosition(\n            async (position) => {\n              this.settings.saveOrderState(event.detail.value, [\n                position.coords.longitude,\n                position.coords.latitude\n              ]);\n              await this.popoverController.dismiss();\n            },\n            async () => {\n              await this.popoverController.dismiss({ error: true });\n            }\n          );\n        }\n      } else {\n        this.settings.saveOrderState(event.detail.value);\n        await this.popoverController.dismiss();\n      }\n    } else {\n      this.isFirstCheck = false;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'toolbar.orderTitle' | translate }}\n    \n    \n      {{ order.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-order.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'toolbar.orderTitle\\' | translate }}              {{ order.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksPageModule.html":{"url":"modules/TreksPageModule.html","title":"module - TreksPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\ncluster_TreksPageModule_imports\n\n\n\n\nTreksPage\n\nTreksPage\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks/treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { FiltersComponentModule } from '@app/components/filters/filters.module';\n\nimport { RouterModule } from '@angular/router';\nimport { TreksPage } from './treks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedTreksModule,\n    SharedUiModule,\n    FiltersComponentModule,\n    RouterModule.forChild([]),\n    TranslateModule.forChild()\n  ],\n  declarations: [TreksPage]\n})\nexport class TreksPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksService.html":{"url":"interfaces/TreksService.html","title":"interface - TreksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filteredTreks$\n                                \n                                \n                                        offline\n                                \n                                \n                                        treks$\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCommonImgSrc\n                                \n                                \n                                    getMapConfigForTrekById\n                                \n                                \n                                    getPoisForTrekById\n                                \n                                \n                                    getTouristicContentsForTrekById\n                                \n                                \n                                    getTouristicEventsForTrekById\n                                \n                                \n                                    getTrekById\n                                \n                                \n                                    getTrekDetailsUrl\n                                \n                                \n                                    getTrekImageSrc\n                                \n                                \n                                    getTrekMapUrl\n                                \n                                \n                                    getTreksMapUrl\n                                \n                                \n                                    getTreksUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetMapConfigForTrekById(trek: Trek, isOffline: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isOffline\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoisForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicContentsForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicEventsForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekDetailsUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:268\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekMapUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredTreks$\n                                    \n                                \n                                \n                                    \n                                        filteredTreks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treks$\n                                    \n                                \n                                \n                                    \n                                        treks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnSubscribe.html":{"url":"classes/UnSubscribe.html","title":"class - UnSubscribe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnSubscribe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/abstract/unsubscribe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nexport class UnSubscribe implements OnInit, OnDestroy {\n  protected subscriptions$$: Subscription[];\n\n  constructor() {\n    this.subscriptions$$ = [];\n  }\n\n  ngOnInit() {\n    if (!!this.subscriptions$$) {\n      this.subscriptions$$ = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$$.forEach((subscription: Subscription) =>\n      unsubscribe(subscription)\n    );\n    this.subscriptions$$ = [];\n  }\n}\n\nexport function unsubscribe(subscription: Subscription) {\n  if (subscription && subscription.unsubscribe) {\n    subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            noAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            class\n            UnSubscribe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            function\n            unsubscribe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/collapsible-list/collapsible-list.component.ts\n            \n            component\n            CollapsibleListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/connect-error/connect-error.component.ts\n            \n            component\n            ConnectErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter-value/filter-value.component.ts\n            \n            component\n            FilterValueComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            component\n            GeolocateNotificationsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/information-desk-details/information-desk-details.component.ts\n            \n            component\n            InformationDeskDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/layers-visibility/layers-visibility.component.ts\n            \n            component\n            LayersVisibilityComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            component\n            MapTrekVizComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            component\n            MapTreksVizComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/poi-details/poi-details.component.ts\n            \n            component\n            PoiDetailsComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/poi/poi.component.ts\n            \n            component\n            PoiComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/progress/progress.component.ts\n            \n            component\n            ProgressComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/select-filter/select-filter.component.ts\n            \n            component\n            SelectFilterComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/select-poi/select-poi.component.ts\n            \n            component\n            SelectPoiComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/select-trek/select-trek.component.ts\n            \n            component\n            SelectTrekComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/trek-card/trek-card.component.ts\n            \n            component\n            TrekCardComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/treks-order/treks-order.component.ts\n            \n            component\n            TreksOrderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            ContainsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            DataSetting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            FilterValue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrekProperties\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationDesk\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationIntro\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            IntervalFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrekProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTreks\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Poi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Pois\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Property\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Settings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategorie\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategoryWithFeatures\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Trek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekContext\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekProperties\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Treks\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/more/more-item/more-item.page.ts\n            \n            component\n            MoreItemPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/more/more.page.ts\n            \n            component\n            MorePage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/trek-details/trek-details.page.ts\n            \n            component\n            TrekDetailsPage\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/pages/trek-map/trek-map.page.ts\n            \n            component\n            TrekMapPage\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pages/treks-map/treks-map.page.ts\n            \n            component\n            TreksMapPage\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/pages/treks/treks.page.ts\n            \n            component\n            TreksPage\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/pipes/lower-round.pipe.ts\n            \n            pipe\n            LowerRoundPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resolvers/more-item.resolver.ts\n            \n            guard\n            MoreItemResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/more.resolver.ts\n            \n            guard\n            MoreResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/trek.resolver.ts\n            \n            guard\n            TrekContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/treks.resolver.ts\n            \n            guard\n            TreksContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            injectable\n            FilterTreksService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/geolocate/geolocate.service.ts\n            \n            injectable\n            GeolocateService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/more-informations/more-informations.service.ts\n            \n            injectable\n            MoreInformationsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            injectable\n            OfflineTreksService\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            injectable\n            OnlineTreksService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/search-treks/search-treks.service.ts\n            \n            injectable\n            SearchTreksService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/variables.ts\n            \n            variable\n            primaryColor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.3\n        \n            @angular/common : ^8.2.3\n        \n            @angular/core : ^8.2.3\n        \n            @angular/forms : ^8.2.3\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^8.2.3\n        \n            @angular/platform-browser-dynamic : ^8.2.3\n        \n            @angular/router : ^8.2.3\n        \n            @ionic-native/background-geolocation : ^5.17.0\n        \n            @ionic-native/core : ^5.12.0\n        \n            @ionic-native/file : ^5.12.0\n        \n            @ionic-native/firebase-analytics : ^5.12.0\n        \n            @ionic-native/globalization : ^5.12.0\n        \n            @ionic-native/ionic-webview : ^5.12.0\n        \n            @ionic-native/local-notifications : ^5.17.1\n        \n            @ionic-native/network : ^5.12.0\n        \n            @ionic-native/screen-orientation : ^5.17.1\n        \n            @ionic-native/social-sharing : ^5.12.0\n        \n            @ionic-native/splash-screen : ^5.12.0\n        \n            @ionic-native/status-bar : ^5.12.0\n        \n            @ionic-native/zip : ^5.12.0\n        \n            @ionic/angular : ^4.8.1\n        \n            @ionic/storage : ^2.2.0\n        \n            @mauron85/cordova-plugin-background-geolocation : ^3.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @turf/distance : ^6.0.1\n        \n            @turf/helpers : ^6.1.4\n        \n            @types/lodash.clonedeep : ^4.5.6\n        \n            @types/lodash.deburr : ^4.1.6\n        \n            @types/mapbox-gl : ^0.54.3\n        \n            cordova-android : 8.1.0\n        \n            cordova-android-play-services-gradle-release : 3.0.0\n        \n            cordova-ios : ^5.1.0\n        \n            cordova-plugin-badge : ^0.8.8\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : 6.0.1\n        \n            cordova-plugin-firebase-analytics : ^2.0.4\n        \n            cordova-plugin-globalization : 1.11.0\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^4.1.1\n        \n            cordova-plugin-local-notification : ^0.9.0-beta.2\n        \n            cordova-plugin-network-information : 2.0.1\n        \n            cordova-plugin-screen-orientation : ^3.0.2\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-plugin-x-socialsharing : 5.4.4\n        \n            cordova-plugin-zip : 3.1.0\n        \n            cordova-sqlite-storage : 3.0.0\n        \n            cordova-support-android-plugin : ^1.0.1\n        \n            cordova-support-google-services : ^1.3.2\n        \n            core-js : ^3.2.1\n        \n            es6-promise-plugin : 4.2.2\n        \n            lodash.clonedeep : ^4.5.0\n        \n            lodash.deburr : ^4.1.0\n        \n            lodash.throttle : ^4.1.1\n        \n            mapbox-gl : ^1.2.1\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ^0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            noAnimation   (src/.../app.module.ts)\n                        \n                        \n                            unsubscribe   (src/.../unsubscribe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            noAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nnoAnimation(AnimationC)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    AnimationC\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/components/abstract/unsubscribe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGeotrek Mobile\nMobile application of Geotrek Rando (http://geotrek.fr).\nINSTALLATION\nBefore proceeding, make sure the latest version of Node.js and npm are installed\nnpm install -g ionic@5.4.11\n\nnpm install -g cordova@9.0.0\n\ngit clone git@github.com:GeotrekCE/Geotrek-mobile.git\n\ncd Geotrek-mobile\n\nnpm installRUN THE APP IN THE BROWSER\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.ts' with your personal api url\nionic serveRUN THE APP ON DEVICE\n/!\\ The run argument build the apk, then install it on the device\niOS\nNeed iOS environment setup available only on macOS\nionic cordova run iosAndroid\nNeed Android environment setup available on Windows, macOS and Linux\nionic cordova run androidBUILD RELEASE APP\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.prod.ts' with your personal api url\n/!\\ The build argument just build the apk, but don't install it on the device\niOS\nionic cordova build ios --prod --releaseAndroid\nionic cordova build android --prod --releaseCUSTOMIZATION OPTIONS\nYou can find below all available options. You can easily overwrite them to customize your app.\nconfig.xml\nApp id\nApp name\nGeotrek Startersrc/environments/environment.ts & environment.prod.ts\nYou can overwrite a lot of options inside these files:AppName (header of the app) , availableLanguage, api url, map options and more\nenvironment.prod.ts will be use for developmentenvironment.prod.ts will be use for release app\nsrc/assets/i18n\nYou can find all the internationalization ressources here (by default Fr and En)\nsrc/assets/map/icons/\nLocal icons to display on the map, like departure or parking icon\nsrc/assets/map/zone/zone.geojson\nGeosjon to display on the mapGenerally represents the limits of the geographical area of the application\nsrc/theme/variables.scss\nColors that will be usedThe most important point here is the primary color to customize your application\nicons and splashscreen\n\nThe source image for icons should ideally be at least 1024×1024px and located in resources/icon.png\n\nThe source image for splash screens should ideally be at least 2732×2732px and located in resources/splash.png. For best results, the splash screen's artwork should roughly fit within a square (1200×1200px) at the center of the image.\n\n\nThen you just have to run\nionic cordova resourcesOther resources\n\nAll others resources are provided by the api\nWe download a global package for offline mode when user downloads his first trek\n\nFirebase Analytics Configuration\nIn order to use Firebase analytics, you had to create a Firebase App.\n\nThen store google-services.json and GoogleService-Info.plist in ./Analytics/\nIn config.xml, add\n\n  \n    \n    ...\n  \n  \n    \n    ...\n  \nSet true to useFirebase variable in environment files\n\nRemove Firebase Analytics\nIn order to build the app without Firebase you had to\n\nSet false to useFirebase variable in environment files\n\nRun this list of command\n(If you add platforms previously, be sure to delete them)\n\n\n    ionic cordova platform rm android\n\n    ionic cordova platform rm ios\n\n    ionic cordova plugin rm cordova-plugin-firebase-analytics\n\n    ionic cordova plugin rm cordova-android-play-services-gradle-release\n\n    ionic cordova plugin rm cordova-support-google-services\n\n    ionic cordova plugin rm cordova-support-android-plugin\n\n    ionic cordova platform add android\n\n    ionic cordova build androidTests\nEnd-to-end testing\nOpen cypress\nnpm run cypress:openHeadless mode\nnpm run cypress:runDocumentation\nAccess to extensive documentation\nLICENCE\n\nOpenSource - BSD\nCopyright (c) Makina Corpus - Parc National des Écrins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2019, Makina Corpus\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomPipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersComponentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoreItemPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MorePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedFiltersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedTreksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CustomPipesModule\n\n\n\ncluster_CustomPipesModule_declarations\n\n\n\ncluster_CustomPipesModule_exports\n\n\n\ncluster_FiltersComponentModule\n\n\n\ncluster_FiltersComponentModule_imports\n\n\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_SharedFiltersModule\n\n\n\ncluster_SharedFiltersModule_declarations\n\n\n\ncluster_SharedFiltersModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nLowerRoundPipe\n\nLowerRoundPipe\n\n\n\nCustomPipesModule\n\nCustomPipesModule\n\nCustomPipesModule -->\n\nLowerRoundPipe->CustomPipesModule\n\n\n\n\n\nLowerRoundPipe \n\nLowerRoundPipe \n\nLowerRoundPipe  -->\n\nCustomPipesModule->LowerRoundPipe \n\n\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\n\n\nFiltersComponentModule\n\nFiltersComponentModule\n\nFiltersComponentModule -->\n\nSharedFiltersModule->FiltersComponentModule\n\n\n\n\n\nFilterComponent \n\nFilterComponent \n\nFilterComponent  -->\n\nSharedFiltersModule->FilterComponent \n\n\n\n\n\nFilterValueComponent \n\nFilterValueComponent \n\nFilterValueComponent  -->\n\nSharedFiltersModule->FilterValueComponent \n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nSharedFiltersModule->FiltersComponent \n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSharedFiltersModule->SearchComponent \n\n\n\n\n\nSelectFilterComponent \n\nSelectFilterComponent \n\nSelectFilterComponent  -->\n\nSharedFiltersModule->SelectFilterComponent \n\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\nMorePage\n\nMorePage\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nSharedFiltersModule -->\n\nFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nSharedFiltersModule -->\n\nFilterValueComponent->SharedFiltersModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nSharedFiltersModule -->\n\nFiltersComponent->SharedFiltersModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSharedFiltersModule -->\n\nSearchComponent->SharedFiltersModule\n\n\n\n\n\nSelectFilterComponent\n\nSelectFilterComponent\n\nSharedFiltersModule -->\n\nSelectFilterComponent->SharedFiltersModule\n\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSelectPoiComponent\n\nSelectPoiComponent\n\nTrekMapPageModule -->\n\nSelectPoiComponent->TrekMapPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSelectTrekComponent\n\nSelectTrekComponent\n\nTreksMapPageModule -->\n\nSelectTrekComponent->TreksMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nTreksPage\n\nTreksPage\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        43 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    Order\n                \n            \n            \n                \n                        \"default\" | \"location\" | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneDeep   (src/.../offline-treks.service.ts)\n                        \n                        \n                            cloneDeep   (src/.../online-treks.service.ts)\n                        \n                        \n                            distance   (src/.../geolocate-notifications.component.ts)\n                        \n                        \n                            distance   (src/.../filter-treks.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-trek-viz.component.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-treks-viz.component.ts)\n                        \n                        \n                            primaryColor   (src/.../variables.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/offline-treks/offline-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/online-treks/online-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/app/services/filter-treks/filter-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: true,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en', 'it'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png'\n          ],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 16\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 16\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13\n  },\n  map: {\n    attributionText:\n      '© OpenStreetMap contributors | © OpenTopoMap ',\n    TreksfitBoundsOptions: { animate: false, padding: 50 },\n    TrekfitBoundsOptions: { animate: false, padding: 75 },\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poisLayersProperties: {\n      visibility: 'visible',\n      iconSize: 1\n    },\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1\n    },\n    stagePaint: {\n      // style stage circle on parent map\n      'circle-color': '#fff',\n      'circle-stroke-color': '#000000',\n      'circle-radius': 14,\n      'circle-stroke-width': 1\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3\n      }\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8\n      }\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F'\n      }\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5\n      }\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff'\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1]\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12\n        }\n      }\n    },\n    touristicContentLayersProperties: {\n      visibility: 'visible',\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1\n        }\n      }\n    }\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000\n  },\n  poiCollapseInitialSize: 5,\n  touristicContentCollapseInitialSize: 5,\n  containsFilterShouldUseSelectAbove: 7,\n  trekDetails: {\n    showImgRulesIfParkCentered: true\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: false,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en', 'it'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://rando-millevaches.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png'\n          ],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 16\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 16\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13\n  },\n  map: {\n    attributionText:\n      '© OpenStreetMap contributors | © OpenTopoMap ',\n    TreksfitBoundsOptions: { animate: false, padding: 50 },\n    TrekfitBoundsOptions: { animate: false, padding: 75 },\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poisLayersProperties: {\n      visibility: 'visible',\n      iconSize: 1\n    },\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1\n    },\n    stagePaint: {\n      // style stage circle on parent map\n      'circle-color': '#fff',\n      'circle-stroke-color': '#000000',\n      'circle-radius': 14,\n      'circle-stroke-width': 1\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3\n      }\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8\n      }\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F'\n      }\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5\n      }\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff'\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1]\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12\n        }\n      }\n    },\n    touristicContentLayersProperties: {\n      visibility: 'visible',\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1\n        }\n      }\n    }\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000\n  },\n  poiCollapseInitialSize: 5,\n  touristicContentCollapseInitialSize: 5,\n  containsFilterShouldUseSelectAbove: 7,\n  trekDetails: {\n    showImgRulesIfParkCentered: true\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/environments/variables.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            primaryColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#3880ff'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
