var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.515,1,1.188]],["body/components/AppComponent.html",[0,0.847,1,2.081,2,1.913,3,0.126,4,0.085,5,1.489,6,1.489,7,1.489,8,0.098,9,3.996,10,1.489,11,2.821,12,2.566,13,3.17,14,1.975,15,6.055,16,0.293,17,1.363,18,7.234,19,1.322,20,3.619,21,3.877,22,5.769,23,6.255,24,3.019,25,4.161,26,6.255,27,3.556,28,3.341,29,1.352,30,3.625,31,1.243,32,4.567,33,0.997,34,0.012,35,0.436,36,0.293,37,0.881,38,4.567,39,1.028,40,1.314,41,0.224,42,0.612,43,1.955,44,1.955,45,1.698,46,1.885,47,1.274,48,3.556,49,3.619,50,3.996,51,3.619,52,3.996,53,2.39,54,2.109,55,2.195,56,3.996,57,2.627,58,0.126,59,0.569,60,2.342,61,4.567,62,4.567,63,7.527,64,2.627,65,2.627,66,2.39,67,4.567,68,3.881,69,4.567,70,4.567,71,4.567,72,3.996,73,3.996,74,1.314,75,4.128,76,3.619,77,3.619,78,4.567,79,4.567,80,1.589,81,4.567,82,2.289,83,4.567,84,4.799,85,3.996,86,3.996,87,4.567,88,4.567,89,4.567,90,0.36,91,1.975,92,1.975,93,1.489,94,2.359,95,1.489,96,1.489,97,1.314,98,1.489,99,1.489,100,1.314,101,1.489,102,1.489,103,1.314,104,1.489,105,1.314,106,1.489,107,1.314,108,0.508,109,1.489,110,1.314,111,1.489,112,1.489,113,1.314,114,1.443,115,1.398,116,2.215,117,1.314,118,1.489,119,1.314,120,1.54,121,0.642,122,1.975,123,1.314,124,0.598,125,1.314,126,1.274,127,1.489,128,1.314,129,1.489,130,1.314,131,1.489,132,1.314,133,0.528,134,1.314,135,1.489,136,1.314,137,1.489,138,1.274,139,1.489,140,1.314,141,1.489,142,1.314,143,1.314,144,1.975,145,1.314,146,1.274,147,1.489,148,1.489,149,0.006,150,0.008,151,0.006]],["title/modules/AppModule.html",[152,1.264,153,3.019]],["body/modules/AppModule.html",[1,2.367,3,0.118,4,0.079,8,0.142,22,4.235,23,4.592,26,4.592,34,0.012,41,0.241,42,0.573,43,2.48,44,1.83,47,1.193,48,4.236,49,3.389,50,3.741,51,3.389,52,3.741,56,3.741,58,0.16,59,0.533,90,0.337,103,2.183,105,2.271,107,2.183,113,2.271,115,1.774,132,2.271,134,2.271,136,2.271,149,0.006,150,0.008,151,0.006,152,1.309,153,6.309,154,1.765,155,1.9,156,3.159,157,3.159,158,2.813,159,1.9,160,3.741,161,3.741,162,3.741,163,3.741,164,3.741,165,5.175,166,3.649,167,4.865,168,2.48,169,2.056,170,1.9,171,3.389,172,5.794,173,2.676,174,5.794,175,4.804,176,5.794,177,2.238,178,2.676,179,5.794,180,5.069,181,2.915,182,5.794,183,4.276,184,5.794,185,1.395,186,3.95,187,3.741,188,3.741,189,3.95,190,3.741,191,2.74,192,2.46,193,2.46,194,2.143,195,5.794,196,2.74,197,5.794,198,4.276,199,3.741,200,3.95,201,3.713,202,3.389,203,3.713,204,3.389,205,4.592,206,3.389,207,3.741,208,4.276,209,5.069,210,3.741,211,4.276,212,5.069,213,3.389,214,3.741,215,4.592,216,3.126,217,3.389,218,5.069,219,4.276,220,4.276,221,3.389,222,3.95,223,3.389,224,4.276,225,4.276,226,4.276,227,3.389,228,4.276,229,3.741,230,3.126,231,5.069,232,3.741,233,3.126,234,3.389,235,3.741,236,4.276,237,3.389,238,4.276,239,3.389,240,3.741,241,1.538,242,1.765,243,4.276,244,4.276,245,4.276,246,4.276,247,3.126,248,4.276,249,4.276,250,2.391,251,4.276,252,6.572,253,4.276,254,3.389,255,4.276,256,4.276,257,5.794,258,4.276]],["title/modules/AppRoutingModule.html",[152,1.264,165,2.816]],["body/modules/AppRoutingModule.html",[3,0.171,4,0.115,8,0.133,12,2.173,34,0.012,41,0.203,42,0.829,58,0.171,59,0.771,149,0.009,150,0.01,151,0.009,154,2.552,159,2.748,165,4.994,173,2.856,178,3.383,185,2.017,250,2.552,259,6.184,260,6.184,261,3.834,262,4.086,263,1.573,264,4.889,265,5.41,266,5.41,267,4.901,268,6.829,269,6.184,270,6.184,271,7.325,272,5.354,273,7.325,274,6.184,275,6.184,276,1.119,277,1.084,278,6.184,279,6.184,280,6.184]],["title/injectables/CacheService.html",[281,1.391,282,2.816]],["body/injectables/CacheService.html",[3,0.121,4,0.082,8,0.095,13,2.298,16,0.281,17,1.328,19,1.287,31,1.63,33,1.622,34,0.012,35,0.427,36,0.526,37,1.284,39,1.328,41,0.197,42,0.588,58,0.121,59,0.547,60,2.413,74,2.137,80,2.052,82,2.956,149,0.006,150,0.008,151,0.006,175,5.205,177,2.298,241,2.395,242,2.749,263,1.117,281,1.986,282,4.021,283,2.406,284,3.841,285,0.631,286,5.643,287,2.235,288,7.944,289,6.66,290,6.66,291,7.429,292,5.898,293,3.479,294,5.898,295,4.868,296,5.898,297,1.04,298,4.868,299,4.39,300,5.16,301,0.988,302,1.644,303,5.898,304,7.121,305,3.289,306,4.39,307,2.814,308,3.232,309,2.137,310,4.39,311,0.938,312,5.898,313,4.39,314,5.16,315,5.643,316,4.311,317,4.39,318,4.501,319,4.39,320,2.814,321,1.579,322,2.814,323,4.39,324,5.898,325,4.39,326,5.278,327,2.298,328,2.406,329,5.898,330,4.39,331,4.39,332,4.39,333,6.66,334,4.39,335,4.39,336,4.39,337,4.39,338,6.66,339,5.898,340,6.66,341,7.121,342,5.898,343,5.898,344,4.39,345,3.841,346,4.39,347,4.39,348,4.39,349,4.39,350,1.117,351,4.39,352,4.39,353,6.66,354,4.39,355,4.39,356,4.39,357,6.66,358,5.898,359,4.39,360,4.39,361,6.66,362,4.39,363,4.39,364,4.39,365,4.39,366,2.993,367,4.39,368,4.39,369,1.083,370,4.39,371,4.39,372,4.39,373,4.39,374,4.39,375,2.814,376,2.814,377,3.841,378,4.39,379,4.39]],["title/components/CollapsibleListComponent.html",[0,0.515,97,1.188]],["body/components/CollapsibleListComponent.html",[0,0.823,1,1.242,2,1.843,3,0.119,4,0.08,5,1.408,6,1.408,7,1.408,8,0.093,10,1.408,11,2.808,12,2.555,14,1.902,16,0.277,17,1.313,19,1.442,31,1.691,34,0.012,35,0.374,36,0.499,39,1.313,40,1.678,41,0.161,42,0.579,58,0.119,59,0.538,74,2.125,80,2.029,90,0.341,91,1.902,92,1.902,93,1.408,94,2.307,95,1.408,96,1.408,97,2.034,98,2.581,99,1.408,100,1.242,101,1.408,102,1.408,103,1.242,104,1.408,105,1.242,106,1.408,107,1.242,108,0.481,109,1.408,110,1.242,111,1.408,112,1.408,113,1.242,114,1.364,115,1.322,116,2.154,117,1.242,118,1.408,119,1.242,120,1.484,121,0.624,122,1.902,123,1.242,124,0.585,125,1.242,126,1.204,127,1.408,128,1.242,129,1.408,130,1.242,131,1.408,132,1.242,133,0.499,134,1.242,135,1.408,136,1.242,137,1.408,138,1.204,139,1.408,140,1.242,141,1.408,142,1.242,143,1.242,144,1.902,145,1.242,146,1.204,147,1.408,148,1.408,149,0.006,150,0.008,151,0.006,285,0.624,287,2.229,297,0.914,300,6.66,309,2.125,380,1.454,381,7.256,382,6.573,383,3.778,384,1.786,385,3.051,386,3.738,387,1.964,388,6.605,389,5.833,390,6.605,391,6.605,392,6.66,393,2.919,394,7.073,395,3.053,396,1.937,397,6.605,398,6.605,399,4.233,400,6.605,401,1.937,402,5.833,403,4.319,404,4.264,405,4.319,406,7.073,407,4.319,408,4.319,409,6.605,410,4.319,411,4.319,412,4.319,413,4.319,414,4.319,415,4.319,416,2.408,417,4.073,418,4.264,419,3.778,420,3.778,421,5.779,422,4.319,423,4.319,424,4.319,425,4.319,426,4.319,427,4.319,428,4.319]],["title/components/ConnectErrorComponent.html",[0,0.515,100,1.188]],["body/components/ConnectErrorComponent.html",[0,0.873,1,1.399,2,1.994,3,0.134,4,0.09,5,1.587,6,1.587,7,1.587,8,0.105,10,1.587,11,2.834,12,2.578,14,2.058,16,0.312,19,1.529,31,1.616,34,0.012,35,0.405,36,0.312,41,0.134,42,0.652,58,0.134,59,0.606,74,2.133,90,0.384,91,2.058,92,2.058,93,1.587,94,2.418,95,1.587,96,1.587,97,1.399,98,1.587,99,1.587,100,2.133,101,2.649,102,1.587,103,1.399,104,1.587,105,1.399,106,1.587,107,1.399,108,0.541,109,1.587,110,1.399,111,1.587,112,1.587,113,1.399,114,1.537,115,1.489,116,2.285,117,1.399,118,1.587,119,1.399,120,1.606,121,0.662,122,2.058,123,1.399,124,0.613,125,1.399,126,1.357,127,1.587,128,1.399,129,1.587,130,1.399,131,1.587,132,1.399,133,0.563,134,1.399,135,1.587,136,1.399,137,1.587,138,1.357,139,1.587,140,1.399,141,1.587,142,1.399,143,1.399,144,2.058,145,1.399,146,1.357,147,1.587,148,1.587,149,0.007,150,0.009,151,0.007,242,2.008,287,2.078,309,2.133,318,4.245,380,1.638,387,2.126,395,3.304,417,4.021,429,7.011,430,6.351,431,4.257,432,4.045,433,7.006,434,6.312,435,7.683,436,1.729,437,4.264,438,1.954,439,4.045,440,7.006,441,6.312,442,4.865,443,4.865,444,4.865,445,4.865,446,4.045,447,4.303,448,3.856,449,4.865]],["title/interfaces/ContainsFilter.html",[450,0.407,451,1.019]],["body/interfaces/ContainsFilter.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.71,34,0.012,35,0.511,36,0.542,41,0.165,58,0.236,90,0.403,108,0.767,121,0.337,124,0.57,133,0.591,149,0.005,150,0.007,151,0.005,276,0.646,277,1.046,285,0.808,297,1.137,301,1.15,302,1.469,311,1.382,350,1.299,369,1.26,396,0.936,401,0.936,436,0.803,438,1.657,450,0.842,451,1.26,452,0.936,453,0.936,454,1.6,455,1.554,456,1.808,457,1.864,458,1.864,459,1.864,460,1.925,461,1.878,462,1.613,463,1.649,464,0.88,465,0.965,466,1.343,467,0.755,468,0.755,469,0.803,470,1.7,471,1.048,472,1.518,473,0.965,474,1.381,475,1.518,476,1.299,477,1.613,478,1.824,479,1.769,480,1.299,481,1.761,482,1.7,483,1.613,484,1.381,485,1.34,486,1.381,487,1.048,488,1.864,489,1.381,490,1.424,491,1.381,492,1.381,493,1.381,494,1.381,495,1.34,496,1.34,497,1.343,498,1.381,499,1.381,500,1.081,501,1.299,502,1.34,503,1.968,504,0.965,505,0.908,506,0.965,507,0.965,508,0.965,509,0.965,510,0.965,511,0.965,512,0.965,513,0.965,514,1.34,515,1.518,516,1.34,517,1.186,518,0.88,519,0.936,520,0.828,521,1.34,522,0.828,523,0.828,524,1.186,525,0.88,526,0.88,527,1.302,528,1.343,529,1.428,530,0.908,531,0.88,532,1.15,533,1.385,534,1.26,535,1.263,536,0.828,537,0.965,538,0.965,539,0.965,540,0.965,541,0.936,542,0.936,543,0.936,544,0.936,545,0.936,546,0.936,547,0.965,548,0.936,549,0.965,550,0.965,551,0.828,552,0.908,553,1.15,554,1.115,555,0.828,556,0.732,557,0.828]],["title/interfaces/DataSetting.html",[450,0.407,524,0.959]],["body/interfaces/DataSetting.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.712,34,0.012,35,0.523,36,0.54,41,0.165,58,0.236,90,0.403,108,0.726,121,0.338,124,0.57,133,0.592,149,0.005,150,0.007,151,0.005,276,0.647,277,1.047,285,0.808,297,1.138,301,1.152,302,1.47,311,1.382,350,1.301,369,1.262,396,0.938,401,0.938,436,0.805,438,1.658,450,0.842,451,0.882,452,0.938,453,0.938,454,1.587,455,1.555,456,1.567,457,1.615,458,1.615,459,1.615,460,1.926,461,1.879,462,1.615,463,1.651,464,0.882,465,0.967,466,1.345,467,0.757,468,0.757,469,0.805,470,1.702,471,1.05,472,1.519,473,0.967,474,1.384,475,1.519,476,1.301,477,1.615,478,1.825,479,1.77,480,1.301,481,1.763,482,1.701,483,1.615,484,1.384,485,1.342,486,1.384,487,1.05,488,1.865,489,1.384,490,1.425,491,1.384,492,1.384,493,1.384,494,1.384,495,1.342,496,1.342,497,1.345,498,1.384,499,1.384,500,1.083,501,1.301,502,1.342,503,2,504,0.967,505,0.91,506,0.967,507,0.967,508,0.967,509,0.967,510,0.967,511,0.967,512,0.967,513,0.967,514,1.342,515,1.519,516,1.809,517,1.187,518,0.882,519,0.938,520,0.83,521,1.342,522,0.83,523,0.83,524,1.386,525,0.882,526,0.882,527,1.304,528,1.345,529,1.429,530,0.91,531,0.882,532,1.152,533,1.386,534,1.262,535,1.264,536,0.83,537,0.967,538,0.967,539,0.967,540,0.967,541,0.938,542,0.938,543,0.938,544,0.938,545,0.938,546,0.938,547,0.967,548,0.938,549,0.967,550,0.967,551,0.83,552,0.91,553,1.152,554,1.117,555,0.83,556,0.734,557,0.83]],["title/interfaces/Filter.html",[108,0.46,450,0.407]],["body/interfaces/Filter.html",[3,0.097,4,0.065,8,0.076,16,0.225,29,0.698,34,0.012,35,0.522,36,0.547,41,0.163,58,0.236,90,0.398,108,0.762,121,0.332,124,0.566,133,0.584,149,0.005,150,0.007,151,0.005,276,0.636,277,1.036,285,0.804,297,1.138,301,1.136,302,1.462,311,1.38,350,1.284,369,1.246,396,1.695,401,1.695,436,0.79,438,1.644,450,0.841,451,0.866,452,0.921,453,0.921,454,1.582,455,1.551,456,1.55,457,1.599,458,1.599,459,1.599,460,1.919,461,1.869,462,1.599,463,1.639,464,0.866,465,0.949,466,1.331,467,0.743,468,0.743,469,0.79,470,1.69,471,1.036,472,1.504,473,0.949,474,1.365,475,1.504,476,1.284,477,1.599,478,1.814,479,1.759,480,1.284,481,1.748,482,1.692,483,1.599,484,1.365,485,1.324,486,1.365,487,1.036,488,1.852,489,1.365,490,1.417,491,1.365,492,1.365,493,1.365,494,1.365,495,1.324,496,1.324,497,1.331,498,1.365,499,1.365,500,1.069,501,1.284,502,1.324,503,1.962,504,0.949,505,0.893,506,0.949,507,0.949,508,0.949,509,0.949,510,0.949,511,0.949,512,0.949,513,0.949,514,1.695,515,1.742,516,1.796,517,1.5,518,0.866,519,0.921,520,0.815,521,1.324,522,0.815,523,0.815,524,1.172,525,0.866,526,0.866,527,1.29,528,1.331,529,1.415,530,0.893,531,0.866,532,1.136,533,1.372,534,1.246,535,1.251,536,0.815,537,0.949,538,0.949,539,0.949,540,0.949,541,0.921,542,0.921,543,0.921,544,0.921,545,0.921,546,0.921,547,0.949,548,0.921,549,0.949,550,0.949,551,0.815,552,0.893,553,1.136,554,1.102,555,0.815,556,0.721,557,0.815]],["title/components/FilterComponent.html",[0,0.515,103,1.188]],["body/components/FilterComponent.html",[0,0.85,1,1.325,2,1.924,3,0.127,4,0.086,5,1.502,6,1.502,7,1.502,8,0.099,10,1.502,11,2.822,12,2.568,14,1.986,16,0.295,17,1.371,19,1.489,31,1.623,33,1.006,34,0.012,35,0.437,36,0.507,37,0.888,39,1.371,40,1.962,41,0.189,42,0.617,58,0.127,59,0.574,80,1.603,90,0.363,91,1.986,92,1.986,93,1.502,94,2.367,95,1.502,96,1.502,97,1.325,98,1.502,99,1.502,100,1.325,101,1.502,102,1.502,103,2.088,104,1.502,105,1.325,106,1.502,107,1.325,108,0.913,109,1.502,110,1.325,111,1.502,112,1.502,113,1.325,114,1.455,115,1.41,116,2.225,117,1.325,118,1.502,119,1.325,120,1.549,121,0.645,122,1.986,123,1.325,124,0.6,125,1.325,126,1.285,127,1.502,128,1.325,129,1.502,130,1.325,131,1.502,132,1.325,133,0.533,134,1.325,135,1.502,136,1.325,137,1.502,138,1.285,139,1.502,140,1.325,141,1.502,142,1.325,143,1.325,144,1.986,145,1.325,146,1.285,147,1.502,148,1.502,149,0.006,150,0.008,151,0.006,242,1.901,250,1.901,285,0.652,287,2.251,297,0.787,308,3.337,309,2.171,318,4.133,380,1.551,384,1.864,385,3.151,387,2.051,392,5.969,393,2.996,395,3.188,417,3.571,418,4.452,419,4.03,420,4.03,421,4.03,439,3.903,446,3.903,490,1.316,517,1.413,520,1.752,556,1.4,558,4.03,559,6.822,560,6.09,561,6.822,562,5.969,563,6.09,564,4.607,565,4.607,566,4.607,567,4.607,568,4.607,569,4.607,570,1.367,571,4.607,572,4.607,573,6.09,574,4.607,575,3.367,576,4.03,577,6.09,578,4.03,579,4.452,580,4.607]],["title/injectables/FilterTreksService.html",[281,1.391,581,2.502]],["body/injectables/FilterTreksService.html",[3,0.114,4,0.076,8,0.089,13,2.151,16,0.264,17,1.27,19,0.897,29,1.122,30,3.473,31,1.648,33,1.733,34,0.012,35,0.509,36,0.515,37,1.531,39,1.761,41,0.201,42,0.551,57,2.364,58,0.114,59,0.512,60,2.481,80,1.962,82,2.826,108,0.949,120,1.046,121,0.609,149,0.006,150,0.008,151,0.006,241,2.854,250,1.696,263,1.046,281,1.899,283,2.252,285,0.603,287,2.077,302,1.556,305,3.666,311,1.289,321,1.478,327,2.151,328,2.252,350,1.046,416,1.696,451,1.851,460,1.838,469,1.56,471,1.606,490,1.242,514,1.078,515,1.046,518,1.895,525,1.93,570,1.22,575,3.004,581,3.417,582,7.095,583,5.197,584,2.802,585,6.439,586,8.455,587,5.64,588,5.64,589,5.64,590,5.64,591,5.64,592,4.11,593,4.11,594,4.11,595,4.11,596,5.64,597,4.11,598,5.64,599,4.11,600,5.64,601,4.11,602,5.64,603,4.11,604,5.64,605,4.11,606,5.64,607,3.596,608,4.11,609,4.11,610,4.11,611,3.004,612,5.64,613,4.11,614,4.934,615,4.11,616,4.11,617,5.64,618,4.11,619,4.11,620,4.11,621,4.11,622,4.11,623,5.103,624,4.11,625,4.11,626,4.11,627,3.596,628,6.439,629,5.64,630,3.257,631,4.11,632,2.634,633,4.11,634,4.11,635,4.11,636,4.11,637,3.596,638,4.11,639,4.11,640,4.11,641,4.11,642,2.634,643,4.11,644,4.11,645,4.11,646,4.11,647,3.596,648,4.11,649,4.11,650,3.596]],["title/interfaces/FilterValue.html",[450,0.407,517,0.959]],["body/interfaces/FilterValue.html",[3,0.097,4,0.065,8,0.076,16,0.226,29,0.701,34,0.012,35,0.522,36,0.542,37,1.249,41,0.164,58,0.236,90,0.399,108,0.721,121,0.333,124,0.567,133,0.585,149,0.005,150,0.007,151,0.005,276,0.638,277,1.039,285,0.805,297,1.137,301,1.139,302,1.463,311,1.386,350,1.288,369,1.249,396,0.924,401,0.924,436,0.793,438,1.647,450,0.841,451,0.869,452,0.924,453,0.924,454,1.583,455,1.552,456,1.554,457,1.602,458,1.602,459,1.602,460,1.921,461,1.871,462,1.602,463,1.641,464,0.869,465,0.953,466,1.333,467,0.746,468,0.746,469,0.793,470,1.692,471,1.039,472,1.507,473,0.953,474,1.369,475,1.507,476,1.288,477,1.602,478,1.816,479,1.761,480,1.288,481,1.751,482,1.694,483,1.602,484,1.369,485,1.328,486,1.369,487,1.039,488,1.855,489,1.369,490,1.478,491,1.369,492,1.369,493,1.369,494,1.369,495,1.328,496,1.328,497,1.333,498,1.369,499,1.369,500,1.071,501,1.288,502,1.328,503,1.963,504,0.953,505,0.896,506,0.953,507,0.953,508,0.953,509,0.953,510,0.953,511,0.953,512,0.953,513,0.953,514,1.328,515,1.816,516,1.328,517,1.375,518,0.869,519,0.924,520,1.503,521,1.799,522,0.818,523,0.818,524,1.175,525,0.869,526,0.869,527,1.293,528,1.333,529,1.418,530,0.896,531,0.869,532,1.139,533,1.375,534,1.249,535,1.254,536,0.818,537,0.953,538,0.953,539,0.953,540,0.953,541,0.924,542,0.924,543,0.924,544,0.924,545,0.924,546,0.924,547,0.953,548,0.924,549,0.953,550,0.953,551,0.818,552,0.896,553,1.139,554,1.105,555,0.818,556,0.723,557,0.818]],["title/components/FilterValueComponent.html",[0,0.515,107,1.188]],["body/components/FilterValueComponent.html",[0,0.862,1,1.363,2,1.96,3,0.131,4,0.088,5,1.546,6,1.546,7,1.546,8,0.102,10,1.546,11,2.828,12,2.573,14,2.024,16,0.304,17,1.397,19,1.51,31,1.604,33,1.035,34,0.012,35,0.444,36,0.471,37,0.914,39,1.397,40,1.785,41,0.172,42,0.635,58,0.131,59,0.591,90,0.374,91,2.024,92,2.024,93,1.546,94,2.394,95,1.546,96,1.546,97,1.363,98,1.546,99,1.546,100,1.363,101,1.546,102,1.546,103,1.363,104,1.546,105,1.363,106,1.546,107,2.111,108,0.899,109,1.546,110,1.363,111,1.546,112,1.546,113,1.363,114,1.497,115,1.451,116,2.256,117,1.363,118,1.546,119,1.363,120,1.578,121,0.654,122,2.024,123,1.363,124,0.607,125,1.363,126,1.322,127,1.546,128,1.363,129,1.546,130,1.363,131,1.546,132,1.363,133,0.548,134,1.363,135,1.546,136,1.363,137,1.546,138,1.322,139,1.546,140,1.363,141,1.546,142,1.363,143,1.363,144,2.024,145,1.363,146,1.322,147,1.546,148,1.546,149,0.007,150,0.009,151,0.007,237,6.312,242,1.956,287,1.985,297,0.802,309,2.371,318,4.191,380,1.596,384,1.9,385,3.195,387,2.09,393,3.029,395,3.248,417,3.621,439,3.977,446,3.977,517,1.814,520,1.1,556,1.42,562,6.053,570,1.406,576,4.146,651,6.968,652,4.146,653,6.918,654,6.205,655,6.205,656,6.205,657,4.739,658,4.739,659,4.739,660,6.205,661,6.918,662,4.739,663,3.037,664,4.739,665,6.205,666,4.739,667,4.739,668,4.739,669,2.481,670,4.739]],["title/components/FiltersComponent.html",[0,0.515,105,1.188]],["body/components/FiltersComponent.html",[0,0.724,1,0.979,2,1.559,3,0.094,4,0.063,5,1.11,6,1.11,7,1.11,8,0.073,10,1.11,11,2.749,12,2.501,14,1.61,16,0.316,17,1.111,19,1.078,21,3.647,24,3.135,27,3.04,28,2.943,29,1.346,30,3.39,31,1.681,33,1.268,34,0.012,35,0.434,36,0.487,37,1.12,39,1.71,40,2.294,41,0.213,42,0.456,47,0.949,53,1.781,54,1.572,55,2.792,57,1.957,58,0.094,59,0.424,60,2.007,74,1.42,80,2.021,82,2.474,90,0.268,91,1.61,92,2.301,93,1.11,94,2.078,95,1.11,96,1.11,97,0.979,98,1.11,99,1.11,100,0.979,101,1.11,102,1.11,103,0.979,104,1.11,105,1.833,106,1.11,107,0.979,108,0.888,109,1.11,110,0.979,111,1.11,112,1.11,113,0.979,114,1.075,115,1.042,116,1.894,117,0.979,118,1.11,119,0.979,120,1.256,121,0.667,122,1.61,123,0.979,124,0.527,125,0.979,126,0.949,127,1.11,128,0.979,129,1.11,130,0.979,131,1.11,132,0.979,133,0.394,134,0.979,135,1.11,136,0.979,137,1.11,138,0.949,139,1.11,140,0.979,141,1.11,142,0.979,143,0.979,144,1.61,145,0.979,146,0.949,147,1.11,148,1.11,149,0.005,150,0.007,151,0.005,241,1.224,242,2.037,263,1.721,267,2.697,285,0.528,287,2.314,297,0.824,305,2.943,309,1.946,311,1.013,321,1.224,380,1.146,384,1.511,385,2.683,387,1.662,393,3.004,416,1.405,454,0.982,469,1.111,490,1.304,517,1.637,525,1.741,556,1.192,570,1.01,575,2.488,581,2.062,583,2.181,611,2.488,647,2.977,650,2.977,669,2.584,671,2.977,672,3.135,673,3.04,674,5.808,675,4.936,676,4.246,677,6.765,678,7.278,679,2.474,680,2.474,681,6.371,682,4.657,683,6.371,684,4.936,685,4.083,686,4.936,687,2.683,688,2.488,689,3.665,690,3.183,691,3.335,692,5.32,693,4.936,694,3.608,695,3.403,696,3.403,697,3.403,698,4.936,699,3.403,700,4.936,701,3.403,702,3.403,703,4.936,704,3.403,705,3.04,706,1.781,707,1.781,708,3.403,709,3.403,710,3.403,711,3.403,712,3.723,713,3.403,714,1.457,715,1.781,716,2.181,717,2.697,718,1.865,719,2.488,720,1.865,721,1.706,722,1.781,723,2.062,724,5.808,725,2.977,726,3.403,727,3.403,728,2.32,729,3.403,730,3.403,731,1.781,732,2.977,733,2.977,734,3.403,735,4.936,736,3.403,737,3.403,738,4.936,739,3.403,740,4.936,741,3.403,742,3.403,743,3.403,744,2.977,745,3.403,746,3.403,747,2.977,748,3.403,749,4.936,750,3.403,751,3.403,752,3.403,753,2.977,754,2.488,755,3.403,756,4.936,757,4.319,758,4.936,759,4.936,760,4.936,761,4.319,762,4.319,763,4.936,764,2.488]],["title/components/GeolocateNotificationsComponent.html",[0,0.515,110,1.188]],["body/components/GeolocateNotificationsComponent.html",[0,0.702,1,0.928,2,1.5,3,0.089,4,0.06,5,1.053,6,1.053,7,1.053,8,0.07,10,1.053,11,2.735,12,2.488,14,1.549,16,0.207,17,1.069,19,1.037,20,2.558,21,3.758,24,3.182,25,3.574,31,1.685,33,1.23,34,0.012,35,0.444,36,0.501,37,1.086,39,1.654,40,2.157,41,0.211,42,0.432,43,1.382,44,1.382,45,1.2,46,1.332,47,1.325,48,1.69,58,0.089,59,0.402,60,1.965,64,2.732,65,2.732,66,3.748,68,2.069,74,0.928,82,1.618,90,0.255,91,1.549,92,1.549,93,1.053,94,2.026,95,1.053,96,1.053,97,0.928,98,1.053,99,1.053,100,0.928,101,1.053,102,1.053,103,0.928,104,1.053,105,0.928,106,1.053,107,0.928,108,0.359,109,1.053,110,1.787,111,2.521,112,1.053,113,0.928,114,1.02,115,0.988,116,1.838,117,0.928,118,1.053,119,0.928,120,1.208,121,0.533,122,1.549,123,0.928,124,0.514,125,0.928,126,0.9,127,1.053,128,0.928,129,1.053,130,0.928,131,1.053,132,0.928,133,0.549,134,0.928,135,1.053,136,0.928,137,1.053,138,0.9,139,1.053,140,0.928,141,1.053,142,0.928,143,0.928,144,1.549,145,0.928,146,0.9,147,1.053,148,1.053,149,0.004,150,0.007,151,0.004,212,6.67,213,2.558,214,2.824,242,1.332,250,2.733,263,1.869,276,0.86,285,0.508,287,2.028,297,0.614,298,3.472,309,0.928,311,0.896,316,2.36,318,3.414,321,1.161,380,1.087,384,1.454,385,2.603,387,1.599,393,2.565,395,2.486,416,2.326,417,2.949,437,1.857,438,0.821,439,3.044,446,3.044,455,1.053,460,0.772,463,0.772,479,0.796,527,1.23,570,0.958,673,2.949,687,2.87,714,2.834,765,6.536,766,6.029,767,2.558,768,4.119,769,4.155,770,5.635,771,4.749,772,5.573,773,5.635,774,5.635,775,4.465,776,5.635,777,3.795,778,6.214,779,4.749,780,6.214,781,6.214,782,3.472,783,6.214,784,4.119,785,5.635,786,4.465,787,3.982,788,4.749,789,3.228,790,3.228,791,3.228,792,3.228,793,4.749,794,3.228,795,3.228,796,3.228,797,3.228,798,3.472,799,4.542,800,3.228,801,2.36,802,3.228,803,3.228,804,3.228,805,3.228,806,3.228,807,3.228,808,3.228,809,3.228,810,3.228,811,3.764,812,2.558,813,2.824,814,2.558,815,2.824,816,3.228,817,3.228,818,3.228,819,3.228,820,3.228,821,3.228,822,3.228,823,4.749,824,3.228,825,3.228,826,3.764,827,2.36,828,2.824,829,2.824,830,2.824,831,3.228,832,2.824,833,3.228,834,3.228,835,2.824,836,3.228,837,3.228,838,4.749,839,4.749,840,6.214,841,3.228,842,3.228,843,3.228,844,4.749,845,3.228,846,4.749,847,3.228,848,2.558,849,3.228,850,3.228,851,3.228,852,3.228,853,3.228,854,3.228,855,3.228,856,3.228,857,3.228,858,3.228,859,3.228,860,3.228,861,4.749,862,3.764,863,3.611,864,3.228,865,3.228,866,3.228,867,3.228,868,3.228,869,3.228,870,3.228,871,3.228,872,3.228,873,3.228,874,3.228,875,3.228,876,3.228,877,2.36,878,2.069,879,3.228,880,2.558,881,3.228,882,2.36,883,3.228,884,2.36,885,2.36,886,2.36,887,2.36,888,3.228,889,2.36,890,3.228,891,3.228,892,4.749,893,4.749]],["title/injectables/GeolocateService.html",[281,1.391,787,2.647]],["body/injectables/GeolocateService.html",[3,0.133,4,0.089,8,0.104,13,2.518,16,0.308,17,1.41,19,1.368,21,4.143,24,3.097,25,4.246,31,1.696,33,1.368,34,0.012,35,0.402,36,0.491,37,1.208,39,1.767,40,2.004,41,0.217,42,0.645,43,2.059,44,2.059,45,1.789,46,1.986,47,1.342,48,2.518,58,0.133,59,0.6,60,1.427,64,3.604,65,3.604,66,4.007,74,1.384,80,2.18,149,0.007,150,0.009,151,0.007,181,3.28,205,6.493,206,3.813,207,4.209,241,2.253,242,2.586,250,2.586,263,1.947,281,2.11,283,2.636,285,0.67,287,2.216,297,0.954,309,1.384,321,1.73,328,2.636,416,1.986,712,4.466,775,5.523,777,4.49,787,4.016,894,4.209,895,7.383,896,7.383,897,7.383,898,7.383,899,6.266,900,7.383,901,4.811,902,6.266,903,4.811,904,4.811,905,4.811,906,4.811,907,6.266,908,4.811,909,6.266,910,4.811,911,4.811,912,4.966,913,4.811,914,6.266,915,4.811,916,4.811,917,4.272,918,6.266,919,4.811,920,4.811,921,6.266,922,4.811,923,4.811,924,4.811,925,4.811,926,4.811,927,3.813,928,4.811,929,4.811,930,4.811,931,4.811,932,4.811,933,4.811,934,4.811,935,4.811,936,4.811,937,4.811,938,4.811,939,4.811,940,4.811,941,4.811,942,4.811,943,3.083,944,4.811,945,4.811,946,4.209,947,4.811,948,4.811,949,4.811,950,4.811]],["title/interfaces/HydratedTrek.html",[450,0.407,500,0.874]],["body/interfaces/HydratedTrek.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.712,34,0.012,35,0.512,36,0.545,41,0.165,58,0.236,90,0.403,108,0.726,121,0.338,124,0.57,133,0.592,149,0.005,150,0.007,151,0.005,276,0.647,277,1.047,285,0.845,297,1.137,301,1.152,302,1.47,308,2.803,311,1.382,350,1.301,369,1.262,396,0.938,401,0.938,436,0.805,438,1.658,450,0.842,451,0.882,452,0.938,453,0.938,454,1.601,455,1.534,456,1.567,457,1.615,458,1.615,459,1.615,460,1.94,461,1.879,462,1.615,463,1.651,464,0.882,465,0.967,466,1.345,467,0.757,468,0.757,469,0.805,470,1.702,471,1.05,472,1.519,473,0.967,474,1.384,475,1.519,476,1.301,477,1.615,478,1.956,479,1.77,480,1.301,481,1.763,482,1.701,483,1.615,484,1.384,485,1.342,486,1.384,487,1.05,488,1.865,489,1.384,490,1.425,491,1.384,492,1.384,493,1.384,494,1.384,495,1.342,496,1.342,497,1.345,498,1.384,499,1.384,500,1.264,501,1.658,502,1.342,503,1.968,504,0.967,505,0.91,506,0.967,507,0.967,508,0.967,509,0.967,510,0.967,511,0.967,512,0.967,513,0.967,514,1.342,515,1.519,516,1.342,517,1.187,518,0.882,519,0.938,520,0.83,521,1.342,522,0.83,523,0.83,524,1.187,525,0.882,526,0.882,527,1.304,528,1.345,529,1.429,530,0.91,531,0.882,532,1.152,533,1.386,534,1.262,535,1.264,536,0.83,537,0.967,538,0.967,539,0.967,540,0.967,541,0.938,542,0.938,543,0.938,544,0.938,545,0.938,546,0.938,547,0.967,548,0.938,549,0.967,550,0.967,551,0.83,552,0.91,553,1.152,554,1.117,555,0.83,556,0.734,557,0.83]],["title/interfaces/HydratedTrekProperties.html",[450,0.407,501,1.051]],["body/interfaces/HydratedTrekProperties.html",[3,0.088,4,0.059,8,0.068,16,0.203,29,0.63,34,0.012,35,0.513,36,0.554,37,1.187,41,0.154,58,0.234,90,0.369,108,0.685,121,0.299,124,0.543,133,0.542,149,0.004,150,0.006,151,0.004,276,0.573,277,0.977,285,0.782,297,1.137,301,1.054,302,1.416,311,1.384,350,1.192,369,1.156,396,0.831,401,0.831,436,0.713,438,1.566,450,0.833,451,0.782,452,0.831,453,0.831,454,1.55,455,1.531,456,1.804,457,1.86,458,1.86,459,1.86,460,1.884,461,1.81,462,1.507,463,1.572,464,0.782,465,0.857,466,1.254,467,0.671,468,0.671,469,0.713,470,1.621,471,0.961,472,1.418,473,0.857,474,1.267,475,1.75,476,1.671,477,1.86,478,1.75,479,1.697,480,1.192,481,1.925,482,1.708,483,1.86,484,1.777,485,1.723,486,1.777,487,1.349,488,1.976,489,1.777,490,1.439,491,1.777,492,1.777,493,1.777,494,1.777,495,1.723,496,1.723,497,1.479,498,1.777,499,1.777,500,0.991,501,1.418,502,1.723,503,2.088,504,1.665,505,0.806,506,0.857,507,0.857,508,0.857,509,0.857,510,0.857,511,0.857,512,0.857,513,0.857,514,1.229,515,1.418,516,1.229,517,1.087,518,0.782,519,0.831,520,0.735,521,1.229,522,0.735,523,0.735,524,1.087,525,0.782,526,0.782,527,1.217,528,1.254,529,1.334,530,0.806,531,0.782,532,1.054,533,1.293,534,1.156,535,1.18,536,0.735,537,0.857,538,0.857,539,0.857,540,0.857,541,0.831,542,0.831,543,0.831,544,0.831,545,0.831,546,0.831,547,0.857,548,0.831,549,0.857,550,0.857,551,0.735,552,0.806,553,1.054,554,1.022,555,0.735,556,0.65,557,0.735]],["title/interfaces/InformationDesk.html",[450,0.407,497,0.93]],["body/interfaces/InformationDesk.html",[3,0.093,4,0.063,8,0.073,16,0.216,29,0.671,34,0.012,35,0.518,36,0.551,41,0.16,58,0.235,90,0.387,108,0.706,121,0.319,124,0.557,133,0.567,149,0.005,150,0.007,151,0.005,276,0.61,277,1.013,285,0.796,297,1.14,301,1.104,302,1.444,311,1.385,350,1.247,369,1.21,396,0.884,401,0.884,436,0.759,438,1.614,450,0.838,451,0.832,452,0.884,453,0.884,454,1.569,455,1.543,456,1.515,457,1.563,458,1.563,459,1.563,460,1.906,461,1.846,462,1.563,463,1.613,464,0.832,465,0.912,466,1.301,467,0.714,468,0.714,469,0.759,470,1.663,471,1.006,472,1.47,473,0.912,474,1.326,475,1.47,476,1.247,477,1.563,478,1.789,479,1.735,480,1.247,481,1.716,482,1.756,483,1.563,484,1.326,485,1.286,486,1.326,487,1.006,488,2.011,489,1.326,490,1.399,491,1.326,492,1.326,493,1.326,494,1.326,495,1.286,496,1.286,497,1.428,498,1.326,499,1.326,500,1.038,501,1.247,502,1.286,503,1.981,504,0.912,505,1.614,506,1.716,507,1.716,508,1.716,509,1.716,510,1.716,511,1.716,512,1.716,513,1.716,514,1.286,515,1.47,516,1.286,517,1.138,518,0.832,519,0.884,520,0.783,521,1.286,522,0.783,523,0.783,524,1.138,525,0.832,526,0.832,527,1.261,528,1.301,529,1.383,530,0.858,531,0.832,532,1.104,533,1.341,534,1.21,535,1.223,536,0.783,537,0.912,538,0.912,539,0.912,540,0.912,541,0.884,542,0.884,543,0.884,544,0.884,545,0.884,546,0.884,547,0.912,548,0.884,549,0.912,550,0.912,551,0.783,552,0.858,553,1.104,554,1.07,555,0.783,556,0.692,557,0.783]],["title/components/InformationDeskDetailsComponent.html",[0,0.515,113,1.188]],["body/components/InformationDeskDetailsComponent.html",[0,0.833,1,1.272,2,1.873,3,0.122,4,0.082,5,1.442,6,1.442,7,1.442,8,0.095,10,1.442,11,2.814,12,2.56,14,1.933,16,0.284,17,1.334,19,0.965,31,1.633,33,0.965,34,0.012,35,0.429,36,0.478,37,0.853,39,1.334,40,1.923,41,0.197,42,0.593,45,1.645,46,1.825,47,1.233,58,0.122,59,0.551,74,1.705,90,0.349,91,1.933,92,1.933,93,1.442,94,2.329,95,1.442,96,1.442,97,1.272,98,1.442,99,1.442,100,1.272,101,1.442,102,1.442,103,1.272,104,1.442,105,1.272,106,1.442,107,1.272,108,0.492,109,1.442,110,1.272,111,1.442,112,1.442,113,2.054,114,2.514,115,2.645,116,2.18,117,1.272,118,1.442,119,1.272,120,1.508,121,0.632,122,1.933,123,1.272,124,0.591,125,1.272,126,1.233,127,1.442,128,1.272,129,1.442,130,1.272,131,1.442,132,1.272,133,0.512,134,1.272,135,1.442,136,1.272,137,1.442,138,1.233,139,1.442,140,1.272,141,1.442,142,1.272,143,1.272,144,1.933,145,1.272,146,1.233,147,1.442,148,1.442,149,0.006,150,0.008,151,0.006,233,5.891,285,0.634,287,2.014,297,0.572,309,1.705,380,1.49,387,1.996,497,1.726,505,1.508,570,1.312,682,5.22,685,4.577,688,3.233,689,4.284,692,5.952,694,5.22,754,3.233,951,7.051,952,3.505,953,4.697,954,5.849,955,5.186,956,4.887,957,6.685,958,5.186,959,4.423,960,3.87,961,3.591,962,3.87,963,3.87,964,5.186,965,2.835,966,5.927,967,4.423,968,4.423,969,4.423,970,4.423,971,5.927,972,5.927,973,5.927,974,5.186,975,5.186,976,5.927]],["title/interfaces/InformationIntro.html",[450,0.407,522,0.959]],["body/interfaces/InformationIntro.html",[3,0.099,4,0.067,8,0.078,16,0.231,29,0.715,34,0.012,35,0.512,36,0.539,41,0.166,58,0.236,90,0.405,108,0.727,121,0.34,124,0.571,133,0.594,149,0.005,150,0.007,151,0.005,276,0.651,277,1.05,285,0.809,297,1.138,301,1.156,302,1.472,311,1.384,350,1.306,369,1.267,396,0.943,401,0.943,436,0.809,438,1.882,450,0.842,451,0.887,452,0.943,453,0.943,454,1.589,455,1.556,456,1.571,457,1.62,458,1.62,459,1.62,460,1.927,461,1.882,462,1.62,463,1.654,464,0.887,465,0.972,466,1.349,467,0.761,468,0.761,469,0.809,470,1.705,471,1.054,472,1.524,473,0.972,474,1.389,475,1.524,476,1.306,477,1.62,478,1.828,479,1.773,480,1.306,481,1.767,482,1.703,483,1.62,484,1.389,485,1.347,486,1.389,487,1.054,488,1.869,489,1.389,490,1.427,491,1.389,492,1.389,493,1.389,494,1.389,495,1.347,496,1.347,497,1.349,498,1.389,499,1.389,500,1.087,501,1.306,502,1.347,503,1.97,504,0.972,505,0.915,506,0.972,507,0.972,508,0.972,509,0.972,510,0.972,511,0.972,512,0.972,513,0.972,514,1.347,515,1.524,516,1.347,517,1.192,518,0.887,519,0.943,520,0.835,521,1.347,522,1.192,523,0.835,524,1.192,525,0.887,526,0.887,527,1.308,528,1.349,529,1.434,530,0.915,531,0.887,532,1.156,533,1.39,534,1.267,535,1.268,536,0.835,537,0.972,538,0.972,539,0.972,540,0.972,541,0.943,542,0.943,543,0.943,544,0.943,545,0.943,546,0.943,547,0.972,548,0.943,549,0.972,550,0.972,551,0.835,552,0.915,553,1.156,554,1.121,555,0.835,556,0.738,557,0.835]],["title/interfaces/InformationItem.html",[450,0.407,523,0.959]],["body/interfaces/InformationItem.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.712,34,0.012,35,0.512,36,0.54,41,0.165,58,0.236,90,0.403,108,0.726,121,0.338,124,0.57,133,0.592,149,0.005,150,0.007,151,0.005,276,0.647,277,1.047,285,0.808,297,1.138,301,1.152,302,1.47,311,1.384,350,1.301,369,1.262,396,0.938,401,0.938,436,1.468,438,1.879,450,0.842,451,0.882,452,0.938,453,0.938,454,1.587,455,1.555,456,1.567,457,1.615,458,1.615,459,1.615,460,1.926,461,1.879,462,1.615,463,1.651,464,0.882,465,0.967,466,1.345,467,0.757,468,0.757,469,0.805,470,1.702,471,1.05,472,1.519,473,0.967,474,1.384,475,1.519,476,1.301,477,1.615,478,1.825,479,1.77,480,1.301,481,1.763,482,1.701,483,1.615,484,1.384,485,1.342,486,1.384,487,1.05,488,1.865,489,1.384,490,1.425,491,1.384,492,1.384,493,1.384,494,1.384,495,1.342,496,1.342,497,1.345,498,1.384,499,1.384,500,1.083,501,1.301,502,1.342,503,1.968,504,0.967,505,0.91,506,0.967,507,0.967,508,0.967,509,0.967,510,0.967,511,0.967,512,0.967,513,0.967,514,1.342,515,1.519,516,1.342,517,1.187,518,0.882,519,0.938,520,0.83,521,1.342,522,0.83,523,1.187,524,1.187,525,0.882,526,0.882,527,1.304,528,1.345,529,1.429,530,0.91,531,0.882,532,1.152,533,1.386,534,1.262,535,1.264,536,0.83,537,0.967,538,0.967,539,0.967,540,0.967,541,0.938,542,0.938,543,0.938,544,0.938,545,0.938,546,0.938,547,0.967,548,0.938,549,0.967,550,0.967,551,0.83,552,0.91,553,1.152,554,1.117,555,0.83,556,0.734,557,0.83]],["title/interfaces/IntervalFilter.html",[450,0.407,518,1.019]],["body/interfaces/IntervalFilter.html",[3,0.1,4,0.067,8,0.078,16,0.232,29,0.719,34,0.012,35,0.512,36,0.541,41,0.166,58,0.236,90,0.406,108,0.771,121,0.341,124,0.572,133,0.596,149,0.005,150,0.007,151,0.005,276,0.654,277,1.053,285,0.81,297,1.137,301,1.16,302,1.474,311,1.383,350,1.311,369,1.271,396,0.947,401,0.947,436,0.813,438,1.666,450,0.843,451,0.891,452,0.947,453,0.947,454,1.604,455,1.557,456,1.575,457,1.624,458,1.624,459,1.624,460,1.929,461,1.885,462,1.624,463,1.657,464,0.891,465,0.977,466,1.352,467,0.765,468,0.765,469,0.813,470,1.708,471,1.057,472,1.528,473,0.977,474,1.393,475,1.528,476,1.311,477,1.624,478,1.831,479,1.776,480,1.311,481,1.771,482,1.705,483,1.624,484,1.393,485,1.351,486,1.393,487,1.057,488,1.872,489,1.393,490,1.429,491,1.393,492,1.393,493,1.393,494,1.393,495,1.351,496,1.351,497,1.352,498,1.393,499,1.393,500,1.091,501,1.311,502,1.351,503,1.972,504,0.977,505,0.919,506,0.977,507,0.977,508,0.977,509,0.977,510,0.977,511,0.977,512,0.977,513,0.977,514,1.351,515,1.528,516,1.351,517,1.196,518,1.271,519,0.947,520,0.838,521,1.351,522,0.838,523,0.838,524,1.196,525,0.891,526,0.891,527,1.311,528,1.352,529,1.437,530,0.919,531,0.891,532,1.16,533,1.394,534,1.271,535,1.271,536,0.838,537,0.977,538,0.977,539,0.977,540,0.977,541,0.947,542,0.947,543,0.947,544,0.947,545,0.947,546,0.947,547,0.977,548,0.947,549,0.977,550,0.977,551,0.838,552,0.919,553,1.16,554,1.125,555,0.838,556,0.741,557,0.838]],["title/components/LoaderComponent.html",[0,0.515,117,1.188]],["body/components/LoaderComponent.html",[0,0.849,1,1.321,2,1.92,3,0.127,4,0.085,5,1.498,6,1.498,7,1.498,8,0.099,10,1.498,11,2.822,12,2.567,14,1.982,16,0.39,17,1.368,19,1.003,31,1.622,33,1.003,34,0.012,35,0.437,36,0.484,37,0.886,39,1.034,40,1.748,41,0.2,42,0.615,58,0.127,59,0.573,60,2.021,74,1.748,90,0.362,91,1.982,92,1.982,93,1.498,94,2.365,95,1.498,96,1.498,97,1.321,98,1.498,99,1.498,100,1.321,101,1.498,102,1.498,103,1.321,104,1.498,105,1.321,106,1.498,107,1.321,108,0.511,109,1.498,110,1.321,111,1.498,112,1.498,113,1.321,114,1.451,115,1.406,116,2.222,117,2.086,118,1.498,119,1.321,120,1.546,121,0.644,122,1.982,123,1.321,124,0.599,125,1.321,126,1.281,127,1.498,128,1.321,129,1.498,130,1.321,131,1.498,132,1.321,133,0.531,134,1.321,135,1.498,136,1.321,137,1.498,138,1.281,139,1.498,140,1.321,141,1.498,142,1.321,143,1.321,144,1.982,145,1.321,146,1.281,147,1.498,148,1.498,149,0.006,150,0.008,151,0.006,191,2.944,200,4.943,285,0.65,287,2.138,305,3.349,309,1.748,321,1.652,327,2.404,366,4.144,380,1.547,384,1.861,387,2.047,395,3.182,399,2.944,417,3.566,436,1.034,490,1.398,520,1.066,579,3.357,669,3.182,673,3.566,687,3.349,714,2.916,764,4.443,917,3.132,943,2.944,965,2.944,977,4.019,978,6.813,979,6.078,980,6.779,981,4.17,982,6.813,983,6.813,984,3.132,985,4.132,986,6.078,987,4.593,988,5.399,989,4.593,990,4.593,991,4.593,992,4.593,993,4.593,994,4.593,995,4.593,996,4.593,997,5.318,998,4.019,999,4.593,1000,3.357,1001,2.944,1002,3.64,1003,4.593,1004,3.64,1005,3.896,1006,3.64,1007,3.64,1008,4.019,1009,3.64,1010,4.593,1011,4.593,1012,4.593,1013,3.64,1014,3.64]],["title/interceptors/LoadingInterceptor.html",[167,2.647,1015,3.613]],["body/interceptors/LoadingInterceptor.html",[3,0.144,4,0.097,8,0.113,13,2.733,16,0.335,17,1.487,19,1.442,31,1.355,33,1.442,34,0.012,35,0.423,36,0.423,37,1.274,39,1.175,40,1.9,41,0.21,42,0.7,58,0.183,59,0.823,60,1.549,80,2.298,120,1.328,149,0.007,150,0.009,151,0.007,167,4.233,177,2.733,241,2.737,242,2.726,263,1.936,281,2.44,287,1.412,297,1.037,302,1.514,320,3.347,321,1.878,322,3.347,326,4.139,327,2.733,328,2.861,375,3.347,376,3.347,384,1.599,386,3.347,455,1.234,490,1.007,632,3.347,663,3.347,712,4.233,917,3.56,981,4.167,984,3.56,985,4.171,1016,5.222,1017,4.139,1018,6.605,1019,5.222,1020,5.778,1021,6.66,1022,5.564,1023,6.66,1024,5.222,1025,5.222,1026,5.778,1027,5.778,1028,5.778,1029,4.569,1030,4.569,1031,4.569,1032,6.338,1033,4.139,1034,4.569,1035,4.569,1036,4.569,1037,4.569,1038,4.569,1039,4.569,1040,4.569,1041,4.569,1042,4.569,1043,5.778,1044,4.569,1045,5.778,1046,4.569,1047,4.569,1048,4.569,1049,5.778,1050,4.569,1051,4.569,1052,4.569,1053,4.569,1054,4.569,1055,4.569,1056,4.569,1057,4.569,1058,4.139,1059,4.569,1060,4.569,1061,5.778]],["title/injectables/LoadingService.html",[281,1.391,985,2.263]],["body/injectables/LoadingService.html",[3,0.138,4,0.092,8,0.107,13,2.605,16,0.319,17,1.442,19,1.546,31,1.625,33,1.546,34,0.012,35,0.454,36,0.454,37,1.366,39,1.594,40,2.151,41,0.207,42,0.667,58,0.177,59,0.798,60,2.101,74,1.842,80,2.228,120,1.266,149,0.007,150,0.009,151,0.007,167,3.19,177,2.605,241,2.689,242,3.086,263,1.902,281,2.385,283,2.727,285,0.685,287,1.915,297,1.088,302,1.488,307,3.19,309,1.842,320,3.19,321,1.79,322,3.19,326,3.944,327,2.605,328,2.727,375,3.19,376,3.19,384,1.524,386,3.19,455,1.446,490,0.96,632,3.19,663,3.19,712,4.539,917,4.829,981,3.684,985,3.881,1017,3.944,1020,4.354,1021,5.604,1022,4.682,1023,5.604,1026,5.604,1027,5.604,1028,5.604,1029,5.604,1030,4.354,1031,6.197,1032,6.197,1033,3.944,1034,4.354,1035,4.354,1036,4.354,1037,4.354,1038,6.197,1039,4.354,1040,4.354,1041,4.354,1042,5.604,1043,5.604,1044,4.354,1045,5.604,1046,5.604,1047,4.354,1048,4.354,1049,5.604,1050,5.604,1051,4.354,1052,4.354,1053,4.354,1054,4.354,1055,4.354,1056,4.354,1057,4.354,1058,3.944,1059,4.354,1060,4.354,1061,5.604,1062,6.405,1063,5.604,1064,6.405,1065,4.977,1066,4.977,1067,4.977,1068,4.977]],["title/components/MapTrekVizComponent.html",[0,0.515,123,1.188]],["body/components/MapTrekVizComponent.html",[0,0.538,1,0.609,2,1.083,3,0.059,4,0.123,5,0.69,6,0.69,7,0.69,8,0.046,10,0.69,11,2.593,12,2.359,14,1.118,16,0.277,17,0.771,19,0.748,21,3.077,31,1.597,33,0.748,34,0.012,35,0.318,36,0.541,37,0.661,39,1.439,40,2.068,41,0.188,42,0.284,45,1.274,46,0.874,47,0.59,48,1.108,58,0.059,59,0.264,60,2.277,64,1.218,65,1.218,74,0.609,80,1.726,82,2.486,90,0.167,91,1.118,92,1.408,93,0.69,94,1.618,95,0.69,96,0.69,97,0.609,98,0.69,99,0.69,100,0.609,101,0.69,102,0.69,103,0.609,104,0.69,105,0.609,106,0.69,107,0.609,108,0.236,109,0.69,110,0.609,111,1.618,112,0.69,113,0.609,114,1.842,115,1.957,116,1.408,117,0.609,118,0.69,119,0.609,120,1.919,121,0.408,122,1.118,123,1.427,124,0.699,125,0.609,126,0.59,127,0.69,128,0.609,129,0.69,130,0.609,131,0.69,132,0.609,133,0.396,134,0.609,135,0.69,136,0.609,137,0.69,138,0.59,139,0.69,140,0.609,141,0.69,142,0.609,143,0.609,144,1.118,145,0.609,146,0.59,147,0.69,148,0.69,149,0.003,150,0.005,151,0.003,215,4.621,216,1.548,217,1.678,242,2.249,250,2.638,263,2.032,276,1.228,285,0.657,287,0.927,297,0.443,302,0.682,305,2.291,309,0.986,311,0.337,318,3.719,321,0.761,366,1.443,369,0.522,380,0.713,384,1.049,387,1.154,393,1.782,395,1.794,417,3.213,432,1.357,436,1.382,437,4.631,439,2.196,446,3.179,447,3.715,454,0.682,455,1.422,460,1.304,461,1.765,463,1.304,464,1.577,466,0.972,467,0.448,468,0.725,470,1.344,475,1.765,478,1.386,479,1.439,485,1.855,496,0.555,497,0.771,500,0.914,521,1.61,524,1.353,527,1.441,529,1.187,530,0.539,532,0.972,554,0.942,555,1.265,556,0.886,570,0.628,632,2.766,672,2.591,673,2.259,679,1.717,680,1.717,687,2.835,705,2.259,706,1.108,707,1.108,714,0.906,715,1.108,718,1.16,722,1.108,731,1.794,768,3.155,782,2.505,784,3.155,786,3.421,787,3.179,798,2.505,799,3.626,801,1.548,811,3.931,812,1.678,827,3.155,828,1.852,829,2.998,830,1.852,832,1.852,848,1.678,988,1.678,1000,1.548,1013,1.678,1022,1.548,1069,5.609,1070,5.232,1071,1.548,1072,2.998,1073,3.777,1074,2.998,1075,3.777,1076,4.34,1077,4.961,1078,4.961,1079,4.961,1080,3.421,1081,3.777,1082,3.155,1083,3.777,1084,2.117,1085,3.427,1086,2.117,1087,1.852,1088,1.852,1089,1.852,1090,1.852,1091,2.117,1092,2.117,1093,2.117,1094,2.117,1095,2.117,1096,2.117,1097,2.117,1098,2.117,1099,2.117,1100,1.852,1101,3.777,1102,1.852,1103,5.371,1104,4.961,1105,1.548,1106,1.678,1107,1.852,1108,2.998,1109,1.852,1110,3.427,1111,2.117,1112,2.117,1113,3.421,1114,1.678,1115,1.678,1116,2.117,1117,2.117,1118,1.852,1119,3.777,1120,1.852,1121,1.852,1122,1.548,1123,2.505,1124,1.852,1125,2.117,1126,2.117,1127,1.852,1128,1.678,1129,1.678,1130,1.852,1131,1.852,1132,1.852,1133,3.777,1134,4.34,1135,4.317,1136,4.317,1137,4.317,1138,2.117,1139,3.427,1140,2.117,1141,2.117,1142,2.117,1143,2.117,1144,2.117,1145,2.117,1146,2.117,1147,2.117,1148,5.449,1149,2.117,1150,3.427,1151,2.117,1152,2.117,1153,3.777,1154,5.102,1155,3.421,1156,3.777,1157,1.852,1158,1.852,1159,1.852,1160,2.117,1161,3.427,1162,1.852,1163,2.117,1164,2.117,1165,6.139,1166,2.117,1167,2.117,1168,3.427,1169,3.427,1170,1.852,1171,2.117,1172,2.117,1173,2.117,1174,4.961,1175,2.117,1176,2.117,1177,2.117,1178,2.117,1179,2.117,1180,4.961,1181,2.117,1182,3.427,1183,2.117,1184,4.767,1185,2.117,1186,2.117,1187,2.117,1188,2.117,1189,2.117,1190,2.117,1191,4.487,1192,1.852,1193,2.117,1194,2.117,1195,1.852,1196,2.998,1197,1.852,1198,2.998,1199,1.852,1200,1.852,1201,1.852,1202,1.852,1203,1.852,1204,1.852,1205,1.852,1206,1.852,1207,1.852,1208,2.117,1209,2.117,1210,2.117,1211,1.852,1212,1.852,1213,1.852,1214,2.117,1215,2.117,1216,2.117,1217,2.716,1218,4.34,1219,2.998,1220,2.117,1221,2.117,1222,2.117,1223,5.592,1224,4.34,1225,1.852,1226,1.678,1227,1.852,1228,2.716,1229,2.117,1230,4.767,1231,4.767,1232,4.317,1233,2.117,1234,4.961,1235,4.961,1236,1.678,1237,1.852,1238,2.117,1239,1.852,1240,3.427,1241,2.117,1242,2.117,1243,3.427,1244,2.117,1245,2.117,1246,2.117,1247,2.117,1248,2.117,1249,2.117,1250,2.117,1251,2.117,1252,2.117,1253,2.117,1254,4.317,1255,2.117,1256,3.427,1257,2.117,1258,2.117,1259,2.117,1260,4.317,1261,2.117,1262,2.117,1263,2.117,1264,2.117,1265,3.427,1266,2.117,1267,2.117,1268,2.117,1269,2.117,1270,3.427,1271,2.117,1272,2.117,1273,2.117,1274,2.117,1275,3.427,1276,3.427,1277,2.117,1278,2.117,1279,2.117,1280,2.117]],["title/components/MapTreksVizComponent.html",[0,0.515,119,1.188]],["body/components/MapTreksVizComponent.html",[0,0.606,1,0.73,2,1.25,3,0.07,4,0.122,5,0.828,6,0.828,7,0.828,8,0.055,10,0.828,11,2.659,12,2.419,14,1.291,16,0.382,17,0.891,19,0.864,21,3.303,24,2.162,25,3.16,31,1.616,33,1.062,34,0.012,35,0.405,36,0.516,37,0.938,39,1.484,40,1.896,41,0.205,42,0.34,43,1.086,44,1.086,45,1.471,46,1.047,47,0.708,48,1.328,58,0.07,59,0.316,60,2.165,64,2.276,65,2.276,66,2.546,74,0.73,80,1.911,82,2.438,90,0.2,91,1.291,92,1.586,93,0.828,94,1.792,95,0.828,96,0.828,97,0.73,98,0.828,99,0.828,100,0.73,101,0.828,102,0.828,103,0.73,104,0.828,105,0.73,106,0.828,107,0.73,108,0.663,109,0.828,110,0.73,111,1.792,112,0.828,113,0.73,114,0.802,115,0.777,116,1.586,117,0.73,118,0.828,119,1.58,120,1.972,121,0.806,122,1.291,123,0.73,124,0.592,125,0.73,126,1.104,127,0.828,128,0.73,129,0.828,130,0.73,131,0.828,132,0.73,133,0.293,134,0.73,135,0.828,136,0.73,137,0.828,138,0.708,139,0.828,140,0.73,141,0.828,142,0.73,143,0.73,144,1.291,145,0.73,146,0.708,147,0.828,148,0.828,149,0.004,150,0.005,151,0.004,168,2.55,215,5.223,216,1.855,217,2.011,241,0.912,242,2.268,250,1.047,263,1.912,276,0.716,277,0.853,285,0.423,287,1.782,297,0.512,302,0.787,305,2.538,309,1.399,311,0.773,318,3.609,321,0.912,366,1.73,369,0.626,380,0.855,384,1.211,387,1.333,393,2.008,395,2.546,417,3.303,432,1.626,437,2.798,439,2.536,446,3.117,447,2.698,448,2.011,454,0.787,455,1.232,460,1.577,461,1.007,463,1.577,464,1.2,466,1.095,467,0.537,468,0.838,470,1.47,471,0.998,476,1.007,478,0.645,479,0.976,490,0.763,520,0.589,524,1.275,526,1.2,536,1.129,554,1.062,556,0.998,570,0.753,632,1.626,669,1.328,672,2.805,673,2.546,679,1.983,680,1.983,687,3.044,705,2.546,706,1.328,707,1.328,714,1.086,715,1.328,722,1.328,728,1.73,731,2.071,768,3.555,772,4.613,777,2.665,782,2.892,787,3.521,798,2.892,799,4.016,801,1.855,811,3.136,812,2.011,826,2.011,827,1.855,835,3.462,848,2.011,862,2.011,863,4.37,877,1.855,878,1.626,882,1.855,884,1.855,885,1.855,886,1.855,887,1.855,889,1.855,988,3.136,1000,1.855,1001,1.626,1005,1.626,1022,2.892,1069,5.666,1070,5.285,1071,1.855,1072,3.462,1073,4.256,1074,3.462,1075,4.256,1076,4.807,1081,4.256,1082,3.555,1087,2.22,1088,2.22,1089,2.22,1090,3.462,1100,2.22,1101,4.256,1102,2.22,1103,3.462,1105,1.855,1106,2.011,1107,2.22,1108,3.462,1109,2.22,1118,2.22,1119,4.256,1120,2.22,1121,2.22,1122,1.855,1123,2.892,1124,3.462,1127,2.22,1128,2.011,1129,2.011,1130,2.22,1131,2.22,1132,2.22,1133,3.462,1134,3.462,1153,3.462,1154,4.807,1155,3.136,1156,3.462,1157,2.22,1158,2.22,1159,2.22,1162,2.22,1191,3.555,1192,2.22,1195,2.22,1196,3.462,1197,2.22,1198,3.462,1199,2.22,1200,2.22,1201,2.22,1202,2.22,1203,2.22,1204,2.22,1205,2.22,1206,2.22,1207,2.22,1211,2.22,1212,2.22,1213,2.22,1217,2.011,1218,4.256,1219,3.462,1223,5.522,1224,4.807,1225,2.22,1226,2.011,1227,2.22,1230,3.462,1231,3.462,1236,2.011,1281,5.494,1282,3.957,1283,3.555,1284,2.22,1285,2.537,1286,2.537,1287,2.537,1288,2.537,1289,2.537,1290,3.957,1291,2.537,1292,2.537,1293,2.537,1294,2.537,1295,3.957,1296,2.537,1297,2.537,1298,2.537,1299,2.537,1300,2.537,1301,3.957,1302,4.864,1303,6.818,1304,3.316,1305,2.537,1306,1.626,1307,3.957,1308,3.957,1309,2.537,1310,2.537,1311,3.957,1312,2.537,1313,2.537,1314,2.537,1315,2.537,1316,2.537,1317,2.537,1318,2.537,1319,4.807,1320,2.537,1321,5.957,1322,6.385,1323,5.494,1324,4.256,1325,2.537,1326,2.537,1327,3.462,1328,2.537,1329,2.537,1330,2.537,1331,2.537,1332,2.537,1333,2.537,1334,2.537,1335,3.462,1336,2.22,1337,2.22,1338,2.537,1339,3.957,1340,3.462,1341,3.957,1342,2.537,1343,3.957,1344,3.957,1345,2.537,1346,2.22,1347,2.537,1348,2.537,1349,5.957,1350,2.537,1351,2.537,1352,2.537,1353,2.537,1354,2.537,1355,2.537,1356,2.537,1357,2.537,1358,2.537,1359,2.537,1360,2.537,1361,2.537,1362,3.957,1363,2.537,1364,2.537,1365,2.537,1366,2.537,1367,2.537,1368,2.537,1369,2.537,1370,2.537,1371,2.22,1372,2.22,1373,2.22,1374,2.537,1375,2.537,1376,2.537]],["title/interfaces/MinimalTrek.html",[450,0.407,471,0.848]],["body/interfaces/MinimalTrek.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.712,34,0.012,35,0.512,36,0.545,41,0.165,58,0.236,90,0.403,108,0.726,121,0.338,124,0.57,133,0.592,149,0.005,150,0.007,151,0.005,276,0.647,277,1.047,285,0.845,297,1.137,301,1.152,302,1.47,308,2.803,311,1.382,350,1.301,369,1.262,396,0.938,401,0.938,436,0.805,438,1.658,450,0.842,451,0.882,452,0.938,453,0.938,454,1.601,455,1.534,456,1.567,457,1.615,458,1.615,459,1.615,460,1.94,461,1.879,462,1.615,463,1.651,464,0.882,465,0.967,466,1.345,467,0.757,468,0.757,469,0.805,470,1.702,471,1.226,472,1.755,473,0.967,474,1.384,475,1.519,476,1.301,477,1.615,478,1.956,479,1.77,480,1.301,481,1.763,482,1.701,483,1.615,484,1.384,485,1.342,486,1.384,487,1.05,488,1.865,489,1.384,490,1.425,491,1.384,492,1.384,493,1.384,494,1.384,495,1.342,496,1.342,497,1.345,498,1.384,499,1.384,500,1.083,501,1.301,502,1.342,503,1.968,504,0.967,505,0.91,506,0.967,507,0.967,508,0.967,509,0.967,510,0.967,511,0.967,512,0.967,513,0.967,514,1.342,515,1.519,516,1.342,517,1.187,518,0.882,519,0.938,520,0.83,521,1.342,522,0.83,523,0.83,524,1.187,525,0.882,526,0.882,527,1.304,528,1.345,529,1.429,530,0.91,531,0.882,532,1.152,533,1.386,534,1.262,535,1.264,536,0.83,537,0.967,538,0.967,539,0.967,540,0.967,541,0.938,542,0.938,543,0.938,544,0.938,545,0.938,546,0.938,547,0.967,548,0.938,549,0.967,550,0.967,551,0.83,552,0.91,553,1.152,554,1.117,555,0.83,556,0.734,557,0.83]],["title/interfaces/MinimalTrekProperties.html",[450,0.407,472,1.051]],["body/interfaces/MinimalTrekProperties.html",[3,0.095,4,0.064,8,0.074,16,0.221,29,0.685,34,0.012,35,0.52,36,0.548,41,0.162,58,0.235,90,0.393,108,0.713,121,0.326,124,0.562,133,0.576,149,0.005,150,0.007,151,0.005,276,0.624,277,1.025,285,0.8,297,1.137,301,1.121,302,1.453,308,2.729,311,1.39,350,1.267,369,1.229,396,0.904,401,0.904,436,0.775,438,1.63,450,0.839,451,0.85,452,0.904,453,0.904,454,1.576,455,1.548,456,1.858,457,1.916,458,1.916,459,1.916,460,1.913,461,1.858,462,1.582,463,1.627,464,0.85,465,0.932,466,1.317,467,0.729,468,0.729,469,0.775,470,1.677,471,1.022,472,1.63,473,1.733,474,1.347,475,1.802,476,1.729,477,1.916,478,1.802,479,1.748,480,1.267,481,1.733,482,1.684,483,1.582,484,1.347,485,1.306,486,1.347,487,1.022,488,1.838,489,1.347,490,1.409,491,1.347,492,1.347,493,1.347,494,1.347,495,1.306,496,1.306,497,1.317,498,1.347,499,1.347,500,1.054,501,1.267,502,1.306,503,1.954,504,0.932,505,0.876,506,0.932,507,0.932,508,0.932,509,0.932,510,0.932,511,0.932,512,0.932,513,0.932,514,1.306,515,1.488,516,1.306,517,1.156,518,0.85,519,0.904,520,0.8,521,1.306,522,0.8,523,0.8,524,1.156,525,0.85,526,0.85,527,1.277,528,1.317,529,1.4,530,0.876,531,0.85,532,1.121,533,1.357,534,1.229,535,1.238,536,0.8,537,0.932,538,0.932,539,0.932,540,0.932,541,0.904,542,0.904,543,0.904,544,0.904,545,0.904,546,0.904,547,0.932,548,0.904,549,0.932,550,0.932,551,0.8,552,0.876,553,1.121,554,1.087,555,0.8,556,0.707,557,0.8]],["title/interfaces/MinimalTreks.html",[450,0.407,469,0.93]],["body/interfaces/MinimalTreks.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.712,34,0.012,35,0.523,36,0.544,41,0.165,58,0.236,90,0.403,108,0.726,121,0.338,124,0.57,133,0.592,149,0.005,150,0.007,151,0.005,276,0.647,277,1.047,285,0.808,297,1.138,301,1.152,302,1.47,311,1.382,350,1.301,369,1.262,396,0.938,401,0.938,436,0.805,438,1.658,450,0.842,451,0.882,452,0.938,453,0.938,454,1.587,455,1.534,456,1.567,457,1.615,458,1.615,459,1.615,460,1.926,461,1.879,462,1.615,463,1.651,464,0.882,465,0.967,466,1.345,467,0.757,468,0.757,469,1.152,470,1.864,471,1.338,472,1.519,473,0.967,474,1.384,475,1.519,476,1.301,477,1.615,478,1.825,479,1.77,480,1.301,481,1.763,482,1.701,483,1.615,484,1.384,485,1.342,486,1.384,487,1.05,488,1.865,489,1.384,490,1.425,491,1.384,492,1.384,493,1.384,494,1.384,495,1.342,496,1.342,497,1.345,498,1.384,499,1.384,500,1.083,501,1.301,502,1.342,503,1.968,504,0.967,505,0.91,506,0.967,507,0.967,508,0.967,509,0.967,510,0.967,511,0.967,512,0.967,513,0.967,514,1.342,515,1.519,516,1.342,517,1.187,518,0.882,519,0.938,520,0.83,521,1.342,522,0.83,523,0.83,524,1.187,525,0.882,526,0.882,527,1.304,528,1.345,529,1.429,530,0.91,531,0.882,532,1.152,533,1.386,534,1.262,535,1.264,536,0.83,537,0.967,538,0.967,539,0.967,540,0.967,541,0.938,542,0.938,543,0.938,544,0.938,545,0.938,546,0.938,547,0.967,548,0.938,549,0.967,550,0.967,551,0.83,552,0.91,553,1.152,554,1.117,555,0.83,556,0.734,557,0.83]],["title/injectables/MoreInformationsService.html",[281,1.391,1377,2.816]],["body/injectables/MoreInformationsService.html",[3,0.152,4,0.102,8,0.118,13,2.872,16,0.352,17,1.533,19,1.198,24,3.292,25,4.457,31,1.59,33,1.487,34,0.012,35,0.437,36,0.437,37,1.314,39,1.533,41,0.228,42,0.735,43,2.349,44,2.349,45,2.04,46,2.265,58,0.152,59,0.684,60,2.299,74,1.578,75,4.645,149,0.008,150,0.009,151,0.008,177,2.872,241,2.45,242,2.812,263,1.733,281,2.294,282,5.283,283,3.006,285,0.729,286,5.399,287,2.196,302,1.585,309,1.578,311,1.178,321,1.973,328,3.006,455,1.025,522,1.273,523,1.273,570,1.628,642,3.516,961,4.127,1377,4.645,1378,6.971,1379,5.824,1380,4.8,1381,5.872,1382,6.812,1383,7.749,1384,5.487,1385,6.812,1386,6.812,1387,5.487,1388,5.487,1389,5.872,1390,4.8,1391,6.141,1392,5.399,1393,5.399,1394,5.399,1395,5.487,1396,5.487]],["title/components/MoreItemPage.html",[0,0.515,125,1.188]],["body/components/MoreItemPage.html",[0,0.837,1,1.284,2,1.884,3,0.123,4,0.083,5,1.456,6,1.456,7,1.456,8,0.096,10,1.456,11,2.816,12,2.562,14,1.945,16,0.286,17,1.343,19,1.302,31,1.657,33,0.975,34,0.012,35,0.431,36,0.46,37,0.861,39,1.614,40,2.062,41,0.198,42,0.598,58,0.123,59,0.556,60,1.77,74,1.284,90,0.352,91,1.945,92,1.945,93,1.456,94,2.338,95,1.456,96,1.456,97,1.284,98,1.456,99,1.456,100,1.284,101,1.456,102,1.456,103,1.284,104,1.456,105,1.284,106,1.456,107,1.284,108,0.497,109,1.456,110,1.284,111,1.456,112,1.456,113,1.284,114,1.41,115,1.367,116,2.191,117,1.284,118,1.456,119,1.284,120,1.517,121,0.635,122,1.945,123,1.284,124,0.593,125,2.062,126,2.224,127,1.456,128,1.284,129,1.456,130,1.284,131,1.456,132,1.284,133,0.516,134,1.284,135,1.456,136,1.284,137,1.456,138,1.245,139,1.456,140,1.284,141,1.456,142,1.284,143,1.284,144,1.945,145,1.284,146,1.245,147,1.456,148,1.456,149,0.006,150,0.008,151,0.006,185,1.456,250,1.843,263,1.136,276,1.08,285,0.638,309,1.284,311,0.948,380,1.503,384,1.826,385,3.102,387,2.009,393,3.239,416,2.772,454,1.187,487,1.224,523,1.664,570,1.325,672,3.416,673,3.516,679,2.989,680,2.989,687,3.102,705,3.516,706,2.337,707,2.337,714,1.911,715,2.337,718,2.446,722,2.337,723,2.705,731,2.337,1397,6.22,1398,5.737,1399,3.906,1400,6.536,1401,6.717,1402,5.964,1403,4.526,1404,6.717,1405,5.323,1406,5.24,1407,3.906,1408,4.594,1409,4.514,1410,5.964,1411,4.464,1412,4.464,1413,4.464,1414,4.464,1415,3.906,1416,4.464,1417,4.36,1418,4.464,1419,3.263,1420,5.964]],["title/modules/MoreItemPageModule.html",[152,1.264,1421,3.019]],["body/modules/MoreItemPageModule.html",[0,0.736,3,0.163,4,0.11,8,0.127,34,0.012,41,0.231,42,0.791,47,1.646,58,0.163,59,0.736,90,0.465,125,2.404,126,1.646,149,0.008,150,0.01,151,0.008,152,1.806,154,2.435,155,2.622,156,3.678,157,2.837,158,2.526,159,2.622,166,3.973,168,3.049,169,2.837,170,2.622,173,3.29,178,3.29,185,1.924,186,4.856,187,5.163,188,5.163,192,3.394,193,3.394,194,3.57,261,3.089,262,4.005,263,1.501,264,3.575,1397,4.676,1398,4.313,1400,5.163,1421,6.164,1422,5.163,1423,5.163,1424,5.901,1425,5.901,1426,3.728,1427,2.837,1428,5.901,1429,4.313,1430,4.313,1431,3.089,1432,3.782]],["title/guards/MoreItemResolver.html",[186,2.816,1433,2.816]],["body/guards/MoreItemResolver.html",[3,0.162,4,0.109,8,0.126,16,0.375,17,1.594,19,1.275,31,1.453,33,1.546,34,0.012,35,0.454,36,0.454,37,1.365,39,1.315,41,0.233,42,0.783,58,0.162,59,0.728,126,1.975,149,0.008,150,0.01,151,0.008,177,3.058,185,1.906,186,4.827,241,2.739,263,1.486,281,2.385,320,3.745,321,2.546,322,3.745,327,3.058,375,3.745,376,3.745,384,1.789,487,1.199,523,1.356,570,1.734,642,3.745,1377,5.399,1379,4.271,1403,3.54,1405,4.631,1431,4.145,1434,3.984,1435,6.665,1436,5.112,1437,5.112,1438,5.843,1439,5.611,1440,6.276,1441,5.843,1442,5.611,1443,5.112,1444,5.112,1445,5.843,1446,5.843,1447,4.631,1448,4.631]],["title/components/MorePage.html",[0,0.515,128,1.188]],["body/components/MorePage.html",[0,0.838,1,1.288,2,1.888,3,0.124,4,0.083,5,1.46,6,1.46,7,1.46,8,0.097,10,1.46,11,2.816,12,2.562,14,1.949,16,0.287,17,1.345,19,0.977,31,1.658,33,0.977,34,0.012,35,0.431,36,0.46,37,0.863,39,1.616,40,2.151,41,0.207,42,0.6,45,1.665,46,1.848,58,0.124,59,0.558,60,1.328,74,1.719,90,0.353,91,1.949,92,1.949,93,1.46,94,2.341,95,1.46,96,1.46,97,1.288,98,1.46,99,1.46,100,1.288,101,1.46,102,1.46,103,1.288,104,1.46,105,1.288,106,1.46,107,1.288,108,0.498,109,1.46,110,1.288,111,1.46,112,1.46,113,1.288,114,1.414,115,1.37,116,2.194,117,1.288,118,1.46,119,1.288,120,1.52,121,0.636,122,1.949,123,1.288,124,0.593,125,1.288,126,1.876,127,1.46,128,2.064,129,1.46,130,1.288,131,1.46,132,1.288,133,0.518,134,1.288,135,1.46,136,1.288,137,1.46,138,1.249,139,1.46,140,1.288,141,1.46,142,1.288,143,1.288,144,1.949,145,1.288,146,1.249,147,1.46,148,1.46,149,0.006,150,0.008,151,0.006,185,1.46,250,1.848,263,1.139,285,0.639,287,2.08,297,0.772,309,1.719,380,1.508,384,1.829,385,3.107,387,2.012,393,3.242,399,4.311,416,2.776,454,1.189,487,1.226,522,1.666,570,1.328,642,2.869,672,3.418,679,2.995,680,2.995,687,3.107,705,3.521,706,2.343,707,2.343,714,1.916,715,2.343,718,2.453,722,2.343,723,2.712,731,2.343,1403,4.53,1406,5.246,1407,3.917,1408,4.6,1409,4.517,1415,3.917,1417,4.368,1419,3.272,1449,3.917,1450,6.726,1451,5.976,1452,5.466,1453,6.726,1454,5.976,1455,4.477,1456,4.477,1457,4.736,1458,4.477,1459,4.477,1460,4.477,1461,4.477,1462,5.976]],["title/modules/MorePageModule.html",[152,1.264,1463,2.816]],["body/modules/MorePageModule.html",[0,0.739,3,0.164,4,0.11,8,0.128,34,0.012,41,0.231,42,0.795,47,1.654,58,0.164,59,0.739,90,0.468,128,2.407,149,0.008,150,0.01,151,0.008,152,1.815,154,2.448,155,2.635,156,3.686,157,2.851,158,2.538,159,2.635,166,3.977,168,3.058,169,2.851,170,2.635,173,3.3,178,3.3,185,1.934,189,4.871,190,5.188,192,3.411,193,3.411,194,3.58,261,3.104,262,4.013,263,1.508,264,3.593,399,3.801,1426,3.739,1427,2.851,1429,4.335,1430,4.335,1431,3.104,1432,3.801,1463,5.754,1464,5.188,1465,5.188,1466,5.93,1467,5.93,1468,5.93]],["title/guards/MoreResolver.html",[189,2.816,1433,2.816]],["body/guards/MoreResolver.html",[3,0.166,4,0.112,8,0.13,16,0.386,19,1.314,31,1.235,33,1.314,34,0.012,35,0.386,36,0.386,37,1.161,41,0.234,42,0.807,58,0.166,59,0.75,126,2.01,149,0.008,150,0.01,151,0.008,177,3.151,185,1.963,189,4.915,241,2.592,281,2.428,285,0.644,320,3.858,322,3.858,327,3.151,375,3.858,376,3.858,384,1.843,522,1.397,570,1.786,642,3.858,1377,5.454,1379,4.4,1403,3.647,1431,4.187,1434,4.104,1437,5.267,1442,5.713,1443,5.267,1444,5.267,1447,4.771,1448,4.771,1469,5.267,1470,6.02,1471,6.02,1472,6.02,1473,6.02]],["title/injectables/OnlineTreksService.html",[28,1.908,281,1.391]],["body/injectables/OnlineTreksService.html",[3,0.093,4,0.063,8,0.073,13,1.762,16,0.216,17,1.103,19,1.069,24,2.566,25,3.646,28,2.262,31,1.702,33,1.681,34,0.012,35,0.494,36,0.5,37,1.485,39,1.807,40,0.968,41,0.21,42,0.451,43,1.441,44,1.441,45,1.252,46,1.39,54,3.844,55,1.619,58,0.093,59,0.42,60,2.284,74,1.823,75,4.593,120,0.857,121,0.546,124,0.645,149,0.005,150,0.007,151,0.005,168,1.441,175,4.634,177,1.762,241,2.907,242,3.128,263,1.891,276,0.61,277,1.012,281,1.65,282,4.322,283,1.845,285,0.524,286,4.575,287,2.352,293,2.668,295,3.58,297,1.02,302,1.584,307,2.158,309,1.823,311,1.339,321,1.211,328,1.845,384,1.031,416,2.022,432,2.158,466,1.427,467,0.713,468,0.713,469,0.758,471,1.185,482,1.733,502,0.883,527,0.735,528,0.758,533,0.781,535,1.037,536,1.34,541,1.663,542,1.285,543,1.285,544,1.663,545,1.285,546,1.285,548,1.663,554,1.384,570,0.999,581,3.841,583,2.158,584,2.296,607,2.946,632,4.063,712,2.158,716,2.158,719,2.461,764,4.634,826,2.668,912,5.024,961,3.841,1191,2.461,1304,2.296,1381,4.575,1389,5.57,1390,2.946,1391,6.101,1392,5.338,1393,5.338,1394,5.338,1474,6.595,1475,5.773,1476,4.285,1477,4.898,1478,4.285,1479,4.285,1480,4.285,1481,4.285,1482,4.285,1483,4.285,1484,4.285,1485,6.34,1486,6.34,1487,4.575,1488,4.898,1489,3.367,1490,3.367,1491,4.898,1492,3.367,1493,5.891,1494,4.898,1495,3.367,1496,4.898,1497,3.367,1498,4.898,1499,3.367,1500,4.898,1501,3.367,1502,3.367,1503,3.367,1504,3.367,1505,3.367,1506,3.367,1507,3.367,1508,3.367,1509,3.367,1510,3.367,1511,3.367,1512,2.946,1513,3.367,1514,3.367,1515,3.367,1516,3.367,1517,3.367,1518,3.367,1519,3.367,1520,3.367,1521,3.367,1522,3.367,1523,3.367,1524,2.668,1525,3.367,1526,3.367,1527,3.367,1528,3.367,1529,3.367,1530,3.367,1531,3.367,1532,3.367,1533,3.367,1534,3.367,1535,3.367,1536,3.367,1537,3.367,1538,3.367,1539,3.367,1540,3.367,1541,2.946,1542,2.461,1543,2.946,1544,2.668,1545,2.461,1546,3.367]],["title/interfaces/Picture.html",[450,0.407,482,0.93]],["body/interfaces/Picture.html",[3,0.098,4,0.066,8,0.077,16,0.228,29,0.708,34,0.012,35,0.511,36,0.542,41,0.165,58,0.236,90,0.543,108,0.724,121,0.336,124,0.569,133,0.59,149,0.005,150,0.007,151,0.005,276,0.644,277,1.044,285,0.807,297,1.139,301,1.55,302,1.468,311,1.381,350,1.297,369,1.258,396,0.933,401,0.933,436,0.801,438,1.876,450,0.842,451,0.878,452,0.933,453,0.933,454,1.586,455,1.532,456,1.562,457,1.611,458,1.611,459,1.611,460,1.924,461,1.876,462,1.611,463,1.647,464,0.878,465,0.962,466,1.341,467,0.753,468,0.753,469,0.801,470,1.698,471,1.046,472,1.515,473,0.962,474,1.862,475,1.515,476,1.297,477,1.611,478,1.822,479,1.767,480,1.297,481,1.759,482,1.729,483,1.611,484,1.378,485,1.337,486,1.378,487,1.046,488,1.862,489,1.378,490,1.422,491,1.378,492,1.378,493,1.378,494,1.378,495,1.337,496,1.337,497,1.341,498,1.378,499,1.378,500,1.079,501,1.297,502,1.337,503,1.966,504,0.962,505,0.905,506,0.962,507,0.962,508,0.962,509,0.962,510,0.962,511,0.962,512,0.962,513,0.962,514,1.337,515,1.515,516,1.337,517,1.183,518,0.878,519,0.933,520,0.826,521,1.337,522,0.826,523,0.826,524,1.183,525,0.878,526,0.878,527,1.3,528,1.341,529,1.425,530,0.905,531,0.878,532,1.147,533,1.382,534,1.258,535,1.261,536,0.826,537,0.962,538,0.962,539,0.962,540,0.962,541,0.933,542,0.933,543,0.933,544,0.933,545,0.933,546,0.933,547,0.962,548,0.933,549,0.962,550,0.962,551,0.826,552,0.905,553,1.147,554,1.113,555,0.826,556,0.73,557,0.826]],["title/interfaces/Poi.html",[133,0.478,450,0.407]],["body/interfaces/Poi.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.711,34,0.012,35,0.511,36,0.547,41,0.165,58,0.236,90,0.403,108,0.725,121,0.338,124,0.57,133,0.69,149,0.005,150,0.007,151,0.005,276,0.646,277,1.046,285,0.845,297,1.137,301,1.15,302,1.469,308,3.57,311,1.382,350,1.3,369,1.261,396,0.937,401,0.937,436,0.804,438,1.657,450,0.842,451,0.881,452,0.937,453,0.937,454,1.601,455,1.533,456,1.565,457,1.614,458,1.614,459,1.614,460,1.94,461,1.878,462,1.614,463,1.65,464,0.881,465,0.966,466,1.343,467,0.756,468,0.756,469,0.804,470,1.701,471,1.049,472,1.518,473,0.966,474,1.382,475,1.518,476,1.3,477,1.614,478,1.956,479,1.769,480,1.3,481,1.762,482,1.7,483,1.614,484,1.382,485,1.34,486,1.382,487,1.049,488,1.864,489,1.382,490,1.424,491,1.382,492,1.382,493,1.382,494,1.382,495,1.34,496,1.34,497,1.343,498,1.382,499,1.382,500,1.082,501,1.3,502,1.34,503,1.968,504,0.966,505,0.908,506,0.966,507,0.966,508,0.966,509,0.966,510,0.966,511,0.966,512,0.966,513,0.966,514,1.34,515,1.518,516,1.34,517,1.186,518,0.881,519,0.937,520,0.829,521,1.34,522,0.829,523,0.829,524,1.186,525,0.881,526,0.881,527,1.303,528,1.343,529,1.428,530,0.908,531,0.881,532,1.15,533,1.385,534,1.261,535,1.263,536,0.829,537,0.966,538,0.966,539,0.966,540,0.966,541,0.937,542,0.937,543,0.937,544,0.937,545,0.937,546,0.937,547,0.966,548,0.937,549,0.966,550,0.966,551,0.829,552,0.908,553,1.15,554,1.116,555,0.829,556,0.733,557,0.829]],["title/components/PoiComponent.html",[0,0.515,130,1.188]],["body/components/PoiComponent.html",[0,0.83,1,1.263,2,1.863,3,0.121,4,0.082,5,1.432,6,1.432,7,1.432,8,0.095,10,1.432,11,2.812,12,2.558,14,1.924,16,0.281,17,1.328,19,0.958,27,3.888,28,3.431,31,1.63,33,1.287,34,0.012,35,0.457,36,0.49,37,1.137,39,0.988,40,1.696,41,0.205,42,0.588,45,1.632,46,1.812,53,2.298,54,2.028,55,2.835,58,0.121,59,0.547,74,1.916,80,1.527,90,0.346,91,1.924,92,1.924,93,1.432,94,2.322,95,1.432,96,1.432,97,1.263,98,1.432,99,1.432,100,1.263,101,1.432,102,1.432,103,1.263,104,1.432,105,1.263,106,1.432,107,1.263,108,0.489,109,1.432,110,1.263,111,1.432,112,1.432,113,1.263,114,1.387,115,1.344,116,2.172,117,1.263,118,1.432,119,1.263,120,1.5,121,0.63,122,1.924,123,1.263,124,0.646,125,1.263,126,1.224,127,1.432,128,1.263,129,1.432,130,2.048,131,1.432,132,1.263,133,0.931,134,1.263,135,1.432,136,1.263,137,1.432,138,1.224,139,1.432,140,1.263,141,1.432,142,1.263,143,1.263,144,1.924,145,1.263,146,1.224,147,1.432,148,1.432,149,0.006,150,0.008,151,0.006,277,1.168,285,0.631,287,2.248,301,1.328,305,3.431,309,1.916,380,1.479,384,1.806,387,1.986,395,3.087,416,2.434,417,3.486,482,1.722,570,1.303,690,3.902,691,3.888,720,2.406,721,2.2,768,4.868,782,4.311,798,4.311,799,5.205,801,3.209,956,4.868,961,3.573,965,2.814,1306,2.814,1547,3.841,1548,6.66,1549,5.898,1550,3.841,1551,5.898,1552,4.39,1553,4.39,1554,4.39,1555,4.39,1556,5.898,1557,4.39,1558,3.841,1559,7.121,1560,7.429,1561,3.841,1562,3.841,1563,5.898,1564,5.898,1565,5.16]],["title/components/PoiDetailsComponent.html",[0,0.515,132,1.188]],["body/components/PoiDetailsComponent.html",[0,0.849,1,1.32,2,1.919,3,0.127,4,0.085,5,1.497,6,1.497,7,1.497,8,0.099,10,1.497,11,2.822,12,2.567,14,1.981,16,0.294,17,1.367,19,1.002,31,1.646,33,1.002,34,0.012,35,0.437,36,0.483,37,0.885,39,1.367,40,1.959,41,0.2,42,0.615,45,1.706,46,1.894,47,1.28,58,0.127,59,0.572,74,1.747,80,1.597,90,0.362,91,1.981,92,1.981,93,1.497,94,2.364,95,1.497,96,1.497,97,1.32,98,1.497,99,1.497,100,1.32,101,1.497,102,1.497,103,1.32,104,1.497,105,1.32,106,1.497,107,1.32,108,0.511,109,1.497,110,1.32,111,1.497,112,1.497,113,1.32,114,1.45,115,1.405,116,2.221,117,1.32,118,1.497,119,1.32,120,1.545,121,0.644,122,1.981,123,1.32,124,0.599,125,1.32,126,1.28,127,1.497,128,1.32,129,1.497,130,1.32,131,1.497,132,2.085,133,0.972,134,1.32,135,1.497,136,1.32,137,1.497,138,1.28,139,1.497,140,1.32,141,1.497,142,1.32,143,1.32,144,1.981,145,1.32,146,1.28,147,1.497,148,1.497,149,0.006,150,0.008,151,0.006,230,5.935,285,0.65,287,2.039,297,0.593,309,1.747,380,1.545,387,2.046,570,1.362,682,5.298,685,4.645,688,3.354,689,4.336,692,5.992,694,5.298,754,3.354,952,3.637,953,4.814,954,5.958,955,5.315,956,4.977,958,5.315,960,4.015,961,3.68,962,4.015,963,4.015,964,5.315,965,2.941,1558,4.015,1565,5.315,1566,7.103,1567,6.809,1568,4.589,1569,6.075,1570,4.589,1571,4.589,1572,4.589,1573,4.589,1574,4.589,1575,4.589]],["title/interfaces/Pois.html",[450,0.407,527,0.902]],["body/interfaces/Pois.html",[3,0.1,4,0.067,8,0.078,16,0.231,29,0.716,34,0.012,35,0.512,36,0.542,41,0.166,58,0.236,90,0.405,108,0.728,121,0.34,124,0.572,133,0.756,149,0.005,150,0.007,151,0.005,276,0.652,277,1.051,285,0.81,297,1.137,301,1.157,302,1.473,311,1.382,350,1.308,369,1.268,396,0.944,401,0.944,436,0.811,438,1.663,450,0.842,451,0.888,452,0.944,453,0.944,454,1.603,455,1.535,456,1.573,457,1.622,458,1.622,459,1.622,460,1.928,461,1.925,462,1.622,463,1.655,464,0.888,465,0.974,466,1.35,467,0.762,468,0.762,469,0.811,470,1.867,471,1.055,472,1.525,473,0.974,474,1.39,475,1.525,476,1.308,477,1.622,478,1.829,479,1.774,480,1.308,481,1.769,482,1.704,483,1.622,484,1.39,485,1.348,486,1.39,487,1.055,488,1.87,489,1.39,490,1.427,491,1.39,492,1.39,493,1.39,494,1.39,495,1.348,496,1.348,497,1.35,498,1.39,499,1.39,500,1.088,501,1.308,502,1.348,503,1.971,504,0.974,505,0.916,506,0.974,507,0.974,508,0.974,509,0.974,510,0.974,511,0.974,512,0.974,513,0.974,514,1.348,515,1.525,516,1.348,517,1.193,518,0.888,519,0.944,520,0.836,521,1.348,522,0.836,523,0.836,524,1.193,525,0.888,526,0.888,527,1.428,528,1.35,529,1.435,530,0.916,531,0.888,532,1.157,533,1.392,534,1.268,535,1.269,536,0.836,537,0.974,538,0.974,539,0.974,540,0.974,541,0.944,542,0.944,543,0.944,544,0.944,545,0.944,546,0.944,547,0.974,548,0.944,549,0.974,550,0.974,551,0.836,552,0.916,553,1.157,554,1.122,555,0.836,556,0.739,557,0.836]],["title/components/ProgressComponent.html",[0,0.515,134,1.188]],["body/components/ProgressComponent.html",[0,0.864,1,1.37,2,1.967,3,0.132,4,0.088,5,1.553,6,1.553,7,1.553,8,0.103,10,1.553,11,2.829,12,2.574,14,2.03,16,0.305,17,1.401,19,1.04,24,3.268,31,1.606,33,1.04,34,0.012,35,0.445,36,0.472,37,0.918,39,1.401,40,2.115,41,0.192,42,0.638,55,2.29,58,0.132,59,0.594,60,2.182,90,0.376,91,2.03,92,2.03,93,1.553,94,2.398,95,1.553,96,1.553,97,1.37,98,1.553,99,1.553,100,1.37,101,1.553,102,1.553,103,1.37,104,1.553,105,1.37,106,1.553,107,1.37,108,0.53,109,1.553,110,1.37,111,1.553,112,1.553,113,1.37,114,1.505,115,1.458,116,2.262,117,1.37,118,1.553,119,1.37,120,1.584,121,0.656,122,2.03,123,1.37,124,0.608,125,1.37,126,1.328,127,1.553,128,1.37,129,1.553,130,1.37,131,1.553,132,1.37,133,0.551,134,2.115,135,1.553,136,1.37,137,1.553,138,1.328,139,1.553,140,1.37,141,1.553,142,1.37,143,1.37,144,2.03,145,1.37,146,1.328,147,1.553,148,1.553,149,0.007,150,0.009,151,0.007,285,0.666,287,2.064,311,0.99,321,1.713,380,1.604,387,2.097,685,4.713,690,4.03,691,3.994,714,2.968,720,2.61,721,2.387,965,3.053,1014,4.933,1550,4.167,1576,4.167,1577,6.225,1578,6.225,1579,6.935,1580,6.225,1581,7.827,1582,7.354,1583,6.935,1584,7.354,1585,6.225,1586,4.763,1587,4.763,1588,4.763,1589,4.763,1590,4.763,1591,6.225,1592,4.763,1593,4.763,1594,4.763,1595,4.763,1596,6.225,1597,6.225]],["title/interfaces/Property.html",[450,0.407,503,1.019]],["body/interfaces/Property.html",[3,0.098,4,0.066,8,0.076,16,0.227,29,0.706,34,0.012,35,0.523,36,0.541,37,1.252,41,0.164,58,0.236,90,0.401,108,0.723,121,0.335,124,0.569,133,0.588,149,0.005,150,0.007,151,0.005,276,0.642,277,1.042,285,0.807,297,1.138,301,1.145,302,1.466,311,1.383,350,1.294,369,1.255,396,0.93,401,0.93,436,0.799,438,1.652,450,0.841,451,0.875,452,0.93,453,0.93,454,1.585,455,1.553,456,1.56,457,1.608,458,1.608,459,1.608,460,1.923,461,1.875,462,1.608,463,1.645,464,0.875,465,0.959,466,1.338,467,0.751,468,0.751,469,0.799,470,1.696,471,1.044,472,1.513,473,0.959,474,1.376,475,1.513,476,1.294,477,1.608,478,1.82,479,1.765,480,1.294,481,1.757,482,1.697,483,1.608,484,1.376,485,1.334,486,1.376,487,1.044,488,1.86,489,1.376,490,1.421,491,1.376,492,1.376,493,1.376,494,1.376,495,1.334,496,1.334,497,1.338,498,1.376,499,1.376,500,1.077,501,1.294,502,1.334,503,1.983,504,0.959,505,0.902,506,0.959,507,0.959,508,0.959,509,0.959,510,0.959,511,0.959,512,0.959,513,0.959,514,1.334,515,1.513,516,1.334,517,1.181,518,0.875,519,0.93,520,0.823,521,1.803,522,0.823,523,0.823,524,1.181,525,0.875,526,1.602,527,1.298,528,1.338,529,1.423,530,0.902,531,0.875,532,1.145,533,1.38,534,1.255,535,1.259,536,0.823,537,0.959,538,0.959,539,0.959,540,0.959,541,0.93,542,0.93,543,0.93,544,0.93,545,0.93,546,0.93,547,0.959,548,0.93,549,0.959,550,0.959,551,0.823,552,0.902,553,1.145,554,1.11,555,0.823,556,0.728,557,0.823]],["title/components/SearchComponent.html",[0,0.515,136,1.188]],["body/components/SearchComponent.html",[0,0.765,1,1.081,2,1.674,3,0.104,4,0.07,5,1.225,6,1.225,7,1.225,8,0.081,10,1.225,11,2.775,12,2.525,14,1.728,16,0.34,17,1.193,19,1.157,21,3.756,24,3.241,27,3.213,28,3.079,31,1.652,33,1.455,34,0.012,35,0.468,36,0.491,37,1.285,39,1.687,40,2.238,41,0.207,42,0.503,47,1.048,53,1.967,54,1.735,55,2.95,58,0.104,59,0.468,60,2.309,74,1.524,80,1.843,90,0.296,91,1.728,92,2.378,93,1.225,94,2.174,95,1.225,96,1.225,97,1.081,98,1.225,99,1.225,100,1.081,101,1.225,102,1.225,103,1.081,104,1.225,105,1.081,106,1.225,107,1.081,108,0.418,109,1.225,110,1.081,111,1.225,112,1.225,113,1.081,114,1.187,115,1.15,116,2.002,117,1.081,118,1.225,119,1.081,120,1.348,121,0.708,122,1.728,123,1.081,124,0.633,125,1.081,126,1.048,127,1.225,128,1.081,129,1.225,130,1.081,131,1.225,132,1.081,133,0.435,134,1.081,135,1.225,136,1.917,137,1.225,138,1.048,139,1.225,140,1.081,141,1.225,142,1.081,143,1.081,144,1.728,145,1.081,146,1.048,147,1.225,148,1.225,149,0.005,150,0.007,151,0.005,158,2.268,241,1.351,263,1.348,285,0.567,287,2.255,297,0.908,305,3.461,309,1.524,311,1.217,380,1.265,384,1.622,385,2.835,387,1.784,393,3.093,454,1.054,455,0.702,469,1.382,471,1.26,536,1.424,553,0.846,570,1.115,672,3.241,676,3.873,679,2.655,680,2.655,682,4.872,687,2.835,688,2.746,689,3.834,690,3.363,691,3.489,692,5.478,694,3.873,705,3.213,706,1.967,707,1.967,714,1.608,715,1.967,718,2.059,720,2.059,721,1.883,722,1.967,723,2.276,725,3.287,731,1.967,732,3.287,733,3.287,754,2.746,757,4.635,981,3.047,1283,3.873,1304,4.184,1598,3.287,1599,5.33,1600,5.831,1601,6.137,1602,5.298,1603,6.137,1604,4.635,1605,6.137,1606,5.298,1607,3.757,1608,4.199,1609,3.757,1610,3.757,1611,5.298,1612,3.757,1613,5.37,1614,4.635,1615,3.757,1616,3.757,1617,3.757,1618,3.757,1619,2.978,1620,2.978,1621,2.978,1622,3.757,1623,5.298,1624,3.757,1625,3.757,1626,3.757,1627,3.287,1628,5.298,1629,5.298,1630,5.298,1631,5.298]],["title/injectables/SearchTreksService.html",[281,1.391,1599,3.019]],["body/injectables/SearchTreksService.html",[3,0.169,4,0.114,8,0.132,13,3.208,16,0.393,17,1.64,31,1.258,33,1.338,34,0.012,35,0.393,36,0.393,37,1.182,39,1.379,41,0.201,42,0.821,58,0.169,59,0.764,121,0.735,149,0.008,150,0.01,151,0.008,241,2.893,281,2.454,283,3.358,287,2.103,297,1.005,328,3.358,471,1.711,570,1.818,584,4.178,1599,5.326,1600,6.375,1613,7.189,1619,5.774,1632,6.375,1633,7.286,1634,6.128,1635,6.128,1636,6.128,1637,6.128]],["title/interfaces/Settings.html",[29,0.822,450,0.407]],["body/interfaces/Settings.html",[3,0.099,4,0.067,8,0.078,16,0.231,29,1.022,34,0.012,35,0.512,36,0.539,41,0.166,58,0.236,90,0.405,108,0.8,121,0.34,124,0.571,133,0.594,149,0.005,150,0.007,151,0.005,276,1.183,277,1.05,285,0.809,297,1.137,301,1.156,302,1.472,311,1.382,350,1.306,369,1.267,396,0.943,401,0.943,436,0.809,438,1.662,450,0.842,451,0.887,452,0.943,453,0.943,454,1.589,455,1.535,456,1.571,457,1.62,458,1.62,459,1.62,460,1.927,461,1.882,462,1.62,463,1.654,464,0.887,465,0.972,466,1.349,467,0.761,468,0.761,469,0.809,470,1.705,471,1.054,472,1.524,473,0.972,474,1.389,475,1.524,476,1.306,477,1.62,478,1.828,479,1.773,480,1.306,481,1.767,482,1.703,483,1.62,484,1.389,485,1.347,486,1.389,487,1.054,488,1.869,489,1.389,490,1.427,491,1.389,492,1.389,493,1.389,494,1.389,495,1.347,496,1.347,497,1.349,498,1.389,499,1.389,500,1.087,501,1.306,502,1.347,503,1.97,504,0.972,505,0.915,506,0.972,507,0.972,508,0.972,509,0.972,510,0.972,511,0.972,512,0.972,513,0.972,514,1.347,515,1.524,516,1.347,517,1.192,518,0.887,519,0.943,520,0.835,521,1.347,522,0.835,523,0.835,524,1.517,525,1.612,526,0.887,527,1.308,528,1.349,529,1.434,530,0.915,531,0.887,532,1.156,533,1.39,534,1.267,535,1.268,536,0.835,537,0.972,538,0.972,539,0.972,540,0.972,541,0.943,542,0.943,543,0.943,544,0.943,545,0.943,546,0.943,547,0.972,548,0.943,549,0.972,550,0.972,551,0.835,552,0.915,553,1.156,554,1.121,555,0.835,556,0.738,557,0.835]],["title/injectables/SettingsService.html",[30,2.07,281,1.391]],["body/injectables/SettingsService.html",[3,0.096,4,0.065,8,0.075,13,1.819,16,0.223,17,1.128,19,0.759,24,2.612,25,3.701,29,1.457,30,2.512,31,1.667,33,1.551,34,0.012,35,0.49,36,0.481,37,1.37,39,1.719,40,1.962,41,0.207,42,0.466,43,1.488,44,1.488,45,1.292,46,1.434,58,0.096,59,0.433,60,2.376,66,1.819,74,1.691,75,2.369,82,2.512,108,0.815,124,0.564,149,0.005,150,0.007,151,0.005,175,4.986,177,1.819,221,2.754,222,3.417,241,2.634,242,2.815,263,1.997,276,1.064,281,1.688,283,1.904,285,0.536,287,2.303,293,2.754,295,4.703,297,0.969,302,1.169,309,1.851,311,1.023,321,1.25,328,1.904,416,2.068,455,1.369,456,0.911,470,0.857,495,1.314,497,1.323,500,1.504,503,1.991,516,0.911,520,0.807,524,1.493,525,1.884,528,1.535,529,0.832,530,1.275,531,1.587,532,1.448,555,1.163,570,1.031,575,2.54,614,3.04,637,3.04,712,2.227,716,2.227,717,2.754,744,3.04,747,3.04,753,3.04,777,3.221,827,3.663,912,5.099,961,3.036,965,2.227,1170,3.04,1381,4.658,1389,3.972,1391,3.972,1392,2.754,1393,2.754,1394,2.754,1638,3.04,1639,6.784,1640,5.011,1641,5.011,1642,6.434,1643,5.011,1644,5.878,1645,6.434,1646,5.629,1647,5.011,1648,6.434,1649,5.011,1650,5.011,1651,3.475,1652,5.011,1653,3.475,1654,3.475,1655,5.011,1656,3.475,1657,3.475,1658,3.475,1659,5.878,1660,3.475,1661,3.475,1662,5.011,1663,3.475,1664,3.475,1665,3.475,1666,3.475,1667,5.011,1668,3.475,1669,3.475,1670,3.475,1671,3.475,1672,3.475,1673,3.475,1674,5.011,1675,3.475,1676,3.475,1677,3.475,1678,3.475,1679,3.475,1680,3.475,1681,3.475,1682,5.878,1683,3.475,1684,3.475,1685,3.475,1686,3.475,1687,3.475,1688,3.475,1689,3.475,1690,3.475,1691,3.475,1692,3.475,1693,5.878,1694,3.475,1695,3.475,1696,5.011,1697,3.475,1698,6.434,1699,5.011,1700,3.475,1701,3.475,1702,5.011,1703,3.475,1704,3.475,1705,5.011,1706,3.475,1707,5.011,1708,3.475,1709,3.475,1710,3.475,1711,3.475,1712,5.011,1713,3.475,1714,3.475,1715,3.475,1716,3.475,1717,3.475,1718,3.475,1719,3.475,1720,3.475,1721,5.011,1722,3.475,1723,3.475,1724,3.475,1725,5.011,1726,3.475,1727,3.475,1728,3.475,1729,5.011,1730,3.475,1731,3.475,1732,3.475,1733,3.475,1734,5.878,1735,3.475,1736,3.475,1737,3.475]],["title/modules/SharedModule.html",[152,1.264,1738,2.647]],["body/modules/SharedModule.html",[3,0.16,4,0.107,8,0.124,34,0.012,41,0.23,42,0.773,43,2.471,44,2.471,47,1.61,58,0.16,59,0.719,90,0.455,110,2.469,119,2.469,121,0.664,123,2.469,124,0.581,149,0.008,150,0.01,151,0.008,152,1.767,154,2.382,155,2.565,156,3.643,157,2.775,158,2.471,159,3.367,168,3.008,169,2.775,170,2.565,173,2.666,178,3.246,194,3.522,196,3.699,766,4.219,1070,4.792,1426,3.679,1427,2.775,1738,5.521,1739,5.05,1740,5.05,1741,5.05,1742,5.772,1743,5.772,1744,5.772,1745,7.028,1746,7.028,1747,3.935]],["title/modules/SharedTreksModule.html",[152,1.264,1748,2.647]],["body/modules/SharedTreksModule.html",[3,0.164,4,0.11,8,0.128,34,0.012,41,0.229,42,0.795,47,1.654,58,0.164,59,0.739,90,0.468,130,2.478,140,2.478,149,0.008,150,0.01,151,0.008,152,1.815,154,2.448,155,2.635,156,3.686,157,2.851,158,2.538,159,3.407,168,3.058,169,2.851,170,2.635,173,2.739,178,3.3,185,1.934,194,3.58,261,3.739,1426,3.739,1427,2.851,1748,5.475,1749,5.188,1750,5.188,1751,5.188,1752,5.188,1753,5.93,1754,5.93,1755,5.93,1756,4.7,1757,5.93]],["title/modules/SharedUiModule.html",[152,1.264,166,1.985]],["body/modules/SharedUiModule.html",[3,0.161,4,0.108,8,0.125,34,0.012,41,0.23,42,0.779,47,1.622,58,0.161,59,0.725,90,0.458,97,2.472,100,2.472,117,2.472,149,0.008,150,0.01,151,0.008,152,1.78,154,2.4,155,2.584,156,3.655,157,2.795,158,2.489,159,3.378,166,4.145,168,3.022,169,2.795,170,2.584,173,2.686,178,3.261,185,1.896,194,3.538,261,3.695,382,4.608,430,4.608,1426,3.695,1427,2.795,1752,5.087,1758,5.087,1759,5.087,1760,5.087,1761,5.814,1762,5.814,1763,5.814,1764,5.814,1765,5.814,1766,5.814]],["title/components/TabsPage.html",[0,0.515,138,1.152]],["body/components/TabsPage.html",[0,0.879,1,1.418,2,2.011,3,0.136,4,0.092,5,1.608,6,1.608,7,1.608,8,0.106,10,1.608,11,2.836,12,2.58,14,2.076,19,1.076,20,3.907,21,3.959,24,3.511,31,1.012,33,1.076,34,0.012,35,0.452,36,0.316,37,0.951,41,0.206,42,0.661,47,1.375,58,0.136,59,0.615,60,1.889,90,0.389,91,2.076,92,2.076,93,1.608,94,2.43,95,1.608,96,1.608,97,1.418,98,1.608,99,1.608,100,1.418,101,1.608,102,1.608,103,1.418,104,1.608,105,1.418,106,1.608,107,1.418,108,0.549,109,1.608,110,1.418,111,1.608,112,1.608,113,1.418,114,1.558,115,1.509,116,2.3,117,1.418,118,1.608,119,1.418,120,1.619,121,0.667,122,2.076,123,1.418,124,0.616,125,1.418,126,1.375,127,1.608,128,1.418,129,1.608,130,1.418,131,1.608,132,1.418,133,0.57,134,1.418,135,1.608,136,1.418,137,1.608,138,2.078,139,1.608,140,1.418,141,1.608,142,1.418,143,1.418,144,2.076,145,1.418,146,1.375,147,1.608,148,1.608,149,0.007,150,0.009,151,0.007,185,1.608,263,1.254,277,0.864,301,1.677,380,1.661,387,2.144,642,3.16,1409,4.624,1427,2.37,1524,5.045,1767,4.314,1768,5.57,1769,7.051,1770,6.367,1771,8.039,1772,4.931,1773,4.931,1774,4.931,1775,4.931,1776,4.931,1777,6.367,1778,6.367,1779,6.367]],["title/modules/TabsPageModule.html",[152,1.264,1780,3.019]],["body/modules/TabsPageModule.html",[3,0.161,4,0.108,8,0.125,34,0.012,41,0.234,42,0.779,43,2.489,44,2.489,47,1.622,58,0.161,59,0.725,90,0.458,138,2.297,149,0.008,150,0.01,151,0.008,152,1.78,154,2.4,155,2.584,156,3.655,157,2.795,158,2.489,159,2.584,166,3.959,168,3.022,169,2.795,170,2.584,173,3.261,178,3.261,192,3.344,193,3.344,194,3.538,196,3.726,1426,3.695,1427,2.795,1463,5.615,1747,3.964,1780,6.32,1781,5.087,1782,5.087,1783,5.087,1784,5.615,1785,5.615,1786,5.814,1787,5.087,1788,5.814,1789,5.814,1790,5.814]],["title/modules/TabsPageRoutingModule.html",[152,1.264,1784,2.816]],["body/modules/TabsPageRoutingModule.html",[0,0.923,3,0.151,4,0.102,8,0.118,34,0.012,41,0.22,42,0.733,58,0.151,59,0.682,120,1.73,121,0.767,124,0.64,126,1.527,138,1.897,146,2.064,149,0.008,150,0.009,151,0.008,154,2.259,159,2.433,173,2.528,178,3.142,185,1.785,203,4.743,204,4.338,250,3.055,261,3.561,262,3.874,263,1.392,264,5.186,265,4.789,266,4.789,267,4.338,268,7.101,276,1.34,277,1.357,1398,4.001,1405,4.338,1431,3.561,1432,3.508,1524,4.338,1768,4.789,1784,4.638,1787,4.789,1791,5.474,1792,5.474,1793,7.742,1794,3.913,1795,6.803,1796,4.972,1797,6.803,1798,4.972,1799,6.803,1800,5.474,1801,5.474,1802,5.474]],["title/interfaces/TouristicCategorie.html",[450,0.407,531,1.019]],["body/interfaces/TouristicCategorie.html",[3,0.099,4,0.067,8,0.078,16,0.231,29,0.715,34,0.012,35,0.524,36,0.539,41,0.166,58,0.236,90,0.405,108,0.727,121,0.34,124,0.571,133,0.594,149,0.005,150,0.007,151,0.005,276,0.651,277,1.05,285,0.809,297,1.138,301,1.156,302,1.472,311,1.384,350,1.306,369,1.267,396,0.943,401,0.943,436,0.809,438,1.662,450,0.842,451,0.887,452,0.943,453,0.943,454,1.589,455,1.556,456,1.571,457,1.62,458,1.62,459,1.62,460,1.927,461,1.882,462,1.62,463,1.654,464,0.887,465,0.972,466,1.349,467,0.761,468,0.761,469,0.809,470,1.705,471,1.054,472,1.524,473,0.972,474,1.389,475,1.524,476,1.306,477,1.62,478,1.828,479,1.773,480,1.306,481,1.767,482,1.703,483,1.62,484,1.389,485,1.347,486,1.389,487,1.054,488,1.869,489,1.389,490,1.427,491,1.389,492,1.389,493,1.389,494,1.389,495,1.347,496,1.347,497,1.349,498,1.389,499,1.389,500,1.087,501,1.306,502,1.347,503,1.97,504,0.972,505,0.915,506,0.972,507,0.972,508,0.972,509,0.972,510,0.972,511,0.972,512,0.972,513,0.972,514,1.347,515,1.524,516,1.347,517,1.192,518,0.887,519,0.943,520,0.835,521,1.347,522,0.835,523,0.835,524,1.192,525,0.887,526,0.887,527,1.308,528,1.349,529,1.434,530,0.915,531,1.267,532,1.156,533,1.39,534,1.267,535,1.268,536,0.835,537,0.972,538,0.972,539,0.972,540,0.972,541,0.943,542,0.943,543,0.943,544,0.943,545,0.943,546,0.943,547,0.972,548,0.943,549,0.972,550,0.972,551,0.835,552,0.915,553,1.156,554,1.121,555,0.835,556,0.738,557,0.835]],["title/interfaces/TouristicCategoryWithFeatures.html",[450,0.407,532,0.93]],["body/interfaces/TouristicCategoryWithFeatures.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.712,34,0.012,35,0.523,36,0.54,41,0.165,58,0.236,90,0.403,108,0.726,121,0.338,124,0.57,133,0.592,149,0.005,150,0.007,151,0.005,276,0.647,277,1.047,285,0.808,297,1.137,301,1.152,302,1.47,311,1.384,350,1.301,369,1.262,396,0.938,401,0.938,436,0.805,438,1.658,450,0.842,451,0.882,452,0.938,453,0.938,454,1.587,455,1.555,456,1.567,457,1.615,458,1.615,459,1.615,460,1.926,461,1.879,462,1.615,463,1.651,464,0.882,465,0.967,466,1.345,467,0.757,468,0.757,469,0.805,470,1.864,471,1.05,472,1.519,473,0.967,474,1.384,475,1.519,476,1.301,477,1.615,478,1.825,479,1.77,480,1.301,481,1.763,482,1.701,483,1.615,484,1.384,485,1.342,486,1.384,487,1.05,488,1.865,489,1.384,490,1.425,491,1.384,492,1.384,493,1.384,494,1.384,495,1.342,496,1.342,497,1.345,498,1.384,499,1.384,500,1.083,501,1.301,502,1.342,503,1.968,504,0.967,505,0.91,506,0.967,507,0.967,508,0.967,509,0.967,510,0.967,511,0.967,512,0.967,513,0.967,514,1.342,515,1.519,516,1.342,517,1.187,518,0.882,519,0.938,520,0.83,521,1.342,522,0.83,523,0.83,524,1.187,525,0.882,526,0.882,527,1.304,528,1.345,529,1.651,530,0.91,531,0.882,532,1.345,533,1.386,534,1.262,535,1.264,536,0.83,537,0.967,538,0.967,539,0.967,540,0.967,541,0.938,542,0.938,543,0.938,544,0.938,545,0.938,546,0.938,547,0.967,548,0.938,549,0.967,550,0.967,551,0.83,552,0.91,553,1.152,554,1.117,555,0.83,556,0.734,557,0.83]],["title/interfaces/TouristicContent.html",[450,0.407,529,0.988]],["body/interfaces/TouristicContent.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.711,34,0.012,35,0.511,36,0.547,41,0.165,58,0.236,90,0.403,108,0.725,121,0.338,124,0.57,133,0.591,149,0.005,150,0.007,151,0.005,276,0.646,277,1.046,285,0.845,297,1.137,301,1.15,302,1.469,308,3.57,311,1.382,350,1.3,369,1.261,396,0.937,401,0.937,436,0.804,438,1.657,450,0.842,451,0.881,452,0.937,453,0.937,454,1.601,455,1.533,456,1.565,457,1.614,458,1.614,459,1.614,460,1.94,461,1.878,462,1.614,463,1.65,464,0.881,465,0.966,466,1.343,467,0.756,468,0.756,469,0.804,470,1.701,471,1.049,472,1.518,473,0.966,474,1.382,475,1.518,476,1.3,477,1.614,478,1.956,479,1.769,480,1.3,481,1.762,482,1.7,483,1.614,484,1.382,485,1.34,486,1.382,487,1.049,488,1.864,489,1.382,490,1.424,491,1.382,492,1.382,493,1.382,494,1.382,495,1.34,496,1.34,497,1.343,498,1.382,499,1.382,500,1.082,501,1.3,502,1.34,503,1.968,504,0.966,505,0.908,506,0.966,507,0.966,508,0.966,509,0.966,510,0.966,511,0.966,512,0.966,513,0.966,514,1.34,515,1.518,516,1.34,517,1.186,518,0.881,519,0.937,520,0.829,521,1.34,522,0.829,523,0.829,524,1.186,525,0.881,526,0.881,527,1.303,528,1.343,529,1.559,530,0.908,531,0.881,532,1.15,533,1.385,534,1.261,535,1.263,536,0.829,537,0.966,538,0.966,539,0.966,540,0.966,541,0.937,542,0.937,543,0.937,544,0.937,545,0.937,546,0.937,547,0.966,548,0.937,549,0.966,550,0.966,551,0.829,552,0.908,553,1.15,554,1.116,555,0.829,556,0.733,557,0.829]],["title/interfaces/TouristicContents.html",[450,0.407,528,0.93]],["body/interfaces/TouristicContents.html",[3,0.1,4,0.067,8,0.078,16,0.231,29,0.716,34,0.012,35,0.512,36,0.542,41,0.166,58,0.236,90,0.405,108,0.728,121,0.34,124,0.572,133,0.595,149,0.005,150,0.007,151,0.005,276,0.652,277,1.051,285,0.81,297,1.137,301,1.157,302,1.473,311,1.382,350,1.308,369,1.268,396,0.944,401,0.944,436,0.811,438,1.663,450,0.842,451,0.888,452,0.944,453,0.944,454,1.603,455,1.535,456,1.573,457,1.622,458,1.622,459,1.622,460,1.928,461,1.925,462,1.622,463,1.655,464,0.888,465,0.974,466,1.35,467,0.762,468,0.762,469,0.811,470,1.867,471,1.055,472,1.525,473,0.974,474,1.39,475,1.525,476,1.308,477,1.622,478,1.829,479,1.774,480,1.308,481,1.769,482,1.704,483,1.622,484,1.39,485,1.348,486,1.39,487,1.055,488,1.87,489,1.39,490,1.427,491,1.39,492,1.39,493,1.39,494,1.39,495,1.348,496,1.348,497,1.35,498,1.39,499,1.39,500,1.088,501,1.308,502,1.348,503,1.971,504,0.974,505,0.916,506,0.974,507,0.974,508,0.974,509,0.974,510,0.974,511,0.974,512,0.974,513,0.974,514,1.348,515,1.525,516,1.348,517,1.193,518,0.888,519,0.944,520,0.836,521,1.348,522,0.836,523,0.836,524,1.193,525,0.888,526,0.888,527,1.309,528,1.472,529,1.655,530,0.916,531,0.888,532,1.157,533,1.392,534,1.268,535,1.269,536,0.836,537,0.974,538,0.974,539,0.974,540,0.974,541,0.944,542,0.944,543,0.944,544,0.944,545,0.944,546,0.944,547,0.974,548,0.944,549,0.974,550,0.974,551,0.836,552,0.916,553,1.157,554,1.122,555,0.836,556,0.739,557,0.836]],["title/interfaces/TouristicEvent.html",[450,0.407,534,1.019]],["body/interfaces/TouristicEvent.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.711,34,0.012,35,0.511,36,0.547,41,0.165,58,0.236,90,0.403,108,0.725,121,0.338,124,0.57,133,0.591,149,0.005,150,0.007,151,0.005,276,0.646,277,1.046,285,0.845,297,1.137,301,1.15,302,1.469,308,3.57,311,1.382,350,1.3,369,1.261,396,0.937,401,0.937,436,0.804,438,1.657,450,0.842,451,0.881,452,0.937,453,0.937,454,1.601,455,1.533,456,1.565,457,1.614,458,1.614,459,1.614,460,1.94,461,1.878,462,1.614,463,1.65,464,0.881,465,0.966,466,1.343,467,0.756,468,0.756,469,0.804,470,1.701,471,1.049,472,1.518,473,0.966,474,1.382,475,1.518,476,1.3,477,1.614,478,1.956,479,1.769,480,1.3,481,1.762,482,1.7,483,1.614,484,1.382,485,1.34,486,1.382,487,1.049,488,1.864,489,1.382,490,1.424,491,1.382,492,1.382,493,1.382,494,1.382,495,1.34,496,1.34,497,1.343,498,1.382,499,1.382,500,1.082,501,1.3,502,1.34,503,1.968,504,0.966,505,0.908,506,0.966,507,0.966,508,0.966,509,0.966,510,0.966,511,0.966,512,0.966,513,0.966,514,1.34,515,1.518,516,1.34,517,1.186,518,0.881,519,0.937,520,0.829,521,1.34,522,0.829,523,0.829,524,1.186,525,0.881,526,0.881,527,1.303,528,1.343,529,1.428,530,0.908,531,0.881,532,1.15,533,1.385,534,1.473,535,1.263,536,0.829,537,0.966,538,0.966,539,0.966,540,0.966,541,0.937,542,0.937,543,0.937,544,0.937,545,0.937,546,0.937,547,0.966,548,0.937,549,0.966,550,0.966,551,0.829,552,0.908,553,1.15,554,1.116,555,0.829,556,0.733,557,0.829]],["title/interfaces/TouristicEvents.html",[450,0.407,533,0.959]],["body/interfaces/TouristicEvents.html",[3,0.1,4,0.067,8,0.078,16,0.231,29,0.716,34,0.012,35,0.512,36,0.542,41,0.166,58,0.236,90,0.405,108,0.728,121,0.34,124,0.572,133,0.595,149,0.005,150,0.007,151,0.005,276,0.652,277,1.051,285,0.81,297,1.137,301,1.157,302,1.473,311,1.382,350,1.308,369,1.268,396,0.944,401,0.944,436,0.811,438,1.663,450,0.842,451,0.888,452,0.944,453,0.944,454,1.603,455,1.535,456,1.573,457,1.622,458,1.622,459,1.622,460,1.928,461,1.925,462,1.622,463,1.655,464,0.888,465,0.974,466,1.35,467,0.762,468,0.762,469,0.811,470,1.867,471,1.055,472,1.525,473,0.974,474,1.39,475,1.525,476,1.308,477,1.622,478,1.829,479,1.774,480,1.308,481,1.769,482,1.704,483,1.622,484,1.39,485,1.348,486,1.39,487,1.055,488,1.87,489,1.39,490,1.427,491,1.39,492,1.39,493,1.39,494,1.39,495,1.348,496,1.348,497,1.35,498,1.39,499,1.39,500,1.088,501,1.308,502,1.348,503,1.971,504,0.974,505,0.916,506,0.974,507,0.974,508,0.974,509,0.974,510,0.974,511,0.974,512,0.974,513,0.974,514,1.348,515,1.525,516,1.348,517,1.193,518,0.888,519,0.944,520,0.836,521,1.348,522,0.836,523,0.836,524,1.193,525,0.888,526,0.888,527,1.309,528,1.35,529,1.435,530,0.916,531,0.888,532,1.157,533,1.518,534,1.613,535,1.269,536,0.836,537,0.974,538,0.974,539,0.974,540,0.974,541,0.944,542,0.944,543,0.944,544,0.944,545,0.944,546,0.944,547,0.974,548,0.944,549,0.974,550,0.974,551,0.836,552,0.916,553,1.157,554,1.122,555,0.836,556,0.739,557,0.836]],["title/interfaces/Trek.html",[124,0.341,450,0.407]],["body/interfaces/Trek.html",[3,0.099,4,0.066,8,0.077,16,0.229,29,0.712,34,0.012,35,0.512,36,0.545,41,0.165,58,0.236,90,0.403,108,0.726,121,0.338,124,0.593,133,0.592,149,0.005,150,0.007,151,0.005,276,0.647,277,1.047,285,0.845,297,1.137,301,1.152,302,1.47,308,2.803,311,1.382,350,1.301,369,1.262,396,0.938,401,0.938,436,0.805,438,1.658,450,0.842,451,0.882,452,0.938,453,0.938,454,1.601,455,1.534,456,1.567,457,1.615,458,1.615,459,1.615,460,1.94,461,1.879,462,1.615,463,1.651,464,0.882,465,0.967,466,1.345,467,0.757,468,0.757,469,0.805,470,1.702,471,1.05,472,1.519,473,0.967,474,1.384,475,1.519,476,1.301,477,1.615,478,1.956,479,1.77,480,1.658,481,1.763,482,1.701,483,1.615,484,1.384,485,1.342,486,1.384,487,1.05,488,1.865,489,1.384,490,1.425,491,1.384,492,1.384,493,1.384,494,1.384,495,1.342,496,1.342,497,1.345,498,1.384,499,1.384,500,1.083,501,1.301,502,1.342,503,1.968,504,0.967,505,0.91,506,0.967,507,0.967,508,0.967,509,0.967,510,0.967,511,0.967,512,0.967,513,0.967,514,1.342,515,1.519,516,1.342,517,1.187,518,0.882,519,0.938,520,0.83,521,1.342,522,0.83,523,0.83,524,1.187,525,0.882,526,0.882,527,1.304,528,1.345,529,1.429,530,0.91,531,0.882,532,1.152,533,1.386,534,1.262,535,1.264,536,0.83,537,0.967,538,0.967,539,0.967,540,0.967,541,0.938,542,0.938,543,0.938,544,0.938,545,0.938,546,0.938,547,0.967,548,0.938,549,0.967,550,0.967,551,0.83,552,0.91,553,1.152,554,1.117,555,0.83,556,0.734,557,0.83]],["title/components/TrekCardComponent.html",[0,0.515,140,1.188]],["body/components/TrekCardComponent.html",[0,0.698,1,0.919,2,1.489,3,0.088,4,0.059,5,1.041,6,1.041,7,1.041,8,0.069,10,1.041,11,2.732,12,2.485,14,1.537,16,0.302,17,1.061,19,1.029,27,3.451,28,3.045,29,1.312,30,3.304,31,1.645,33,1.222,34,0.012,35,0.423,36,0.5,37,1.08,39,1.391,40,1.355,41,0.191,42,0.428,47,0.891,53,1.672,54,1.475,55,2.265,57,1.837,58,0.088,59,0.398,60,2.173,66,3.236,68,3.02,74,0.919,80,2.4,90,0.252,91,1.537,92,1.537,93,1.041,94,2.016,95,1.041,96,1.041,97,0.919,98,1.041,99,1.041,100,0.919,101,1.041,102,1.041,103,0.919,104,1.041,105,0.919,106,1.041,107,0.919,108,0.355,109,1.041,110,0.919,111,1.041,112,1.041,113,0.919,114,1.009,115,0.978,116,1.826,117,0.919,118,1.041,119,0.919,120,1.199,121,0.529,122,1.537,123,0.919,124,0.681,125,0.919,126,0.891,127,1.041,128,0.919,129,1.041,130,0.919,131,1.041,132,0.919,133,0.369,134,0.919,135,1.041,136,0.919,137,1.041,138,0.891,139,1.041,140,1.778,141,1.041,142,0.919,143,0.919,144,1.537,145,0.919,146,0.891,147,1.041,148,1.041,149,0.004,150,0.007,151,0.004,200,2.177,247,3.444,250,1.318,263,1.199,277,1.084,285,0.504,287,2.276,297,0.967,301,1.061,307,3.02,309,0.919,311,1.097,315,3.734,316,3.444,380,1.075,384,1.442,385,2.586,387,1.587,393,2.551,395,2.466,399,2.047,416,1.945,417,3.236,436,1.26,476,0.812,482,1.26,490,1.271,500,1.46,570,0.948,579,3.444,627,4.122,630,3.734,663,3.962,669,1.672,690,3.612,691,3.451,720,1.75,721,1.6,772,5.042,777,3.78,863,3.588,877,2.334,878,2.047,880,3.734,882,2.334,884,2.334,885,2.334,886,2.334,887,2.334,889,2.334,927,2.531,943,2.047,1001,3.02,1002,5.225,1004,3.734,1005,2.047,1006,2.531,1007,2.531,1284,2.794,1306,2.047,1542,2.334,1545,2.334,1561,2.794,1562,2.794,1756,6.394,1803,7.059,1804,2.794,1805,5.408,1806,5.599,1807,4.712,1808,5.599,1809,5.599,1810,5.599,1811,4.712,1812,6.181,1813,4.712,1814,6.593,1815,7.135,1816,4.712,1817,3.193,1818,3.193,1819,3.193,1820,4.712,1821,3.193,1822,3.193,1823,3.193,1824,4.712,1825,6.181,1826,3.193,1827,4.899,1828,3.193,1829,3.193,1830,3.193,1831,3.193,1832,3.193,1833,3.193,1834,3.193,1835,3.193,1836,4.712,1837,3.193,1838,4.712,1839,4.712,1840,3.193,1841,3.193,1842,3.193,1843,3.193,1844,3.193,1845,4.712,1846,3.193,1847,5.599,1848,2.531,1849,3.193,1850,3.193,1851,3.193,1852,3.193,1853,3.193,1854,3.193,1855,4.899,1856,4.899,1857,4.122,1858,3.193,1859,4.122,1860,4.122,1861,4.122,1862,3.193,1863,3.193,1864,3.193,1865,3.193,1866,4.122,1867,3.193,1868,4.712,1869,3.193,1870,3.193,1871,3.193,1872,3.193,1873,3.193,1874,4.712,1875,4.712,1876,4.712,1877,4.712,1878,4.712,1879,6.899,1880,5.408,1881,4.122,1882,4.122,1883,5.408,1884,4.122,1885,4.712,1886,4.122,1887,4.122,1888,3.193,1889,2.531,1890,2.531,1891,3.734,1892,3.193,1893,3.193,1894,3.193,1895,3.193,1896,3.193,1897,4.712,1898,3.193,1899,3.193,1900,4.122,1901,2.794,1902,2.794,1903,4.712,1904,4.712,1905,4.712,1906,3.193,1907,3.193,1908,3.193]],["title/interfaces/TrekContext.html",[450,0.407,551,0.959]],["body/interfaces/TrekContext.html",[3,0.095,4,0.064,8,0.074,16,0.221,29,0.686,34,0.012,35,0.508,36,0.547,41,0.162,58,0.235,90,0.393,108,0.714,121,0.326,124,0.64,133,0.577,149,0.005,150,0.007,151,0.005,276,0.625,277,1.243,285,0.801,297,1.136,301,1.122,302,1.454,311,1.379,350,1.268,369,1.23,396,0.905,401,0.905,436,0.777,438,1.631,450,0.839,451,0.851,452,0.905,453,0.905,454,1.576,455,1.526,456,1.535,457,1.583,458,1.583,459,1.583,460,1.914,461,1.859,462,1.583,463,1.628,464,0.851,465,0.933,466,1.531,467,0.73,468,0.73,469,0.777,470,1.678,471,1.023,472,1.489,473,0.933,474,1.348,475,1.489,476,1.268,477,1.583,478,1.803,479,1.749,480,1.268,481,1.734,482,1.684,483,1.583,484,1.348,485,1.308,486,1.348,487,1.023,488,1.839,489,1.348,490,1.47,491,1.348,492,1.348,493,1.348,494,1.348,495,1.308,496,1.308,497,1.318,498,1.348,499,1.348,500,1.357,501,1.268,502,1.308,503,1.955,504,0.933,505,0.878,506,0.933,507,0.933,508,0.933,509,0.933,510,0.933,511,0.933,512,0.933,513,0.933,514,1.308,515,1.489,516,1.308,517,1.157,518,0.851,519,0.905,520,0.801,521,1.308,522,0.801,523,0.801,524,1.157,525,0.851,526,0.851,527,1.633,528,1.684,529,1.401,530,0.878,531,0.851,532,1.443,533,1.737,534,1.23,535,1.44,536,0.801,537,0.933,538,0.933,539,0.933,540,0.933,541,0.905,542,0.905,543,0.905,544,0.905,545,0.905,546,0.905,547,0.933,548,0.905,549,0.933,550,0.933,551,1.157,552,1.631,553,1.531,554,1.485,555,1.488,556,1.316,557,0.801]],["title/guards/TrekContextResolver.html",[201,2.647,1433,2.816]],["body/guards/TrekContextResolver.html",[3,0.136,4,0.091,8,0.106,16,0.315,17,1.431,19,1.388,27,3.687,28,3.439,30,4.027,31,1.305,33,1.388,34,0.012,35,0.408,36,0.408,37,1.226,39,1.108,41,0.231,42,0.659,53,2.575,54,2.273,55,3.057,57,2.83,58,0.136,59,0.613,60,2.288,120,1.617,124,0.664,149,0.007,150,0.009,151,0.007,177,2.575,185,1.605,191,3.153,201,4.075,241,2.772,263,2.044,277,1.352,281,2.141,305,3.439,320,3.153,321,1.769,322,3.153,327,2.575,375,3.153,376,3.153,384,1.506,466,1.431,467,1.042,468,1.042,487,1.01,500,1.576,527,1.625,528,1.735,533,1.728,535,1.576,551,1.476,552,1.252,553,1.108,554,1.388,555,1.476,556,1.305,570,1.46,690,3.86,691,3.897,720,2.696,721,2.466,981,4.052,984,3.355,985,4.08,1058,3.899,1063,4.305,1403,2.981,1409,4.622,1431,3.897,1434,3.355,1439,5.039,1440,5.901,1442,5.039,1447,3.899,1448,3.899,1493,5.039,1620,3.899,1621,3.899,1909,4.305,1910,4.92,1911,4.92,1912,6.358,1913,4.92,1914,4.305,1915,4.92,1916,4.92,1917,4.92,1918,4.92,1919,4.92,1920,4.92,1921,4.92,1922,4.92,1923,4.92,1924,4.92,1925,4.92,1926,3.899,1927,4.92,1928,4.92,1929,4.92,1930,4.92]],["title/components/TrekDetailsPage.html",[0,0.515,142,1.188]],["body/components/TrekDetailsPage.html",[0,0.667,1,0.696,2,1.204,3,0.067,4,0.045,5,0.789,6,0.789,7,0.789,8,0.052,10,0.789,11,2.643,12,2.404,14,1.243,16,0.155,17,0.858,19,0.832,24,3.627,25,3.078,27,1.995,28,2.472,31,1.656,33,1.03,34,0.012,35,0.373,36,0.488,37,0.909,39,1.457,40,1.779,41,0.199,42,0.324,43,1.035,44,1.035,45,0.899,46,0.998,47,1.063,53,1.266,54,1.117,55,1.832,58,0.067,59,0.302,60,1.835,66,3.048,68,2.443,74,1.675,80,2.782,90,0.191,91,1.243,92,1.243,93,0.789,94,1.745,95,0.789,96,0.789,97,0.696,98,0.789,99,0.789,100,0.696,101,0.789,102,0.789,103,0.696,104,0.789,105,0.696,106,0.789,107,0.696,108,0.269,109,0.789,110,0.696,111,0.789,112,0.789,113,0.696,114,0.764,115,0.741,116,1.538,117,0.696,118,0.789,119,0.696,120,0.97,121,0.506,122,1.243,123,0.696,124,0.622,125,0.696,126,0.675,127,0.789,128,0.696,129,0.789,130,0.696,131,0.789,132,0.696,133,0.619,134,1.357,135,0.789,136,0.696,137,0.789,138,0.675,139,0.789,140,0.696,141,0.789,142,1.539,143,0.696,144,1.243,145,0.696,146,0.675,147,0.789,148,0.789,149,0.003,150,0.005,151,0.003,185,0.789,235,2.116,241,1.371,250,1.573,263,1.361,276,0.854,277,0.827,285,0.408,287,2.313,297,0.837,305,1.76,307,2.443,309,1.675,311,0.983,315,3.021,316,2.786,380,0.815,384,1.167,385,2.179,387,1.284,393,2.672,399,1.55,416,2.849,436,0.545,437,1.391,447,1.649,448,3.738,454,0.758,482,1.392,487,0.968,490,1.193,500,0.998,505,0.97,528,1.392,532,1.062,533,1.095,534,1.164,535,0.998,551,0.885,552,1.2,553,1.062,555,1.095,556,0.968,570,0.718,579,2.786,630,3.021,669,1.266,672,2.749,673,2.469,679,1.91,680,1.91,687,2.179,689,4.064,690,2.584,691,2.801,705,2.469,706,1.266,707,1.266,714,1.035,715,1.266,718,1.325,720,1.325,721,1.212,722,1.266,723,1.466,728,1.649,731,1.266,772,4.732,777,3.389,784,3.448,862,1.917,863,2.443,877,1.768,878,1.55,880,1.917,882,1.768,884,1.768,885,1.768,886,2.786,887,1.768,889,1.768,953,3.738,956,3.448,961,2.309,974,3.335,975,3.335,1001,3.023,1002,3.021,1004,1.917,1005,1.55,1006,1.917,1014,1.917,1033,1.917,1080,3.738,1113,1.917,1114,3.021,1115,1.917,1228,1.917,1306,1.55,1371,2.116,1372,2.116,1373,2.116,1403,3.528,1406,3.912,1408,3.43,1409,3.723,1417,2.786,1419,1.768,1542,1.768,1545,1.768,1794,2.713,1796,5.845,1827,4.127,1855,3.335,1857,3.335,1859,3.335,1880,4.683,1881,3.335,1882,3.335,1883,4.683,1884,3.335,1886,3.335,1887,3.335,1900,3.335,1901,2.116,1902,2.116,1931,5.452,1932,2.116,1933,4.717,1934,3.812,1935,4.127,1936,4.717,1937,4.127,1938,5.352,1939,3.812,1940,3.812,1941,2.116,1942,3.812,1943,2.419,1944,3.812,1945,2.419,1946,2.419,1947,3.812,1948,5.352,1949,2.419,1950,2.419,1951,2.419,1952,2.419,1953,2.419,1954,2.419,1955,2.419,1956,2.419,1957,2.419,1958,2.419,1959,2.419,1960,2.419,1961,2.419,1962,2.419,1963,2.419,1964,2.419,1965,2.419,1966,2.116,1967,1.768,1968,1.917,1969,2.116,1970,3.812,1971,2.419,1972,2.419,1973,1.917,1974,1.917,1975,2.419,1976,2.419,1977,2.116,1978,2.419,1979,2.419,1980,2.116,1981,2.116,1982,2.419,1983,2.116,1984,2.419,1985,3.812,1986,2.419,1987,2.419,1988,4.717,1989,2.419,1990,1.768,1991,1.768,1992,2.419,1993,2.419,1994,2.419,1995,5.352,1996,3.812,1997,3.812,1998,2.419,1999,2.419,2000,2.419,2001,2.419,2002,2.419,2003,2.419,2004,2.419,2005,2.419,2006,2.419,2007,3.335,2008,3.812,2009,3.812,2010,5.352,2011,5.352,2012,3.812,2013,3.812,2014,3.812,2015,3.812,2016,6.186,2017,3.812,2018,3.812,2019,3.812,2020,3.812,2021,3.812,2022,3.812,2023,3.812,2024,3.812,2025,3.812,2026,3.812,2027,3.812,2028,3.812,2029,3.812,2030,3.812,2031,3.812,2032,3.812,2033,3.812,2034,3.812,2035,3.812,2036,3.812,2037,3.812,2038,3.812,2039,3.812,2040,3.812,2041,3.812,2042,3.812,2043,3.812,2044,3.812,2045,3.812,2046,3.812,2047,3.812,2048,3.812,2049,3.812,2050,3.812,2051,2.419,2052,2.419,2053,2.419,2054,2.419,2055,2.419,2056,4.717,2057,3.812,2058,3.738,2059,2.419,2060,2.419,2061,2.419,2062,2.419,2063,2.116]],["title/modules/TrekDetailsPageModule.html",[152,1.264,2064,3.019]],["body/modules/TrekDetailsPageModule.html",[0,0.714,3,0.158,4,0.106,8,0.124,34,0.012,41,0.234,42,0.768,43,2.453,44,2.453,47,1.598,58,0.158,59,0.714,90,0.452,124,0.474,142,2.39,149,0.008,150,0.01,151,0.008,152,1.754,154,2.365,155,2.547,156,3.631,157,2.755,158,2.453,159,2.547,166,3.945,168,2.995,169,2.755,170,2.547,173,3.232,178,3.232,185,1.869,192,4.025,193,3.296,194,3.507,196,3.673,201,4.484,202,4.541,261,3,262,3.954,263,1.458,264,3.472,1426,3.663,1427,2.755,1429,4.189,1430,4.189,1431,3,1432,3.673,1747,3.907,1748,5.26,1794,3.296,1796,4.189,1931,3.907,2064,6.213,2065,5.014,2066,5.014,2067,5.731,2068,5.731,2069,5.014,2070,5.731]],["title/components/TrekMapPage.html",[0,0.515,143,1.188]],["body/components/TrekMapPage.html",[0,0.833,1,0.95,2,1.526,3,0.091,4,0.061,5,1.078,6,1.078,7,1.078,8,0.071,10,1.078,11,2.741,12,2.494,14,1.576,16,0.31,17,1.087,19,1.055,29,1.33,30,3.35,31,1.698,33,1.372,34,0.012,35,0.448,36,0.509,37,1.212,39,1.664,40,2.169,41,0.212,42,0.443,47,0.921,57,1.9,58,0.091,59,0.412,60,1.864,66,3.499,74,1.807,80,1.15,90,0.261,91,1.576,92,1.576,93,1.078,94,2.049,95,1.078,96,1.078,97,0.95,98,1.078,99,1.078,100,0.95,101,1.078,102,1.078,103,0.95,104,1.078,105,0.95,106,1.078,107,0.95,108,0.368,109,1.078,110,0.95,111,1.078,112,1.078,113,1.643,114,1.044,115,1.748,116,1.863,117,0.95,118,1.078,119,0.95,120,1.881,121,0.54,122,1.576,123,0.95,124,0.642,125,0.95,126,0.921,127,1.078,128,0.95,129,1.078,130,0.95,131,1.078,132,1.643,133,0.834,134,0.95,135,1.078,136,0.95,137,1.078,138,0.921,139,1.078,140,0.95,141,1.078,142,0.95,143,1.807,144,1.576,145,0.95,146,0.921,147,1.078,148,1.078,149,0.005,150,0.007,151,0.005,185,1.078,191,2.118,200,3.894,229,2.891,230,2.415,231,4.227,232,2.891,233,2.415,241,1.737,250,2.357,263,1.229,272,5.994,276,1.034,285,0.517,287,2.334,297,0.738,305,3.331,309,1.807,380,1.113,384,1.479,387,1.627,393,2.357,404,2.415,416,2.357,432,2.118,454,0.961,466,1.286,467,0.699,468,0.699,487,1.172,497,1.572,500,1.209,527,1.247,532,1.286,551,1.121,554,1.247,555,1.325,556,1.172,570,0.98,663,4.027,669,1.729,672,3.103,673,2.989,679,2.421,680,2.421,687,3.331,689,4.148,705,2.989,706,1.729,707,1.729,714,1.414,715,1.729,718,1.81,722,1.729,728,2.253,731,1.729,764,2.415,777,3.826,784,4.174,786,3.829,943,2.118,981,2.779,984,2.253,985,3.443,1000,2.415,1007,2.618,1080,4.526,1082,3.531,1083,4.227,1113,2.618,1114,2.618,1115,2.618,1122,2.415,1123,2.415,1403,4.05,1406,4.593,1408,4.027,1409,4.148,1417,3.531,1419,2.415,1541,2.891,1543,4.227,1794,2.779,1890,2.618,1926,2.618,1931,5.591,1966,2.891,1967,2.415,1969,2.891,1977,2.891,1990,3.531,1991,2.415,2007,4.227,2071,2.618,2072,4.997,2073,4.227,2074,5.711,2075,5.711,2076,5.497,2077,4.227,2078,2.891,2079,4.831,2080,3.304,2081,3.304,2082,4.831,2083,3.304,2084,4.593,2085,4.831,2086,3.304,2087,3.304,2088,2.891,2089,2.891,2090,2.891,2091,2.891,2092,2.891,2093,4.831,2094,2.891,2095,3.304,2096,2.891,2097,2.891,2098,3.304,2099,4.831,2100,2.891,2101,3.304,2102,2.891,2103,3.304,2104,3.304,2105,3.304,2106,3.304,2107,3.304,2108,3.304,2109,5.711,2110,3.304,2111,3.829,2112,3.304,2113,3.304,2114,2.618,2115,2.891]],["title/modules/TrekMapPageModule.html",[152,1.264,2116,3.019]],["body/modules/TrekMapPageModule.html",[0,0.726,3,0.161,4,0.108,8,0.126,34,0.012,41,0.233,42,0.78,47,1.624,58,0.161,59,0.726,90,0.459,124,0.481,143,2.398,149,0.008,150,0.01,151,0.008,152,1.782,154,2.403,155,2.587,156,3.657,157,2.799,158,2.492,159,2.587,166,3.96,168,3.024,169,2.799,170,2.587,173,3.263,178,3.263,185,1.899,192,3.348,193,3.348,194,3.541,201,4.528,202,4.614,261,3.047,262,3.981,263,1.481,264,3.527,272,4.255,1426,3.698,1427,2.799,1429,4.255,1430,4.255,1431,3.047,1432,3.731,1738,5.279,1794,3.348,1931,3.969,2116,6.228,2117,5.093,2118,5.093,2119,5.822,2120,5.093,2121,5.093,2122,5.093]],["title/interfaces/TrekProperties.html",[450,0.407,480,1.051]],["body/interfaces/TrekProperties.html",[3,0.092,4,0.062,8,0.072,16,0.213,29,0.66,34,0.012,35,0.504,36,0.551,37,1.214,41,0.158,58,0.235,90,0.382,108,0.701,121,0.314,124,0.554,133,0.56,149,0.005,150,0.007,151,0.005,276,0.601,277,1.004,285,0.792,297,1.14,301,1.091,302,1.437,311,1.384,350,1.233,369,1.196,396,0.87,401,0.87,436,0.747,438,1.601,450,0.837,451,0.819,452,0.87,453,0.87,454,1.58,455,1.517,456,1.501,457,1.548,458,1.548,459,1.548,460,1.9,461,1.837,462,1.548,463,1.602,464,0.819,465,0.897,466,1.289,467,0.702,468,0.702,469,0.747,470,1.652,471,0.995,472,1.601,473,0.897,474,1.311,475,1.779,476,1.233,477,1.548,478,1.779,479,1.725,480,1.456,481,1.953,482,1.727,483,1.891,484,1.811,485,1.756,486,1.811,487,1.374,488,2.002,489,1.811,490,1.456,491,1.811,492,1.811,493,1.811,494,1.811,495,1.756,496,1.756,497,1.507,498,1.811,499,1.811,500,1.026,501,1.233,502,1.271,503,1.94,504,0.897,505,0.844,506,0.897,507,0.897,508,0.897,509,0.897,510,0.897,511,0.897,512,0.897,513,0.897,514,1.271,515,1.456,516,1.271,517,1.125,518,0.819,519,0.87,520,0.77,521,1.271,522,0.77,523,0.77,524,1.125,525,0.819,526,0.819,527,1.25,528,1.289,529,1.37,530,0.844,531,0.819,532,1.091,533,1.329,534,1.196,535,1.212,536,0.77,537,0.897,538,0.897,539,0.897,540,0.897,541,0.87,542,0.87,543,0.87,544,0.87,545,0.87,546,0.87,547,0.897,548,0.87,549,0.897,550,0.897,551,0.77,552,0.844,553,1.091,554,1.058,555,0.77,556,0.681,557,0.77]],["title/interfaces/TreksContext.html",[450,0.407,557,0.959]],["body/interfaces/TreksContext.html",[3,0.099,4,0.067,8,0.077,16,0.23,29,0.713,34,0.012,35,0.512,36,0.541,41,0.165,58,0.236,90,0.404,108,0.726,121,0.339,124,0.571,133,0.592,149,0.005,150,0.007,151,0.005,276,0.648,277,1.259,285,0.809,297,1.137,301,1.153,302,1.47,311,1.382,350,1.303,369,1.264,396,0.94,401,0.94,436,0.806,438,1.66,450,0.842,451,0.884,452,0.94,453,0.94,454,1.588,455,1.534,456,1.568,457,1.617,458,1.617,459,1.617,460,1.926,461,1.88,462,1.617,463,1.652,464,0.884,465,0.969,466,1.346,467,0.758,468,0.758,469,0.806,470,1.703,471,1.051,472,1.521,473,0.969,474,1.385,475,1.521,476,1.303,477,1.617,478,1.826,479,1.771,480,1.303,481,1.764,482,1.701,483,1.617,484,1.385,485,1.343,486,1.385,487,1.051,488,1.867,489,1.385,490,1.484,491,1.385,492,1.385,493,1.385,494,1.385,495,1.343,496,1.343,497,1.346,498,1.385,499,1.385,500,1.084,501,1.303,502,1.343,503,1.969,504,0.969,505,0.911,506,0.969,507,0.969,508,0.969,509,0.969,510,0.969,511,0.969,512,0.969,513,0.969,514,1.343,515,1.521,516,1.343,517,1.189,518,0.884,519,0.94,520,0.831,521,1.343,522,0.831,523,0.831,524,1.189,525,0.884,526,0.884,527,1.305,528,1.346,529,1.431,530,0.911,531,0.884,532,1.153,533,1.388,534,1.264,535,1.461,536,0.831,537,0.969,538,0.969,539,0.969,540,0.969,541,0.94,542,0.94,543,0.94,544,0.94,545,0.94,546,0.94,547,0.969,548,0.94,549,0.969,550,0.969,551,0.831,552,0.911,553,1.554,554,1.507,555,0.831,556,0.735,557,1.189]],["title/guards/TreksContextResolver.html",[203,2.647,1433,2.816]],["body/guards/TreksContextResolver.html",[3,0.156,4,0.105,8,0.122,16,0.362,17,1.561,19,1.514,21,4.152,27,3.631,28,3.616,31,1.424,33,1.514,34,0.012,35,0.445,36,0.445,37,1.337,39,1.272,41,0.231,42,0.757,45,2.1,46,2.332,47,1.575,53,2.957,54,2.609,55,3.334,58,0.156,59,0.704,60,2.227,64,3.249,65,3.249,149,0.008,150,0.01,151,0.008,185,1.842,203,4.445,241,2.031,263,1.909,277,1.409,281,2.336,302,1.493,321,2.031,384,1.729,487,1.159,535,1.657,553,1.272,554,1.514,557,1.311,570,1.676,690,4.113,691,4.097,720,3.095,721,2.831,1431,4.097,1434,3.852,1439,5.497,1440,6.204,1620,4.477,1621,4.477,1914,4.942,1941,4.942,2123,4.942,2124,5.649,2125,5.649,2126,5.649,2127,5.649]],["title/components/TreksMapPage.html",[0,0.515,145,1.188]],["body/components/TreksMapPage.html",[0,0.785,1,0.826,2,1.374,3,0.079,4,0.053,5,0.936,6,0.936,7,0.936,8,0.062,10,0.936,11,2.7,12,2.456,14,1.419,16,0.184,17,0.979,19,0.95,21,3.452,24,2.605,27,3.298,28,2.91,29,1.253,30,3.157,31,1.713,33,1.147,34,0.012,35,0.404,36,0.512,37,1.013,39,1.694,40,2.22,41,0.222,42,0.385,45,1.067,46,1.185,47,0.801,48,1.502,53,1.502,54,1.326,55,2.092,57,1.651,58,0.079,59,0.358,60,2.264,64,1.651,65,1.651,66,3.298,74,1.511,80,1.828,90,0.226,91,1.419,92,1.419,93,0.936,94,1.912,95,0.936,96,0.936,97,0.826,98,0.936,99,0.936,100,0.826,101,0.936,102,0.936,103,0.826,104,0.936,105,1.511,106,0.936,107,0.826,108,0.319,109,0.936,110,0.826,111,0.936,112,0.936,113,0.826,114,0.907,115,0.879,116,1.713,117,0.826,118,0.936,119,0.826,120,1.805,121,0.7,122,1.419,123,0.826,124,0.485,125,0.826,126,0.801,127,0.936,128,0.826,129,0.936,130,0.826,131,0.936,132,0.826,133,0.332,134,0.826,135,0.936,136,1.511,137,0.936,138,0.801,139,0.936,140,0.826,141,0.936,142,0.826,143,0.826,144,1.419,145,1.686,146,0.801,147,0.936,148,0.936,149,0.004,150,0.006,151,0.004,158,1.862,185,0.936,191,1.84,222,4.696,223,2.275,227,2.275,234,2.275,250,1.185,263,1.491,276,0.788,277,0.921,285,0.465,287,2.326,297,0.917,309,1.511,311,0.835,321,1.032,327,1.502,380,0.967,384,1.332,385,2.427,387,1.465,393,2.843,416,2.6,432,2.788,454,0.866,455,0.536,466,1.183,467,0.608,468,0.608,471,1.078,487,1.078,490,1.215,535,1.112,536,1.361,553,1.183,554,1.147,556,1.078,557,1.219,570,0.852,581,4.017,583,1.84,611,3.18,623,5.622,669,1.502,672,3.061,673,2.75,676,3.18,679,2.18,680,2.18,685,3.757,687,3.181,689,3.962,705,2.75,706,1.502,707,1.502,714,2.838,715,1.502,716,1.84,717,2.275,718,1.573,719,2.098,722,1.502,723,1.739,728,1.957,731,1.502,775,4.164,777,3.633,863,1.84,981,3.372,984,1.957,985,3.452,1082,3.18,1122,2.098,1123,2.098,1283,3.18,1304,1.957,1306,3.367,1408,3.757,1409,3.962,1452,4.605,1457,3.448,1487,4.164,1544,3.448,1608,3.448,1794,1.651,1798,6.069,1889,3.448,1891,2.275,1926,3.448,1937,4.596,1967,3.18,1968,2.275,1973,2.275,1974,2.275,1980,2.511,1981,2.511,1990,3.18,1991,3.18,2058,3.448,2071,2.275,2072,4.596,2073,3.806,2076,5.129,2077,2.511,2078,2.511,2084,4.285,2088,2.511,2089,2.511,2090,2.511,2091,2.511,2092,2.511,2094,2.511,2096,2.511,2097,2.511,2100,2.511,2102,4.596,2111,3.448,2114,3.448,2128,6.58,2129,5.254,2130,5.254,2131,4.596,2132,5.862,2133,5.129,2134,5.129,2135,4.351,2136,2.87,2137,2.87,2138,2.87,2139,4.351,2140,2.87,2141,2.87,2142,2.87,2143,2.87,2144,2.87,2145,2.87,2146,2.87,2147,2.87,2148,2.87,2149,2.87,2150,2.511,2151,2.511,2152,2.87,2153,2.511,2154,2.87,2155,2.87,2156,2.87,2157,2.511,2158,2.511,2159,2.511,2160,2.87,2161,2.87,2162,2.511,2163,2.511,2164,2.511,2165,2.511,2166,2.511,2167,2.511,2168,2.511,2169,4.351,2170,2.87,2171,2.87,2172,2.511,2173,2.511,2174,2.511,2175,2.87,2176,3.806,2177,3.806,2178,2.511,2179,2.511,2180,2.275,2181,2.511]],["title/modules/TreksMapPageModule.html",[152,1.264,2182,3.019]],["body/modules/TreksMapPageModule.html",[0,0.72,3,0.16,4,0.107,8,0.125,34,0.012,41,0.234,42,0.774,43,2.474,44,2.474,47,1.612,58,0.16,59,0.72,90,0.456,121,0.546,145,2.394,149,0.008,150,0.01,151,0.008,152,1.769,154,2.385,155,2.568,156,3.645,157,2.778,158,2.474,159,2.568,166,3.953,168,3.011,169,2.778,170,2.568,173,3.249,178,3.249,185,1.885,192,3.324,193,3.324,194,3.525,196,3.704,203,4.508,204,4.58,261,3.025,262,3.969,263,1.47,264,3.501,1426,3.682,1427,2.778,1431,3.025,1432,3.704,1738,5.27,1747,3.94,1794,3.324,1798,4.224,2120,5.056,2121,5.056,2122,5.056,2128,4.58,2182,6.221,2183,5.056,2184,5.056,2185,5.779]],["title/components/TreksPage.html",[0,0.515,146,1.152]],["body/components/TreksPage.html",[0,0.732,1,0.709,2,1.222,3,0.068,4,0.046,5,0.804,6,0.804,7,0.804,8,0.053,10,0.804,11,2.649,12,2.41,14,1.261,16,0.248,17,0.87,19,0.844,21,3.56,24,2.77,27,3.075,28,2.713,29,1.169,30,2.71,31,1.699,33,1.042,34,0.012,35,0.377,36,0.506,37,0.92,39,1.657,40,2.043,41,0.215,42,0.33,45,0.916,46,1.017,47,1.079,48,1.29,53,1.29,54,1.138,55,2.295,57,1.417,58,0.068,59,0.307,60,2.266,64,2.224,65,2.224,66,3.263,68,1.579,74,1.942,80,2.519,82,1.938,90,0.194,91,1.261,92,2.033,93,0.804,94,1.763,95,0.804,96,0.804,97,0.709,98,0.804,99,0.804,100,0.709,101,0.804,102,0.804,103,0.709,104,0.804,105,1.373,106,0.804,107,0.709,108,0.43,109,0.804,110,0.709,111,0.804,112,0.804,113,0.709,114,0.778,115,0.754,116,1.557,117,0.709,118,0.804,119,0.709,120,1.214,121,0.638,122,1.261,123,0.709,124,0.447,125,0.709,126,0.687,127,0.804,128,0.709,129,0.804,130,0.709,131,0.804,132,0.709,133,0.285,134,0.709,135,0.804,136,1.373,137,0.804,138,0.687,139,0.804,140,0.709,141,0.804,142,0.709,143,0.709,144,1.261,145,0.709,146,1.508,147,0.804,148,0.804,149,0.003,150,0.005,151,0.003,158,1.655,185,0.804,191,1.579,222,4.445,223,1.953,227,1.953,234,1.953,241,1.391,247,3.952,263,1.494,276,0.979,277,0.948,285,0.414,287,2.336,297,0.806,305,2.205,309,1.875,311,1.236,321,0.886,327,1.29,366,1.68,380,0.83,384,1.184,385,2.205,386,4.326,387,1.302,393,2.691,404,1.801,416,2.232,436,1.074,437,3.11,454,0.769,455,0.46,471,1.279,487,1.206,490,0.746,519,0.646,535,1.01,536,1.255,553,1.074,557,1.108,570,0.731,578,3.383,581,3.777,583,1.579,611,2.827,623,5.35,669,1.29,672,2.77,676,2.827,679,1.938,680,1.938,685,3.465,687,2.205,689,3.75,690,3.219,691,3.075,705,2.499,706,1.29,707,1.29,714,1.055,715,1.29,718,1.35,719,1.801,720,1.35,721,1.235,722,1.29,723,1.493,731,1.29,761,3.383,762,3.383,777,3.416,863,1.579,917,1.68,943,3.059,980,4.176,981,3.379,985,3.219,997,2.156,998,2.156,1155,1.953,1283,2.827,1304,1.68,1306,3.059,1408,3.465,1409,3.75,1452,4.294,1457,3.065,1487,3.065,1542,2.827,1544,3.065,1545,2.827,1604,3.383,1608,3.065,1614,3.383,1627,2.156,1646,4.73,1794,1.417,1805,5.14,1856,3.383,1860,3.383,1861,3.383,1866,3.383,1889,3.065,1890,3.065,1891,1.953,1935,4.176,1967,2.827,1968,1.953,1973,1.953,1974,1.953,1983,2.156,1990,2.827,1991,2.827,2058,3.065,2063,4.73,2084,3.952,2111,3.065,2114,3.065,2131,4.176,2133,4.73,2134,4.73,2151,2.156,2153,2.156,2157,3.383,2158,3.383,2159,4.176,2162,2.156,2163,2.156,2164,2.156,2165,2.156,2166,2.156,2167,2.156,2168,2.156,2172,3.383,2173,2.156,2174,2.156,2176,3.383,2177,3.383,2178,2.156,2179,2.156,2180,5.166,2181,2.156,2186,2.156,2187,4.773,2188,3.867,2189,4.773,2190,4.773,2191,5.875,2192,6.074,2193,5.407,2194,5.407,2195,5.407,2196,2.464,2197,3.867,2198,2.464,2199,2.464,2200,2.464,2201,2.464,2202,2.464,2203,2.464,2204,2.464,2205,2.464,2206,2.464,2207,2.464,2208,2.464,2209,5.407,2210,2.464,2211,4.773,2212,2.464,2213,3.867,2214,5.407,2215,2.464,2216,2.464,2217,2.464,2218,2.464,2219,2.464,2220,2.464,2221,2.464,2222,2.464,2223,2.464,2224,2.464,2225,2.464,2226,2.464,2227,2.464,2228,2.464,2229,2.464,2230,2.464,2231,2.464,2232,3.867,2233,2.464,2234,2.464,2235,2.464,2236,2.464,2237,3.867,2238,2.464,2239,5.407,2240,3.867,2241,3.867,2242,4.773,2243,2.156,2244,3.867,2245,2.464,2246,3.867,2247,5.407,2248,3.867,2249,3.867,2250,3.867,2251,3.867,2252,6.234,2253,5.407,2254,5.407,2255,5.407,2256,5.407,2257,3.867,2258,3.867,2259,3.867,2260,3.867,2261,5.407,2262,6.234,2263,5.407,2264,3.867,2265,3.867,2266,3.867,2267,3.867,2268,3.867,2269,3.867,2270,2.464,2271,3.383,2272,3.867,2273,3.867,2274,3.383,2275,3.867,2276,2.464,2277,2.464,2278,2.156,2279,2.464]],["title/modules/TreksPageModule.html",[152,1.264,1785,2.816]],["body/modules/TreksPageModule.html",[3,0.165,4,0.111,8,0.128,34,0.012,41,0.233,42,0.797,43,2.548,44,2.548,47,1.66,58,0.165,59,0.742,90,0.469,146,2.309,149,0.008,150,0.01,151,0.008,152,1.822,154,2.457,155,2.645,156,3.692,157,2.862,158,2.548,159,2.645,166,3.981,168,3.065,169,2.862,170,2.645,173,3.307,178,3.307,185,1.941,192,4.118,193,3.424,194,3.588,196,3.815,261,3.116,1426,3.748,1427,2.862,1747,4.058,1748,5.307,1785,5.828,2069,5.208,2280,5.208,2281,5.208,2282,5.952,2283,5.952,2284,5.952,2285,5.952]],["title/interfaces/TreksService.html",[450,0.407,535,0.874]],["body/interfaces/TreksService.html",[3,0.088,4,0.059,8,0.069,16,0.204,17,1.059,29,0.634,31,1.582,33,1.598,34,0.012,35,0.528,36,0.544,37,1.411,39,1.735,41,0.155,58,0.234,90,0.371,108,0.687,121,0.584,124,0.637,133,0.544,149,0.004,150,0.006,151,0.004,276,0.577,277,1.209,285,0.783,297,1.134,301,1.059,302,1.594,307,2.043,311,1.384,350,1.197,369,1.161,396,0.836,401,0.836,436,0.717,438,1.571,450,0.834,451,0.786,452,0.836,453,0.836,454,1.552,455,1.539,456,1.467,457,1.512,458,1.512,459,1.512,460,1.886,461,1.814,462,1.512,463,1.576,464,0.786,465,0.862,466,1.39,467,0.675,468,0.675,469,0.717,470,1.625,471,0.966,472,1.423,473,0.862,474,1.272,475,1.423,476,1.197,477,1.512,478,1.754,479,1.701,480,1.197,481,1.67,482,1.756,483,1.512,484,1.272,485,1.234,486,1.272,487,0.966,488,1.781,489,1.272,490,1.486,491,1.272,492,1.272,493,1.272,494,1.272,495,1.234,496,1.234,497,1.259,498,1.272,499,1.272,500,0.996,501,1.197,502,1.234,503,1.925,504,0.862,505,0.811,506,0.862,507,0.862,508,0.862,509,0.862,510,0.862,511,0.862,512,0.862,513,0.862,514,1.234,515,1.423,516,1.234,517,1.092,518,0.786,519,0.836,520,0.74,521,1.234,522,0.74,523,0.74,524,1.092,525,0.786,526,0.786,527,1.221,528,1.259,529,1.338,530,0.811,531,0.786,532,1.059,533,1.298,534,1.161,535,1.307,536,1.433,537,1.272,538,1.272,539,1.272,540,1.272,541,1.62,542,1.234,543,1.234,544,1.62,545,1.234,546,1.234,547,1.512,548,1.62,549,0.862,550,0.862,551,0.74,552,0.811,553,1.059,554,1.027,555,0.74,556,0.654,557,0.74,1476,4.116,1478,4.116,1479,4.116,1480,4.116,1481,4.116,1482,4.116,1483,4.116,1484,4.116,1493,3.729,2286,3.187,2287,3.187,2288,3.187,2289,3.187,2290,3.187,2291,3.187,2292,3.187,2293,3.187,2294,3.187,2295,3.187,2296,3.187]],["title/classes/UnSubscribe.html",[59,0.515,672,1.835]],["body/classes/UnSubscribe.html",[3,0.165,4,0.111,8,0.129,16,0.383,17,1.615,19,1.679,31,1.637,34,0.012,36,0.383,39,1.615,40,2.064,41,0.198,42,0.8,58,0.198,59,0.745,149,0.008,150,0.01,151,0.008,239,4.735,285,0.768,384,2.197,385,3.553,393,3.293,672,3.189,673,4.026,679,3.855,680,3.855,687,3.685,714,3.547,2150,5.227,2297,5.975,2298,4.735,2299,7.176,2300,5.975,2301,5.975,2302,7.979,2303,5.975,2304,6.279,2305,7.176]],["title/coverage.html",[2306,4.95]],["body/coverage.html",[0,1.06,1,1.12,8,0.084,9,3.408,28,1.799,29,0.775,30,1.952,34,0.012,36,0.25,45,2.021,54,2.51,59,0.486,80,3.073,97,1.12,100,1.12,103,1.12,105,1.12,107,1.12,108,0.433,110,1.12,113,1.12,115,1.664,117,1.12,119,1.12,121,0.64,123,1.12,124,0.589,125,1.12,128,1.12,130,1.12,132,1.12,133,0.451,134,1.12,136,1.12,138,1.086,140,1.12,142,1.12,143,1.12,145,1.12,146,1.086,149,0.005,150,0.007,151,0.005,167,2.496,171,3.087,186,2.656,189,2.656,201,2.496,203,2.496,230,2.847,233,2.847,237,3.087,239,4.307,242,1.608,254,3.087,272,2.847,281,2.642,282,2.656,284,3.408,381,3.408,382,3.087,383,3.408,418,2.847,429,3.408,430,3.087,431,3.408,450,0.848,451,0.961,453,2.254,469,0.877,471,0.799,472,0.991,480,0.991,482,0.877,497,0.877,500,0.825,501,0.991,503,0.961,517,0.904,518,0.961,522,0.904,523,0.904,524,0.904,527,0.85,528,0.877,529,0.932,531,0.961,532,0.877,533,0.904,534,0.961,535,0.825,551,0.904,557,0.904,558,3.408,581,2.36,582,3.408,583,2.496,584,5.03,651,3.408,652,3.408,671,3.408,672,2.415,691,2.039,716,3.483,721,2.723,765,4.307,766,3.972,767,4.307,787,2.496,814,3.087,894,3.408,951,3.408,952,4.307,977,3.408,985,2.134,1015,3.408,1017,4.307,1069,4.95,1070,4.617,1071,4.95,1105,3.972,1377,2.656,1378,3.408,1379,2.847,1380,3.408,1397,3.087,1398,2.847,1399,3.408,1433,4.617,1435,3.408,1436,3.408,1449,3.408,1469,3.408,1474,4.307,1547,3.408,1566,3.408,1576,3.408,1598,3.408,1599,2.847,1619,3.087,1632,3.408,1638,3.408,1756,3.087,1767,3.408,1796,2.847,1798,2.847,1803,3.408,1804,3.408,1909,3.408,1931,3.705,1932,3.408,2071,4.307,2123,3.408,2128,3.087,2186,3.408,2298,4.307,2306,3.408,2307,3.408,2308,3.895,2309,3.895,2310,8.216,2311,7.945,2312,6.772,2313,3.408,2314,7.722,2315,5.434,2316,7.122,2317,5.434,2318,5.434,2319,3.895,2320,6.772,2321,3.895,2322,3.895,2323,5.434,2324,8.03,2325,3.895,2326,3.895,2327,5.434,2328,6.772,2329,5.434,2330,5.434,2331,3.895,2332,5.434,2333,3.895,2334,3.895,2335,4.754,2336,3.895,2337,3.408,2338,3.408,2339,3.895,2340,3.895]],["title/dependencies.html",[155,2.21,2341,3.008]],["body/dependencies.html",[8,0.112,22,3.796,23,4.116,26,4.116,34,0.012,42,0.696,43,2.817,44,2.223,47,1.448,48,4.452,49,4.116,51,4.116,114,1.641,149,0.007,150,0.009,151,0.007,155,2.308,180,5.759,181,4.488,185,1.694,199,4.544,200,3.541,206,4.116,209,5.759,210,4.544,213,4.116,216,3.796,218,4.544,221,4.116,222,3.541,321,1.868,467,1.099,468,1.393,769,4.544,813,4.544,1009,4.116,1427,2.497,1639,4.544,2084,3.796,2342,5.194,2343,5.194,2344,8.135,2345,5.194,2346,5.194,2347,5.194,2348,5.759,2349,7.226,2350,5.194,2351,8.009,2352,5.194,2353,5.194,2354,6.582,2355,5.194,2356,6.582,2357,6.582,2358,5.194,2359,5.194,2360,5.194,2361,5.194,2362,5.194,2363,5.194,2364,5.194,2365,6.582,2366,5.194,2367,5.194,2368,6.582,2369,5.194,2370,5.194,2371,7.536,2372,4.544,2373,5.194,2374,4.544,2375,8.591,2376,5.194,2377,5.194,2378,4.544,2379,5.194,2380,5.194,2381,5.194,2382,5.194,2383,5.194,2384,5.759,2385,5.194,2386,5.194,2387,5.194,2388,5.194,2389,6.582,2390,5.194,2391,5.194,2392,5.194,2393,5.194,2394,5.194,2395,5.194,2396,5.194,2397,5.194,2398,5.194,2399,5.194,2400,5.194,2401,5.194,2402,5.194,2403,5.194,2404,5.194,2405,5.194,2406,5.194,2407,5.194,2408,5.194,2409,5.194]],["title/miscellaneous/functions.html",[2410,2.513,2411,4.351]],["body/miscellaneous/functions.html",[16,0.425,33,1.666,34,0.011,35,0.489,37,1.471,149,0.009,150,0.011,151,0.009,171,5.255,240,5.802,254,6.047,295,4.847,672,3.391,714,2.839,2298,5.255,2304,5.802,2410,4.847,2411,5.802,2412,6.631,2413,6.631]],["title/index.html",[16,0.22,2414,3.008,2415,3.008]],["body/index.html",[4,0.123,12,2.449,22,3.851,34,0.011,35,0.338,45,2.469,48,4.321,74,1.515,76,4.175,77,5.764,84,4.175,120,1.689,124,0.436,126,1.469,149,0.007,150,0.009,151,0.009,181,3.592,247,3.851,277,0.924,298,5.582,301,1.637,377,4.609,437,3.03,455,0.984,463,1.261,475,1.34,526,1.3,878,3.376,1001,4.256,1005,3.376,1128,5.263,1129,4.175,1184,4.609,1191,5.317,1346,4.609,1848,4.175,2271,4.609,2341,4.609,2371,6.888,2372,5.811,2374,6.681,2378,4.609,2384,4.609,2416,6.364,2417,6.642,2418,5.268,2419,5.268,2420,5.268,2421,5.268,2422,4.609,2423,5.268,2424,7.274,2425,5.268,2426,5.268,2427,5.268,2428,5.268,2429,5.268,2430,5.268,2431,5.268,2432,5.268,2433,5.268,2434,5.268,2435,6.642,2436,6.642,2437,5.811,2438,5.811,2439,5.268,2440,6.642,2441,6.681,2442,5.268,2443,6.642,2444,6.642,2445,7.274,2446,5.268,2447,5.268,2448,5.268,2449,5.268,2450,6.642,2451,5.268,2452,6.642,2453,6.642,2454,5.268,2455,5.268,2456,6.642,2457,5.268,2458,5.268,2459,6.642,2460,6.642,2461,5.268,2462,5.268,2463,6.642,2464,5.268,2465,5.268,2466,4.609,2467,5.263,2468,5.268,2469,5.268,2470,5.268,2471,5.268,2472,6.642,2473,5.268,2474,7.274,2475,4.609,2476,5.268,2477,5.268,2478,5.268,2479,5.268,2480,5.268,2481,5.268,2482,6.642,2483,5.268,2484,5.268,2485,5.268,2486,5.268,2487,5.268,2488,5.811,2489,5.268,2490,6.642,2491,5.268,2492,6.642,2493,5.268,2494,5.268,2495,5.268,2496,5.268,2497,5.268,2498,5.268,2499,5.268,2500,5.268,2501,4.609,2502,5.268,2503,5.268,2504,6.642,2505,5.268,2506,4.609,2507,5.268,2508,5.268,2509,5.268,2510,5.268]],["title/license.html",[2414,3.008,2415,3.008,2511,3.008]],["body/license.html",[4,0.132,34,0.01,68,3.777,149,0.008,150,0.01,151,0.008,170,2.619,276,1.067,345,5.156,386,4.561,663,3.777,2307,5.156,2467,6.06,2506,6.69,2511,5.156,2512,5.894,2513,5.894,2514,8.131,2515,5.894,2516,5.894,2517,5.894,2518,5.894,2519,5.894,2520,5.894,2521,5.894,2522,7.117,2523,5.894,2524,5.894,2525,5.894,2526,7.647,2527,7.647,2528,5.894,2529,7.117,2530,5.894,2531,5.894,2532,7.117,2533,7.117,2534,7.117,2535,5.894,2536,5.894,2537,5.894,2538,5.894,2539,5.894,2540,7.117,2541,5.894,2542,7.117,2543,5.894,2544,7.117,2545,7.117,2546,7.647,2547,7.117,2548,5.894,2549,5.894,2550,5.894,2551,5.894,2552,5.894,2553,5.894,2554,5.894,2555,5.894,2556,5.894,2557,5.894,2558,5.894,2559,5.894,2560,5.894,2561,5.894,2562,5.894,2563,5.894,2564,5.894,2565,5.894,2566,5.894,2567,5.894,2568,5.894,2569,5.894,2570,5.894,2571,5.894,2572,5.894,2573,7.117,2574,5.894,2575,5.894,2576,5.894,2577,5.894,2578,5.894,2579,5.894,2580,5.894,2581,5.894,2582,5.894,2583,5.894,2584,5.894,2585,5.894,2586,5.894]],["title/modules.html",[154,2.335]],["body/modules.html",[34,0.01,77,5.855,149,0.009,150,0.01,151,0.009,153,4.586,154,2.589,165,4.277,166,3.016,181,5.893,1421,4.586,1463,4.277,1738,4.021,1748,4.021,1780,4.586,1784,4.277,1785,4.277,2064,4.586,2116,4.586,2182,4.586,2587,8.644,2588,8.644,2589,8.694,2590,7.388]],["title/overview.html",[2591,4.95]],["body/overview.html",[1,2.273,2,1.45,34,0.012,59,0.572,82,2.3,90,0.362,97,2.273,100,2.273,103,1.959,105,1.959,107,1.959,110,2.273,113,1.959,117,2.273,119,2.273,123,2.273,125,1.959,128,1.959,130,2.273,132,1.959,134,1.959,136,1.959,138,1.899,140,2.273,142,1.959,143,1.959,145,1.959,146,1.899,149,0.006,150,0.008,151,0.006,152,1.405,153,6.324,154,1.894,155,2.039,156,2.206,157,2.206,158,1.964,159,2.039,160,4.015,161,4.015,162,4.015,163,4.015,164,4.015,165,4.643,166,4.111,167,4.364,168,2.6,169,2.206,170,2.039,262,2.402,283,2.514,314,4.015,452,1.204,1008,4.015,1421,5.662,1422,4.015,1423,4.015,1434,3.129,1463,5.388,1464,4.015,1465,4.015,1738,5.362,1739,4.015,1740,4.015,1741,4.015,1748,5.254,1749,4.015,1750,4.015,1751,4.015,1758,4.015,1759,4.015,1760,4.015,1780,6.081,1781,4.015,1782,4.015,1783,4.015,1784,4.643,1785,5.536,2064,5.864,2065,4.015,2066,4.015,2116,5.864,2117,4.015,2118,4.015,2182,5.864,2183,4.015,2184,4.015,2280,4.015,2281,4.015,2591,4.015,2592,4.015,2593,4.015,2594,4.589,2595,4.589]],["title/routes.html",[262,2.962]],["body/routes.html",[34,0.011,149,0.009,150,0.011,151,0.009,262,3.581]],["title/miscellaneous/variables.html",[2410,2.513,2596,4.351]],["body/miscellaneous/variables.html",[4,0.117,12,2.079,16,0.214,34,0.012,35,0.312,36,0.521,45,2.347,54,1.541,72,4.257,73,4.257,74,2.337,75,3.317,76,3.856,80,2.58,82,3.163,84,5.002,85,4.257,86,4.257,120,2.039,121,0.715,124,0.555,133,0.563,149,0.005,150,0.007,151,0.005,168,3.174,170,1.483,205,3.856,250,1.377,277,0.853,298,3.557,301,1.095,305,2.247,309,2.133,311,0.774,386,3.118,404,3.557,416,2.77,418,3.557,437,2.799,447,3.317,455,1.179,464,1.2,467,1.336,468,1.03,515,1.238,526,1.942,584,4.304,669,3.668,716,4.045,721,1.672,765,2.644,766,2.439,767,3.856,814,3.856,815,2.919,878,3.118,927,3.856,943,3.118,946,5.523,1001,4.045,1005,4.045,1009,6.351,1013,3.856,1069,3.557,1070,3.317,1071,4.614,1105,4.614,1106,3.856,1217,6.089,1226,3.856,1228,6.351,1236,3.856,1237,4.257,1239,4.257,1319,4.257,1322,6.487,1324,6.13,1327,4.257,1335,5.523,1336,4.257,1337,4.257,1340,5.523,1452,3.557,1474,2.644,1512,4.257,1848,3.856,2115,6.722,2180,5.002,2192,4.257,2243,4.257,2274,4.257,2278,5.523,2313,2.919,2335,2.919,2337,2.919,2338,2.919,2348,4.257,2410,2.439,2416,4.257,2422,5.523,2437,6.487,2438,4.257,2441,4.257,2466,4.257,2467,5.002,2475,4.257,2488,4.257,2501,4.257,2592,5.523,2593,4.257,2596,2.919,2597,3.336,2598,3.336,2599,3.336,2600,3.336,2601,3.336,2602,3.336,2603,4.866,2604,6.312,2605,4.866,2606,4.866,2607,4.866,2608,4.866,2609,8.282,2610,4.866,2611,4.866,2612,4.866,2613,4.866,2614,4.866,2615,7.007,2616,7.683,2617,4.866,2618,4.866,2619,6.312,2620,7.683,2621,6.312,2622,6.312,2623,6.312,2624,4.866,2625,4.866,2626,4.866,2627,6.312,2628,6.312,2629,7.683,2630,6.312,2631,7.007,2632,6.312,2633,4.866,2634,4.866,2635,4.866,2636,4.866,2637,4.866,2638,4.866,2639,4.866,2640,4.866,2641,4.866,2642,4.866,2643,4.866,2644,4.866,2645,6.312,2646,4.866,2647,4.866,2648,4.866,2649,4.866,2650,4.866,2651,6.312,2652,4.866,2653,4.866,2654,4.866,2655,4.866,2656,4.866,2657,4.866,2658,4.866,2659,3.336,2660,3.336,2661,4.866,2662,4.866,2663,4.866,2664,3.336]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1",{"_index":1333,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["0.3s",{"_index":2273,"title":{},"body":{"components/TreksPage.html":{}}}],["0.5",{"_index":1013,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.51.4",{"_index":2370,"title":{},"body":{"dependencies.html":{}}}],["0.53.0",{"_index":2405,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":1237,"title":{},"body":{"components/MapTrekVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.705824",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8",{"_index":1239,"title":{},"body":{"components/MapTrekVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.8.29",{"_index":2409,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2377,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2311,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2315,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2318,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2319,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2321,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2310,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2312,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2316,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2317,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":670,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["1",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TreksPage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).tofixed(1",{"_index":1882,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["1)[0",{"_index":1247,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["1.0",{"_index":1880,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["1.11.0",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1886,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["1.3.3",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":2061,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["10",{"_index":927,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekCardComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":764,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["1000",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["100px",{"_index":2179,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["1024×1024px",{"_index":2489,"title":{},"body":{"index.html":{}}}],["11.0.1",{"_index":2362,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2209,"title":{},"body":{"components/TreksPage.html":{}}}],["1200×1200px",{"_index":2502,"title":{},"body":{"index.html":{}}}],["12px",{"_index":1891,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["13",{"_index":2592,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1219,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["18px",{"_index":2055,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["195",{"_index":1011,"title":{},"body":{"components/LoaderComponent.html":{}}}],["199",{"_index":1012,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksPage.html":{},"license.html":{}}}],["2.0.1",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2382,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2361,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":2392,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2400,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1337,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{}}}],["2019",{"_index":2516,"title":{},"body":{"license.html":{}}}],["20px",{"_index":1894,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["23",{"_index":2593,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["24",{"_index":1883,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["24px",{"_index":1900,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["256",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2732×2732px",{"_index":2494,"title":{},"body":{"index.html":{}}}],["28px",{"_index":2060,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["29",{"_index":2594,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":2397,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2395,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"overview.html":{}}}],["4.0.0",{"_index":2363,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2360,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2402,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2404,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2368,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2595,"title":{},"body":{"overview.html":{}}}],["44.410157",{"_index":946,"title":{},"body":{"injectables/GeolocateService.html":{},"miscellaneous/variables.html":{}}}],["48px*48px",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4em",{"_index":449,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["5",{"_index":404,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/TrekMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2351,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":2354,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":2349,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":988,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["500",{"_index":2053,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["5px",{"_index":2063,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksPage.html":{}}}],["5s",{"_index":580,"title":{},"body":{"components/FilterComponent.html":{}}}],["6",{"_index":2243,"title":{},"body":{"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":2365,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2366,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2407,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["61b22f",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1.4",{"_index":2373,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":2344,"title":{},"body":{"dependencies.html":{}}}],["7.2.6",{"_index":2343,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2115,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["833569",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["898083",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8e44ad",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1008,"title":{},"body":{"components/LoaderComponent.html":{},"overview.html":{}}}],["a.indexof(v",{"_index":1731,"title":{},"body":{"injectables/SettingsService.html":{}}}],["above",{"_index":2532,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1890,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksPage.html":{}}}],["abstract/unsubscribe",{"_index":1296,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["accept",{"_index":1393,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["access",{"_index":491,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["accessibilities",{"_index":459,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["accesstoken",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accurate",{"_index":1965,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["activatedroute",{"_index":1408,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["activatedroutesnapshot",{"_index":1440,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["activefiltersnumber",{"_index":585,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["actual_component",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["actually",{"_index":359,"title":{},"body":{"injectables/CacheService.html":{}}}],["add",{"_index":993,"title":{},"body":{"components/LoaderComponent.html":{}}}],["addsourceslayersevents",{"_index":1281,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["advice",{"_index":493,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["advised",{"_index":2583,"title":{},"body":{"license.html":{}}}],["advised_parking",{"_index":492,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["afficher",{"_index":2264,"title":{},"body":{"components/TreksPage.html":{}}}],["alert",{"_index":1370,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alert.present",{"_index":1376,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertcontroller",{"_index":772,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["alertmsg",{"_index":1825,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["alertoption",{"_index":1364,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["align",{"_index":1006,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["allow",{"_index":1234,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["already",{"_index":574,"title":{},"body":{"components/FilterComponent.html":{}}}],["always",{"_index":1430,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["alwaysdisplayeditems",{"_index":390,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["and/or",{"_index":2537,"title":{},"body":{"license.html":{}}}],["android",{"_index":2372,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["androidbuild",{"_index":2449,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2342,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1427,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2345,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2346,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["animate('250ms",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animated",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["animations",{"_index":420,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["annuler",{"_index":1871,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["any).bounds",{"_index":1538,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).features[0].properties.id",{"_index":1146,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["any).fitboundsoptions",{"_index":1540,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).indexof(filtervalue",{"_index":631,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["any).properties.id",{"_index":2108,"title":{},"body":{"components/TrekMapPage.html":{}}}],["any).sources['tiles",{"_index":1307,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["api",{"_index":2441,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1381,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/abstract/unsubscribe",{"_index":718,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/components/animations",{"_index":419,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["app/components/collapsible",{"_index":1762,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/connect",{"_index":1764,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/filters/filters.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/components/geolocate",{"_index":1743,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/information",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/loader/loader.component",{"_index":1766,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/map",{"_index":1745,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/poi",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/poi/poi.component",{"_index":1754,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/components/progress/progress.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"components/TrekDetailsPage.html":{}}}],["app/components/search/search.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/components/trek",{"_index":1755,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/interfaces/interfaces",{"_index":570,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/map",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/${trekid",{"_index":1527,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/:trekid",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/resolvers/more",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["app/resolvers/more.resolver",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{}}}],["app/resolvers/trek.resolver",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["app/resolvers/treks.resolver",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/services/cache/cache.service",{"_index":1390,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["app/services/filter",{"_index":719,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/services/geolocate/geolocate.service",{"_index":812,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["app/services/loading/loading.service",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/services/more",{"_index":1443,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["app/services/offline",{"_index":720,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksPage.html":{}}}],["app/services/online",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/services/search",{"_index":1618,"title":{},"body":{"components/SearchComponent.html":{}}}],["app/services/settings/settings.service",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["app/shared/shared",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["app/shared/shared.module",{"_index":2121,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/tabs/more",{"_index":1775,"title":{},"body":{"components/TabsPage.html":{}}}],["app/tabs/treks",{"_index":1524,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["app/tabs/treks${this.offline",{"_index":1842,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["app/tabs/treks/trek",{"_index":1525,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/tabs/treks/treks",{"_index":1528,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2482,"title":{},"body":{"index.html":{}}}],["applyfilters",{"_index":681,"title":{},"body":{"components/FiltersComponent.html":{}}}],["appmodule",{"_index":153,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1452,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":165,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":2481,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2580,"title":{},"body":{"license.html":{}}}],["array",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["arrival",{"_index":485,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["arrival[0",{"_index":1250,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["arrival[1",{"_index":1252,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["arrival_city",{"_index":499,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["artwork",{"_index":2498,"title":{},"body":{"index.html":{}}}],["ascent",{"_index":486,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["assets/i18n",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/map/icons/arrival.png",{"_index":1181,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["assets/map/icons/departure.png",{"_index":1179,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["assets/map/icons/departurearrival.png",{"_index":1183,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["assets/map/icons/parking.png",{"_index":1185,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["assets/map/zone/zone.geojson",{"_index":1213,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["assets/map/{fontstack}/{range}.pbf",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assume",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":777,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["attributioncontrol",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aucune",{"_index":2260,"title":{},"body":{"components/TreksPage.html":{}}}],["author",{"_index":474,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["available",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["availablelanguage",{"_index":2466,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["availablelanguage[0",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["background",{"_index":1009,"title":{},"body":{"components/LoaderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["background'].tiles[0",{"_index":1308,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["backgroundgeolocation",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"miscellaneous/variables.html":{}}}],["backgroundgeolocationconfig",{"_index":914,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationevents",{"_index":915,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider",{"_index":916,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider.distance_filter_provider",{"_index":925,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["badge",{"_index":2376,"title":{},"body":{"dependencies.html":{}}}],["balisage",{"_index":2026,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["bar",{"_index":2358,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["baseurl",{"_index":956,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekDetailsPage.html":{}}}],["before",{"_index":1129,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{}}}],["begin",{"_index":1062,"title":{},"body":{"injectables/LoadingService.html":{}}}],["begin(id",{"_index":1042,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject",{"_index":712,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["behaviorsubject(false",{"_index":1029,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject(null",{"_index":912,"title":{},"body":{"injectables/GeolocateService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["below",{"_index":2457,"title":{},"body":{"index.html":{}}}],["best",{"_index":2496,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":2406,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1898,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["binary",{"_index":2522,"title":{},"body":{"license.html":{}}}],["block",{"_index":2057,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["bold",{"_index":2051,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["boolean",{"_index":490,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["bootstrap",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["border",{"_index":668,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["bottom",{"_index":1543,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["broadcast",{"_index":368,"title":{},"body":{"injectables/CacheService.html":{}}}],["broadcasts",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{}}}],["browse",{"_index":2589,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["bsd",{"_index":2512,"title":{},"body":{"license.html":{}}}],["build",{"_index":2452,"title":{},"body":{"index.html":{}}}],["business",{"_index":2569,"title":{},"body":{"license.html":{}}}],["button",{"_index":1889,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["buttons",{"_index":882,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["buttontext",{"_index":435,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["c",{"_index":2515,"title":{},"body":{"license.html":{}}}],["cache",{"_index":286,"title":{},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["cacheservice",{"_index":282,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"coverage.html":{}}}],["calc(100",{"_index":1893,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["can't",{"_index":1363,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cancel",{"_index":885,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["capitalize",{"_index":2181,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["card",{"_index":1805,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksPage.html":{}}}],["card'},{'name",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["card.component",{"_index":1757,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["card.component.html",{"_index":1807,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.scss",{"_index":1806,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts",{"_index":1804,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":1819,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:15",{"_index":1817,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:16",{"_index":1818,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:17",{"_index":1828,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:18",{"_index":1829,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:19",{"_index":1832,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:20",{"_index":1816,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:25",{"_index":1830,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:26",{"_index":1831,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:27",{"_index":1833,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:30",{"_index":1823,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:53",{"_index":1821,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:58",{"_index":1822,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:75",{"_index":1826,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card/trek",{"_index":1756,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":1238,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["catcherror",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["catcherror((error",{"_index":375,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["categories",{"_index":1726,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categories.foreach(categoryid",{"_index":1732,"title":{},"body":{"injectables/SettingsService.html":{}}}],["category",{"_index":530,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["category.name",{"_index":1736,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categoryid",{"_index":1734,"title":{},"body":{"injectables/SettingsService.html":{}}}],["caused",{"_index":2571,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2432,"title":{},"body":{"index.html":{}}}],["center",{"_index":1005,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cet",{"_index":2030,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["cette",{"_index":1869,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["change",{"_index":519,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["changecolsize",{"_index":2193,"title":{},"body":{"components/TreksPage.html":{}}}],["changed",{"_index":996,"title":{},"body":{"components/LoaderComponent.html":{}}}],["changedetection",{"_index":1577,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy",{"_index":1590,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy.default",{"_index":1578,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectorref",{"_index":1584,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changenotificationsmode",{"_index":778,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes",{"_index":801,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["changes.currentpois",{"_index":830,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{}}}],["changes.currenttrek",{"_index":1111,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["changes.filteredtreks",{"_index":1298,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changes.poi",{"_index":1557,"title":{},"body":{"components/PoiComponent.html":{}}}],["changes.touristiccategorieswithfeatures",{"_index":1112,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["changescurrentpois",{"_index":829,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{}}}],["changescurrentpois.currentvalue",{"_index":831,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.previousvalue",{"_index":832,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{}}}],["changescurrenttrek",{"_index":1110,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["changescurrenttrek.previousvalue",{"_index":1116,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["changescurrenttreks",{"_index":1297,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.currentvalue",{"_index":1299,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.previousvalue",{"_index":1300,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["channel",{"_index":865,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["channel${this.currentpoistonotify[notifiedindex].id",{"_index":866,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["check",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkauthorization",{"_index":895,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checked",{"_index":520,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["checkedvalue.id",{"_index":636,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkedvalue.interval",{"_index":641,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkiftrackerisrunning",{"_index":896,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checkstate",{"_index":700,"title":{},"body":{"components/FiltersComponent.html":{}}}],["checktonotify",{"_index":779,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["checktonotify(fromcoordinates",{"_index":793,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["children",{"_index":1793,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["circle",{"_index":1322,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["cities",{"_index":495,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["city",{"_index":1712,"title":{},"body":{"injectables/SettingsService.html":{}}}],["class",{"_index":59,"title":{"classes/UnSubscribe.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2297,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["clause",{"_index":2513,"title":{},"body":{"license.html":{}}}],["clickdeleteconfirm",{"_index":1811,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clickdeleteconfirm($event",{"_index":1820,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clicklocalnotifications",{"_index":773,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["clone",{"_index":2429,"title":{},"body":{"index.html":{}}}],["clonedeep",{"_index":716,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedeep(context.mapconfig",{"_index":2154,"title":{},"body":{"components/TreksMapPage.html":{}}}],["clonedeep(environment.onlinemapconfig",{"_index":1536,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["clonedeep(this.filters$.getvalue",{"_index":1689,"title":{},"body":{"injectables/SettingsService.html":{}}}],["clonedeep(this.temporaryfilters$.getvalue",{"_index":740,"title":{},"body":{"components/FiltersComponent.html":{}}}],["clonedeep(trek",{"_index":1695,"title":{},"body":{"injectables/SettingsService.html":{}}}],["close",{"_index":682,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["cluster",{"_index":1319,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule",{"_index":1422,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_declarations",{"_index":1423,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_imports",{"_index":1424,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["cluster_morepagemodule",{"_index":1464,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_declarations",{"_index":1465,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_imports",{"_index":1466,"title":{},"body":{"modules/MorePageModule.html":{}}}],["cluster_sharedmodule",{"_index":1739,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1740,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1741,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule",{"_index":1749,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_declarations",{"_index":1750,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_exports",{"_index":1751,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_shareduimodule",{"_index":1758,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_declarations",{"_index":1759,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_exports",{"_index":1760,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":1781,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":1782,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_imports",{"_index":1783,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule",{"_index":2065,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_declarations",{"_index":2066,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_imports",{"_index":2067,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["cluster_trekmappagemodule",{"_index":2117,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_declarations",{"_index":2118,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_imports",{"_index":2119,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["cluster_treksmappagemodule",{"_index":2183,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_declarations",{"_index":2184,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_imports",{"_index":2185,"title":{},"body":{"modules/TreksMapPageModule.html":{}}}],["cluster_trekspagemodule",{"_index":2280,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_declarations",{"_index":2281,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_imports",{"_index":2282,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["clusterid",{"_index":1343,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusterpaint",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterradius",{"_index":1320,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusters",{"_index":1321,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["code",{"_index":2530,"title":{},"body":{"license.html":{}}}],["coeur",{"_index":2034,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["collapsed",{"_index":406,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["collapsible",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["collapsiblelistcomponent",{"_index":97,"title":{"components/CollapsibleListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["color",{"_index":526,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":2484,"title":{},"body":{"index.html":{}}}],["colsize",{"_index":2189,"title":{},"body":{"components/TreksPage.html":{}}}],["column",{"_index":1896,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["combinelatest",{"_index":611,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["combinelatest(treks",{"_index":647,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{}}}],["commonmodule",{"_index":1426,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["commonsrc",{"_index":556,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["complete",{"_index":369,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["component_template",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["componentprops",{"_index":2111,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"overview.html":{}}}],["components/filter",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["components/filter/filter.component",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["concat",{"_index":1232,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["condition",{"_index":982,"title":{},"body":{"components/LoaderComponent.html":{}}}],["conditions",{"_index":2527,"title":{},"body":{"license.html":{}}}],["config",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.xml",{"_index":2461,"title":{},"body":{"index.html":{}}}],["connect",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["connecterrorcomponent",{"_index":100,"title":{"components/ConnectErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":2100,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["connectionerror",{"_index":1403,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["consequential",{"_index":2561,"title":{},"body":{"license.html":{}}}],["console.error('no",{"_index":1920,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["console.log('poi",{"_index":869,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["const",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["constructor(alertcontroller",{"_index":1284,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["constructor(backgroundgeolocation",{"_index":901,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["constructor(cache",{"_index":1384,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["constructor(filtertreks",{"_index":2196,"title":{},"body":{"components/TreksPage.html":{}}}],["constructor(http",{"_index":293,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["constructor(loading",{"_index":984,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["constructor(modalctrl",{"_index":688,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(more",{"_index":1437,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["constructor(offlinetreks",{"_index":1550,"title":{},"body":{"components/PoiComponent.html":{},"components/ProgressComponent.html":{}}}],["constructor(onlinetreks",{"_index":1941,"title":{},"body":{"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TabsPage.html":{}}}],["constructor(private",{"_index":642,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"components/TabsPage.html":{}}}],["constructor(protected",{"_index":1053,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["constructor(public",{"_index":965,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{}}}],["constructor(route",{"_index":1407,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["constructor(screenorientation",{"_index":1084,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["constructor(settings",{"_index":592,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["container",{"_index":1000,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{}}}],["contains",{"_index":514,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["containsfilter",{"_index":451,"title":{"interfaces/ContainsFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["containsfilter(filter",{"_index":594,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["content",{"_index":436,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["context",{"_index":1794,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{}}}],["context.commonsrc",{"_index":1982,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["context.mapconfig",{"_index":2104,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.offline",{"_index":1968,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["context.originaltrek",{"_index":1971,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["context.pois",{"_index":2103,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.pois.features",{"_index":1972,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["context.touristiccategorieswithfeatures",{"_index":1977,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["context.touristiccontents",{"_index":1976,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["context.touristicevents.features",{"_index":1979,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["context.trek",{"_index":1969,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["context.trekstool",{"_index":1974,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["context.trekstool.filteredtreks",{"_index":2165,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["context.trekstool.getcommonimgsrc",{"_index":2105,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool.gettrekdetailsurl((this.currenttrek",{"_index":2107,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool.gettrekmapurl(context.trek.properties.id",{"_index":1984,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["context.trekstool.gettreksmapurl",{"_index":2233,"title":{},"body":{"components/TreksPage.html":{}}}],["contexts",{"_index":550,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["contract",{"_index":2575,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2542,"title":{},"body":{"license.html":{}}}],["coordinates",{"_index":479,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["coordinates[0",{"_index":1358,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[1",{"_index":1359,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["copyright",{"_index":2514,"title":{},"body":{"license.html":{}}}],["cordova",{"_index":2371,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core",{"_index":2398,"title":{},"body":{"dependencies.html":{}}}],["corpus",{"_index":2518,"title":{},"body":{"license.html":{}}}],["correspondent",{"_index":2256,"title":{},"body":{"components/TreksPage.html":{}}}],["count",{"_index":1326,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cours",{"_index":1849,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["coverage",{"_index":2306,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":362,"title":{},"body":{"injectables/CacheService.html":{}}}],["createmap",{"_index":1076,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["createtranslateloader",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["criterionvalue",{"_index":628,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["cssclass",{"_index":886,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["currentdatasetting",{"_index":1682,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentdatasetting.values.map(value",{"_index":1684,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentmaxtreks",{"_index":2190,"title":{},"body":{"components/TreksPage.html":{}}}],["currentpois",{"_index":784,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["currentpois.length",{"_index":2048,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currentpoistonotify",{"_index":774,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["currentposition",{"_index":775,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/TreksMapPage.html":{}}}],["currentprogress",{"_index":1581,"title":{},"body":{"components/ProgressComponent.html":{}}}],["currentsearchvalue",{"_index":1603,"title":{},"body":{"components/SearchComponent.html":{}}}],["currenttrek",{"_index":1080,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["currenttrek.properties.arrival",{"_index":2014,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.ascent",{"_index":2017,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.departure",{"_index":2011,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.departure_city.arrival_city",{"_index":2013,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.departure_city.name",{"_index":2010,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.difficulty.name",{"_index":2020,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.duration",{"_index":2016,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.length",{"_index":2021,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.name",{"_index":2007,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["currenttrek.properties.practice.name",{"_index":2022,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["currenttrek.properties.route.name",{"_index":2019,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["cursor",{"_index":2277,"title":{},"body":{"components/TreksPage.html":{}}}],["custom",{"_index":2178,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["customevent",{"_index":661,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["customize",{"_index":2460,"title":{},"body":{"index.html":{}}}],["damage",{"_index":2586,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2562,"title":{},"body":{"license.html":{}}}],["dans",{"_index":2032,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["data",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"license.html":{}}}],["data.context",{"_index":1967,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["data.id",{"_index":827,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["data.items",{"_index":1460,"title":{},"body":{"components/MorePage.html":{}}}],["data['item",{"_index":1416,"title":{},"body":{"components/MoreItemPage.html":{}}}],["datasetting",{"_index":524,"title":{"interfaces/DataSetting.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["datasetting.find(data",{"_index":1692,"title":{},"body":{"injectables/SettingsService.html":{}}}],["datasettings",{"_index":1081,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["de",{"_index":1866,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksPage.html":{}}}],["debug",{"_index":930,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["declarations",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["decorators",{"_index":2212,"title":{},"body":{"components/TreksPage.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["defaultsettings",{"_index":1674,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["delay",{"_index":366,"title":{},"body":{"injectables/CacheService.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksPage.html":{}}}],["delete",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{}}}],["deleteconfirm",{"_index":1867,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deleteconfirm.present",{"_index":1873,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deletetrek",{"_index":1812,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["departure",{"_index":475,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["departure[0",{"_index":1249,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["departure[1",{"_index":1251,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["departure_city",{"_index":498,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["departurearrival",{"_index":1182,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["departurearrivaldata",{"_index":1248,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["departurearrivaldata.features.push",{"_index":1254,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["departurearrivalsource",{"_index":1243,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["departurearrivalsource.setdata(departurearrivaldata",{"_index":1255,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["dependencies",{"_index":155,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":488,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["description_teaser",{"_index":483,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["desiredaccuracy",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desk",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["detail",{"_index":2062,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details",{"_index":953,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekDetailsPage.html":{}}}],["details'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["details.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["details.component.html",{"_index":955,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.scss",{"_index":954,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts",{"_index":952,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":962,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":963,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":958,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":964,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":960,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":959,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1568,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.module#trekdetailspagemodule",{"_index":1797,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details.module.ts",{"_index":2068,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page",{"_index":2070,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page.html",{"_index":1934,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.scss",{"_index":1933,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts",{"_index":1932,"title":{},"body":{"components/TrekDetailsPage.html":{},"coverage.html":{}}}],["details.page.ts:113",{"_index":1949,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:139",{"_index":1945,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:143",{"_index":1950,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:29",{"_index":1959,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:30",{"_index":1955,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:31",{"_index":1958,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:32",{"_index":1954,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:33",{"_index":1962,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:34",{"_index":1961,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:35",{"_index":1960,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:36",{"_index":1951,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:37",{"_index":1956,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:38",{"_index":1963,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:39",{"_index":1964,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:40",{"_index":1953,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:41",{"_index":1952,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:42",{"_index":1942,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:51",{"_index":1957,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:56",{"_index":1946,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details.page.ts:85",{"_index":1943,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["details/${this.trek.properties.id",{"_index":1843,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${trekid",{"_index":1526,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/:trekid",{"_index":1795,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/information",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/InformationDeskDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/poi",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/trek",{"_index":1796,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"coverage.html":{}}}],["dev",{"_index":944,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["developmentenvironment.prod.ts",{"_index":2468,"title":{},"body":{"index.html":{}}}],["device",{"_index":2378,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["difficulty",{"_index":456,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["direct",{"_index":2556,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1895,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["directive",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["directives",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["disabled",{"_index":2276,"title":{},"body":{"components/TreksPage.html":{}}}],["disablegeolocationnotification",{"_index":780,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["disclaimed",{"_index":2552,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2534,"title":{},"body":{"license.html":{}}}],["display",{"_index":1001,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["disponibles",{"_index":2269,"title":{},"body":{"components/TreksPage.html":{}}}],["distance",{"_index":814,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distance(from",{"_index":858,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["distancefilter",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribution",{"_index":2539,"title":{},"body":{"license.html":{}}}],["document.createelement('div",{"_index":1199,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["documentation",{"_index":2307,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["domain.fr/mobile",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":2507,"title":{},"body":{"index.html":{}}}],["downloadconfirm",{"_index":1999,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["downloadconfirm.present",{"_index":2005,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["downloads",{"_index":2509,"title":{},"body":{"index.html":{}}}],["downloadtrek",{"_index":1938,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["du",{"_index":1859,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["duration",{"_index":484,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["during",{"_index":342,"title":{},"body":{"injectables/CacheService.html":{}}}],["dynamic",{"_index":2347,"title":{},"body":{"dependencies.html":{}}}],["départ",{"_index":1875,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["e",{"_index":1134,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["e.features",{"_index":1135,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["e.features.length",{"_index":1136,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["e.features[0",{"_index":1137,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["e.features[0].properties",{"_index":1141,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["e.features[0].properties.id",{"_index":1142,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["each",{"_index":357,"title":{},"body":{"injectables/CacheService.html":{}}}],["ease",{"_index":2274,"title":{},"body":{"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":2458,"title":{},"body":{"index.html":{}}}],["el",{"_index":1198,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["el.classname",{"_index":1200,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["element.id",{"_index":755,"title":{},"body":{"components/FiltersComponent.html":{}}}],["element.properties.id",{"_index":1627,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksPage.html":{}}}],["ellipsis",{"_index":1904,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["email",{"_index":505,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["emit",{"_index":364,"title":{},"body":{"injectables/CacheService.html":{}}}],["emits",{"_index":339,"title":{},"body":{"injectables/CacheService.html":{}}}],["emitted",{"_index":371,"title":{},"body":{"injectables/CacheService.html":{}}}],["empty",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":1848,"title":{},"body":{"components/TrekCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["enablegeolocationnotification",{"_index":781,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["enregistrée",{"_index":2259,"title":{},"body":{"components/TreksPage.html":{}}}],["enregistrées",{"_index":2263,"title":{},"body":{"components/TreksPage.html":{}}}],["enter",{"_index":2232,"title":{},"body":{"components/TreksPage.html":{}}}],["entrycomponents",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["env/environment",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["environment",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1457,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["environment.availablelanguage",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.indexof(defaultlanguage",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.length",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage[0",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.backgroundgeolocation",{"_index":931,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["environment.map.clusterpaint",{"_index":1325,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.globalmapiconsize",{"_index":1338,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.iconsize",{"_index":1233,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["environment.map.treklinelayerproperties",{"_index":1229,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["environment.map.zonelayerproperties",{"_index":1225,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["environment.map.zoneoutlinelayerproperties",{"_index":1227,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["environment.mapbox",{"_index":1107,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["environment.mapbox.accesstoken",{"_index":1108,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["environment.meterstonotify",{"_index":852,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["environment.offlinemapconfig",{"_index":2126,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.offlinemapconfig.style",{"_index":1309,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.onlinebaseurl",{"_index":961,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekDetailsPage.html":{}}}],["environment.onlinemapconfig",{"_index":2127,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.prod.ts",{"_index":2463,"title":{},"body":{"index.html":{}}}],["environment.treksbystep",{"_index":2214,"title":{},"body":{"components/TreksPage.html":{}}}],["environment.trekzoom.zoom",{"_index":1537,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["erasefilters",{"_index":683,"title":{},"body":{"components/FiltersComponent.html":{}}}],["err",{"_index":1349,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["erreur",{"_index":1863,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["error",{"_index":432,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["error'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["error.component",{"_index":1765,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["error.component.html",{"_index":434,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.scss",{"_index":433,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts",{"_index":431,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":443,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:11",{"_index":444,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:12",{"_index":442,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:13",{"_index":441,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:9",{"_index":445,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.status",{"_index":1447,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["error/connect",{"_index":430,"title":{},"body":{"components/ConnectErrorComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["es6",{"_index":2401,"title":{},"body":{"dependencies.html":{}}}],["est",{"_index":1857,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["even",{"_index":2582,"title":{},"body":{"license.html":{}}}],["event",{"_index":663,"title":{},"body":{"components/FilterValueComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"license.html":{}}}],["event.detail.checked",{"_index":664,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["event.stoppropagation",{"_index":1844,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["eventemitter",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["events",{"_index":2279,"title":{},"body":{"components/TreksPage.html":{}}}],["everything",{"_index":351,"title":{},"body":{"injectables/CacheService.html":{}}}],["exemplary",{"_index":2560,"title":{},"body":{"license.html":{}}}],["expand",{"_index":572,"title":{},"body":{"components/FilterComponent.html":{}}}],["expandable",{"_index":573,"title":{},"body":{"components/FilterComponent.html":{}}}],["expandableitems",{"_index":391,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expandcollapse",{"_index":418,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expanded",{"_index":392,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["expandtreks",{"_index":2194,"title":{},"body":{"components/TreksPage.html":{}}}],["expansion",{"_index":1353,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["exports",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["express",{"_index":2543,"title":{},"body":{"license.html":{}}}],["expression",{"_index":995,"title":{},"body":{"components/LoaderComponent.html":{}}}],["extand",{"_index":1892,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["extends",{"_index":454,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["extra",{"_index":1901,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["fab",{"_index":2059,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["fails",{"_index":1930,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fake",{"_index":942,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["false",{"_index":416,"title":{},"body":{"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":460,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["feature.geometry.coordinates",{"_index":836,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["feature.properties",{"_index":1360,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.properties.id",{"_index":826,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["feature.properties.name",{"_index":835,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["feature.properties[filter.id",{"_index":629,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["featurecollection",{"_index":461,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["featureid",{"_index":1374,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties",{"_index":1341,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties.cluster_id",{"_index":1344,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features",{"_index":470,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["features.foreach((feature",{"_index":1365,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].geometry",{"_index":1355,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].properties",{"_index":1342,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresincluster",{"_index":1350,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio",{"_index":1362,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio.push",{"_index":1366,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["ff7675",{"_index":1334,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fff",{"_index":1327,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1328,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{}}}],["files:appname",{"_index":2465,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2437,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":108,"title":{"interfaces/Filter.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filter'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["filter((loadingid",{"_index":1048,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["filter((v",{"_index":1730,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filter(treks",{"_index":596,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter(value",{"_index":638,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.component.html",{"_index":560,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":559,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.id",{"_index":744,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.name",{"_index":577,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.type",{"_index":617,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values",{"_index":637,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filter.values.filter(value",{"_index":634,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values.foreach(value",{"_index":753,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filtercomponent",{"_index":103,"title":{"components/FilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["filteredfeatures",{"_index":612,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredfeatures.filter(feature",{"_index":615,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredtreks",{"_index":536,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["filters",{"_index":525,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["filters'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["filters.component.html",{"_index":675,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":674,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.erase",{"_index":758,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.foreach(filter",{"_index":614,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filters.oneresult",{"_index":760,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.push(filter",{"_index":1685,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filters.results",{"_index":763,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.title",{"_index":756,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.zeroresult",{"_index":759,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filterscomponent",{"_index":105,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["filtertreks",{"_index":1487,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["filtertreksservice",{"_index":581,"title":{"injectables/FilterTreksService.html":{}},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["filtertreksservice.containsfilter(filter",{"_index":618,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.filter(treks",{"_index":650,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).indexof(feature.properties[filter.id",{"_index":633,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).length",{"_index":624,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedinterval(filter).foreach(([min",{"_index":626,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getnumberofactivefilters(filters",{"_index":646,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.intervalfilter(filter",{"_index":619,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.isfilteractive(filter",{"_index":616,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtervalue",{"_index":517,"title":{"interfaces/FilterValue.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filtervalue.checked",{"_index":748,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtervaluecomponent",{"_index":107,"title":{"components/FilterValueComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["filtres",{"_index":2253,"title":{},"body":{"components/TreksPage.html":{}}}],["find",{"_index":2456,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1063,"title":{},"body":{"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["finish(id",{"_index":1046,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["first",{"_index":2510,"title":{},"body":{"index.html":{}}}],["first_picture",{"_index":473,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["fit",{"_index":2500,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":2549,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1003,"title":{},"body":{"components/LoaderComponent.html":{}}}],["flex",{"_index":1002,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["following",{"_index":2526,"title":{},"body":{"license.html":{}}}],["font",{"_index":448,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{}}}],["foreground",{"_index":819,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["forkjoin",{"_index":1912,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["form",{"_index":2535,"title":{},"body":{"license.html":{}}}],["forms",{"_index":2523,"title":{},"body":{"license.html":{}}}],["found",{"_index":1921,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fr",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fromassets",{"_index":1180,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["fromcoordinates",{"_index":795,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["full",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FiltersComponent.html":{},"modules/TabsPageRoutingModule.html":{}}}],["function",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{}}}],["functions",{"_index":2411,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2427,"title":{},"body":{"index.html":{}}}],["geographical",{"_index":2480,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":464,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["geojsonproperties",{"_index":1294,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource",{"_index":1103,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterexpansionzoom",{"_index":1354,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterleaves",{"_index":1347,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsourceraw",{"_index":1295,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geolocate",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["geolocate.cancel",{"_index":873,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.open",{"_index":874,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocatenotificationscomponent",{"_index":110,"title":{"components/GeolocateNotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["geolocateservice",{"_index":787,"title":{"injectables/GeolocateService.html":{}},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{}}}],["geolocation",{"_index":2348,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["geolocation/ngx",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{}}}],["geolocationconfig",{"_index":923,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["geometry",{"_index":478,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["geosjon",{"_index":2476,"title":{},"body":{"index.html":{}}}],["geotrek",{"_index":2416,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["get(['geolocate.asklocatepermission",{"_index":872,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["get(url",{"_index":296,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcheckedidforfilter",{"_index":587,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedidforfilter(filter",{"_index":598,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval",{"_index":588,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval(filter",{"_index":600,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcommonimgsrc",{"_index":548,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getfilteredtreks",{"_index":589,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilteredtreks(treks",{"_index":602,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilters",{"_index":1640,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getfilters(settings",{"_index":1650,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek",{"_index":1641,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek(trek",{"_index":1652,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getmapconfigfortrekbyid",{"_index":1476,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getmapconfigfortrekbyid(trek",{"_index":546,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getmdcolsize",{"_index":2195,"title":{},"body":{"components/TreksPage.html":{}}}],["getminimaltrekbyid",{"_index":1477,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getminimaltrekbyid(trekid",{"_index":1491,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getmoreitembyid",{"_index":1382,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitembyid(id",{"_index":1386,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitems",{"_index":1383,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getnumberofactivefilters",{"_index":590,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getnumberofactivefilters(filters",{"_index":604,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getpicturesrc",{"_index":1939,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["getpicturesrc(picture",{"_index":1944,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["getpoisfortrekbyid",{"_index":1478,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(id",{"_index":538,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(trekid",{"_index":1494,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gets",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{}}}],["getsettings",{"_index":1642,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getting",{"_index":2414,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettouristiccategorieswithfeatures",{"_index":1643,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccategorieswithfeatures(touristiccontents",{"_index":1655,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccontentsfortrekbyid",{"_index":1479,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(id",{"_index":539,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(trekid",{"_index":1496,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettouristiceventsfortrekbyid",{"_index":1480,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(id",{"_index":540,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(trekid",{"_index":1498,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekbyid",{"_index":1481,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(id",{"_index":537,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(trekid",{"_index":1500,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekdetailsurl",{"_index":1482,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekdetailsurl(trekid",{"_index":542,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc",{"_index":1483,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc(trek",{"_index":543,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl",{"_index":1484,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl(trekid",{"_index":545,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreks",{"_index":1485,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettreksmapurl",{"_index":544,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreksurl",{"_index":541,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getvalueforpropertybyid",{"_index":1644,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getvalueforpropertybyid(propertyname",{"_index":1657,"title":{},"body":{"injectables/SettingsService.html":{}}}],["git",{"_index":2428,"title":{},"body":{"index.html":{}}}],["git+https://github.com/steffaan/cordova",{"_index":2386,"title":{},"body":{"dependencies.html":{}}}],["git@github.com:geotrekce/geotrek",{"_index":2430,"title":{},"body":{"index.html":{}}}],["given",{"_index":1519,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gl",{"_index":468,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":2508,"title":{},"body":{"index.html":{}}}],["globalization",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["globalmapiconsize",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyphs",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["goods",{"_index":2565,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2590,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1433,"title":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1434,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"overview.html":{}}}],["h",{"_index":1881,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["handle(req",{"_index":1057,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["handlefiltersstate",{"_index":684,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handlefiltersstate(checkstate",{"_index":698,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handler",{"_index":889,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["header",{"_index":878,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1392,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["height",{"_index":579,"title":{},"body":{"components/FilterComponent.html":{},"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["here",{"_index":2472,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1908,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hidealllabel",{"_index":396,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["hits",{"_index":288,"title":{},"body":{"injectables/CacheService.html":{}}}],["holder",{"_index":2554,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2541,"title":{},"body":{"license.html":{}}}],["horizontal=\"end",{"_index":2250,"title":{},"body":{"components/TreksPage.html":{}}}],["hors",{"_index":1860,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksPage.html":{}}}],["html",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["htmlionmodalelement",{"_index":2093,"title":{},"body":{"components/TrekMapPage.html":{}}}],["http",{"_index":295,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/functions.html":{}}}],["http_interceptors",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpclientmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1442,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["httpevent",{"_index":1026,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httphandler",{"_index":1023,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpheaders",{"_index":1389,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpinterceptor",{"_index":1027,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpoptions",{"_index":1391,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httprequest",{"_index":1021,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpresponse",{"_index":1028,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://b.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://c.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://my",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydratedtrek",{"_index":500,"title":{"interfaces/HydratedTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["hydratedtrek.properties.arrival_city",{"_index":1708,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.cities",{"_index":1710,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure",{"_index":1877,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.departure_city",{"_index":1706,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure_city?.name",{"_index":1876,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.difficulty",{"_index":1697,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.difficulty?.name",{"_index":1878,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.duration",{"_index":1879,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.information_desks.foreach(information_desk",{"_index":1724,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.length",{"_index":1885,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.networks",{"_index":1715,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice",{"_index":1700,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.route",{"_index":1703,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.themes",{"_index":1719,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties?.name",{"_index":1874,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrekproperties",{"_index":501,"title":{"interfaces/HydratedTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["ici",{"_index":2266,"title":{},"body":{"components/TreksPage.html":{}}}],["icon",{"_index":437,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":2474,"title":{},"body":{"index.html":{}}}],["iconsize",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":455,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ideally",{"_index":2488,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2308,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1032,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.length",{"_index":1036,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.push(id",{"_index":1044,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["image",{"_index":1191,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"index.html":{}}}],["imagestoload",{"_index":1160,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["imagestoload.foreach((imagetoload",{"_index":1186,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["imagestoload.length",{"_index":1194,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["imagestoload.push",{"_index":1165,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["imagetoload.fromassets",{"_index":1188,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["imagetoload.id.tostring",{"_index":1193,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["imagetoload.pictogram",{"_index":1189,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["imgpracticesrc",{"_index":1808,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["imgsrc",{"_index":1809,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["implements",{"_index":384,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["implied",{"_index":2544,"title":{},"body":{"license.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["important",{"_index":2486,"title":{},"body":{"index.html":{}}}],["imports",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["incidental",{"_index":2558,"title":{},"body":{"license.html":{}}}],["including",{"_index":2546,"title":{},"body":{"license.html":{}}}],["increment",{"_index":373,"title":{},"body":{"injectables/CacheService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2557,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1348,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["information",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"dependencies.html":{}}}],["information_desk",{"_index":1270,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["information_desk.municipality",{"_index":2045,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["information_desk.phone",{"_index":2046,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["information_desk.postal_code",{"_index":2044,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["information_desk.setdata(information_desks",{"_index":1280,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["information_desk.type",{"_index":1725,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desk_property.id",{"_index":1279,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["information_desk_property.latitude",{"_index":1276,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["information_desk_property.longitude",{"_index":1275,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["information_desk_property.type",{"_index":1278,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["information_desk_types",{"_index":1170,"title":{},"body":{"components/MapTrekVizComponent.html":{},"injectables/SettingsService.html":{}}}],["information_desks",{"_index":496,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["information_desks.features.push",{"_index":1277,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["informationdesk",{"_index":497,"title":{"interfaces/InformationDesk.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationdesk${typeinformationdesk.id",{"_index":1172,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["informationdesk.municipality",{"_index":973,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.name",{"_index":971,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.phone",{"_index":976,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.postal_code",{"_index":972,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdeskdetailscomponent",{"_index":113,"title":{"components/InformationDeskDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["informationdeskpicture",{"_index":957,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdeskproperty",{"_index":1144,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["informationdeskproperty.id",{"_index":1145,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["informationintro",{"_index":522,"title":{"interfaces/InformationIntro.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationitem",{"_index":523,"title":{"interfaces/InformationItem.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informations.service",{"_index":1444,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["informations.service.ts",{"_index":1380,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["informations.service.ts:14",{"_index":1385,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:18",{"_index":1388,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:27",{"_index":1387,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations/more",{"_index":1379,"title":{},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["inherited",{"_index":705,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["initializeapp",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["initializelayers",{"_index":1077,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["initializesources",{"_index":1078,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["initialsize",{"_index":397,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["initialstate",{"_index":398,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["injectable",{"_index":281,"title":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":283,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["inline",{"_index":2056,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["inner",{"_index":667,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["input",{"_index":417,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["inputs",{"_index":395,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["inside",{"_index":1346,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["install",{"_index":2426,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2418,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2425,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2434,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1060,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["intercept",{"_index":1018,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["intercept(req",{"_index":1020,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["interceptor",{"_index":1015,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1016,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interface",{"_index":450,"title":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["interfaces",{"_index":452,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["internationalization",{"_index":2470,"title":{},"body":{"index.html":{}}}],["interruption",{"_index":2570,"title":{},"body":{"license.html":{}}}],["interval",{"_index":515,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["intervalfilter",{"_index":518,"title":{"interfaces/IntervalFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["intervalfilter(filter",{"_index":606,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["ioncontent",{"_index":2211,"title":{},"body":{"components/TreksPage.html":{}}}],["ionic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ionicmodule.forroot",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewdidenter",{"_index":2076,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["ionviewdidleave",{"_index":2132,"title":{},"body":{"components/TreksMapPage.html":{}}}],["ionviewwillenter",{"_index":685,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["ionviewwillleave",{"_index":1582,"title":{},"body":{"components/ProgressComponent.html":{}}}],["ios",{"_index":2374,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["iosandroid",{"_index":2446,"title":{},"body":{"index.html":{}}}],["is_park_centered",{"_index":489,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isalert",{"_index":1827,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["isfilteractive",{"_index":591,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfilteractive(filter",{"_index":608,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isininterval",{"_index":625,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isinview",{"_index":2129,"title":{},"body":{"components/TreksMapPage.html":{}}}],["isloading",{"_index":1038,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isloading(id",{"_index":1050,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isoffline",{"_index":547,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isonline",{"_index":676,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["item",{"_index":1400,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{}}}],["item'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["item.module#moreitempagemodule",{"_index":1802,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["item.module.ts",{"_index":1425,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page",{"_index":1428,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page.html",{"_index":1402,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.scss",{"_index":1401,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts",{"_index":1399,"title":{},"body":{"components/MoreItemPage.html":{},"coverage.html":{}}}],["item.page.ts:14",{"_index":1413,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:15",{"_index":1414,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:16",{"_index":1410,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:23",{"_index":1411,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:38",{"_index":1412,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.resolver",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["item.resolver.ts",{"_index":1436,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:12",{"_index":1438,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.resolver.ts:16",{"_index":1441,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item/more",{"_index":1398,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["items",{"_index":399,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/LoaderComponent.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["itemtemplate",{"_index":400,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["itinéraire",{"_index":2031,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["j",{"_index":1884,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["js",{"_index":2399,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(await",{"_index":1675,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.parse(poi.properties.pictures",{"_index":1140,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["json.parse(touristiccontent.properties.pictures",{"_index":1151,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["json.stringify(settings",{"_index":1671,"title":{},"body":{"injectables/SettingsService.html":{}}}],["justify",{"_index":1004,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["key",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{}}}],["keyboard",{"_index":2381,"title":{},"body":{"dependencies.html":{}}}],["kilometers",{"_index":854,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["km",{"_index":1887,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["kmtonotify",{"_index":851,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["la",{"_index":1855,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["label",{"_index":1368,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["language",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":365,"title":{},"body":{"injectables/CacheService.html":{}}}],["latest",{"_index":2421,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":506,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["layer",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layers",{"_index":1340,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":1231,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["le",{"_index":2033,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["left",{"_index":1544,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["legend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["length",{"_index":477,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["les",{"_index":2252,"title":{},"body":{"components/TreksPage.html":{}}}],["liability",{"_index":2573,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2555,"title":{},"body":{"license.html":{}}}],["license",{"_index":2511,"title":{"license.html":{}},"body":{"license.html":{}}}],["ligne",{"_index":1861,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksPage.html":{}}}],["limited",{"_index":2547,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2479,"title":{},"body":{"index.html":{}}}],["line",{"_index":1228,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/TrekDetailsPage.html":{},"miscellaneous/variables.html":{}}}],["lines",{"_index":666,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["linux",{"_index":2448,"title":{},"body":{"index.html":{}}}],["list",{"_index":386,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TreksPage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["list.component",{"_index":1763,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["list.component.html",{"_index":389,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.scss",{"_index":388,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts",{"_index":383,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":408,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:13",{"_index":411,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:14",{"_index":403,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:15",{"_index":405,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:16",{"_index":407,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:17",{"_index":410,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:19",{"_index":414,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:20",{"_index":415,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:21",{"_index":402,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:25",{"_index":412,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:31",{"_index":413,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list/collapsible",{"_index":382,"title":{},"body":{"components/CollapsibleListComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["literal",{"_index":308,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/Poi.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicEvent.html":{},"interfaces/Trek.html":{}}}],["load",{"_index":2230,"title":{},"body":{"components/TreksPage.html":{}}}],["loadchildren",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loaded",{"_index":2102,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loader",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["loader.component.html",{"_index":979,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":978,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.dismiss",{"_index":1853,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loader.present",{"_index":1850,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadercomponent",{"_index":117,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["loaderstatus",{"_index":980,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksPage.html":{}}}],["loadimages",{"_index":1158,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["loadimages.subscribe",{"_index":1205,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["loading",{"_index":981,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["loadingcontroller",{"_index":1815,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadingid",{"_index":1049,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids",{"_index":1031,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids.indexof(id",{"_index":1052,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadinginterceptor",{"_index":167,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"overview.html":{}}}],["loadingservice",{"_index":985,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["loadsettings",{"_index":1645,"title":{},"body":{"injectables/SettingsService.html":{}}}],["loadtreks",{"_index":1486,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["local",{"_index":2384,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["localnotifications",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["located",{"_index":2490,"title":{},"body":{"index.html":{}}}],["location",{"_index":1771,"title":{},"body":{"components/TabsPage.html":{}}}],["location.latitude",{"_index":940,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["locationprovider",{"_index":924,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["lodash",{"_index":717,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["lodash.clonedeep",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["longitude",{"_index":507,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["lors",{"_index":1865,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loss",{"_index":2567,"title":{},"body":{"license.html":{}}}],["lot",{"_index":2464,"title":{},"body":{"index.html":{}}}],["m",{"_index":2018,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["macos",{"_index":2444,"title":{},"body":{"index.html":{}}}],["make",{"_index":377,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["makina",{"_index":2517,"title":{},"body":{"license.html":{}}}],["map",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["map(([treks",{"_index":649,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((ids",{"_index":1035,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["map(checkedvalue",{"_index":640,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(data",{"_index":2163,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["map(filters",{"_index":645,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(touristiccontent",{"_index":1728,"title":{},"body":{"injectables/SettingsService.html":{}}}],["map.module#trekmappagemodule",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map.module#treksmappagemodule",{"_index":1799,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["map.module.ts",{"_index":2120,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page",{"_index":2122,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page.html",{"_index":2073,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.scss",{"_index":2072,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts",{"_index":2071,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["map.page.ts:100",{"_index":2080,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:101",{"_index":2137,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:104",{"_index":2087,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:106",{"_index":2144,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:114",{"_index":2145,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:129",{"_index":2141,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:133",{"_index":2140,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:27",{"_index":2090,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:28",{"_index":2089,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:29",{"_index":2096,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:30",{"_index":2091,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:31",{"_index":2097,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:32",{"_index":2088,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:33",{"_index":2094,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:34",{"_index":2092,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:35",{"_index":2077,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:36",{"_index":2146,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:37",{"_index":2147,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:38",{"_index":2135,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:41",{"_index":2148,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:42",{"_index":2095,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:44",{"_index":2149,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:47",{"_index":2078,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:54",{"_index":2143,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:70",{"_index":2081,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:74",{"_index":2142,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:75",{"_index":2086,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:79",{"_index":2138,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:85",{"_index":2136,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:92",{"_index":2083,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map/trek",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["map/treks",{"_index":1798,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["mapbox",{"_index":467,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":1105,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl.accesstoken",{"_index":1109,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["mapboxgl.map",{"_index":1310,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.marker",{"_index":1202,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["mapboxoptions",{"_index":466,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig",{"_index":554,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig.center",{"_index":1546,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["mapgenerally",{"_index":2477,"title":{},"body":{"index.html":{}}}],["mapisloaded",{"_index":1082,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["mapisloaded(event",{"_index":2079,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mapisloaded(loaded",{"_index":2139,"title":{},"body":{"components/TreksMapPage.html":{}}}],["maplayermouseevent",{"_index":1104,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["maplink",{"_index":1935,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksPage.html":{}}}],["maptrek.disablenotification",{"_index":893,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.enablenotification",{"_index":892,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptreksvizcomponent",{"_index":119,"title":{"components/MapTreksVizComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["maptrekvizcomponent",{"_index":123,"title":{"components/MapTrekVizComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":2058,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["marker",{"_index":1101,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["markerposition",{"_index":1075,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["matching",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":2538,"title":{},"body":{"license.html":{}}}],["mauron85",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":627,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TrekCardComponent.html":{}}}],["maxlocations",{"_index":926,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["maxsize",{"_index":289,"title":{},"body":{"injectables/CacheService.html":{}}}],["maxzoom",{"_index":1217,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["medium",{"_index":2054,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["merchantability",{"_index":2548,"title":{},"body":{"license.html":{}}}],["mergefilterstreks",{"_index":2130,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap",{"_index":2151,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["mergemap((context",{"_index":2164,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["message",{"_index":880,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["met",{"_index":2528,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["meterstonotify",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["min",{"_index":630,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["minimaltrek",{"_index":471,"title":{"interfaces/MinimalTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltrekproperties",{"_index":472,"title":{"interfaces/MinimalTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltreks",{"_index":469,"title":{"interfaces/MinimalTreks.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimum",{"_index":2435,"title":{},"body":{"index.html":{}}}],["minzoom",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2410,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2417,"title":{},"body":{"index.html":{}}}],["mobile.git",{"_index":2431,"title":{},"body":{"index.html":{}}}],["modal",{"_index":1991,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["modal.ondiddismiss",{"_index":2172,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["modal.present",{"_index":2114,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["modalcontroller",{"_index":689,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["modalctrl",{"_index":694,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["modalpoidetails",{"_index":2074,"title":{},"body":{"components/TrekMapPage.html":{}}}],["modalprogress",{"_index":1989,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["modalprogress.dismiss",{"_index":1996,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["modalprogress.present",{"_index":1992,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["mode",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/TrekCardComponent.html":{},"components/TreksPage.html":{},"index.html":{}}}],["modification",{"_index":2524,"title":{},"body":{"license.html":{}}}],["module",{"_index":152,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["modules",{"_index":154,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"index.html":{}}}],["more'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["more.page",{"_index":1468,"title":{},"body":{"modules/MorePageModule.html":{}}}],["more.page.html",{"_index":1451,"title":{},"body":{"components/MorePage.html":{}}}],["more.page.scss",{"_index":1450,"title":{},"body":{"components/MorePage.html":{}}}],["more/more",{"_index":1801,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["more/more.module",{"_index":1790,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["more/more.module#morepagemodule",{"_index":1800,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["moreinformationintro.title",{"_index":1462,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsintro",{"_index":1453,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsservice",{"_index":1377,"title":{"injectables/MoreInformationsService.html":{}},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["moreitem",{"_index":1404,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.title",{"_index":1420,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitemid",{"_index":1405,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"modules/TabsPageRoutingModule.html":{}}}],["moreitempage",{"_index":125,"title":{"components/MoreItemPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["moreitempagemodule",{"_index":1421,"title":{"modules/MoreItemPageModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreitemresolver",{"_index":186,"title":{"guards/MoreItemResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["morepage",{"_index":128,"title":{"components/MorePage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["morepagemodule",{"_index":1463,"title":{"modules/MorePageModule.html":{}},"body":{"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreresolver",{"_index":189,"title":{"guards/MoreResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["ms",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{}}}],["multi",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["multipoint",{"_index":462,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["municipality",{"_index":508,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["national",{"_index":2036,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["native",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["native/background",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"dependencies.html":{}}}],["native/core",{"_index":2350,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":2352,"title":{},"body":{"dependencies.html":{}}}],["native/file/ngx",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["native/globalization",{"_index":2353,"title":{},"body":{"dependencies.html":{}}}],["native/globalization/ngx",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["native/ionic",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/local",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["native/network",{"_index":2355,"title":{},"body":{"dependencies.html":{}}}],["native/network/ngx",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["native/screen",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"dependencies.html":{}}}],["native/splash",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/zip",{"_index":2359,"title":{},"body":{"dependencies.html":{}}}],["native/zip/ngx",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["navigatetotrek",{"_index":1283,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["navigatetotrek(id",{"_index":1608,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["navigation",{"_index":549,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["navigator.language.slice(0",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["navparams",{"_index":692,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["nb",{"_index":762,"title":{},"body":{"components/FiltersComponent.html":{},"components/TreksPage.html":{}}}],["nbofflinetreks",{"_index":2191,"title":{},"body":{"components/TreksPage.html":{}}}],["nbtemporaryfilterstreks",{"_index":677,"title":{},"body":{"components/FiltersComponent.html":{}}}],["ne",{"_index":2255,"title":{},"body":{"components/TreksPage.html":{}}}],["necessary",{"_index":620,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["need",{"_index":1128,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{}}}],["negligence",{"_index":2578,"title":{},"body":{"license.html":{}}}],["network",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"dependencies.html":{}}}],["network.name",{"_index":2027,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["networks",{"_index":494,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["new",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["next",{"_index":1022,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["ngmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ngonchanges",{"_index":782,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngonchanges(changes",{"_index":798,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngondestroy",{"_index":687,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["ngoninit",{"_index":393,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/TabsPageModule.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["node.js",{"_index":2423,"title":{},"body":{"index.html":{}}}],["none",{"_index":2159,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["nonetwork",{"_index":2131,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["notice",{"_index":2533,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2385,"title":{},"body":{"dependencies.html":{}}}],["notifications",{"_index":769,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["notifications'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["notifications.component",{"_index":1744,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifications.component.html",{"_index":771,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":770,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":767,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications.component.ts:111",{"_index":797,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:115",{"_index":796,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:119",{"_index":794,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:150",{"_index":804,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:31",{"_index":807,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:32",{"_index":806,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:33",{"_index":809,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:34",{"_index":789,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:35",{"_index":790,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:36",{"_index":791,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:37",{"_index":788,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:40",{"_index":810,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:41",{"_index":808,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:42",{"_index":805,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:47",{"_index":803,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:63",{"_index":800,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:74",{"_index":802,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:84",{"_index":792,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.git",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["notifications/geolocate",{"_index":766,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications/ngx",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["notificationsmodeisactive",{"_index":776,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notificationtext",{"_index":909,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notificationtitle",{"_index":921,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notifiedindex",{"_index":856,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notify",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notreks",{"_index":2246,"title":{},"body":{"components/TreksPage.html":{}}}],["nowrap",{"_index":1907,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["npm",{"_index":2424,"title":{},"body":{"index.html":{}}}],["null",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["numberofactivefilters",{"_index":623,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["object",{"_index":1236,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.cache).length",{"_index":348,"title":{},"body":{"injectables/CacheService.html":{}}}],["observable",{"_index":302,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"interfaces/TreksService.html":{}}}],["observable.create((observer",{"_index":1159,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["observable.pipe(tap",{"_index":378,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer",{"_index":370,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer.complete",{"_index":1195,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["observer.next",{"_index":1192,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["of('connectionerror",{"_index":1448,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["offline",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["offline/:trekid",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offlinemapconfig",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offlinetreks",{"_index":690,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksPage.html":{}}}],["offlinetreksservice",{"_index":691,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["offset",{"_index":1332,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["ok",{"_index":1870,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["onchanges",{"_index":768,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ondestroy",{"_index":673,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["one",{"_index":1929,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["oninit",{"_index":385,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["online",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinebaseurl",{"_index":2438,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["onlinemapconfig",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinetreks",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["onlinetrekserror",{"_index":1475,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["onlinetreksservice",{"_index":28,"title":{"injectables/OnlineTreksService.html":{}},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["onsameurlnavigation",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["opacity",{"_index":2278,"title":{},"body":{"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["optionnal",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":298,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options).pipe",{"_index":355,"title":{},"body":{"injectables/CacheService.html":{}}}],["orientation",{"_index":2356,"title":{},"body":{"dependencies.html":{}}}],["orientation/ngx",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["originaltrek",{"_index":552,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["others",{"_index":2505,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":2579,"title":{},"body":{"license.html":{}}}],["out",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outline",{"_index":1226,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":446,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["outputs",{"_index":439,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["overflow",{"_index":1905,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["overlap",{"_index":1235,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["overview",{"_index":2591,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2459,"title":{},"body":{"index.html":{}}}],["package",{"_index":2341,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":1541,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["pager=\"true",{"_index":2008,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["pages/tabs/tabs.module#tabspagemodule",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/trek",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paint",{"_index":1324,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["parc",{"_index":2035,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["parking",{"_index":1184,"title":{},"body":{"components/MapTrekVizComponent.html":{},"index.html":{}}}],["parking.features.push",{"_index":1267,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["parking_location",{"_index":504,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parkingsource",{"_index":1265,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["parkingsource.setdata(parking",{"_index":1269,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["particular",{"_index":2550,"title":{},"body":{"license.html":{}}}],["pas",{"_index":2257,"title":{},"body":{"components/TreksPage.html":{}}}],["path",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["pathmatch",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["permissions",{"_index":879,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["permitted",{"_index":2525,"title":{},"body":{"license.html":{}}}],["persmissionsconfirm",{"_index":876,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["persmissionsconfirm.present",{"_index":891,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["personal",{"_index":2440,"title":{},"body":{"index.html":{}}}],["phone",{"_index":509,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["photo_url",{"_index":510,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picto",{"_index":1899,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["pictogram",{"_index":521,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picture",{"_index":482,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["picture.author",{"_index":1564,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture.legend",{"_index":1563,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture.url",{"_index":1522,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["pictures",{"_index":481,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pipe",{"_index":1058,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["platform",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["plugin",{"_index":2375,"title":{},"body":{"dependencies.html":{}}}],["poi",{"_index":133,"title":{"interfaces/Poi.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["poi'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["poi.component.html",{"_index":1549,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.component.scss",{"_index":1548,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.properties",{"_index":1138,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["poi.properties.name",{"_index":1565,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures",{"_index":1139,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["poi_types",{"_index":1163,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["poicomponent",{"_index":130,"title":{"components/PoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["poidetailscomponent",{"_index":132,"title":{"components/PoiDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["poiimg",{"_index":1567,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["point",{"_index":463,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["point(feature.coordinates",{"_index":859,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(fromcoordinates",{"_index":855,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point).coordinates",{"_index":1356,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count",{"_index":1323,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count_abbreviated",{"_index":1329,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointer",{"_index":1155,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksPage.html":{}}}],["points",{"_index":1303,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pois",{"_index":527,"title":{"interfaces/Pois.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["pois${typepoi.id",{"_index":1166,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["poissource",{"_index":1256,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["poissource.setdata(this.currentpois",{"_index":1258,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["position",{"_index":943,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["possibility",{"_index":2584,"title":{},"body":{"license.html":{}}}],["postal_code",{"_index":511,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice",{"_index":476,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice.id.tostring",{"_index":1314,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices",{"_index":1311,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.foreach((practice",{"_index":1312,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.length",{"_index":1315,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentconfirmfeatures",{"_index":1282,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentconfirmfeatures(features",{"_index":1290,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentdeleteconfirm",{"_index":1813,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentdeleteconfirm(isalert",{"_index":1824,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentdownloadconfirm",{"_index":1940,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["presentdownloadconfirm(isalert",{"_index":1947,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["presentfilters",{"_index":2133,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["presentinformationdeskdetails",{"_index":1083,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/TrekMapPage.html":{}}}],["presentinformationdeskdetails(informationdesk",{"_index":2082,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentpersmissionsconfirm",{"_index":783,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["presentpoidetails",{"_index":786,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/TrekMapPage.html":{}}}],["presentpoidetails(poi",{"_index":2085,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentsearch",{"_index":2134,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["prevent",{"_index":994,"title":{},"body":{"components/LoaderComponent.html":{}}}],["primary",{"_index":2487,"title":{},"body":{"index.html":{}}}],["priority",{"_index":867,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["private",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["proceeding",{"_index":2419,"title":{},"body":{"index.html":{}}}],["procurement",{"_index":2563,"title":{},"body":{"license.html":{}}}],["prod",{"_index":2453,"title":{},"body":{"index.html":{}}}],["production",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profits",{"_index":2568,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1014,"title":{},"body":{"components/LoaderComponent.html":{},"components/ProgressComponent.html":{},"components/TrekDetailsPage.html":{}}}],["progress'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["progress.component.html",{"_index":1580,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progress.component.scss",{"_index":1579,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progressbarwidth",{"_index":983,"title":{},"body":{"components/LoaderComponent.html":{}}}],["progresscomponent",{"_index":134,"title":{"components/ProgressComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":2084,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"dependencies.html":{}}}],["properties",{"_index":285,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["property",{"_index":503,"title":{"interfaces/Property.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["property.values.find(value",{"_index":1694,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyname",{"_index":1659,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyvalue",{"_index":1693,"title":{},"body":{"injectables/SettingsService.html":{}}}],["protected",{"_index":679,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["provide",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2506,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["providers",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["public",{"_index":287,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["publishreplay",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{}}}],["publishreplay(1",{"_index":367,"title":{},"body":{"injectables/CacheService.html":{}}}],["pulse",{"_index":1201,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["purpose",{"_index":2551,"title":{},"body":{"license.html":{}}}],["radio",{"_index":1367,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["radius",{"_index":1336,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["rando",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randonnée",{"_index":1856,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksPage.html":{}}}],["randonnées",{"_index":2262,"title":{},"body":{"components/TreksPage.html":{}}}],["raster",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["redistribution",{"_index":2521,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":2529,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1583,"title":{},"body":{"components/ProgressComponent.html":{}}}],["refcount",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{}}}],["refonte",{"_index":2433,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1406,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["refreshdelay",{"_index":290,"title":{},"body":{"injectables/CacheService.html":{}}}],["regular",{"_index":1331,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["relative",{"_index":2270,"title":{},"body":{"components/TreksPage.html":{}}}],["release",{"_index":2450,"title":{},"body":{"index.html":{}}}],["releaseandroid",{"_index":2454,"title":{},"body":{"index.html":{}}}],["releasecustomization",{"_index":2455,"title":{},"body":{"index.html":{}}}],["reload",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["replaysubject",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{}}}],["represents",{"_index":2478,"title":{},"body":{"index.html":{}}}],["reproduce",{"_index":2536,"title":{},"body":{"license.html":{}}}],["req",{"_index":1025,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["req.method",{"_index":1054,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.urlwithparams",{"_index":1055,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["request",{"_index":341,"title":{},"body":{"injectables/CacheService.html":{}}}],["requests",{"_index":1928,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["require('@turf/distance').default",{"_index":815,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["require('lodash.clonedeep",{"_index":1512,"title":{},"body":{"injectables/OnlineTreksService.html":{},"miscellaneous/variables.html":{}}}],["require('mapbox",{"_index":1106,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":2436,"title":{},"body":{"index.html":{}}}],["res://ic_stat_panorama",{"_index":822,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["res://icon",{"_index":820,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["reserved",{"_index":2520,"title":{},"body":{"license.html":{}}}],["reset",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":1646,"title":{},"body":{"injectables/SettingsService.html":{},"components/TreksPage.html":{}}}],["resize",{"_index":1130,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["resolve",{"_index":1431,"title":{},"body":{"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{}}}],["resolve(route",{"_index":1439,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["resources",{"_index":2504,"title":{},"body":{"index.html":{}}}],["resources/icon.png",{"_index":2491,"title":{},"body":{"index.html":{}}}],["resources/splash.png",{"_index":2495,"title":{},"body":{"index.html":{}}}],["resourcesother",{"_index":2503,"title":{},"body":{"index.html":{}}}],["respecter",{"_index":2038,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["response",{"_index":340,"title":{},"body":{"injectables/CacheService.html":{}}}],["ressources",{"_index":2471,"title":{},"body":{"index.html":{}}}],["result",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2531,"title":{},"body":{"license.html":{}}}],["retrouverez",{"_index":2268,"title":{},"body":{"components/TreksPage.html":{}}}],["retry",{"_index":440,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["return",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksPage.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["returs",{"_index":1520,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["revoke",{"_index":291,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoked",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking",{"_index":292,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking(observable",{"_index":303,"title":{},"body":{"injectables/CacheService.html":{}}}],["rgba(189",{"_index":1010,"title":{},"body":{"components/LoaderComponent.html":{}}}],["right",{"_index":1545,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksPage.html":{}}}],["rights",{"_index":2519,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":1330,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["role",{"_index":884,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["roughly",{"_index":2499,"title":{},"body":{"index.html":{}}}],["route",{"_index":487,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["route.data['offline",{"_index":1914,"title":{},"body":{"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["route.parammap.get('moreitemid",{"_index":1445,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["route.parammap.get('trekid",{"_index":1913,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["router",{"_index":1409,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["routereusestrategy",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["routerlink",{"_index":1810,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["routermodule",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["routermodule.forchild",{"_index":2285,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":1432,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":262,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2445,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1429,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":465,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["rxjs/internal/observable/of",{"_index":1471,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/observable/throwerror",{"_index":1472,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/subscription",{"_index":2150,"title":{},"body":{"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["rxjs/operators",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["réglementation",{"_index":2039,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["same",{"_index":1253,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["savefiltersstate",{"_index":1647,"title":{},"body":{"injectables/SettingsService.html":{}}}],["savefiltersstate(filters",{"_index":1662,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveresult",{"_index":1995,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["scale(0",{"_index":2272,"title":{},"body":{"components/TreksPage.html":{}}}],["scale(1",{"_index":2275,"title":{},"body":{"components/TreksPage.html":{}}}],["scaley(0",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaley(1",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":2357,"title":{},"body":{"dependencies.html":{}}}],["screen's",{"_index":2497,"title":{},"body":{"index.html":{}}}],["screen/ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["screenorientation",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["screens",{"_index":2493,"title":{},"body":{"index.html":{}}}],["search",{"_index":1600,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["search'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["search(searchvalue",{"_index":1611,"title":{},"body":{"components/SearchComponent.html":{}}}],["search(treks",{"_index":1633,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["search.component.html",{"_index":1602,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1601,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.contentplaceholder",{"_index":1631,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.noresult",{"_index":1630,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.title",{"_index":1628,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcomponent",{"_index":136,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["searchtreks",{"_index":1605,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchtreksservice",{"_index":1599,"title":{"injectables/SearchTreksService.html":{}},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["searchvalue",{"_index":1613,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["searchvalue.tolowercase",{"_index":1635,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["secondary",{"_index":887,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["select",{"_index":2234,"title":{},"body":{"components/TreksPage.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["sending",{"_index":346,"title":{},"body":{"injectables/CacheService.html":{}}}],["sent",{"_index":360,"title":{},"body":{"injectables/CacheService.html":{}}}],["serverun",{"_index":2442,"title":{},"body":{"index.html":{}}}],["service",{"_index":1033,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TrekDetailsPage.html":{}}}],["service.status.getvalue",{"_index":1039,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.next(isloading",{"_index":1040,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["services",{"_index":2566,"title":{},"body":{"license.html":{}}}],["set",{"_index":356,"title":{},"body":{"injectables/CacheService.html":{}}}],["setlnglat(coordinates",{"_index":1203,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["setofflinesettings",{"_index":1648,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings",{"_index":29,"title":{"interfaces/Settings.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["settings.data",{"_index":1680,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.data.find((data",{"_index":1683,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters",{"_index":1679,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters$.pipe",{"_index":644,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["settings.filters.foreach(filter",{"_index":1681,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.json",{"_index":1687,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":30,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["setup",{"_index":2443,"title":{},"body":{"index.html":{}}}],["shall",{"_index":2553,"title":{},"body":{"license.html":{}}}],["sharedmodule",{"_index":1738,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedtreksmodule",{"_index":1748,"title":{"modules/SharedTreksModule.html":{}},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shareduimodule",{"_index":166,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["showalldata",{"_index":1814,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["showalllabel",{"_index":401,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["showappsettings",{"_index":897,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["showlocationsettings",{"_index":898,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["simplechange",{"_index":811,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["simplechanges",{"_index":799,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["simpletrek",{"_index":1985,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["site",{"_index":974,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/TrekDetailsPage.html":{}}}],["size",{"_index":447,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{},"miscellaneous/variables.html":{}}}],["slot=\"fixed",{"_index":2251,"title":{},"body":{"components/TreksPage.html":{}}}],["smallicon",{"_index":821,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["software",{"_index":2540,"title":{},"body":{"license.html":{}}}],["sound",{"_index":818,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sources",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":1897,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["special",{"_index":2559,"title":{},"body":{"license.html":{}}}],["splash",{"_index":2492,"title":{},"body":{"index.html":{}}}],["splashscreen",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["sqlite",{"_index":2396,"title":{},"body":{"dependencies.html":{}}}],["square",{"_index":2271,"title":{},"body":{"components/TreksPage.html":{},"index.html":{}}}],["src",{"_index":1518,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["src/.../animations.ts",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../geolocate",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../offline",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../online",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unsubscribe.ts",{"_index":2413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts",{"_index":2298,"title":{},"body":{"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts:11",{"_index":2301,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:17",{"_index":2300,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:5",{"_index":2299,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/animations.ts",{"_index":2313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/collapsible",{"_index":381,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["src/app/components/connect",{"_index":429,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/filter",{"_index":651,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts",{"_index":558,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts:14",{"_index":565,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:15",{"_index":564,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:16",{"_index":566,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:18",{"_index":563,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:23",{"_index":567,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:32",{"_index":569,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filters/filters.component.ts",{"_index":671,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/components/filters/filters.component.ts:19",{"_index":713,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:20",{"_index":710,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:21",{"_index":709,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:22",{"_index":708,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:23",{"_index":693,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:26",{"_index":711,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:35",{"_index":702,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:39",{"_index":701,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:64",{"_index":699,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:72",{"_index":695,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:77",{"_index":697,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:86",{"_index":696,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:90",{"_index":704,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/geolocate",{"_index":765,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/information",{"_index":951,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":977,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:12",{"_index":989,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":987,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:14",{"_index":991,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":986,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:17",{"_index":992,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:22",{"_index":990,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/map",{"_index":1069,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/poi",{"_index":1566,"title":{},"body":{"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts",{"_index":1547,"title":{},"body":{"components/PoiComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts:13",{"_index":1553,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:14",{"_index":1552,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:16",{"_index":1555,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:17",{"_index":1551,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:19",{"_index":1556,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:21",{"_index":1554,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/progress/progress.component.ts",{"_index":1576,"title":{},"body":{"components/ProgressComponent.html":{},"coverage.html":{}}}],["src/app/components/progress/progress.component.ts:12",{"_index":1588,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:13",{"_index":1585,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:15",{"_index":1589,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:17",{"_index":1586,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:24",{"_index":1587,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/search/search.component.ts",{"_index":1598,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:18",{"_index":1617,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:19",{"_index":1616,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:20",{"_index":1606,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:33",{"_index":1610,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:48",{"_index":1607,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:52",{"_index":1612,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:61",{"_index":1609,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:65",{"_index":1615,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/trek",{"_index":1803,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces.ts",{"_index":453,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces.ts:235",{"_index":2291,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:236",{"_index":2288,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:237",{"_index":2289,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:238",{"_index":2290,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:239",{"_index":2296,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:240",{"_index":2292,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:241",{"_index":2293,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:242",{"_index":2295,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:243",{"_index":2294,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:244",{"_index":2287,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:245",{"_index":2286,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/pages/more/more",{"_index":1397,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"coverage.html":{}}}],["src/app/pages/more/more.module.ts",{"_index":1467,"title":{},"body":{"modules/MorePageModule.html":{}}}],["src/app/pages/more/more.page.ts",{"_index":1449,"title":{},"body":{"components/MorePage.html":{},"coverage.html":{}}}],["src/app/pages/more/more.page.ts:14",{"_index":1459,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:15",{"_index":1458,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:16",{"_index":1454,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:22",{"_index":1455,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:37",{"_index":1456,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/tabs/tabs.module.ts",{"_index":1786,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/pages/tabs/tabs.page.ts",{"_index":1767,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/pages/tabs/tabs.page.ts:10",{"_index":1772,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/pages/tabs/tabs.routing.module.ts",{"_index":1791,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/pages/trek",{"_index":1931,"title":{},"body":{"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks",{"_index":2128,"title":{},"body":{"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks/treks.module.ts",{"_index":2283,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["src/app/pages/treks/treks.page.ts",{"_index":2186,"title":{},"body":{"components/TreksPage.html":{},"coverage.html":{}}}],["src/app/pages/treks/treks.page.ts:104",{"_index":2199,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:116",{"_index":2198,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:121",{"_index":2200,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:125",{"_index":2204,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:139",{"_index":2205,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:154",{"_index":2202,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:158",{"_index":2206,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:162",{"_index":2207,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:27",{"_index":2221,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:28",{"_index":2208,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:29",{"_index":2227,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:30",{"_index":2210,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:31",{"_index":2216,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:32",{"_index":2219,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:33",{"_index":2220,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:34",{"_index":2222,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:35",{"_index":2223,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:36",{"_index":2215,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:37",{"_index":2217,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:39",{"_index":2228,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:40",{"_index":2197,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:44",{"_index":2218,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:46",{"_index":2224,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:47",{"_index":2225,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:52",{"_index":2226,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:57",{"_index":2201,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/pages/treks/treks.page.ts:63",{"_index":2203,"title":{},"body":{"components/TreksPage.html":{}}}],["src/app/resolvers/more",{"_index":1435,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts",{"_index":1469,"title":{},"body":{"guards/MoreResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts:12",{"_index":1470,"title":{},"body":{"guards/MoreResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts",{"_index":1909,"title":{},"body":{"guards/TrekContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/trek.resolver.ts:23",{"_index":1910,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts:32",{"_index":1911,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts",{"_index":2123,"title":{},"body":{"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/treks.resolver.ts:12",{"_index":2124,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts:19",{"_index":2125,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/services/cache/cache.service.ts",{"_index":284,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/app/services/cache/cache.service.ts:12",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:13",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:14",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:15",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:16",{"_index":294,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:38",{"_index":299,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:72",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/filter",{"_index":582,"title":{},"body":{"injectables/FilterTreksService.html":{},"coverage.html":{}}}],["src/app/services/geolocate/geolocate.service.ts",{"_index":894,"title":{},"body":{"injectables/GeolocateService.html":{},"coverage.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:18",{"_index":902,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:21",{"_index":911,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:22",{"_index":913,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:26",{"_index":903,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:31",{"_index":904,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:36",{"_index":908,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:68",{"_index":910,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:76",{"_index":905,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:80",{"_index":906,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/loading/loading.service.ts",{"_index":1017,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading/loading.service.ts:12",{"_index":1068,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:14",{"_index":1064,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:28",{"_index":1065,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:34",{"_index":1066,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:44",{"_index":1067,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:53",{"_index":1019,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/loading/loading.service.ts:57",{"_index":1024,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/more",{"_index":1378,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["src/app/services/offline",{"_index":2335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/online",{"_index":1474,"title":{},"body":{"injectables/OnlineTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/search",{"_index":1632,"title":{},"body":{"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts",{"_index":1638,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts:117",{"_index":1653,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:179",{"_index":1656,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:27",{"_index":1665,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:29",{"_index":1666,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:30",{"_index":1649,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:32",{"_index":1667,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:34",{"_index":1660,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:44",{"_index":1664,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:52",{"_index":1651,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:71",{"_index":1654,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:80",{"_index":1663,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:84",{"_index":1661,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:96",{"_index":1658,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/shared",{"_index":1752,"title":{},"body":{"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1742,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/assets/i18n",{"_index":2469,"title":{},"body":{"index.html":{}}}],["src/assets/map/icons",{"_index":2473,"title":{},"body":{"index.html":{}}}],["src/assets/map/zone/zone.geojson",{"_index":2475,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environments.prod.ts",{"_index":2451,"title":{},"body":{"index.html":{}}}],["src/environments/environments.ts",{"_index":2439,"title":{},"body":{"index.html":{}}}],["src/theme/variables.scss",{"_index":2483,"title":{},"body":{"index.html":{}}}],["start",{"_index":1902,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["started",{"_index":2415,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startersrc/environments/environment.ts",{"_index":2462,"title":{},"body":{"index.html":{}}}],["startforeground",{"_index":928,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startlocation",{"_index":934,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startlocation.latitude",{"_index":937,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["starttracking",{"_index":899,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["starttracking(notificationtext",{"_index":907,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["state",{"_index":1030,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["statements",{"_index":2309,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":586,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["stationaryradius",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":917,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TreksPage.html":{}}}],["status.authorization",{"_index":919,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["status.isrunning",{"_index":920,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["statusbar",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["stoponterminate",{"_index":929,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoptracking",{"_index":900,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["storage",{"_index":1639,"title":{},"body":{"injectables/SettingsService.html":{},"dependencies.html":{}}}],["stores",{"_index":363,"title":{},"body":{"injectables/CacheService.html":{}}}],["street",{"_index":512,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["strict",{"_index":2576,"title":{},"body":{"license.html":{}}}],["string",{"_index":297,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["stroke",{"_index":1335,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":380,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["styleurls",{"_index":387,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["subscribe(([filteredtreks",{"_index":2167,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["subscribe((isloading",{"_index":1037,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["subscribe(async",{"_index":875,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["subscribed",{"_index":374,"title":{},"body":{"injectables/CacheService.html":{}}}],["subscription",{"_index":714,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["subscription.unsubscribe",{"_index":2305,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["subscriptions",{"_index":680,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["substitute",{"_index":2564,"title":{},"body":{"license.html":{}}}],["success",{"_index":1948,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["such",{"_index":2585,"title":{},"body":{"license.html":{}}}],["super",{"_index":722,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["super.ngondestroy",{"_index":1122,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["super.ngoninit",{"_index":723,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["support",{"_index":2587,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":1847,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["supprimer",{"_index":1868,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["supprimée",{"_index":1858,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["sure",{"_index":2420,"title":{},"body":{"index.html":{}}}],["survenue",{"_index":1864,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["svg",{"_index":2588,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1230,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["sélectionnés",{"_index":2254,"title":{},"body":{"components/TreksPage.html":{}}}],["t",{"_index":300,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{}}}],["tabbar.more",{"_index":1779,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.offline",{"_index":1778,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.treks",{"_index":1777,"title":{},"body":{"components/TabsPage.html":{}}}],["table",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1768,"title":{},"body":{"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["tabs.page",{"_index":1787,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":1770,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":1769,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.routing.module",{"_index":1788,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabspage",{"_index":138,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":1780,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tabspageroutingmodule",{"_index":1784,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{}}}],["take(1",{"_index":372,"title":{},"body":{"injectables/CacheService.html":{}}}],["tap",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["tap((event",{"_index":1059,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["tempfilter.id",{"_index":743,"title":{},"body":{"components/FiltersComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["templateref",{"_index":409,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["temporaryfilter",{"_index":741,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilter.values.find(tempvalue",{"_index":745,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters",{"_index":678,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters).length",{"_index":739,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.find(tempfilter",{"_index":742,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.foreach(filter",{"_index":752,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue.id",{"_index":746,"title":{},"body":{"components/FiltersComponent.html":{}}}],["text",{"_index":863,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["theme",{"_index":1721,"title":{},"body":{"injectables/SettingsService.html":{}}}],["theme.name",{"_index":2024,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["themes",{"_index":457,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["theory",{"_index":2572,"title":{},"body":{"license.html":{}}}],["this.activefiltersnumber",{"_index":643,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.addsourceslayersevents",{"_index":1316,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.alertcontroller.create",{"_index":877,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{}}}],["this.alwaysdisplayeditems",{"_index":423,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.backgroundgeolocation.checkstatus",{"_index":918,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.configure(geolocationconfig",{"_index":932,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.getcurrentlocation",{"_index":935,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.location).subscribe(location",{"_index":938,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.start).subscribe(async",{"_index":933,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showappsettings",{"_index":949,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showlocationsettings",{"_index":950,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.start",{"_index":941,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.stop",{"_index":947,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.baseurl}${this.informationdesk.picture",{"_index":970,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.baseurl}${this.poi.properties.pictures[0].url",{"_index":1575,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.cache",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/pois.geojson",{"_index":1531,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_contents.geojson",{"_index":1532,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_events.geojson",{"_index":1533,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/trek.geojson",{"_index":1530,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages.json",{"_index":1395,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages/${id}.json",{"_index":1396,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.hasownproperty(url",{"_index":347,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[revoked",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[url",{"_index":353,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.checktonotify(coordinates",{"_index":849,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications",{"_index":823,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications$.unsubscribe",{"_index":837,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.close",{"_index":733,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.colsize",{"_index":2242,"title":{},"body":{"components/TreksPage.html":{}}}],["this.commonsrc",{"_index":728,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.commonsrc}${imagetoload.pictogram",{"_index":1190,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.connectionerror",{"_index":1417,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["this.content.scrolltotop",{"_index":2244,"title":{},"body":{"components/TreksPage.html":{}}}],["this.createmap",{"_index":1118,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.currentmaxtreks",{"_index":2239,"title":{},"body":{"components/TreksPage.html":{}}}],["this.currentpois",{"_index":1114,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["this.currentpois.features.find(feature",{"_index":825,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpois.features.map(feature",{"_index":834,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify",{"_index":833,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.findindex",{"_index":857,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.splice(notifiedindex",{"_index":868,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex",{"_index":870,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].id",{"_index":861,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].name",{"_index":864,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition",{"_index":838,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition$.next([0",{"_index":948,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([0.705824",{"_index":945,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([location.longitude",{"_index":939,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([startlocation.longitude",{"_index":936,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.unsubscribe",{"_index":850,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentprogress",{"_index":1591,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentprogress$.unsubscribe",{"_index":1595,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentsearchvalue",{"_index":1624,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currenttrek",{"_index":1113,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["this.currenttrek.geometry.coordinates.slice",{"_index":1246,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.currenttrek.geometry.coordinates[0",{"_index":1245,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.currenttrek.properties.information_desks",{"_index":1272,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.currenttrek.properties.information_desks.find",{"_index":1143,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.currenttrek.properties.information_desks.foreach(information_desk_property",{"_index":1274,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.currenttrek.properties.information_desks.length",{"_index":1273,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.currenttrek.properties.name",{"_index":1126,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.currenttrek.properties.parking_location",{"_index":1268,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.data$.getvalue",{"_index":1691,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(defaultsettings.data",{"_index":1678,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(settings.data",{"_index":1673,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.datasettings.find",{"_index":1169,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.datasettings.find(data",{"_index":1162,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.deletetrek",{"_index":1872,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.disablegeolocationnotification",{"_index":839,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.downloadtrek",{"_index":2004,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.enablegeolocationnotification",{"_index":846,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.expandableitems",{"_index":426,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.expanded",{"_index":421,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["this.filter.values.slice(4).foreach((value",{"_index":571,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.filteredtreks",{"_index":1304,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.filteredtreks.length",{"_index":2240,"title":{},"body":{"components/TreksPage.html":{}}}],["this.filters",{"_index":735,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters$.next(filters",{"_index":1688,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(defaultsettings",{"_index":1677,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(settings",{"_index":1672,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filtertreks.activefiltersnumber",{"_index":2166,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.filtertreks.getfilteredtreks(this.treks",{"_index":1513,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.geolocate.checkauthorization",{"_index":841,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.checkiftrackerisrunning",{"_index":843,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.currentposition$.subscribe(coordinates",{"_index":848,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.geolocate.showappsettings",{"_index":890,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.starttracking",{"_index":1317,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.starttracking(this.currenttrek",{"_index":1125,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.geolocate.starttracking(this.trekname",{"_index":844,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.stoptracking",{"_index":1121,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.getsettings().subscribe(async",{"_index":1669,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettreks().subscribe",{"_index":1515,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.getvalueforpropertybyid",{"_index":1698,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('cities",{"_index":1713,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('networks",{"_index":1717,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('practice",{"_index":1701,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('route",{"_index":1704,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('themes",{"_index":1722,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('touristiccontent_categories",{"_index":1733,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.globalization.getpreferredlanguage()).value.slice(0",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hits",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[revoked",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[url",{"_index":361,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.http.get(`${this.apiurl}/treks.geojson",{"_index":1529,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.http.get(this.apiurl",{"_index":1686,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.http.get(url",{"_index":354,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hydratedtrek",{"_index":1834,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice.pictogram",{"_index":1839,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgpracticesrc",{"_index":1838,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgsrc",{"_index":1836,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.informationdesk",{"_index":966,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdesk.picture",{"_index":968,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdeskpicture",{"_index":969,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.initializeapp",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initializelayers",{"_index":1209,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.initializesources",{"_index":1208,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.initialsize",{"_index":425,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.initialstate",{"_index":422,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.isinview",{"_index":2169,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.isonline",{"_index":724,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.items.length",{"_index":428,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(0",{"_index":424,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(this.initialsize",{"_index":427,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.loaderstatus",{"_index":997,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksPage.html":{}}}],["this.loaderstatus$.unsubscribe",{"_index":999,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loading.begin('trek",{"_index":2098,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.begin('treks",{"_index":2152,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.begin(loadingid",{"_index":1056,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.finish",{"_index":1926,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.loading.finish('trek",{"_index":2099,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.finish('treks",{"_index":2175,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.finish(loadingid",{"_index":1061,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.status.pipe(delay(0)).subscribe(status",{"_index":998,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksPage.html":{}}}],["this.loadingcontroller.create",{"_index":1846,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.loadingids.getvalue",{"_index":1043,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next",{"_index":1047,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next(ids",{"_index":1045,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe",{"_index":1034,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe(map((loadingids",{"_index":1051,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.localnotifications.haspermission",{"_index":845,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.on('click').subscribe",{"_index":824,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.requestpermission",{"_index":847,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.schedule",{"_index":860,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.setdefaults",{"_index":816,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.location.back",{"_index":1776,"title":{},"body":{"components/TabsPage.html":{}}}],["this.map",{"_index":1119,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.addimage(value.id",{"_index":1206,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.addlayer",{"_index":1223,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('departure",{"_index":1215,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.addsource('information",{"_index":1221,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.addsource('parking",{"_index":1222,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.addsource('pois",{"_index":1216,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.addsource('touristics",{"_index":1220,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.addsource('trek",{"_index":1214,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.addsource('treks",{"_index":1318,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('zone",{"_index":1212,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.easeto",{"_index":1357,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getcanvas().style.cursor",{"_index":1154,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.getsource('departure",{"_index":1244,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.getsource('information",{"_index":1271,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.getsource('parking",{"_index":1266,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.getsource('pois",{"_index":1257,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.getsource('touristics",{"_index":1259,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.getsource('trek",{"_index":1241,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.getsource('treks",{"_index":1302,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getzoom",{"_index":1345,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.loadimage",{"_index":1187,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.map.loadimage(`${this.commonsrc}${practice.pictogram",{"_index":1313,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('click",{"_index":1133,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.on('load",{"_index":1157,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseenter",{"_index":1153,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseleave",{"_index":1156,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.queryrenderedfeatures(e.point",{"_index":1339,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.remove",{"_index":1120,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.map.resize",{"_index":1132,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.mapconfig",{"_index":1123,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.mapconfig.maxzoom",{"_index":1218,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.mapconfig.style",{"_index":1124,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.mapisloaded(false",{"_index":2160,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.mapisloaded.emit(true",{"_index":1211,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.maplink",{"_index":1983,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksPage.html":{}}}],["this.markerposition",{"_index":1196,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.markerposition.addto(this.map",{"_index":1204,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.markerposition.setlnglat(coordinates",{"_index":1197,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.maxsize",{"_index":349,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.mergefilterstreks",{"_index":2161,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.modalcontroller.create",{"_index":1990,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.modalctrl.dismiss",{"_index":754,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(id",{"_index":1626,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(true",{"_index":751,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.modalpoidetails",{"_index":2109,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.dismiss",{"_index":2110,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.ondiddismiss().then",{"_index":2112,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.present",{"_index":2113,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.more.getmoreitembyid(moreitemid).pipe",{"_index":1446,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["this.more.getmoreitems().pipe",{"_index":1473,"title":{},"body":{"guards/MoreResolver.html":{}}}],["this.moreinformationsintro",{"_index":1461,"title":{},"body":{"components/MorePage.html":{}}}],["this.moreitem",{"_index":1418,"title":{},"body":{"components/MoreItemPage.html":{}}}],["this.navigatetotrek(data",{"_index":2173,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.navigatetotrek.emit(feature.properties.id",{"_index":1361,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navigatetotrek.emit(featureid",{"_index":1375,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navparams.get('informationdesk",{"_index":967,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.navparams.get('isonline",{"_index":725,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.navparams.get('poi",{"_index":1570,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.nbofflinetreks",{"_index":2237,"title":{},"body":{"components/TreksPage.html":{}}}],["this.nbtemporaryfilterstreks",{"_index":738,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.network.type",{"_index":2158,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.nonetwork",{"_index":2157,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.notificationsmodeisactive",{"_index":840,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.numberofactivefilters",{"_index":2168,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.offline",{"_index":1306,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.offlinetreks",{"_index":1621,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.offlinetreks.createnewprogressstream",{"_index":1987,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.offlinetreks.currentprogressdownload$.subscribe(val",{"_index":1592,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.offlinetreks.getcommonimgsrc",{"_index":730,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc",{"_index":1561,"title":{},"body":{"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc(this.trek",{"_index":1837,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.removetrek(this.trek.properties.id",{"_index":1851,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.savetrek(simpletrek",{"_index":1993,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.offlinetreks.treks",{"_index":727,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.offlinetreks.treks$.subscribe(treks",{"_index":2236,"title":{},"body":{"components/TreksPage.html":{}}}],["this.onlinetreks",{"_index":1620,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.onlinetreks.getcommonimgsrc",{"_index":729,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks.getminimaltrekbyid(this.currenttrek.properties.id",{"_index":1986,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.onlinetreks.gettrekimagesrc",{"_index":1562,"title":{},"body":{"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc(this.trek",{"_index":1840,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.onlinetreks.loadtreks",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onlinetreks.onlinetrekserror$.subscribe(error",{"_index":2156,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.onlinetreks.treks",{"_index":726,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetrekserror$.next(error",{"_index":1517,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.onlinetrekserror$.next(null",{"_index":1514,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.originaltrek",{"_index":1970,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.picture",{"_index":1559,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(9999",{"_index":1773,"title":{},"body":{"components/TabsPage.html":{}}}],["this.platform.backbutton.subscribewithpriority(99999",{"_index":732,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.platform.is('android",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.platform.is('ios",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.platform.ready().then(async",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.poi",{"_index":1569,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties",{"_index":1571,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures",{"_index":1572,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures.length",{"_index":1558,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0",{"_index":1560,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.poi.properties.pictures[0].url",{"_index":1573,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poiimg",{"_index":1574,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.presentconfirmfeatures(featuresincluster",{"_index":1352,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentdeleteconfirm",{"_index":1845,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentdownloadconfirm(true",{"_index":1997,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.presentinformationdeskdetails.emit(informationdesk",{"_index":1147,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.presentpersmissionsconfirm",{"_index":842,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.presentpoidetails.emit(poi",{"_index":828,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTrekVizComponent.html":{}}}],["this.presentpoidetails.emit(touristiccontent",{"_index":1152,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.ref.detectchanges",{"_index":1594,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.refreshdelay",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit",{"_index":352,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit(revoked",{"_index":379,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.subscribe((revoked",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.route.data.pipe",{"_index":2162,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.route.data.subscribe",{"_index":1966,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["this.route.data.subscribe((data",{"_index":1415,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["this.route.data.subscribe(data",{"_index":2153,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.router.navigate",{"_index":1919,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.router.navigate([this.router.url",{"_index":1419,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.trekstool.gettrekdetailsurl(id",{"_index":2174,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.router.url",{"_index":1774,"title":{},"body":{"components/TabsPage.html":{}}}],["this.routerlink",{"_index":1841,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.savefiltersstate(filters",{"_index":1690,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.screenorientation.onchange().subscribe",{"_index":1127,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.searchtreks.search(this.treks.features",{"_index":1625,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setofflinesettings",{"_index":1668,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settings.data",{"_index":2235,"title":{},"body":{"components/TreksPage.html":{}}}],["this.settings.filters$).pipe",{"_index":648,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.filters$.subscribe(filters",{"_index":734,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.gethydratedtrek(this.trek",{"_index":1835,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.settings.loadsettings",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.settings.resetfilters",{"_index":2245,"title":{},"body":{"components/TreksPage.html":{}}}],["this.settings.savefiltersstate(this.temporaryfilters$.getvalue",{"_index":750,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settingsservice.gethydratedtrek(trek",{"_index":1923,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingsservice.gettouristiccategorieswithfeatures",{"_index":1925,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.splashscreen.hide",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status.subscribe",{"_index":1041,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.statusbar.stylelightcontent",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get(`settings",{"_index":1676,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.set('settings",{"_index":1670,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.subscriptions",{"_index":2302,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.foreach((subscription",{"_index":2303,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.push",{"_index":731,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.subscriptions$$.push(this.mergefilterstreks",{"_index":2170,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.temporaryfilters$).subscribe",{"_index":737,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(filters",{"_index":736,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(temporaryfilters",{"_index":749,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.touristiccategorieswithfeatures",{"_index":1115,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{}}}],["this.touristiccategorieswithfeatures.foreach(touristiccategorywithfeatures",{"_index":1261,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.touristiccontents",{"_index":1975,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.touristiccontents).subscribe",{"_index":1994,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.touristicevents",{"_index":1978,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.translate",{"_index":871,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.translate.get('geolocate.notificationtitle').topromise",{"_index":922,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.translate.get('maptreks.treksalert').subscribe(async",{"_index":1369,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.translate.get('trek.downloadalert').subscribe(async",{"_index":1998,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.translate.getdefaultlang",{"_index":1394,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["this.translate.setdefaultlang(defaultlanguage",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.trekdownloading",{"_index":1988,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.treks",{"_index":1623,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treks$.getvalue",{"_index":1534,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks$.next(data",{"_index":1516,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treksbystep",{"_index":2241,"title":{},"body":{"components/TreksPage.html":{}}}],["this.trekstool",{"_index":1973,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["this.trekstool.getcommonimgsrc",{"_index":2155,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.gettrekimagesrc(this.originaltrek",{"_index":2006,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["this.trekstool.gettreksurl",{"_index":1981,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{}}}],["this.treksurl",{"_index":1980,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{}}}],["this.trekurl",{"_index":2106,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.updatesources",{"_index":1210,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["this.valuechange.emit",{"_index":576,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["throw",{"_index":1351,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throwerror",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["throwerror(error",{"_index":376,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["thumbnail",{"_index":502,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["tiles",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiles/{z}/{x}/{y}.png",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tilesize",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":358,"title":{},"body":{"injectables/CacheService.html":{}}}],["title",{"_index":438,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["todo",{"_index":350,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["toggleexpandables",{"_index":394,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["toolbar.filters",{"_index":2176,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["toolbar.search",{"_index":2177,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["tools",{"_index":2231,"title":{},"body":{"components/TreksPage.html":{}}}],["top",{"_index":1542,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TreksPage.html":{}}}],["topo",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2577,"title":{},"body":{"license.html":{}}}],["touristiccategorie",{"_index":531,"title":{"interfaces/TouristicCategorie.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccategorieswithfeatures",{"_index":555,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["touristiccategorieswithfeatures.previousvalue",{"_index":1117,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristiccategorieswithfeatures.push",{"_index":1735,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccategorywithfeatures",{"_index":532,"title":{"interfaces/TouristicCategoryWithFeatures.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccategorywithfeatures.features.length",{"_index":2050,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["touristiccategorywithfeatures.name",{"_index":2049,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["touristiccontent",{"_index":529,"title":{"interfaces/TouristicContent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTrekVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontent${touristiccontent.id",{"_index":1177,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristiccontent.pictogram",{"_index":1178,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristiccontent.properties",{"_index":1149,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristiccontent.properties.category",{"_index":1729,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontent.properties.pictures",{"_index":1150,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristiccontent_categories",{"_index":1175,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristiccontents",{"_index":528,"title":{"interfaces/TouristicContents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontents.features",{"_index":1727,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontents.features.filter",{"_index":1737,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristicevent",{"_index":534,"title":{"interfaces/TouristicEvent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristicevents",{"_index":533,"title":{"interfaces/TouristicEvents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristics",{"_index":1148,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristics_content",{"_index":1263,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristicscontent",{"_index":1174,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristicscontent.setdata(touristics_content",{"_index":1264,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristicscontent.values.foreach(touristiccontent",{"_index":1176,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristicscontentfeatures",{"_index":1260,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["touristicscontentfeatures.concat(touristiccategorywithfeatures.features",{"_index":1262,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["toutes",{"_index":2265,"title":{},"body":{"components/TreksPage.html":{}}}],["trackfilters",{"_index":686,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters(index",{"_index":703,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tracktrek",{"_index":1604,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksPage.html":{}}}],["tracktrek(index",{"_index":1614,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksPage.html":{}}}],["trad",{"_index":862,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{}}}],["trad.cancelbutton",{"_index":1372,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{}}}],["trad.confirmbutton",{"_index":1373,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{}}}],["trad.confirmerror",{"_index":2003,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trad.content",{"_index":2002,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trad.error",{"_index":2001,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trad.success",{"_index":2000,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trad.title",{"_index":1371,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekDetailsPage.html":{}}}],["trad['geolocate.asklocatepermission",{"_index":881,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.cancel",{"_index":883,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.open",{"_index":888,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["transform",{"_index":2180,"title":{},"body":{"components/TreksMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":578,"title":{},"body":{"components/FilterComponent.html":{},"components/TreksPage.html":{}}}],["transition(':enter",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["translate/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/TabsPageModule.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forchild",{"_index":1747,"title":{},"body":{"modules/SharedModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forroot",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["translateparams",{"_index":761,"title":{},"body":{"components/FiltersComponent.html":{},"components/TreksPage.html":{}}}],["translateservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekDetailsPage.html":{}}}],["trash",{"_index":1888,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["trek",{"_index":124,"title":{"interfaces/Trek.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trek.bbox",{"_index":1539,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.details.access",{"_index":2040,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.advice",{"_index":2042,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.arrival",{"_index":2012,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.departure",{"_index":2009,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.departurearrival",{"_index":2015,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.description",{"_index":2025,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.desk",{"_index":2043,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.parking",{"_index":2041,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.poi.name",{"_index":2047,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.profile",{"_index":2028,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.rules",{"_index":2029,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.details.theme",{"_index":2023,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trek.downloadalert.loading",{"_index":1596,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.downloadalert.storage",{"_index":1597,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.features.find(feature",{"_index":1535,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.arrival_city",{"_index":1707,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities",{"_index":1709,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities.map",{"_index":1711,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.departure_city",{"_index":1705,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.difficulty",{"_index":1696,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.first_picture",{"_index":1521,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.first_picture.url",{"_index":1523,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.information_desks",{"_index":1723,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.name",{"_index":1629,"title":{},"body":{"components/SearchComponent.html":{}}}],["trek.properties.name.tolowercase().includes(searchvalue",{"_index":1637,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["trek.properties.networks",{"_index":1714,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.networks.map",{"_index":1716,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.practice",{"_index":1699,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.route",{"_index":1702,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes",{"_index":1718,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes.map",{"_index":1720,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trekcardcomponent",{"_index":140,"title":{"components/TrekCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["trekcontext",{"_index":551,"title":{"interfaces/TrekContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekcontextresolver",{"_index":201,"title":{"guards/TrekContextResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["trekdetailspage",{"_index":142,"title":{"components/TrekDetailsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["trekdetailspagemodule",{"_index":2064,"title":{"modules/TrekDetailsPageModule.html":{}},"body":{"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekdownloading",{"_index":1936,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["trekid",{"_index":1493,"title":{},"body":{"injectables/OnlineTreksService.html":{},"guards/TrekContextResolver.html":{},"interfaces/TreksService.html":{}}}],["treklinelayerproperties",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekmappage",{"_index":143,"title":{"components/TrekMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["trekmappagemodule",{"_index":2116,"title":{"modules/TrekMapPageModule.html":{}},"body":{"modules/TrekMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekname",{"_index":785,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trekproperties",{"_index":480,"title":{"interfaces/TrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekremoved",{"_index":1854,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.features",{"_index":613,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.features.length",{"_index":2238,"title":{},"body":{"components/TreksPage.html":{}}}],["treks.filter(trek",{"_index":1636,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.hidealllabel",{"_index":2248,"title":{},"body":{"components/TreksPage.html":{}}}],["treks.module",{"_index":2069,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{}}}],["treks.module.ts",{"_index":1753,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["treks.page",{"_index":2284,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["treks.page.html",{"_index":2188,"title":{},"body":{"components/TreksPage.html":{}}}],["treks.page.scss",{"_index":2187,"title":{},"body":{"components/TreksPage.html":{}}}],["treks.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["treks.service.ts",{"_index":584,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.service.ts:102",{"_index":1495,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:111",{"_index":1497,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:12",{"_index":610,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:120",{"_index":1499,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:129",{"_index":1492,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:138",{"_index":1490,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:14",{"_index":597,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:27",{"_index":1510,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:28",{"_index":1508,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:30",{"_index":1511,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:31",{"_index":1509,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:32",{"_index":1488,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:42",{"_index":609,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:43",{"_index":1507,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:46",{"_index":605,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:56",{"_index":607,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:63",{"_index":1489,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:67",{"_index":1506,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:68",{"_index":595,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:71",{"_index":1502,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:75",{"_index":1503,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:79",{"_index":1505,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:80",{"_index":599,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:83",{"_index":1504,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:84",{"_index":601,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:88",{"_index":593,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:9",{"_index":1634,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.service.ts:93",{"_index":1501,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:96",{"_index":603,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.showalllabel",{"_index":2247,"title":{},"body":{"components/TreksPage.html":{}}}],["treks/filter",{"_index":583,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{}}}],["treks/offline",{"_index":721,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/online",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/search",{"_index":1619,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["treks/treks.module",{"_index":1789,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["treks/treks.page",{"_index":1792,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["treksbystep",{"_index":2192,"title":{},"body":{"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["trekscontext",{"_index":557,"title":{"interfaces/TreksContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekscontextresolver",{"_index":203,"title":{"guards/TreksContextResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["treksmappage",{"_index":145,"title":{"components/TreksMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksPage.html":{},"coverage.html":{},"overview.html":{}}}],["treksmappagemodule",{"_index":2182,"title":{"modules/TreksMapPageModule.html":{}},"body":{"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksource",{"_index":1240,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["treksource.setdata(this.currenttrek",{"_index":1242,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["trekspage",{"_index":146,"title":{"components/TreksPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"modules/TreksPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["trekspagemodule",{"_index":1785,"title":{"modules/TreksPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksservice",{"_index":535,"title":{"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treksservice.getcommonimgsrc",{"_index":1924,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getmapconfigfortrekbyid(trek",{"_index":1922,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getpoisfortrekbyid(trekid",{"_index":1916,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiccontentsfortrekbyid(trekid",{"_index":1917,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiceventsfortrekbyid(trekid",{"_index":1918,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(trekid",{"_index":1915,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["trekssource",{"_index":1301,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekssource.setdata",{"_index":1305,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekstool",{"_index":553,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{}}}],["trekstool.treks$.subscribe(treks",{"_index":1622,"title":{},"body":{"components/SearchComponent.html":{}}}],["treksurl",{"_index":1937,"title":{},"body":{"components/TrekDetailsPage.html":{},"components/TreksMapPage.html":{}}}],["trekurl",{"_index":2075,"title":{},"body":{"components/TrekMapPage.html":{}}}],["trekzoom",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('expandcollapse",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe(trekremoved",{"_index":1852,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["ts",{"_index":621,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["turf/distance",{"_index":2364,"title":{},"body":{"dependencies.html":{}}}],["turf/helpers",{"_index":813,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["two",{"_index":1927,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeinformationdesk.pictogram",{"_index":1173,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["typeinformationdesks",{"_index":1168,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["typeinformationdesks.values.foreach(typeinformationdesk",{"_index":1171,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["typepoi.pictogram",{"_index":1167,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["typepois",{"_index":1161,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["typepois.values.foreach(typepoi",{"_index":1164,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["types/lodash.clonedeep",{"_index":2367,"title":{},"body":{"dependencies.html":{}}}],["types/mapbox",{"_index":2369,"title":{},"body":{"dependencies.html":{}}}],["ui.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ui.module.ts",{"_index":1761,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":632,"title":{},"body":{"injectables/FilterTreksService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["une",{"_index":1862,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["units",{"_index":853,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["unsubscribe",{"_index":672,"title":{"classes/UnSubscribe.html":{}},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(subscription",{"_index":2304,"title":{},"body":{"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(this.mergefilterstreks",{"_index":2171,"title":{},"body":{"components/TreksMapPage.html":{}}}],["unsubscribe:11",{"_index":707,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["unsubscribe:17",{"_index":706,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["unsubscribe:5",{"_index":715,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["updatesources",{"_index":1079,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["uppercase",{"_index":757,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["url",{"_index":301,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":458,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["use",{"_index":2467,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedthe",{"_index":2485,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":1593,"title":{},"body":{"components/ProgressComponent.html":{}}}],["value",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["value'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["value.checked",{"_index":575,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.checked).length",{"_index":622,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.checked).map(checkedvalue",{"_index":635,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["value.component.html",{"_index":654,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.scss",{"_index":653,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts",{"_index":652,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["value.component.ts:10",{"_index":658,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:11",{"_index":657,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:12",{"_index":656,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:16",{"_index":659,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:19",{"_index":662,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.id",{"_index":747,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.image",{"_index":1207,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["value.interval",{"_index":639,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.name",{"_index":665,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value/filter",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/FilterValueComponent.html":{},"coverage.html":{}}}],["valuechange",{"_index":562,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["valuechanged",{"_index":561,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuechanged(undefined",{"_index":568,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuecheckchanged",{"_index":655,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["valuecheckchanged($event",{"_index":660,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["values",{"_index":516,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["var",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["variable",{"_index":2314,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2596,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2422,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vertical=\"bottom",{"_index":2249,"title":{},"body":{"components/TreksPage.html":{}}}],["veuillez",{"_index":2037,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["vibrate",{"_index":817,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["viewchild",{"_index":2229,"title":{},"body":{"components/TreksPage.html":{}}}],["viewchild('content",{"_index":2213,"title":{},"body":{"components/TreksPage.html":{}}}],["viz",{"_index":1072,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{}}}],["viz.component",{"_index":1746,"title":{},"body":{"modules/SharedModule.html":{}}}],["viz.component.html",{"_index":1074,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.scss",{"_index":1073,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.ts",{"_index":1071,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viz.component.ts:146",{"_index":1286,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:242",{"_index":1096,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:286",{"_index":1095,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:289",{"_index":1291,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:31",{"_index":1292,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:32",{"_index":1293,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:34",{"_index":1285,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:35",{"_index":1100,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:36",{"_index":1102,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:368",{"_index":1099,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:37",{"_index":1088,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:38",{"_index":1087,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:39",{"_index":1091,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:40",{"_index":1089,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:41",{"_index":1090,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:42",{"_index":1086,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:43",{"_index":1093,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:44",{"_index":1092,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:45",{"_index":1085,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:56",{"_index":1288,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:58",{"_index":1097,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:73",{"_index":1289,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:74",{"_index":1098,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz.component.ts:83",{"_index":1287,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:84",{"_index":1094,"title":{},"body":{"components/MapTrekVizComponent.html":{}}}],["viz/map",{"_index":1070,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"classes/UnSubscribe.html":{}}}],["vos",{"_index":2261,"title":{},"body":{"components/TreksPage.html":{}}}],["votre",{"_index":2258,"title":{},"body":{"components/TreksPage.html":{}}}],["vous",{"_index":2267,"title":{},"body":{"components/TreksPage.html":{}}}],["warranties",{"_index":2545,"title":{},"body":{"license.html":{}}}],["way",{"_index":2581,"title":{},"body":{"license.html":{}}}],["web",{"_index":975,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/TrekDetailsPage.html":{}}}],["website",{"_index":513,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["webview",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["webview/ngx",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["weight",{"_index":2052,"title":{},"body":{"components/TrekDetailsPage.html":{}}}],["whether",{"_index":2574,"title":{},"body":{"license.html":{}}}],["white",{"_index":1906,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["whitelist",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":669,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksPage.html":{},"miscellaneous/variables.html":{}}}],["window.settimeout",{"_index":1131,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["windows",{"_index":2447,"title":{},"body":{"index.html":{}}}],["within",{"_index":2501,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{},"license.html":{}}}],["won't",{"_index":2101,"title":{},"body":{"components/TrekMapPage.html":{}}}],["wrap",{"_index":1903,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["yes",{"_index":307,"title":{},"body":{"injectables/CacheService.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{},"components/TrekDetailsPage.html":{},"interfaces/TreksService.html":{}}}],["z",{"_index":1007,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["zip",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["zone",{"_index":1224,"title":{},"body":{"components/MapTrekVizComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["zone.js",{"_index":2408,"title":{},"body":{"dependencies.html":{}}}],["zonelayerproperties",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoneoutlinelayerproperties",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, translate: TranslateService, globalization: Globalization, onlineTreks: OnlineTreksService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalization\n                                                  \n                                                        \n                                                                    Globalization\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '@env/environment';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private translate: TranslateService,\n    private globalization: Globalization,\n    private onlineTreks: OnlineTreksService,\n    private settings: SettingsService,\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      let defaultLanguage;\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        defaultLanguage = (await this.globalization.getPreferredLanguage()).value.slice(0, 2);\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n      } else {\n        defaultLanguage = navigator.language.slice(0, 2);\n      }\n\n      // we assume that availableLanguage[0] is default language if user language is not available\n      if (environment.availableLanguage && environment.availableLanguage.length > 0) {\n        if (environment.availableLanguage.indexOf(defaultLanguage) === -1) {\n          defaultLanguage = environment.availableLanguage[0];\n        }\n      } else {\n        // or 'fr' if array is empty\n        defaultLanguage = 'fr';\n      }\n\n      this.translate.setDefaultLang(defaultLanguage);\n\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nAppModule -->\n\nFilterValueComponent->AppModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nAppModule -->\n\nFiltersComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nAppModule -->\n\nSharedUiModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FiltersComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoadingInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { LoadingInterceptor } from '@app/services/loading/loading.service';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { Network } from '@ionic-native/network/ngx';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\n\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { ProgressComponent } from '@app/components/progress/progress.component';\n\nimport { FilterValueComponent } from './components/filter-value/filter-value.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FiltersComponent,\n    PoiDetailsComponent,\n    SearchComponent,\n    ProgressComponent,\n    FilterComponent,\n    FilterValueComponent,\n    InformationDeskDetailsComponent,\n  ],\n  entryComponents: [\n    FiltersComponent,\n    PoiDetailsComponent,\n    SearchComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    IonicModule.forRoot({ mode: 'md', animated: true }),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n    IonicStorageModule.forRoot(),\n    SharedUiModule,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    File,\n    Zip,\n    WebView,\n    BackgroundGeolocation,\n    LocalNotifications,\n    ScreenOrientation,\n    Globalization,\n    Network,\n    MoreResolver,\n    MoreItemResolver,\n    TrekContextResolver,\n    TreksContextResolver,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'app', pathMatch: 'full' },\n  {\n    path: 'app',\n    loadChildren: './pages/tabs/tabs.module#TabsPageModule',\n  },\n  {\n    path: 'app/map/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n  },\n  {\n    path: 'app/map-offline/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Public\n                                hits\n                            \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                refreshDelay\n                            \n                            \n                                    Public\n                                revoke\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                revoking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            revoking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoking(observable: Observable, revoked?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    revoked\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 4 * 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            revoke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, publishReplay, refCount, take, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n\n  private cache: { [key: string]: Observable } = {};\n  private refreshDelay = 4 * 60 * 60 * 1000;\n  private maxSize = 200;\n  public revoke: EventEmitter = new EventEmitter();\n  public hits: { [key: string]: number } = {};\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.revoke.subscribe((revoked: string | null) => {\n      if (!revoked) {\n        this.cache = {};\n        this.hits = {};\n      } else {\n        delete this.cache[revoked];\n        delete this.hits[revoked];\n      }\n    });\n  }\n\n  /*\n   * gets an observable\n   * that broadcasts a ReplaySubject\n   * which emits the response of a get request\n   * during this.refreshDelay ms without sending a new http request\n   */\n  public get(url: string, options: any): Observable {\n    if (!this.cache.hasOwnProperty(url)) {\n      if (Object.keys(this.cache).length >= this.maxSize) {\n        // TODO: do not revoke everything\n        this.revoke.emit();\n      }\n      this.cache[url] = this.http.get(url, options).pipe(\n        // set hits to 0 each time request is actually sent\n        tap(() => {\n          this.hits[url] = 0;\n        }),\n        // create a ReplaySubject that stores and emit last response during delay\n        publishReplay(1, this.refreshDelay),\n        // broadcast ReplaySubject\n        refCount(),\n        // complete each observer after response has been emitted\n        take(1),\n        // increment hits each time request is subscribed\n        tap(() => {\n          const hits = this.hits[url];\n          this.hits[url] = hits ? hits + 1 : 1;\n        }),\n        catchError((error) => {\n          delete this.cache[url];\n          return throwError(error)\n        })\n      );\n    }\n    return this.cache[url];\n  }\n\n  /*\n   Make the observable revoke the cache when it emits\n   */\n  public revoking(observable: Observable, revoked?: string | null): Observable {\n    return observable.pipe(tap(() => {\n      this.revoke.emit(revoked);\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsibleListComponent.html":{"url":"components/CollapsibleListComponent.html","title":"component - CollapsibleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsibleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/collapsible-list/collapsible-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapsible-list\n            \n\n            \n                styleUrls\n                ./collapsible-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collapsible-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alwaysDisplayedItems\n                            \n                            \n                                    Public\n                                expandableItems\n                            \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleExpandables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideAllLabel\n                            \n                            \n                                initialSize\n                            \n                            \n                                initialState\n                            \n                            \n                                items\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                showAllLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialSize\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialState\n                    \n                \n                \n                    \n                        Type :     \"expanded\" | \"collapsed\"\n\n                    \n                \n                \n                    \n                        Default value : 'collapsed'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpandables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpandables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alwaysDisplayedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandableItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { expandCollapse } from '@app/components/animations';\n\n@Component({\n  selector: 'app-collapsible-list',\n  templateUrl: './collapsible-list.component.html',\n  styleUrls: ['./collapsible-list.component.scss'],\n  animations: [expandCollapse],\n})\nexport class CollapsibleListComponent implements OnInit {\n  @Input() items: T[];\n  @Input() showAllLabel: string;\n  @Input() hideAllLabel: string;\n  @Input() initialSize = 5;\n  @Input() initialState: 'expanded' | 'collapsed' = 'collapsed';\n  @Input() itemTemplate: TemplateRef;\n\n  public alwaysDisplayedItems: T[] = [];\n  public expandableItems: T[] = [];\n  public expanded = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.expanded = this.initialState === 'expanded';\n    this.alwaysDisplayedItems = this.items.slice(0, this.initialSize);\n    this.expandableItems = this.items.slice(this.initialSize, this.items.length);\n  }\n\n  public toggleExpandables() {\n    this.expanded = !this.expanded;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n 0\">\n  \n    \n      \n      \n    \n  \n  \n    \n      {{ showAllLabel }}\n    \n    \n      {{ hideAllLabel }}\n    \n  \n\n\n    \n\n    \n                \n                    ./collapsible-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     0\">                                    {{ showAllLabel }}              {{ hideAllLabel }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollapsibleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectErrorComponent.html":{"url":"components/ConnectErrorComponent.html","title":"component - ConnectErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConnectErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connect-error/connect-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-error\n            \n\n            \n                styleUrls\n                ./connect-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        retry\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-connect-error',\n  templateUrl: './connect-error.component.html',\n  styleUrls: ['./connect-error.component.scss'],\n})\nexport class ConnectErrorComponent  {\n  @Input() public title = '';\n  @Input() public content = '';\n  @Input() public icon = '';\n  @Input() public buttonText = '';\n  @Output() public retry = new EventEmitter();\n\n  constructor() {}\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      {{title}}\n    \n  \n  \n    \n      {{content}}\n    \n  \n  \n    \n      \n        {{buttonText}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./connect-error.component.scss\n                \n                .icon-size {\n  font-size: 4em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{title}}                  {{content}}                          {{buttonText}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainsFilter.html":{"url":"interfaces/ContainsFilter.html","title":"interface - ContainsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSetting.html":{"url":"interfaces/DataSetting.html","title":"interface - DataSetting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSetting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hideAllLabel\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        showAllLabel\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideAllLabel\n                                    \n                                \n                                \n                                    \n                                        hideAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllLabel\n                                    \n                                \n                                \n                                    \n                                        showAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\" | \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\" | \"interval\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     FilterValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { expandCollapse } from '@app/components/animations';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n  animations: [expandCollapse]\n})\nexport class FilterComponent implements OnInit {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  public expanded: boolean;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.filter.values.slice(4).forEach((value) => {\n      // expand filter if an expandable value is already checked\n      if (value.checked) {\n        this.expanded = true;\n      }\n    });\n  }\n\n  public valueChanged({ checked, value }: { checked: boolean, value: FilterValue }) {\n    this.valueChange.emit({ checked: checked, value: value });\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ filter.name }}\n  \n\n  \n    \n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .expandable {\n  transition: height .5s;\n  height: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.name }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterTreksService.html":{"url":"injectables/FilterTreksService.html","title":"injectable - FilterTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter-treks/filter-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeFiltersNumber$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                containsFilter\n                            \n                            \n                                    Static\n                                filter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedIdForFilter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedInterval\n                            \n                            \n                                    Public\n                                getFilteredTreks\n                            \n                            \n                                    Private\n                                    Static\n                                getNumberOfActiveFilters\n                            \n                            \n                                    Private\n                                    Static\n                                intervalFilter\n                            \n                            \n                                    Private\n                                    Static\n                                isFilterActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter-treks/filter-treks.service.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsFilter(filter: ContainsFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                ContainsFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(treks: MinimalTreks | null, filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTreks | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedIdForFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedIdForFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedInterval\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedInterval(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFilteredTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredTreks(treks$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getNumberOfActiveFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumberOfActiveFilters(filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            intervalFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intervalFilter(filter: IntervalFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IntervalFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isFilterActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFilterActive(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeFiltersNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter-treks/filter-treks.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\nimport { ContainsFilter, Filter, IntervalFilter, MinimalTrek, MinimalTreks } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterTreksService {\n  public activeFiltersNumber$: Observable;\n\n  public static filter(treks: MinimalTreks | null, filters: Filter[] | null): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n\n    let filteredFeatures = treks.features;\n\n    if (filters) {\n      filters.forEach(filter => {\n        filteredFeatures = filteredFeatures.filter(feature => {\n          if (!FilterTreksService.isFilterActive(filter)) {\n            return true;\n          }\n          if (filter.type === 'contains') {\n            return FilterTreksService.containsFilter(filter as ContainsFilter, feature);\n          } else if (filter.type === 'interval') {\n            return FilterTreksService.intervalFilter(filter as IntervalFilter, feature);\n          } else {\n            // TODO: not necessary but ts  value.checked).length > 0;\n  }\n\n  private static getNumberOfActiveFilters(filters: Filter[] | null): number {\n    let numberOfActiveFilters = 0;\n    if (!!filters) {\n      filters.forEach(filter => {\n        numberOfActiveFilters += FilterTreksService.getCheckedIdForFilter(filter).length;\n      });\n    }\n    return numberOfActiveFilters;\n  }\n\n  private static intervalFilter(filter: IntervalFilter, feature: MinimalTrek) {\n    let isInInterval = false;\n    FilterTreksService.getCheckedInterval(filter).forEach(([min, max]: [number, number]) => {\n      const criterionValue: number = feature.properties[filter.id];\n      if (criterionValue >= min && criterionValue  (feature.properties[filter.id] as any).indexOf(filterValue) !== -1,\n        ) !== undefined\n      );\n    } else {\n      return FilterTreksService.getCheckedIdForFilter(filter).indexOf(feature.properties[filter.id] as any) !== -1;\n    }\n  }\n\n  private static getCheckedIdForFilter(filter: Filter): number[] {\n    return filter.values.filter(value => value.checked).map(checkedValue => checkedValue.id);\n  }\n\n  private static getCheckedInterval(filter: Filter): [number, number][] {\n    return filter.values\n      .filter(value => !!value.interval && value.checked)\n      .map(checkedValue => checkedValue.interval) as [number, number][];\n  }\n\n  constructor(private settings: SettingsService) {\n    this.activeFiltersNumber$ = settings.filters$.pipe(\n      map(filters => FilterTreksService.getNumberOfActiveFilters(filters)),\n    );\n  }\n\n  public getFilteredTreks(treks$: Observable): Observable {\n    return combineLatest(treks$, this.settings.filters$).pipe(\n      map(([treks, filters]) => FilterTreksService.filter(treks, filters)),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterValue.html":{"url":"interfaces/FilterValue.html","title":"interface - FilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checked\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        interval\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterValueComponent.html":{"url":"components/FilterValueComponent.html","title":"component - FilterValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter-value/filter-value.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-value\n            \n\n            \n                styleUrls\n                ./filter-value.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-value.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueCheckChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         FilterValue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueCheckChanged($event: CustomEvent, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            CustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter-value',\n  templateUrl: './filter-value.component.html',\n  styleUrls: ['./filter-value.component.scss'],\n})\nexport class FilterValueComponent implements OnInit {\n  @Input() value: FilterValue;\n  @Input() commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n  public valueCheckChanged($event: CustomEvent, value: FilterValue) {\n    this.valueChange.emit({ checked: $event.detail.checked, value: value });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ value.name }}\n  \n\n    \n\n    \n                \n                    ./filter-value.component.scss\n                \n                .no-lines {\n    --inner-border-width: 0px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ value.name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filters/filters.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                isOnline\n                            \n                            \n                                    Public\n                                nbTemporaryFiltersTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                temporaryFilters$\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilters\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                eraseFilters\n                            \n                            \n                                    Public\n                                handleFiltersState\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                trackFilters\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, settings: SettingsService, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, navParams: NavParams, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            eraseFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eraseFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilters(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOnline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nbTemporaryFiltersTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temporaryFilters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\nimport { cloneDeep } from 'lodash';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { Filter, FilterValue, MinimalTreks } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends UnSubscribe implements OnInit, OnDestroy {\n  public temporaryFilters$ = new BehaviorSubject([]);\n  public nbTemporaryFiltersTreks = 0;\n  public isOnline: boolean;\n  public commonSrc: string;\n  public filters: any[];\n  constructor(\n    private modalCtrl: ModalController,\n    public settings: SettingsService,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewWillEnter() {\n    this.isOnline = this.navParams.get('isOnline');\n    const treks$ = this.isOnline ? this.onlineTreks.treks$ : this.offlineTreks.treks$;\n    this.commonSrc = this.isOnline ? this.onlineTreks.getCommonImgSrc() : this.offlineTreks.getCommonImgSrc();\n\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      this.settings.filters$.subscribe(filters => {\n        this.filters = filters || [];\n        this.temporaryFilters$.next(filters || []);\n      }),\n      combineLatest(treks$, this.temporaryFilters$).subscribe(\n        ([treks, temporaryFilters]: [MinimalTreks | null, Filter[]]) => {\n          if (!!treks) {\n            this.nbTemporaryFiltersTreks = FilterTreksService.filter(treks, temporaryFilters).length;\n          } else {\n            this.nbTemporaryFiltersTreks = 0;\n          }\n        },\n      ),\n    );\n  }\n\n  public handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue): void {\n    const temporaryFilters = cloneDeep(this.temporaryFilters$.getValue());\n    const temporaryFilter = temporaryFilters.find(tempFilter => tempFilter.id === filter.id) as Filter;\n    const filterValue = temporaryFilter.values.find(tempValue => tempValue.id === value.id) as FilterValue;\n    filterValue.checked = checkState;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public applyFilters(): void {\n    this.settings.saveFiltersState(this.temporaryFilters$.getValue());\n    this.modalCtrl.dismiss(true);\n  }\n\n  public eraseFilters(): void {\n    const temporaryFilters = cloneDeep(this.temporaryFilters$.getValue());\n    temporaryFilters.forEach(filter => {\n      filter.values.forEach(value => (value.checked = false));\n    });\n    this.filters = temporaryFilters;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public trackFilters(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'filters.title' | translate | uppercase }}\n    \n      \n        {{ 'filters.erase' | translate }}\n      \n    \n  \n\n\n\n  \n    \n      \n      \n    \n  \n\n\n\n  \n    \n    filters.zeroresult\n    filters.oneresult\n     1\" translate\n      [translateParams]=\"{ nb: nbTemporaryFiltersTreks }\">filters.results\n  \n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .full-width {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'filters.title\\' | translate | uppercase }}                  {{ \\'filters.erase\\' | translate }}                                              filters.zeroresult    filters.oneresult     1\" translate      [translateParams]=\"{ nb: nbTemporaryFiltersTreks }\">filters.results  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeolocateNotificationsComponent.html":{"url":"components/GeolocateNotificationsComponent.html","title":"component - GeolocateNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeolocateNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geolocate-notifications\n            \n\n            \n                styleUrls\n                ./geolocate-notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geolocate-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                clicklocalNotifications$\n                            \n                            \n                                currentPoisToNotify\n                            \n                            \n                                    Private\n                                currentPosition$\n                            \n                            \n                                    Public\n                                localNotifications\n                            \n                            \n                                notificationsModeIsActive\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeNotificationsMode\n                            \n                            \n                                checkToNotify\n                            \n                            \n                                disableGeolocationNotification\n                            \n                            \n                                enableGeolocationNotification\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentPersmissionsConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPois\n                            \n                            \n                                trekName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                presentPoiDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, localNotifications: LocalNotifications, alertController: AlertController, geolocate: GeolocateService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localNotifications\n                                                  \n                                                        \n                                                                    LocalNotifications\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPois\n                    \n                \n                \n                    \n                        Type :         Pois\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trekName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        presentPoiDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeNotificationsMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeNotificationsMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkToNotify\n                        \n                        \n                    \n                \n            \n            \n                \ncheckToNotify(fromCoordinates: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromCoordinates\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \ndisableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \nenableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPersmissionsConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPersmissionsConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clicklocalNotifications$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPoisToNotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalNotifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsModeIsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Subscription } from 'rxjs';\nimport { point } from '@turf/helpers';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst distance = require('@turf/distance').default;\n\nimport { Pois } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-geolocate-notifications',\n  templateUrl: './geolocate-notifications.component.html',\n  styleUrls: ['./geolocate-notifications.component.scss'],\n})\nexport class GeolocateNotificationsComponent implements OnInit, OnChanges, OnDestroy {\n  currentPoisToNotify: any[];\n  clicklocalNotifications$: Subscription;\n  notificationsModeIsActive = false;\n  @Input() currentPois: Pois;\n  @Input() trekName: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  private currentPosition$: Subscription;\n\n  constructor(\n    public platform: Platform,\n    public localNotifications: LocalNotifications,\n    public alertController: AlertController,\n    private geolocate: GeolocateService,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.localNotifications.setDefaults({\n        vibrate: true,\n        sound: true,\n        foreground: true,\n        icon: 'res://icon',\n        smallIcon: 'res://ic_stat_panorama',\n      });\n      this.clicklocalNotifications$ = this.localNotifications.on('click').subscribe(({ data }) => {\n        const poi = this.currentPois.features.find(feature => feature.properties.id === data.id);\n        this.presentPoiDetails.emit(poi);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    if (changesCurrentPois.currentValue && !changesCurrentPois.previousValue) {\n      this.currentPoisToNotify = this.currentPois.features.map(feature => ({\n        id: feature.properties.id,\n        name: feature.properties.name,\n        coordinates: feature.geometry.coordinates,\n      }));\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.clicklocalNotifications$) {\n      this.clicklocalNotifications$.unsubscribe();\n    }\n\n    if (this.currentPosition$) {\n      this.disableGeolocationNotification();\n    }\n  }\n\n  async changeNotificationsMode() {\n    if (!this.notificationsModeIsActive) {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        if (!(await this.geolocate.checkAuthorization())) {\n          this.presentPersmissionsConfirm();\n        } else {\n          if (!(await this.geolocate.checkIfTrackerIsRunning())) {\n            this.geolocate.startTracking(this.trekName);\n          }\n          if (await this.localNotifications.hasPermission()) {\n            this.notificationsModeIsActive = true;\n            this.enableGeolocationNotification();\n          } else {\n            await this.localNotifications.requestPermission();\n          }\n        }\n      } else {\n        this.geolocate.startTracking(this.trekName);\n        this.notificationsModeIsActive = true;\n        this.enableGeolocationNotification();\n      }\n    } else {\n      this.notificationsModeIsActive = false;\n      this.disableGeolocationNotification();\n    }\n  }\n\n  enableGeolocationNotification(): void {\n    this.currentPosition$ = this.geolocate.currentPosition$.subscribe(coordinates => this.checkToNotify(coordinates));\n  }\n\n  disableGeolocationNotification(): void {\n    this.currentPosition$.unsubscribe();\n  }\n\n  checkToNotify(fromCoordinates: number[]) {\n    const kmToNotify = environment.metersToNotify / 1000;\n    const options = {\n      units: 'kilometers',\n    };\n    const from = point(fromCoordinates);\n    const notifiedIndex = this.currentPoisToNotify.findIndex(\n      feature => distance(from, point(feature.coordinates), options)  {\n          this.localNotifications.schedule({\n            id: this.currentPoisToNotify[notifiedIndex].id,\n            title: trad,\n            text: this.currentPoisToNotify[notifiedIndex].name,\n            data: {\n              id: this.currentPoisToNotify[notifiedIndex].id,\n            },\n            channel: `channel${this.currentPoisToNotify[notifiedIndex].id}`,\n            priority: 2,\n          });\n\n          this.currentPoisToNotify.splice(notifiedIndex, 1);\n        });\n      } else {\n        console.log('Poi', this.currentPoisToNotify[notifiedIndex]);\n      }\n    }\n  }\n\n  async presentPersmissionsConfirm() {\n    await this.translate\n      .get(['geolocate.askLocatePermission', 'geolocate.cancel', 'geolocate.open'])\n      .subscribe(async trad => {\n        const persmissionsConfirm = await this.alertController.create({\n          header: 'Permissions',\n          message: trad['geolocate.askLocatePermission'],\n          buttons: [\n            {\n              text: trad['geolocate.cancel'],\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: trad['geolocate.open'],\n              handler: () => {\n                this.geolocate.showAppSettings();\n              },\n            },\n          ],\n        });\n\n        await persmissionsConfirm.present();\n      });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ 'mapTrek.enableNotification' | translate }}\n\n\n\n  \n  {{ 'mapTrek.disableNotification' | translate }}\n\n\n    \n\n    \n                \n                    ./geolocate-notifications.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'mapTrek.enableNotification\\' | translate }}    {{ \\'mapTrek.disableNotification\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeolocateNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocateService.html":{"url":"injectables/GeolocateService.html","title":"injectable - GeolocateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeolocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocate/geolocate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundGeolocation\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuthorization\n                            \n                            \n                                    Async\n                                checkIfTrackerIsRunning\n                            \n                            \n                                showAppSettings\n                            \n                            \n                                showLocationSettings\n                            \n                            \n                                    Async\n                                startTracking\n                            \n                            \n                                stopTracking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backgroundGeolocation: BackgroundGeolocation, platform: Platform, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAuthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkIfTrackerIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfTrackerIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAppSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowAppSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking(notificationText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \nstopTracking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backgroundGeolocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BackgroundGeolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  BackgroundGeolocation,\n  BackgroundGeolocationConfig,\n  BackgroundGeolocationEvents,\n  BackgroundGeolocationLocationProvider,\n} from '@ionic-native/background-geolocation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocateService {\n  public currentPosition$: BehaviorSubject = new BehaviorSubject(null);\n\n  constructor(\n    public backgroundGeolocation: BackgroundGeolocation,\n    public platform: Platform,\n    private translate: TranslateService,\n  ) {}\n\n  async checkAuthorization() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.authorization !== 0;\n  }\n\n  async checkIfTrackerIsRunning() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.isRunning;\n  }\n\n  async startTracking(notificationText: string) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const notificationTitle: string = await this.translate.get('geolocate.notificationTitle').toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider: BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        maxLocations: 10,\n        startForeground: true,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText,\n        ...environment.backgroundGeolocation,\n      };\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.start).subscribe(async () => {\n        const startLocation = await this.backgroundGeolocation.getCurrentLocation();\n        this.currentPosition$.next([startLocation.longitude, startLocation.latitude]);\n      });\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.location).subscribe(location => {\n        this.currentPosition$.next([location.longitude, location.latitude]);\n      });\n\n      this.backgroundGeolocation.start();\n    } else {\n      // fake position for browser dev\n      this.currentPosition$.next([0.705824, 44.410157]);\n    }\n  }\n\n  stopTracking() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.backgroundGeolocation.stop();\n    }\n\n    this.currentPosition$.next([0, 0]);\n  }\n\n  showAppSettings() {\n    this.backgroundGeolocation.showAppSettings();\n  }\n\n  showLocationSettings() {\n    this.backgroundGeolocation.showLocationSettings();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrek.html":{"url":"interfaces/HydratedTrek.html","title":"interface - HydratedTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         HydratedTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrekProperties.html":{"url":"interfaces/HydratedTrekProperties.html","title":"interface - HydratedTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        accessibilities\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        networks\n                                \n                                \n                                        parking_location\n                                \n                                \n                                        pictures\n                                \n                                \n                                        practice\n                                \n                                \n                                        route\n                                \n                                \n                                        themes\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking_location\n                                    \n                                \n                                \n                                    \n                                        parking_location:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationDesk.html":{"url":"interfaces/InformationDesk.html","title":"interface - InformationDesk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationDesk\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        municipality\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        photo_url\n                                \n                                \n                                        picture\n                                \n                                \n                                        postal_code\n                                \n                                \n                                        street\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        municipality\n                                    \n                                \n                                \n                                    \n                                        municipality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url\n                                    \n                                \n                                \n                                    \n                                        photo_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postal_code\n                                    \n                                \n                                \n                                    \n                                        postal_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number | Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number | Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationDeskDetailsComponent.html":{"url":"components/InformationDeskDetailsComponent.html","title":"component - InformationDeskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationDeskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-desk-details/information-desk-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-desk-details\n            \n\n            \n                styleUrls\n                ./information-desk-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-desk-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                informationDesk\n                            \n                            \n                                informationDeskPicture\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDesk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationDesk\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDeskPicture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { InformationDesk } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-information-desk-details',\n  templateUrl: './information-desk-details.component.html',\n  styleUrls: ['./information-desk-details.component.scss'],\n})\nexport class InformationDeskDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  informationDesk: InformationDesk;\n  informationDeskPicture = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.informationDesk = this.navParams.get('informationDesk');\n    if (this.informationDesk && this.informationDesk.picture) {\n      this.informationDeskPicture = `${this.baseUrl}${this.informationDesk.picture}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ informationDesk.name }}\n  \n\n\n\n  \n    \n    \n      \n      \n      {{ informationDesk.postal_code }} {{ informationDesk.municipality }}\n      \n         Site web  -\n         Email  -\n        {{ informationDesk.phone }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./information-desk-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ informationDesk.name }}                              {{ informationDesk.postal_code }} {{ informationDesk.municipality }}               Site web  -         Email  -        {{ informationDesk.phone }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationDeskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationIntro.html":{"url":"interfaces/InformationIntro.html","title":"interface - InformationIntro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationIntro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationItem.html":{"url":"interfaces/InformationItem.html","title":"interface - InformationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntervalFilter.html":{"url":"interfaces/IntervalFilter.html","title":"interface - IntervalFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntervalFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Private\n                                loaderStatus$\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                progressBarWidth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        condition\n                    \n                \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressBarWidth\n                    \n                \n                \n                    \n                        Default value : '50%'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { delay } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnDestroy {\n  @Input() public progressBarWidth = '50%';\n  @Input() public condition: boolean | null = null;\n  public loaderStatus: Boolean;\n  private loaderStatus$: Subscription;\n\n  constructor(public loading: LoadingService) {\n    // add delay to prevent expression has changed after it was checked\n    this.loaderStatus$ = this.loading.status.pipe(delay(0)).subscribe(status => (this.loaderStatus = status));\n  }\n\n  ngOnDestroy(): void {\n    this.loaderStatus$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadingIds\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                begin\n                            \n                            \n                                finish\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            begin\n                        \n                        \n                    \n                \n            \n            \n                \nbegin(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finish\n                        \n                        \n                    \n                \n            \n            \n                \nfinish(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoading\n                        \n                        \n                    \n                \n            \n            \n                \nisLoading(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTrekVizComponent.html":{"url":"components/MapTrekVizComponent.html","title":"component - MapTrekVizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapTrekVizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-trek-viz\n            \n\n            \n                styleUrls\n                ./map-trek-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-trek-viz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                markerPosition\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMap\n                            \n                            \n                                    Private\n                                initializeLayers\n                            \n                            \n                                    Private\n                                initializeSources\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateSources\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                currentPois\n                            \n                            \n                                currentTrek\n                            \n                            \n                                dataSettings\n                            \n                            \n                                mapConfig\n                            \n                            \n                                touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapIsLoaded\n                            \n                            \n                                presentInformationDeskDetails\n                            \n                            \n                                presentPoiDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(screenOrientation: ScreenOrientation, platform: Platform, geolocate: GeolocateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        screenOrientation\n                                                  \n                                                        \n                                                                    ScreenOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentPois\n                    \n                \n                \n                    \n                        Type :         Pois\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentTrek\n                    \n                \n                \n                    \n                        Type :     HydratedTrek | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSettings\n                    \n                \n                \n                    \n                        Type :         DataSetting[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Type :     MapboxOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        touristicCategoriesWithFeatures\n                    \n                \n                \n                    \n                        Type :         TouristicCategoryWithFeatures[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mapIsLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        presentInformationDeskDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        presentPoiDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:43\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeLayers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:286\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:368\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Marker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-trek-viz/map-trek-viz.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Observable } from 'rxjs';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport {\n  Pois,\n  DataSetting,\n  HydratedTrek,\n  TouristicCategoryWithFeatures,\n  TouristicContent,\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { FeatureCollection } from 'geojson';\nimport { GeoJSONSource, Map, MapLayerMouseEvent, MapboxOptions, Marker } from 'mapbox-gl';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-trek-viz',\n  templateUrl: './map-trek-viz.component.html',\n  styleUrls: ['./map-trek-viz.component.scss'],\n})\nexport class MapTrekVizComponent extends UnSubscribe implements OnDestroy, OnChanges {\n  private map: Map;\n  private markerPosition: Marker;\n  @Input() currentTrek: HydratedTrek | null = null;\n  @Input() currentPois: Pois;\n  @Input() touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  @Input() public dataSettings: DataSetting[];\n  @Input() public mapConfig: MapboxOptions;\n  @Input() private commonSrc: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  @Output() presentInformationDeskDetails = new EventEmitter();\n  @Output() mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private geolocate: GeolocateService,\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTrek: SimpleChange = changes.currentTrek;\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    const touristicCategoriesWithFeatures: SimpleChange = changes.touristicCategoriesWithFeatures;\n    if (\n      !!this.currentTrek &&\n      !!this.currentPois &&\n      !!this.touristicCategoriesWithFeatures &&\n      ((changesCurrentTrek && !changesCurrentTrek.previousValue) ||\n        (changesCurrentPois && !changesCurrentPois.previousValue) ||\n        (touristicCategoriesWithFeatures && !touristicCategoriesWithFeatures.previousValue))\n    ) {\n      this.createMap();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap(): void {\n    if (this.mapConfig && this.mapConfig.style) {\n      this.map = new Map({\n        ...this.mapConfig,\n        container: 'map-trek',\n      });\n\n      this.geolocate.startTracking(this.currentTrek ? this.currentTrek.properties.name : '');\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize ...\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          }),\n        );\n      }\n\n      this.map.on('click', 'pois-icon', (e: MapLayerMouseEvent) => {\n        if (!!e.features && e.features.length > 0) {\n          const poi = { ...e.features[0] };\n          if (poi.properties && poi.properties.pictures) {\n            poi.properties.pictures = JSON.parse(poi.properties.pictures);\n          }\n          this.presentPoiDetails.emit(poi);\n        }\n      });\n\n      this.map.on('click', 'information-desk-icon', (e: MapLayerMouseEvent) => {\n        if (!!e.features && e.features.length > 0) {\n          if (e.features[0] && e.features[0].properties && e.features[0].properties.id && this.currentTrek) {\n            const informationDesk = this.currentTrek.properties.information_desks.find(\n              informationDeskProperty => informationDeskProperty.id === (e as any).features[0].properties.id,\n            );\n            this.presentInformationDeskDetails.emit(informationDesk);\n          }\n        }\n      });\n\n      this.map.on('click', 'touristics-content-icon', (e: MapLayerMouseEvent) => {\n        if (!!e.features && e.features.length > 0) {\n          const touristicContent = { ...e.features[0] };\n          if (touristicContent.properties && touristicContent.properties.pictures) {\n            touristicContent.properties.pictures = JSON.parse(touristicContent.properties.pictures);\n          }\n          this.presentPoiDetails.emit(touristicContent);\n        }\n      });\n\n      this.map.on('mouseenter', 'pois-icon', () => {\n        this.map.getCanvas().style.cursor = 'pointer';\n      });\n\n      this.map.on('mouseleave', 'pois-icon', () => {\n        this.map.getCanvas().style.cursor = '';\n      });\n\n      this.map.on('mouseenter', 'information-desk-icon', () => {\n        this.map.getCanvas().style.cursor = 'pointer';\n      });\n\n      this.map.on('mouseleave', 'information-desk-icon', () => {\n        this.map.getCanvas().style.cursor = '';\n      });\n\n      this.map.on('mouseenter', 'touristics-content-icon', () => {\n        this.map.getCanvas().style.cursor = 'pointer';\n      });\n\n      this.map.on('mouseleave', 'touristics-content-icon', () => {\n        this.map.getCanvas().style.cursor = '';\n      });\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create((observer: any) => {\n          const imagesToLoad: any[] = [];\n          const typePois: DataSetting | undefined = this.dataSettings.find(data => data.id === 'poi_types');\n          if (typePois) {\n            typePois.values.forEach(typePoi => {\n              imagesToLoad.push({ id: `pois${typePoi.id}`, pictogram: typePoi.pictogram });\n            });\n          }\n\n          const typeInformationDesks: DataSetting | undefined = this.dataSettings.find(\n            data => data.id === 'information_desk_types',\n          );\n          if (typeInformationDesks) {\n            typeInformationDesks.values.forEach(typeInformationDesk => {\n              imagesToLoad.push({\n                id: `informationDesk${typeInformationDesk.id}`,\n                pictogram: typeInformationDesk.pictogram,\n              });\n            });\n          }\n\n          const touristicsContent: DataSetting | undefined = this.dataSettings.find(\n            data => data.id === 'touristiccontent_categories',\n          );\n          if (touristicsContent) {\n            touristicsContent.values.forEach(touristicContent => {\n              imagesToLoad.push({\n                id: `touristicContent${touristicContent.id}`,\n                pictogram: touristicContent.pictogram,\n              });\n            });\n          }\n\n          imagesToLoad.push({ id: 'arrival', pictogram: './assets/map/icons/departure.png', fromAssets: true });\n          imagesToLoad.push({ id: 'departure', pictogram: './assets/map/icons/arrival.png', fromAssets: true });\n          imagesToLoad.push({\n            id: 'departureArrival',\n            pictogram: './assets/map/icons/departureArrival.png',\n            fromAssets: true,\n          });\n          imagesToLoad.push({ id: 'parking', pictogram: './assets/map/icons/parking.png', fromAssets: true });\n\n          imagesToLoad.forEach((imageToLoad: any, index: number) => {\n            this.map.loadImage(\n              imageToLoad.fromAssets ? imageToLoad.pictogram : `${this.commonSrc}${imageToLoad.pictogram}`,\n              (error: any, image: any) => {\n                observer.next({ id: imageToLoad.id.toString(), image });\n                if (index + 1 === imagesToLoad.length) {\n                  observer.complete();\n                }\n              },\n            );\n          });\n        });\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$.subscribe(coordinates => {\n            if (coordinates) {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates);\n              } else {\n                const el = document.createElement('div');\n                el.className = 'pulse';\n                this.markerPosition = new mapboxgl.Marker({ element: el }).setLngLat(coordinates);\n                this.markerPosition.addTo(this.map);\n              }\n            }\n          }),\n          loadImages.subscribe({\n            next: value => this.map.addImage(value.id, value.image),\n            complete: () => {\n              this.initializeSources();\n              this.initializeLayers();\n              this.updateSources();\n              this.mapIsLoaded.emit(true);\n            },\n          }),\n        );\n      });\n    }\n  }\n\n  private initializeSources(): void {\n    const data: FeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: 'assets/map/zone/zone.geojson',\n    });\n\n    this.map.addSource('trek', {\n      type: 'geojson',\n      data,\n    });\n\n    this.map.addSource('departure-arrival', {\n      type: 'geojson',\n      data,\n    });\n\n    this.map.addSource('pois', {\n      type: 'geojson',\n      data,\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n    });\n\n    this.map.addSource('touristics-content', {\n      type: 'geojson',\n      data,\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n    });\n\n    this.map.addSource('information-desk', {\n      type: 'geojson',\n      data,\n    });\n\n    this.map.addSource('parking', {\n      type: 'geojson',\n      data,\n    });\n  }\n\n  private initializeLayers(): void {\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'trek-line',\n      type: 'line',\n      source: 'trek',\n      ...(environment.map.trekLineLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'pois-icon',\n      type: 'symbol',\n      source: 'pois',\n      layout: {\n        'icon-image': ['concat', 'pois', ['get', 'type']],\n        'icon-size': environment.map.iconSize,\n        'icon-allow-overlap': true,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'touristics-content-icon',\n      type: 'symbol',\n      source: 'touristics-content',\n      layout: {\n        'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n        'icon-size': 1,\n        'icon-allow-overlap': true,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'information-desk-icon',\n      type: 'symbol',\n      source: 'information-desk',\n      layout: {\n        'icon-image': ['concat', 'informationDesk', ['get', 'id', ['object', ['get', 'type']]]],\n        'icon-size': 0.5,\n        'icon-allow-overlap': true,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'parking-icon',\n      type: 'symbol',\n      source: 'parking',\n      layout: {\n        'icon-image': 'parking',\n        'icon-size': 0.6,\n        'icon-allow-overlap': true,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'departure-arrival-icon',\n      type: 'symbol',\n      source: 'departure-arrival',\n      layout: {\n        'icon-image': [\n          'case',\n          ['==', ['get', 'type'], 'departure'],\n          'departure',\n          ['==', ['get', 'type'], 'arrival'],\n          'arrival',\n          'departureArrival',\n        ],\n        'icon-size': 0.8,\n      },\n    });\n  }\n\n  private updateSources(): void {\n    if (!!this.map && !!this.currentTrek) {\n      const trekSource = this.map.getSource('trek') as GeoJSONSource;\n      if (trekSource) {\n        trekSource.setData(this.currentTrek);\n      }\n      const departureArrivalSource = this.map.getSource('departure-arrival') as GeoJSONSource;\n      if (departureArrivalSource) {\n        const departure = this.currentTrek.geometry.coordinates[0];\n        const arrival = this.currentTrek.geometry.coordinates.slice(-1)[0];\n        const departureArrivalData: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: [],\n        };\n        if (departure[0] === arrival[0] && departure[1] === arrival[1]) {\n          // same departure arrival\n          departureArrivalData.features.push({\n            type: 'Feature',\n            geometry: { type: 'Point', coordinates: departure },\n            properties: {\n              type: 'departure-arrival',\n            },\n          });\n        } else {\n          departureArrivalData.features.push({\n            type: 'Feature',\n            geometry: { type: 'Point', coordinates: departure },\n            properties: {\n              type: 'departure',\n            },\n          });\n          departureArrivalData.features.push({\n            type: 'Feature',\n            geometry: { type: 'Point', coordinates: arrival },\n            properties: {\n              type: 'arrival',\n            },\n          });\n        }\n        departureArrivalSource.setData(departureArrivalData);\n      }\n      const poisSource = this.map.getSource('pois') as GeoJSONSource;\n      if (poisSource) {\n        poisSource.setData(this.currentPois);\n      }\n\n      const touristicsContent = this.map.getSource('touristics-content') as GeoJSONSource;\n      if (touristicsContent) {\n        let touristicsContentFeatures: TouristicContent[] = [];\n        this.touristicCategoriesWithFeatures.forEach(touristicCategoryWithFeatures => {\n          touristicsContentFeatures = touristicsContentFeatures.concat(touristicCategoryWithFeatures.features);\n        });\n\n        const touristics_content: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: touristicsContentFeatures,\n        };\n\n        touristicsContent.setData(touristics_content);\n      }\n\n      const parkingSource = this.map.getSource('parking') as GeoJSONSource;\n      if (parkingSource) {\n        const parking: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: [],\n        };\n        parking.features.push({\n          type: 'Feature',\n          geometry: { type: 'Point', coordinates: this.currentTrek.properties.parking_location },\n          properties: {},\n        });\n        parkingSource.setData(parking);\n      }\n\n      const information_desk = this.map.getSource('information-desk') as GeoJSONSource;\n      if (\n        information_desk &&\n        this.currentTrek.properties.information_desks &&\n        this.currentTrek.properties.information_desks.length > 0\n      ) {\n        const information_desks: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: [],\n        };\n\n        this.currentTrek.properties.information_desks.forEach(information_desk_property => {\n          if (information_desk_property.longitude && information_desk_property.latitude) {\n            information_desks.features.push({\n              type: 'Feature',\n              geometry: {\n                type: 'Point',\n                coordinates: [information_desk_property.longitude, information_desk_property.latitude],\n              },\n              properties: {\n                type: information_desk_property.type,\n                id: information_desk_property.id,\n              },\n            });\n          }\n        });\n\n        information_desk.setData(information_desks);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./map-trek-viz.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapTrekVizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTreksVizComponent.html":{"url":"components/MapTreksVizComponent.html","title":"component - MapTreksVizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapTreksVizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-treks-viz\n            \n\n            \n                styleUrls\n                ./map-treks-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-treks-viz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                markerPosition\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSourcesLayersEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                presentConfirmFeatures\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                dataSettings\n                            \n                            \n                                filteredTreks\n                            \n                            \n                                mapConfig\n                            \n                            \n                                offline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, screenOrientation: ScreenOrientation, platform: Platform, translate: TranslateService, geolocate: GeolocateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        screenOrientation\n                                                  \n                                                        \n                                                                    ScreenOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSettings\n                    \n                \n                \n                    \n                        Type :         DataSetting[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredTreks\n                    \n                \n                \n                    \n                        Type :     MinimalTrek[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Type :     MapboxOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mapIsLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateToTrek\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSourcesLayersEvents\n                        \n                        \n                    \n                \n            \n            \n                \naddSourcesLayersEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirmFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmFeatures(features: Feature[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                            Feature[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Marker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport { GeoJSONSource, GeoJSONSourceRaw, Map, MapboxOptions, Marker } from 'mapbox-gl';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { MinimalTrek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '../abstract/unsubscribe';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-treks-viz',\n  templateUrl: './map-treks-viz.component.html',\n  styleUrls: ['./map-treks-viz.component.scss'],\n})\nexport class MapTreksVizComponent extends UnSubscribe implements OnChanges, OnDestroy {\n  private map: Map;\n  private markerPosition: Marker;\n\n  @Input() public filteredTreks: MinimalTrek[] | null = null;\n  @Input() public mapConfig: MapboxOptions;\n  @Input() public dataSettings: DataSetting[];\n  @Input() public commonSrc: string;\n  @Input() public offline: Boolean;\n\n  @Output() public navigateToTrek = new EventEmitter();\n  @Output() public mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private alertController: AlertController,\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private translate: TranslateService,\n    private geolocate: GeolocateService,\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTreks: SimpleChange = changes.filteredTreks;\n    if (changesCurrentTreks.currentValue && !changesCurrentTreks.previousValue) {\n      this.createMap();\n    } else {\n      if (this.map) {\n        const treksSource = this.map.getSource('treks-points') as GeoJSONSource;\n        if (treksSource && this.filteredTreks) {\n          treksSource.setData({\n            type: 'FeatureCollection',\n            features: this.filteredTreks,\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap() {\n    if (this.mapConfig && this.mapConfig.style) {\n      if (this.offline && (this.platform.is('ios') || this.platform.is('android'))) {\n        (this.mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.commonSrc + (environment.offlineMapConfig.style as any).sources['tiles-background'].tiles[0];\n      }\n\n      this.map = new mapboxgl.Map({\n        ...this.mapConfig,\n        container: 'map-treks',\n      });\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize ...\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          }),\n        );\n      }\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create((observer: any) => {\n          const practices: DataSetting | undefined = this.dataSettings.find(data => data.id === 'practice');\n          if (practices) {\n            practices.values.forEach((practice, index: number) => {\n              this.map.loadImage(`${this.commonSrc}${practice.pictogram}`, (error: any, image: any) => {\n                observer.next({ id: practice.id.toString(), image });\n                if (index + 1 === practices.values.length) {\n                  observer.complete();\n                }\n              });\n            });\n          }\n        });\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$.subscribe(coordinates => {\n            if (coordinates) {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates as any);\n              } else {\n                const el = document.createElement('div');\n                el.className = 'pulse';\n                this.markerPosition = new mapboxgl.Marker({ element: el }).setLngLat(coordinates);\n                this.markerPosition.addTo(this.map);\n              }\n            }\n          }),\n          loadImages.subscribe({\n            next: value => this.map.addImage(value.id, value.image),\n            complete: () => {\n              this.addSourcesLayersEvents();\n              this.geolocate.startTracking('');\n            },\n          }),\n        );\n      });\n    }\n  }\n\n  addSourcesLayersEvents() {\n    this.map.addSource('treks-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: this.filteredTreks,\n      },\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50,\n    } as GeoJSONSourceRaw);\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: 'assets/map/zone/zone.geojson',\n    });\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint,\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: {\n        'text-color': '#fff',\n      },\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 18,\n        'text-offset': [0, 0.1],\n      },\n    });\n\n    this.map.addLayer({\n      id: 'trek-point',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        'circle-color': '#ff7675',\n        'circle-stroke-color': '#fff',\n        'circle-radius': 20,\n        'circle-stroke-width': 1,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'trek-point-icon',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['get', 'practice'],\n        'icon-size': environment.map.globalMapIconSize,\n      },\n    });\n\n    this.map.on('click', 'clusters-circle', e => {\n      const features = this.map.queryRenderedFeatures(e.point, {\n        layers: ['clusters-circle'],\n      });\n\n      const featureProperties = features[0].properties;\n      if (!!featureProperties) {\n        const clusterId = featureProperties.cluster_id;\n\n        if (this.map.getZoom() === this.mapConfig.maxZoom) {\n          // no more zoom, display features inside cluster\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterLeaves(\n            featureProperties.cluster_id,\n            Infinity,\n            0,\n            (err: any, featuresInCluster: Feature[]) => {\n              if (err) {\n                throw err;\n              }\n              this.presentConfirmFeatures(featuresInCluster as Feature[]);\n            },\n          );\n        } else {\n          // zoom to next cluster expansion\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterExpansionZoom(\n            clusterId,\n            (err: any, zoom: number) => {\n              if (err) {\n                return;\n              }\n              const coordinates = (features[0].geometry as Point).coordinates;\n              this.map.easeTo({\n                center: [coordinates[0], coordinates[1]],\n                zoom: zoom,\n              });\n            },\n          );\n        }\n      }\n    });\n\n    this.map.on('mouseenter', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.map.on('click', 'trek-point', e => {\n      const feature = this.map.queryRenderedFeatures(e.point, {\n        layers: ['trek-point'],\n      })[0];\n      if (!!feature.properties) {\n        this.navigateToTrek.emit(feature.properties.id);\n      }\n    });\n\n    this.map.on('mouseenter', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.mapIsLoaded.emit(true);\n  }\n  async presentConfirmFeatures(features: Feature[]) {\n    const featuresRadio: Object[] = []; // can't import AlertOption\n\n    features.forEach((feature, index: number) => {\n      featuresRadio.push({\n        name: feature.properties.name,\n        type: 'radio',\n        label: feature.properties.name,\n        value: feature.properties.id,\n        checked: index === 0,\n      });\n    });\n\n    await this.translate.get('mapTreks.treksAlert').subscribe(async trad => {\n      const alert = await this.alertController.create({\n        header: trad.title,\n        inputs: featuresRadio,\n        buttons: [\n          {\n            text: trad.cancelButton,\n            role: 'cancel',\n            cssClass: 'secondary',\n          },\n          {\n            text: trad.confirmButton,\n            handler: featureId => {\n              this.navigateToTrek.emit(featureId);\n            },\n          },\n        ],\n      });\n\n      await alert.present();\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./map-treks-viz.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapTreksVizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrek.html":{"url":"interfaces/MinimalTrek.html","title":"interface - MinimalTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         MinimalTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MinimalTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrekProperties.html":{"url":"interfaces/MinimalTrekProperties.html","title":"interface - MinimalTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessibilities\n                                \n                                \n                                        departure\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        first_picture\n                                \n                                \n                                        id\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        practice\n                                \n                                \n                                        themes\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_picture\n                                    \n                                \n                                \n                                    \n                                        first_picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTreks.html":{"url":"interfaces/MinimalTreks.html","title":"interface - MinimalTreks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTreks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     MinimalTrek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreInformationsService.html":{"url":"injectables/MoreInformationsService.html","title":"injectable - MoreInformationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MoreInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/more-informations/more-informations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMoreItemById\n                            \n                            \n                                    Public\n                                getMoreItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: CacheService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItemById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItemById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InformationIntro, InformationItem } from '@app/interfaces/interfaces';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MoreInformationsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  constructor(private cache: CacheService, private translate: TranslateService) {}\n\n  public getMoreItems(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages.json`, httpOptions);\n  }\n\n  public getMoreItemById(id: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages/${id}.json`, httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoreItemPage.html":{"url":"components/MoreItemPage.html","title":"component - MoreItemPage","body":"\n                   \n\n\n\n\n\n  Components\n  MoreItemPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more-item/more-item.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more-item\n            \n\n            \n                styleUrls\n                ./more-item.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more-item.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectionError\n                            \n                            \n                                moreItem\n                            \n                            \n                                moreItemId\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationItem } from '@app/interfaces/interfaces';\n\n\n@Component({\n  selector: 'app-more-item',\n  templateUrl: './more-item.page.html',\n  styleUrls: ['./more-item.page.scss'],\n})\nexport class MoreItemPage extends UnSubscribe implements OnInit, OnDestroy {\n  moreItem: InformationItem;\n  moreItemId: number;\n  connectionError = false;\n\n  constructor(\n    private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data) => {\n        const item = data['item'] as (InformationItem | 'connectionError');\n        if (item === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreItem = item;\n        }\n      })\n    );\n  }\n\n  refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ moreItem.title }}\n  \n\n\n  \n  \n  \n  \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more-item.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ moreItem.title }}                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoreItemPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoreItemPageModule.html":{"url":"modules/MoreItemPageModule.html","title":"module - MoreItemPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MoreItemPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more-item/more-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoreItemPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { MoreItemPage } from './more-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoreItemPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      item: MoreItemResolver\n    }\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule],\n  declarations: [MoreItemPage],\n})\nexport class MoreItemPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreItemResolver.html":{"url":"guards/MoreItemResolver.html","title":"guard - MoreItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more-item.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more-item.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/more-item.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { InformationItem } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MoreItemResolver implements Resolve {\n  constructor(private more: MoreInformationsService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const moreItemId = +(route.paramMap.get('moreItemId'));\n    return this.more.getMoreItemById(moreItemId).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorePage.html":{"url":"components/MorePage.html","title":"component - MorePage","body":"\n                   \n\n\n\n\n\n  Components\n  MorePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more\n            \n\n            \n                styleUrls\n                ./more.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                connectionError\n                            \n                            \n                                moreInformationsIntro\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreInformationsIntro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationIntro[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '@env/environment';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationIntro } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.page.html',\n  styleUrls: ['./more.page.scss'],\n})\nexport class MorePage extends UnSubscribe implements OnInit {\n  moreInformationsIntro: InformationIntro[];\n  connectionError = false;\n  public appName: string = environment.appName;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const items: InformationIntro[] | 'connectionError' = data.items;\n        if (items === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreInformationsIntro = items;\n        }\n      })\n    );\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n\n\n\n  \n  \n  \n\n  \n    \n      \n        \n          {{ moreInformationIntro.title }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}                                       {{ moreInformationIntro.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MorePageModule.html":{"url":"modules/MorePageModule.html","title":"module - MorePageModule","body":"\n                   \n\n\n\n\n    Modules\n    MorePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_MorePageModule_imports\n\n\n\n\nMorePage\n\nMorePage\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MorePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule } from '@ionic/angular';\n\nimport { MorePage } from './more.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    component: MorePage,\n    resolve: {\n      items: MoreResolver,\n    }\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule],\n  declarations: [MorePage],\n})\nexport class MorePageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreResolver.html":{"url":"guards/MoreResolver.html","title":"guard - MoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router'\n\nimport { InformationIntro } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MoreResolver implements Resolve {\n\n  constructor(private more: MoreInformationsService) {\n  }\n\n  resolve = () => this.more.getMoreItems().pipe(\n    catchError((error: HttpErrorResponse) => {\n      if (!error.status) {\n        return of('connectionError' as 'connectionError')\n      } else {\n        return throwError(error)\n      }\n    })\n  )\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineTreksService.html":{"url":"injectables/OnlineTreksService.html","title":"injectable - OnlineTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OnlineTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online-treks/online-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                filteredTreks$\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreksError$\n                            \n                            \n                                    Public\n                                treks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCommonImgSrc\n                            \n                            \n                                    Public\n                                getMapConfigForTrekById\n                            \n                            \n                                    Public\n                                getMinimalTrekById\n                            \n                            \n                                    Public\n                                getPoisForTrekById\n                            \n                            \n                                    Public\n                                getTouristicContentsForTrekById\n                            \n                            \n                                    Public\n                                getTouristicEventsForTrekById\n                            \n                            \n                                    Public\n                                getTrekById\n                            \n                            \n                                    Public\n                                getTrekDetailsUrl\n                            \n                            \n                                    Public\n                                getTrekImageSrc\n                            \n                            \n                                    Public\n                                getTrekMapUrl\n                            \n                            \n                                    Private\n                                getTreks\n                            \n                            \n                                    Public\n                                getTreksMapUrl\n                            \n                            \n                                    Public\n                                getTreksUrl\n                            \n                            \n                                    Public\n                                loadTreks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cache: CacheService, filterTreks: FilterTreksService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapConfigForTrekById(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinimalTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinimalTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoisForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicContentsForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicEventsForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekDetailsUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekMapUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreksError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { environment } from '@env/environment';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnlineTreksService implements TreksService {\n  public offline = false;\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public onlineTreksError$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private cache: CacheService,\n    private filterTreks: FilterTreksService,\n    private translate: TranslateService,\n  ) {\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n  }\n\n  public loadTreks() {\n    this.onlineTreksError$.next(null);\n    this.getTreks().subscribe(\n      data => {\n        this.treks$.next(data);\n      },\n      error => {\n        this.onlineTreksError$.next(error);\n      },\n    );\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      return environment.onlineBaseUrl + (!!picture ? picture.url : trek.properties.first_picture.url);\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    return `${environment.onlineBaseUrl}`;\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks';\n  }\n\n  public getTrekDetailsUrl(trekId: number): string {\n    return `/app/tabs/treks/trek-details/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number): string {\n    return `/app/map/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n\n    return this.http.get(`${this.apiUrl}/treks.geojson`, httpOptions);\n  }\n\n  public getTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/trek.geojson`, httpOptions);\n  }\n\n  public getPoisForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/pois.geojson`, httpOptions);\n  }\n\n  public getTouristicContentsForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/touristic_contents.geojson`, httpOptions);\n  }\n\n  public getTouristicEventsForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/touristic_events.geojson`, httpOptions);\n  }\n\n  public getMinimalTrekById(trekId: number): MinimalTrek | undefined {\n    const trek = this.treks$.getValue();\n    if (!!trek) {\n      return trek.features.find(feature => feature.properties.id === trekId);\n    } else {\n      return undefined;\n    }\n  }\n\n  public getMapConfigForTrekById(trek: Trek): MapboxOptions {\n    const mapConfig: MapboxOptions = { ...cloneDeep(environment.onlineMapConfig), zoom: environment.trekZoom.zoom };\n    (mapConfig as any).bounds = trek.bbox as [number, number, number, number];\n    (mapConfig as any).fitBoundsOptions = { padding: { top: 100, bottom: 100, left: 100, right: 100 } };\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        legend\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiComponent.html":{"url":"components/PoiComponent.html","title":"component - PoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi/poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi\n            \n\n            \n                styleUrls\n                ./poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                offline\n                            \n                            \n                                poi\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi/poi.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        poi\n                    \n                \n                \n                    \n                        Type :         Poi\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi/poi.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Picture, Poi, Trek } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-poi',\n  templateUrl: './poi.component.html',\n  styleUrls: ['./poi.component.scss'],\n})\nexport class PoiComponent implements OnChanges {\n  @Input() public poi: Poi;\n  @Input() public offline = false;\n\n  public baseUrl = environment.onlineBaseUrl;\n  public picture: Picture | null = null;\n\n  constructor(public offlineTreks: OfflineTreksService, public onlineTreks: OnlineTreksService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.poi) {\n      if (this.poi.properties.pictures.length > 0) {\n        this.picture = this.poi.properties.pictures[0];\n        if (this.offline) {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.offlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        } else {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.onlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        }\n      } else {\n        this.picture = null;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ picture.legend }}\n      ({{ picture.author }})\n    \n  \n  \n    {{ poi.properties.name }}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./poi.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ picture.legend }}      ({{ picture.author }})            {{ poi.properties.name }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiDetailsComponent.html":{"url":"components/PoiDetailsComponent.html","title":"component - PoiDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi-details/poi-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi-details\n            \n\n            \n                styleUrls\n                ./poi-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                poi\n                            \n                            \n                                poiImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi-details/poi-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poiImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { Poi } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-poi-details',\n  templateUrl: './poi-details.component.html',\n  styleUrls: ['./poi-details.component.scss'],\n})\nexport class PoiDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  poi: Poi;\n  poiImg = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.poi = this.navParams.get('poi');\n    if (\n      this.poi &&\n      this.poi.properties &&\n      this.poi.properties.pictures &&\n      this.poi.properties.pictures.length > 0 &&\n      this.poi.properties.pictures[0].url\n    ) {\n      this.poiImg = `${this.baseUrl}${this.poi.properties.pictures[0].url}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ poi.properties.name }}\n  \n\n\n\n  \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./poi-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ poi.properties.name }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pois.html":{"url":"interfaces/Pois.html","title":"interface - Pois","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pois\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressComponent.html":{"url":"components/ProgressComponent.html","title":"component - ProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/progress/progress.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress\n            \n\n            \n                styleUrls\n                ./progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentProgress\n                            \n                            \n                                    Private\n                                currentProgress$\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentProgress$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  changeDetection: ChangeDetectionStrategy.Default,\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss'],\n})\nexport class ProgressComponent {\n  public currentProgress: number;\n  private currentProgress$: Subscription;\n\n  constructor(public offlineTreks: OfflineTreksService, private ref: ChangeDetectorRef) {}\n\n  ionViewWillEnter(): void {\n    this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(val => {\n      this.currentProgress = val;\n      this.ref.detectChanges();\n    });\n  }\n\n  ionViewWillLeave(): void {\n    this.currentProgress$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ 'trek.downloadAlert.loading' | translate }}\n        \n        \n          \n          \n        \n      \n      \n        \n          \n          \n            {{ 'trek.downloadAlert.storage' | translate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./progress.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'trek.downloadAlert.loading\\' | translate }}                                                                                                {{ \\'trek.downloadAlert.storage\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Property.html":{"url":"interfaces/Property.html","title":"interface - Property","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Property\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SearchTreksService\n                \n            \n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentSearchValue\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Private\n                                treks\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                navigateToTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Public\n                                trackTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, searchTreks: SearchTreksService, navParams: NavParams, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchTreks\n                                                  \n                                                        \n                                                                        SearchTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackTrek(index: number, element: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentSearchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTreks | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\n\nimport { MinimalTrek, MinimalTreks, Trek } from '@app/interfaces/interfaces';\nimport { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\n\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchTreksService],\n})\nexport class SearchComponent extends UnSubscribe implements OnInit {\n  public filteredTreks: MinimalTrek[] = [];\n  public currentSearchValue: string;\n  private treks: MinimalTreks | null = null;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private searchTreks: SearchTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    const isOnline = this.navParams.get('isOnline');\n    const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      treksTool.treks$.subscribe(treks => {\n        this.treks = treks;\n        this.filteredTreks = [];\n      }),\n    );\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public search(searchValue: string): void {\n    this.currentSearchValue = searchValue;\n    if (this.treks) {\n      this.filteredTreks = this.searchTreks.search(this.treks.features, searchValue);\n    } else {\n      this.filteredTreks = [];\n    }\n  }\n\n  public navigateToTrek(id: number) {\n    this.modalCtrl.dismiss(id);\n  }\n\n  public trackTrek(index: number, element: Trek): number | null {\n    return element ? element.properties.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'search.title' | translate | uppercase }}\n  \n  \n    \n    \n  \n\n\n\n   0; else loading\">\n    \n      \n        \n        {{ trek.properties.name }}\n      \n    \n  \n\n  \n    \n      \n        \n          {{ 'search.noResult' | translate }}\n        \n        \n          {{ 'search.contentPlaceHolder' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'search.title\\' | translate | uppercase }}                 0; else loading\">                          {{ trek.properties.name }}                                          {{ \\'search.noResult\\' | translate }}                          {{ \\'search.contentPlaceHolder\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchTreksService.html":{"url":"injectables/SearchTreksService.html","title":"injectable - SearchTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-treks/search-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(treks: MinimalTrek[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search-treks/search-treks.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { MinimalTrek } from '@app/interfaces/interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchTreksService {\n  public search(treks: MinimalTrek[], searchValue: string): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n    if (!searchValue) {\n      return treks;\n    }\n    searchValue = searchValue.toLowerCase();\n    return treks.filter(trek => {\n      return trek.properties.name.toLowerCase().includes(searchValue);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         DataSetting[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataSetting[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Public\n                                filters$\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFilters\n                            \n                            \n                                    Public\n                                getHydratedTrek\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getTouristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                getValueForPropertyById\n                            \n                            \n                                    Public\n                                loadSettings\n                            \n                            \n                                    Public\n                                resetFilters\n                            \n                            \n                                    Public\n                                saveFiltersState\n                            \n                            \n                                    Private\n                                    Async\n                                setOfflineSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: Storage, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings/settings.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilters(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHydratedTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHydratedTrek(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HydratedTrek\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicCategoriesWithFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicCategoriesWithFeatures(touristicContents: TouristicContents)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touristicContents\n                                    \n                                                TouristicContents\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TouristicCategoryWithFeatures[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueForPropertyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueForPropertyById(propertyName: string, id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Property | InformationDesk | TouristicCategorie | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFiltersState(filters: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setOfflineSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOfflineSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  Trek,\n  Filter,\n  Settings,\n  DataSetting,\n  HydratedTrek,\n  Property,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  TouristicCategorie,\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public filters$ = new BehaviorSubject(null);\n  public data$ = new BehaviorSubject(null);\n\n  constructor(public http: HttpClient, public storage: Storage, private translate: TranslateService) {}\n\n  public loadSettings() {\n    this.setOfflineSettings();\n\n    this.getSettings().subscribe(async settings => {\n      await this.storage.set('settings', JSON.stringify(settings));\n      this.filters$.next(this.getFilters(settings));\n      this.data$.next(settings.data);\n    });\n  }\n\n  private async setOfflineSettings() {\n    const defaultSettings = JSON.parse(await this.storage.get(`settings`));\n    if (defaultSettings) {\n      this.filters$.next(this.getFilters(defaultSettings));\n      this.data$.next(defaultSettings.data);\n    }\n  }\n\n  private getFilters(settings: Settings) {\n    const filters: Filter[] = [];\n    if (settings && settings.filters && settings.data) {\n      settings.filters.forEach(filter => {\n        const currentDataSetting = settings.data.find((data: DataSetting) => data.id === filter.id);\n        if (currentDataSetting) {\n          filter = { ...filter, ...currentDataSetting, values: [] };\n          filter.values = currentDataSetting.values.map(value => ({\n            ...value,\n            checked: false,\n          }));\n          filters.push(filter);\n        }\n      });\n    }\n\n    return filters;\n  }\n\n  public getSettings(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.http.get(this.apiUrl + '/settings.json', httpOptions);\n  }\n\n  public saveFiltersState(filters: Filter[]): void {\n    this.filters$.next(filters);\n  }\n\n  public resetFilters(): void {\n    let filters = cloneDeep(this.filters$.getValue());\n    if (!!filters) {\n      filters.forEach(filter => {\n        filter.values.forEach(value => (value.checked = false));\n      });\n    } else {\n      filters = [];\n    }\n    this.saveFiltersState(filters);\n  }\n\n  private getValueForPropertyById(\n    propertyName: string,\n    id: number | string,\n  ): Property | InformationDesk | TouristicCategorie | string {\n    const dataSetting = this.data$.getValue();\n\n    if (dataSetting) {\n      const property = dataSetting.find(data => data.id === propertyName);\n      if (property) {\n        const propertyValue = property.values.find(value => value.id === id);\n        if (propertyValue) {\n          return propertyValue;\n        } else {\n          return { id: -1, name: '' };\n        }\n      }\n    }\n\n    return { id: -1, name: '' };\n  }\n\n  public getHydratedTrek(trek: Trek): HydratedTrek {\n    const hydratedTrek: HydratedTrek = cloneDeep(trek) as any;\n\n    if (trek.properties.difficulty) {\n      hydratedTrek.properties.difficulty = this.getValueForPropertyById(\n        'difficulty',\n        trek.properties.difficulty,\n      ) as Property;\n    }\n\n    if (trek.properties.practice) {\n      hydratedTrek.properties.practice = this.getValueForPropertyById('practice', trek.properties.practice) as Property;\n    }\n\n    if (trek.properties.route) {\n      hydratedTrek.properties.route = this.getValueForPropertyById('route', trek.properties.route) as Property;\n    }\n\n    if (trek.properties.departure_city) {\n      hydratedTrek.properties.departure_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.departure_city,\n      ) as Property;\n    }\n\n    if (trek.properties.arrival_city) {\n      hydratedTrek.properties.arrival_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.arrival_city,\n      ) as Property;\n    }\n\n    if (trek.properties.cities) {\n      hydratedTrek.properties.cities = trek.properties.cities.map(\n        city => this.getValueForPropertyById('cities', city) as Property,\n      );\n    }\n\n    if (trek.properties.networks) {\n      hydratedTrek.properties.networks = trek.properties.networks.map(\n        network => this.getValueForPropertyById('networks', network) as Property,\n      );\n    }\n\n    if (trek.properties.themes) {\n      hydratedTrek.properties.themes = trek.properties.themes.map(\n        theme => this.getValueForPropertyById('themes', theme) as Property,\n      );\n    }\n\n    if (trek.properties.information_desks) {\n      hydratedTrek.properties.information_desks.forEach(information_desk => {\n        information_desk.type = this.getValueForPropertyById(\n          'information_desk_types',\n          information_desk.type as number,\n        ) as Property;\n      });\n    }\n\n    return hydratedTrek;\n  }\n\n  public getTouristicCategoriesWithFeatures(touristicContents: TouristicContents): TouristicCategoryWithFeatures[] {\n    const touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[] = [];\n    const categories = touristicContents.features\n      .map(touristicContent => touristicContent.properties.category)\n      .filter((v, i, a) => a.indexOf(v) === i);\n    categories.forEach(categoryId => {\n      const category = this.getValueForPropertyById('touristiccontent_categories', categoryId) as TouristicCategorie;\n      touristicCategoriesWithFeatures.push({\n        id: categoryId,\n        name: category ? category.name : '',\n        features: touristicContents.features.filter(\n          touristicContent => touristicContent.properties.category === categoryId,\n        ),\n      });\n    });\n    return touristicCategoriesWithFeatures;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { GeolocateNotificationsComponent } from '@app/components/geolocate-notifications/geolocate-notifications.component';\nimport { MapTrekVizComponent } from '@app/components/map-trek-viz/map-trek-viz.component';\nimport { MapTreksVizComponent } from '@app/components/map-treks-viz/map-treks-viz.component';\n\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n  imports: [CommonModule, IonicModule, TranslateModule.forChild()],\n  exports: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedTreksModule.html":{"url":"modules/SharedTreksModule.html","title":"module - SharedTreksModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedTreksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { PoiComponent } from '@app/components/poi/poi.component';\nimport { TrekCardComponent } from '@app/components/trek-card/trek-card.component';\n\n@NgModule({\n  declarations: [\n    PoiComponent,\n    TrekCardComponent,\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule,\n  ],\n  exports: [\n    PoiComponent,\n    TrekCardComponent,\n  ],\n})\nexport class SharedTreksModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapsibleListComponent } from '@app/components/collapsible-list/collapsible-list.component';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectErrorComponent } from '@app/components/connect-error/connect-error.component';\nimport { LoaderComponent } from '@app/components/loader/loader.component';\n\n@NgModule({\n  declarations: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n  imports: [CommonModule, IonicModule, RouterModule],\n  exports: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tabs/tabs.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss'],\n})\nexport class TabsPage {\n  constructor(private platform: Platform, private router: Router, private location: Location) {\n    this.platform.backButton.subscribeWithPriority(9999, () => {\n      const url = this.router.url;\n      if (url !== '/app/tabs/treks' && url !== '/app/tabs/treks-offline' && url !== '/app/tabs/more') {\n        this.location.back();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'tabbar.treks' | translate }}\n    \n    \n      \n      {{ 'tabbar.offline' | translate }}\n    \n    \n      \n      {{ 'tabbar.more' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'tabbar.treks\\' | translate }}                    {{ \\'tabbar.offline\\' | translate }}                    {{ \\'tabbar.more\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MorePageModule\n                        \n                        \n                            SharedUiModule\n                        \n                        \n                            TabsPageRoutingModule\n                        \n                        \n                            TreksPageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\nimport { TabsPageRoutingModule } from './tabs.routing.module';\nimport { TreksPageModule } from '../treks/treks.module';\nimport { MorePageModule } from '../more/more.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n    TreksPageModule,\n    MorePageModule,\n    TranslateModule.forChild(),\n    SharedUiModule,\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { TreksPage } from '../treks/treks.page';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'treks',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n          },\n        ],\n      },\n      {\n        path: 'treks-offline',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            data: { offline: true },\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true },\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n            data: { offline: true },\n          },\n        ],\n      },\n      {\n        path: 'more',\n        children: [\n          {\n            path: '',\n            loadChildren: '../more/more.module#MorePageModule',\n          },\n          {\n            path: ':moreItemId',\n            loadChildren: '../more/more-item/more-item.module#MoreItemPageModule',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: '',\n    redirectTo: '/app/tabs/treks',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TabsPageRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategorie.html":{"url":"interfaces/TouristicCategorie.html","title":"interface - TouristicCategorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategoryWithFeatures.html":{"url":"interfaces/TouristicCategoryWithFeatures.html","title":"interface - TouristicCategoryWithFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategoryWithFeatures\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContent.html":{"url":"interfaces/TouristicContent.html","title":"interface - TouristicContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContents.html":{"url":"interfaces/TouristicContents.html","title":"interface - TouristicContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvent.html":{"url":"interfaces/TouristicEvent.html","title":"interface - TouristicEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvents.html":{"url":"interfaces/TouristicEvents.html","title":"interface - TouristicEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trek.html":{"url":"interfaces/Trek.html","title":"interface - Trek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Trek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         TrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekCardComponent.html":{"url":"components/TrekCardComponent.html","title":"component - TrekCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrekCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trek-card/trek-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-card\n            \n\n            \n                styleUrls\n                ./trek-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hydratedTrek\n                            \n                            \n                                    Public\n                                imgPracticeSrc\n                            \n                            \n                                    Public\n                                imgSrc\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                routerLink\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickDeleteConfirm\n                            \n                            \n                                    Private\n                                    Async\n                                deleteTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                presentDeleteConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                offline\n                            \n                            \n                                showAllData\n                            \n                            \n                                trek\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, loadingController: LoadingController, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trek-card/trek-card.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trek\n                    \n                \n                \n                    \n                        Type :         Trek\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickDeleteConfirm($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            deleteTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTrek()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            presentDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentDeleteConfirm(isAlert?: boolean, alertMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAlert\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alertMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hydratedTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HydratedTrek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgPracticeSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routerLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Trek, HydratedTrek, Picture } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-trek-card',\n  templateUrl: './trek-card.component.html',\n  styleUrls: ['./trek-card.component.scss'],\n})\nexport class TrekCardComponent implements OnInit {\n  @Input() public trek: Trek;\n  @Input() public offline = false;\n  @Input() public showAllData: boolean;\n  public hydratedTrek: HydratedTrek;\n  public imgSrc: string;\n  public routerLink: string;\n  public imgPracticeSrc: string;\n\n  constructor(\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    public settings: SettingsService,\n  ) {}\n\n  ngOnInit() {\n    this.hydratedTrek = this.settings.getHydratedTrek(this.trek);\n    if (this.offline) {\n      this.imgSrc = this.offlineTreks.getTrekImageSrc(this.trek);\n      this.imgPracticeSrc = this.offlineTreks.getTrekImageSrc(\n        {} as Trek,\n        {\n          url: this.hydratedTrek.properties.practice.pictogram,\n        } as Picture,\n      );\n    } else {\n      this.imgSrc = this.onlineTreks.getTrekImageSrc(this.trek);\n      this.imgPracticeSrc = this.onlineTreks.getTrekImageSrc(\n        {} as Trek,\n        {\n          url: this.hydratedTrek.properties.practice.pictogram,\n        } as Picture,\n      );\n    }\n\n    this.routerLink = `/app/tabs/treks${this.offline ? '-offline' : ''}/trek-details/${this.trek.properties.id}`;\n  }\n\n  public clickDeleteConfirm($event: Event) {\n    $event.stopPropagation();\n    this.presentDeleteConfirm();\n  }\n\n  private async deleteTrek() {\n    const loader = await this.loadingController.create({\n      message: 'Suppression en cours',\n    });\n    await loader.present();\n\n    this.offlineTreks.removeTrek(this.trek.properties.id, true).subscribe(trekRemoved => {\n      loader.dismiss();\n      this.presentDeleteConfirm(\n        true,\n        trekRemoved\n          ? 'La randonnée est supprimée du mode hors ligne'\n          : 'Une erreur est survenue lors de la suppression de la randonnée',\n      );\n    });\n  }\n\n  private async presentDeleteConfirm(isAlert?: boolean, alertMsg?: string) {\n    const deleteConfirm = await this.alertController.create({\n      header: 'Suppression',\n      message: isAlert ? alertMsg : `Supprimer cette randonnée du mode hors ligne ?`,\n      buttons: isAlert\n        ? ['OK']\n        : [\n            {\n              text: 'Annuler',\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: 'Supprimer',\n              handler: () => {\n                this.deleteTrek();\n              },\n            },\n          ],\n    });\n\n    await deleteConfirm.present();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n  \n  \n    \n      {{ hydratedTrek.properties?.name }}\n    \n    \n      \n        Départ\n        \n          {{hydratedTrek.properties.departure_city?.name }}\n        {{ hydratedTrek.properties.departure }}\n      \n      \n        \n          \n        \n        {{ hydratedTrek.properties.difficulty?.name }}\n        \n          {{ hydratedTrek.properties.duration | number: '1.0-0' }}h 0\">{{ 60 * (hydratedTrek.properties.duration % 1).toFixed(1) }}min\n        \n        = 24 && showAllData\">\n          {{ hydratedTrek.properties.duration / 24 | number: '1.0-0' }}j\n        {{ hydratedTrek.properties.length / 1000 | number: '1.2-2' }}\n          km\n      \n    \n  \n\n    \n\n    \n                \n                    ./trek-card.component.scss\n                \n                .trash-button {\n  position: absolute;\n  z-index: 10;\n  top: 12px;\n  right: 12px;\n}\n\n.extand-card {\n  height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.picto-practice {\n  max-width: 24px;\n  max-height: 24px;\n}\n\n.extra-content-card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ hydratedTrek.properties?.name }}                      Départ                  {{hydratedTrek.properties.departure_city?.name }}        {{ hydratedTrek.properties.departure }}                                              {{ hydratedTrek.properties.difficulty?.name }}                  {{ hydratedTrek.properties.duration | number: \\'1.0-0\\' }}h 0\">{{ 60 * (hydratedTrek.properties.duration % 1).toFixed(1) }}min                = 24 && showAllData\">          {{ hydratedTrek.properties.duration / 24 | number: \\'1.0-0\\' }}j        {{ hydratedTrek.properties.length / 1000 | number: \\'1.2-2\\' }}          km            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekContext.html":{"url":"interfaces/TrekContext.html","title":"interface - TrekContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonSrc\n                                \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        originalTrek\n                                \n                                \n                                        pois\n                                \n                                \n                                        touristicCategoriesWithFeatures\n                                \n                                \n                                        touristicContents\n                                \n                                \n                                        touristicEvents\n                                \n                                \n                                        trek\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonSrc\n                                    \n                                \n                                \n                                    \n                                        commonSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     MapboxOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MapboxOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalTrek\n                                    \n                                \n                                \n                                    \n                                        originalTrek:         Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Pois\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pois\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicCategoriesWithFeatures\n                                    \n                                \n                                \n                                    \n                                        touristicCategoriesWithFeatures:         TouristicCategoryWithFeatures[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicCategoryWithFeatures[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicContents\n                                    \n                                \n                                \n                                    \n                                        touristicContents:         TouristicContents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicEvents\n                                    \n                                \n                                \n                                    \n                                        touristicEvents:         TouristicEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trek\n                                    \n                                \n                                \n                                    \n                                        trek:         HydratedTrek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TrekContextResolver.html":{"url":"guards/TrekContextResolver.html","title":"guard - TrekContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TrekContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/trek.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, router: Router, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/trek.resolver.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/trek.resolver.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Pois,\n  Trek,\n  HydratedTrek,\n  TrekContext,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\n\n@Injectable()\nexport class TrekContextResolver implements Resolve {\n  constructor(\n    private loading: LoadingService,\n    private offlineTreks: OfflineTreksService,\n    private onlineTreks: OnlineTreksService,\n    private router: Router,\n    private settingsService: SettingsService,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const trekId = +(route.paramMap.get('trekId'));\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n    return forkJoin(\n      treksService.getTrekById(trekId),\n      treksService.getPoisForTrekById(trekId),\n      treksService.getTouristicContentsForTrekById(trekId),\n      treksService.getTouristicEventsForTrekById(trekId),\n    ).pipe(\n      map(\n        ([trek, pois, touristicContents, touristicEvents]: [\n          Trek | null,\n          Pois,\n          TouristicContents,\n          TouristicEvents\n        ]): TrekContext | null => {\n          if (trek === null) {\n            this.router.navigate(['/']);\n            console.error('No trek found: ', trekId);\n            return null;\n          } else {\n            const mapConfig: MapboxOptions = treksService.getMapConfigForTrekById(trek, offline);\n            const hydratedTrek: HydratedTrek = this.settingsService.getHydratedTrek(trek);\n            const commonSrc = treksService.getCommonImgSrc();\n            const touristicCategoriesWithFeatures = this.settingsService.getTouristicCategoriesWithFeatures(\n              touristicContents,\n            );\n            return {\n              treksTool: treksService,\n              offline: offline,\n              originalTrek: trek,\n              trek: hydratedTrek,\n              pois,\n              touristicContents,\n              touristicCategoriesWithFeatures,\n              touristicEvents,\n              mapConfig,\n              commonSrc,\n            };\n          }\n        },\n      ),\n      catchError((error: HttpErrorResponse) => {\n        this.loading.finish(); // there are two requests. finish loading if one fails\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekDetailsPage.html":{"url":"components/TrekDetailsPage.html","title":"component - TrekDetailsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrekDetailsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/trek-details/trek-details.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-details\n            \n\n            \n                styleUrls\n                ./trek-details.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-details.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                connectionError\n                            \n                            \n                                    Public\n                                currentPois\n                            \n                            \n                                    Public\n                                currentTrek\n                            \n                            \n                                    Public\n                                mapLink\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                originalTrek\n                            \n                            \n                                    Public\n                                touristicCategoriesWithFeatures\n                            \n                            \n                                    Public\n                                touristicContents\n                            \n                            \n                                    Public\n                                touristicEvents\n                            \n                            \n                                    Public\n                                trekDownloading\n                            \n                            \n                                    Public\n                                treksTool\n                            \n                            \n                                    Public\n                                treksUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadTrek\n                            \n                            \n                                    Public\n                                getPictureSrc\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentDownloadConfirm\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, route: ActivatedRoute, alertController: AlertController, translate: TranslateService, router: Router, modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/trek-details/trek-details.page.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            downloadTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadTrek()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-details/trek-details.page.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPictureSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPictureSrc(picture: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-details/trek-details.page.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-details/trek-details.page.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentDownloadConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentDownloadConfirm(isAlert?: boolean, success?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-details/trek-details.page.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAlert\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    success\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-details/trek-details.page.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPois\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HydratedTrek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            originalTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Trek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicCategoryWithFeatures[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicContents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicContents\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trekDownloading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-details/trek-details.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport {\n  HydratedTrek,\n  Picture,\n  Poi,\n  Trek,\n  TrekContext,\n  TreksService,\n  TouristicEvent,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { ModalController } from '@ionic/angular';\nimport { ProgressComponent } from '@app/components/progress/progress.component';\n\n@Component({\n  selector: 'app-trek-details',\n  templateUrl: './trek-details.page.html',\n  styleUrls: ['./trek-details.page.scss'],\n})\nexport class TrekDetailsPage extends UnSubscribe implements OnInit, OnDestroy {\n  public originalTrek: Trek;\n  public currentTrek: HydratedTrek;\n  public offline = false;\n  public currentPois: Poi[];\n  public touristicEvents: TouristicEvent[];\n  public touristicContents: TouristicContents;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public baseUrl = environment.onlineBaseUrl;\n  public mapLink: string;\n  public treksTool: TreksService; // the accurate treks service\n  public treksUrl = '';\n  public connectionError = false;\n  public commonSrc: string;\n  public trekDownloading = false;\n\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private route: ActivatedRoute,\n    private alertController: AlertController,\n    private translate: TranslateService,\n    private router: Router,\n    public modalController: ModalController,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe(\n        (data: Data): void => {\n          const context: TrekContext | null | 'connectionError' = data.context;\n          if (context === 'connectionError') {\n            this.connectionError = true;\n          } else {\n            this.connectionError = false;\n            if (context !== null) {\n              this.offline = context.offline;\n              this.currentTrek = context.trek;\n              this.originalTrek = context.originalTrek;\n              this.currentPois = context.pois.features;\n              this.treksTool = context.treksTool;\n              this.touristicContents = context.touristicContents;\n              this.touristicCategoriesWithFeatures = context.touristicCategoriesWithFeatures;\n              this.touristicEvents = context.touristicEvents.features;\n              this.treksUrl = this.treksTool.getTreksUrl();\n              this.commonSrc = context.commonSrc;\n              this.mapLink = context.treksTool.getTrekMapUrl(context.trek.properties.id);\n            }\n          }\n        },\n      ),\n    );\n  }\n\n  async downloadTrek() {\n    const simpleTrek = this.onlineTreks.getMinimalTrekById(this.currentTrek.properties.id);\n    if (!simpleTrek) {\n      return;\n    }\n    this.offlineTreks.createNewProgressStream();\n\n    this.trekDownloading = true;\n    const modalProgress = await this.modalController.create({\n      component: ProgressComponent,\n      cssClass: 'progress-modal',\n    });\n    await modalProgress.present();\n\n    this.offlineTreks.saveTrek(simpleTrek, this.originalTrek, this.currentPois, this.touristicContents).subscribe(\n      saveResult => {\n        this.trekDownloading = false;\n        modalProgress.dismiss();\n        this.presentDownloadConfirm(true, saveResult);\n      },\n      saveResult => {\n        this.trekDownloading = false;\n        modalProgress.dismiss();\n        this.presentDownloadConfirm(true, saveResult);\n      },\n    );\n  }\n\n  public async presentDownloadConfirm(isAlert?: boolean, success?: boolean) {\n    await this.translate.get('trek.downloadAlert').subscribe(async trad => {\n      const downloadConfirm = await this.alertController.create({\n        header: trad.title,\n        message: isAlert ? (success ? trad.success : trad.error) : trad.content,\n        buttons: isAlert\n          ? [trad.confirmError]\n          : [\n              {\n                text: trad.cancelButton,\n                role: 'cancel',\n                cssClass: 'secondary',\n              },\n              {\n                text: trad.confirmButton,\n                handler: () => {\n                  this.downloadTrek();\n                },\n              },\n            ],\n      });\n\n      await downloadConfirm.present();\n    });\n  }\n\n  public getPictureSrc(picture: Picture): string {\n    return this.treksTool.getTrekImageSrc(this.originalTrek, picture);\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ currentTrek.properties.name }}\n    \n      \n        \n      \n    \n  \n\n\n  \n\n  \n    \n    \n  \n  \n    \n       0\" pager=\"true\">\n        \n          \n        \n      \n      \n        \n          \n        \n      \n      \n        \n        \n          \n            \n          \n        \n\n        \n        \n          \n            \n               0\">\n                \n                  {{ 'trek.details.departure' | translate }}\n                \n                \n                  {{ currentTrek.properties.departure_city.name }}\n                \n                {{ currentTrek.properties.departure }}\n              \n\n               0\">\n                \n                  {{ 'trek.details.arrival' | translate }}\n                \n                \n                  {{ currentTrek.properties.departure_city.arrival_city }}\n                \n                {{currentTrek.properties.arrival }}\n              \n            \n            \n              \n                {{ 'trek.details.departureArrival' | translate }}\n              \n              \n                \n                  {{ currentTrek.properties.departure_city.name }}\n                \n                \n                  {{ currentTrek.properties.departure }}\n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n              \n                {{ currentTrek.properties.duration | number: '1.0-0' }}h 0\">{{ 60 * (currentTrek.properties.duration % 1).toFixed(1) }}min\n              \n              = 24\">\n                {{ currentTrek.properties.duration / 24 | number: '1.0-0' }}j\n            \n            \n              \n              {{ currentTrek.properties.ascent }} m\n            \n            \n              \n              {{ currentTrek.properties.route.name }}\n            \n          \n          \n            \n              \n              {{ currentTrek.properties.difficulty.name }}\n            \n            \n              \n              {{ currentTrek.properties.length / 1000 | number: '1.2-2' }} km\n            \n            \n              \n              {{ currentTrek.properties.practice.name }}\n            \n          \n        \n\n         0\">\n          \n            \n              {{ 'trek.details.theme' | translate }}\n            \n          \n          \n            \n              \n              {{ theme.name }}\n            \n          \n        \n\n        \n        \n          \n            \n              \n                {{ 'trek.details.description' | translate }}\n              \n              \n            \n             0\">\n              \n                Balisage\n              \n              \n                \n                {{ network.name }}\n              \n            \n          \n        \n\n        \n        \n          \n            \n              {{ 'trek.details.profile' | translate }}\n            \n            \n              \n            \n          \n        \n\n        \n        \n          \n            \n              {{ 'trek.details.rules' | translate }}\n            \n            Cet itinéraire est dans le coeur du parc national, veuillez respecter la réglementation.\n            \n              \n              \n            \n          \n        \n\n        \n        \n          \n            \n              {{ 'trek.details.access' | translate }}\n            \n            \n          \n        \n\n        \n        \n          \n            \n              {{ 'trek.details.parking' | translate }}\n            \n            \n          \n        \n\n        \n        \n          \n            \n              {{ 'trek.details.advice' | translate }}\n            \n            \n          \n        \n\n        \n         0\">\n          \n            \n              {{ 'trek.details.desk' | translate }}\n            \n            \n              \n              \n              \n              \n              {{ information_desk.postal_code }} {{ information_desk.municipality }}\n              \n                 Site web  -\n                 Email  -\n                {{ information_desk.phone }}\n              \n            \n          \n        \n\n        \n         0\">\n          \n            \n              {{ 'trek.details.poi.name' | translate }} ({{ currentPois.length }})\n            \n\n            \n              \n            \n\n            \n            \n\n          \n        \n\n        \n         0\">\n          \n            \n              \n                {{ touristicCategoryWithFeatures.name }} ({{ touristicCategoryWithFeatures.features.length }})\n              \n\n              \n                \n              \n\n              \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./trek-details.page.scss\n                \n                .bold {\n  font-weight: 500;\n}\n\n.font-medium {\n  font-size: 18px;\n}\n\n.inline {\n  display: inline-block;\n}\n\n.margin-fab {\n  margin-top: -28px;\n}\n\n.extra-details {\n  line-height: 1.5;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.icon-detail {\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n  margin-right: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ currentTrek.properties.name }}                                                         0\" pager=\"true\">                                                                                                                                                                                         0\">                                  {{ \\'trek.details.departure\\' | translate }}                                                  {{ currentTrek.properties.departure_city.name }}                                {{ currentTrek.properties.departure }}                             0\">                                  {{ \\'trek.details.arrival\\' | translate }}                                                  {{ currentTrek.properties.departure_city.arrival_city }}                                {{currentTrek.properties.arrival }}                                                                    {{ \\'trek.details.departureArrival\\' | translate }}                                                              {{ currentTrek.properties.departure_city.name }}                                                  {{ currentTrek.properties.departure }}                                                                                                                                      {{ currentTrek.properties.duration | number: \\'1.0-0\\' }}h 0\">{{ 60 * (currentTrek.properties.duration % 1).toFixed(1) }}min                            = 24\">                {{ currentTrek.properties.duration / 24 | number: \\'1.0-0\\' }}j                                                    {{ currentTrek.properties.ascent }} m                                                    {{ currentTrek.properties.route.name }}                                                                        {{ currentTrek.properties.difficulty.name }}                                                    {{ currentTrek.properties.length / 1000 | number: \\'1.2-2\\' }} km                                                    {{ currentTrek.properties.practice.name }}                                       0\">                                    {{ \\'trek.details.theme\\' | translate }}                                                                        {{ theme.name }}                                                                                                  {{ \\'trek.details.description\\' | translate }}                                                     0\">                              Balisage                                                            {{ network.name }}                                                                                                {{ \\'trek.details.profile\\' | translate }}                                                                                                                        {{ \\'trek.details.rules\\' | translate }}                        Cet itinéraire est dans le coeur du parc national, veuillez respecter la réglementation.                                                                                                                          {{ \\'trek.details.access\\' | translate }}                                                                                              {{ \\'trek.details.parking\\' | translate }}                                                                                              {{ \\'trek.details.advice\\' | translate }}                                                           0\">                                    {{ \\'trek.details.desk\\' | translate }}                                                                                              {{ information_desk.postal_code }} {{ information_desk.municipality }}                               Site web  -                 Email  -                {{ information_desk.phone }}                                                             0\">                                    {{ \\'trek.details.poi.name\\' | translate }} ({{ currentPois.length }})                                                                                                             0\">                                                    {{ touristicCategoryWithFeatures.name }} ({{ touristicCategoryWithFeatures.features.length }})                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekDetailsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekDetailsPageModule.html":{"url":"modules/TrekDetailsPageModule.html","title":"module - TrekDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekDetailsPageModule_imports\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-details/trek-details.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TrekDetailsPage } from './trek-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    },\n    component: TrekDetailsPage,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedTreksModule, SharedUiModule,\n    TranslateModule.forChild(),\n  ],\n  declarations: [\n    TrekDetailsPage,\n  ],\n})\nexport class TrekDetailsPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekMapPage.html":{"url":"components/TrekMapPage.html","title":"component - TrekMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrekMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/trek-map/trek-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-map\n            \n\n            \n                styleUrls\n                ./trek-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                connectionError\n                            \n                            \n                                    Public\n                                currentPois\n                            \n                            \n                                    Public\n                                currentTrek\n                            \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                modalPoiDetails\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                touristicCategoriesWithFeatures\n                            \n                            \n                                    Public\n                                trekUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                presentInformationDeskDetails\n                            \n                            \n                                    Public\n                                    Async\n                                presentPoiDetails\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, modalController: ModalController, route: ActivatedRoute, router: Router, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/trek-map/trek-map.page.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInformationDeskDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInformationDeskDetails(informationDesk: InformationDesk)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    informationDesk\n                                    \n                                                InformationDesk\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentPoiDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPoiDetails(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPois\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pois\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HydratedTrek | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalPoiDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLIonModalElement | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicCategoryWithFeatures[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trekUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { MapboxOptions } from 'mapbox-gl';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport {\n  HydratedTrek,\n  Poi,\n  Pois,\n  TrekContext,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n} from '@app/interfaces/interfaces';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-trek-map',\n  templateUrl: './trek-map.page.html',\n  styleUrls: ['./trek-map.page.scss'],\n})\nexport class TrekMapPage extends UnSubscribe implements OnDestroy {\n  public currentTrek: HydratedTrek | null = null;\n  public currentPois: Pois;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public loader = true;\n  public trekUrl = '';\n  public connectionError = false;\n  public modalPoiDetails: HTMLIonModalElement | null;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n\n  constructor(\n    private loading: LoadingService,\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public settings: SettingsService,\n  ) {\n    super();\n  }\n\n  ionViewDidEnter(): void {\n    this.loading.begin('trek-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe(\n        (data: Data): void => {\n          const context: TrekContext | 'connectionError' = data.context;\n          if (context === 'connectionError') {\n            this.connectionError = true;\n            this.loading.finish('trek-map'); // if there is a connection error, map won't be loaded\n          } else {\n            this.connectionError = false;\n            this.currentTrek = context.trek;\n            this.currentPois = context.pois;\n            this.touristicCategoriesWithFeatures = context.touristicCategoriesWithFeatures;\n            this.mapConfig = context.mapConfig;\n            this.commonSrc = context.treksTool.getCommonImgSrc();\n            this.trekUrl = context.treksTool.getTrekDetailsUrl((this.currentTrek as any).properties.id);\n          }\n        },\n      ),\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  public async presentPoiDetails(poi: Poi): Promise {\n    if (this.modalPoiDetails) {\n      await this.modalPoiDetails.dismiss();\n    }\n\n    this.modalPoiDetails = await this.modalController.create({\n      component: PoiDetailsComponent,\n      componentProps: { poi },\n    });\n\n    this.modalPoiDetails.onDidDismiss().then(() => {\n      this.modalPoiDetails = null;\n    });\n\n    return await this.modalPoiDetails.present();\n  }\n\n  public async presentInformationDeskDetails(informationDesk: InformationDesk): Promise {\n    const modal = await this.modalController.create({\n      component: InformationDeskDetailsComponent,\n      componentProps: { informationDesk },\n    });\n    return await modal.present();\n  }\n\n  public mapIsLoaded(event: Event): void {\n    this.loading.finish('trek-map');\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ currentTrek.properties.name }}\n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./trek-map.page.scss\n                \n                .bottom-container {\n  z-index: 8;\n  position: absolute;\n  bottom: 0;\n  padding: 5%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ currentTrek.properties.name }}                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekMapPageModule.html":{"url":"modules/TrekMapPageModule.html","title":"module - TrekMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TrekMapPageModule_imports\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-map/trek-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { TrekMapPage } from './trek-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrekMapPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    },\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedModule, SharedUiModule],\n  declarations: [TrekMapPage],\n})\nexport class TrekMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekProperties.html":{"url":"interfaces/TrekProperties.html","title":"interface - TrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MinimalTrekProperties\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        duration\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        networks\n                                \n                                \n                                        pictures\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksContext.html":{"url":"interfaces/TreksContext.html","title":"interface - TreksContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TreksContextResolver.html":{"url":"guards/TreksContextResolver.html","title":"guard - TreksContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TreksContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/treks.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/treks.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/treks.resolver.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nimport { TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class TreksContextResolver implements Resolve {\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n    const mapConfig =\n      offline && (this.platform.is('ios') || this.platform.is('android'))\n        ? environment.offlineMapConfig\n        : environment.onlineMapConfig;\n    return of({\n      treksTool: treksService,\n      offline: offline,\n      mapConfig,\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksMapPage.html":{"url":"components/TreksMapPage.html","title":"component - TreksMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TreksMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/treks-map/treks-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                FilterTreksService\n                \n            \n\n\n            \n                selector\n                app-treks-map\n            \n\n            \n                styleUrls\n                ./treks-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Public\n                                isInView\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Private\n                                mergeFiltersTreks$\n                            \n                            \n                                    Public\n                                noNetwork\n                            \n                            \n                                    Public\n                                numberOfActiveFilters\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                treksUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ionViewDidLeave\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentFilters\n                            \n                            \n                                    Public\n                                    Async\n                                presentSearch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, filterTreks: FilterTreksService, modalController: ModalController, onlineTreks: OnlineTreksService, router: Router, route: ActivatedRoute, settings: SettingsService, network: Network, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(loaded: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loaded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInView\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeFiltersTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberOfActiveFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { environment } from '@env/environment';\nimport { unsubscribe, UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { MinimalTrek, TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-treks-map',\n  templateUrl: './treks-map.page.html',\n  styleUrls: ['./treks-map.page.scss'],\n  providers: [FilterTreksService],\n})\nexport class TreksMapPage extends UnSubscribe implements OnInit, OnDestroy {\n  private mergeFiltersTreks$: Subscription;\n  public filteredTreks: MinimalTrek[];\n  public numberOfActiveFilters: string;\n  public offline: boolean;\n  private treksTool: TreksService;\n  public isInView = false;\n  public treksUrl: string;\n  public appName: string = environment.appName;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public currentPosition$: Subscription;\n  public noNetwork = false;\n\n  constructor(\n    public loading: LoadingService,\n    private filterTreks: FilterTreksService,\n    private modalController: ModalController,\n    public onlineTreks: OnlineTreksService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public settings: SettingsService,\n    private network: Network,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.loading.begin('treks-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe(data => {\n        const context: TreksContext = data.context;\n        this.offline = context.offline;\n        this.treksTool = context.treksTool;\n        this.treksUrl = this.treksTool.getTreksUrl();\n        this.mapConfig = cloneDeep(context.mapConfig);\n        this.commonSrc = this.treksTool.getCommonImgSrc();\n      }),\n      this.onlineTreks.onlineTreksError$.subscribe(error => {\n        if (!!error) {\n          this.loading.finish(); // if there was a connection error, map could not be loaded\n        }\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  ionViewWillEnter(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n\n  ionViewDidEnter(): void {\n    this.mapIsLoaded(false);\n    this.mergeFiltersTreks$ = combineLatest(\n      this.route.data.pipe(\n        map(data => data.context),\n        mergeMap((context: TreksContext) => context.treksTool.filteredTreks$),\n      ),\n      this.filterTreks.activeFiltersNumber$,\n    ).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n      this.numberOfActiveFilters = numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n      this.filteredTreks = filteredTreks;\n      this.isInView = true;\n    });\n    this.subscriptions$$.push(this.mergeFiltersTreks$);\n  }\n\n  ionViewDidLeave(): void {\n    this.isInView = false;\n    unsubscribe(this.mergeFiltersTreks$);\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public mapIsLoaded(loaded: boolean): void {\n    if (loaded) {\n      this.loading.finish('treks-map');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n   0)\">\n    \n      \n        \n          \n            {{ 'toolbar.filters' | translate }} {{ numberOfActiveFilters }}\n          \n            {{ 'toolbar.search' | translate }}\n        \n      \n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./treks-map.page.scss\n                \n                .custom-button {\n  width: 100px;\n  text-transform: capitalize;\n}\n\n.button-margin-left {\n  margin-left: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}      0)\">                                        {{ \\'toolbar.filters\\' | translate }} {{ numberOfActiveFilters }}                      {{ \\'toolbar.search\\' | translate }}                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksMapPageModule.html":{"url":"modules/TreksMapPageModule.html","title":"module - TreksMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule_imports\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks-map/treks-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TreksMapPage } from './treks-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TreksMapPage,\n    resolve: {\n      context: TreksContextResolver\n    }\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedModule, SharedUiModule, TranslateModule.forChild()],\n  declarations: [TreksMapPage],\n})\nexport class TreksMapPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksPage.html":{"url":"components/TreksPage.html","title":"component - TreksPage","body":"\n                   \n\n\n\n\n\n  Components\n  TreksPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/treks/treks.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                FilterTreksService\n                \n            \n\n\n            \n                selector\n                app-treks\n            \n\n            \n                styleUrls\n                treks.page.scss\n            \n\n\n\n            \n                templateUrl\n                treks.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                colSize\n                            \n                            \n                                    Private\n                                content\n                            \n                            \n                                    Public\n                                currentMaxTreks\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                mapLink\n                            \n                            \n                                    Public\n                                nbOfflineTreks\n                            \n                            \n                                    Public\n                                noNetwork\n                            \n                            \n                                    Public\n                                numberOfActiveFilters\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Public\n                                treksByStep\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeColSize\n                            \n                            \n                                    Public\n                                expandTreks\n                            \n                            \n                                    Public\n                                getMdColSize\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Private\n                                navigateToTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentFilters\n                            \n                            \n                                    Public\n                                    Async\n                                presentSearch\n                            \n                            \n                                    Public\n                                resetFilters\n                            \n                            \n                                    Public\n                                trackTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterTreks: FilterTreksService, loading: LoadingService, modalController: ModalController, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, route: ActivatedRoute, router: Router, settings: SettingsService, network: Network, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/treks/treks.page.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeColSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeColSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            expandTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    expandTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMdColSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMdColSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackTrek(index: number, element: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks/treks.page.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 12\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonContent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentMaxTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : environment.treksByStep\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nbOfflineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberOfActiveFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksByStep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : environment.treksByStep\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks/treks.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { IonContent, ModalController } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { map, mergeMap, delay } from 'rxjs/operators';\nimport { Network } from '@ionic-native/network/ngx';\nimport { Platform } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { MinimalTrek, TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\n\n@Component({\n  selector: 'app-treks',\n  templateUrl: 'treks.page.html',\n  styleUrls: ['treks.page.scss'],\n  providers: [FilterTreksService],\n})\nexport class TreksPage extends UnSubscribe implements OnInit {\n  public noNetwork = false;\n  public appName: string = environment.appName;\n  public treksByStep: number = environment.treksByStep;\n  public colSize = 12;\n  public filteredTreks: MinimalTrek[];\n  public mapLink: string;\n  public nbOfflineTreks = 0;\n  public numberOfActiveFilters: string;\n  public offline = false;\n  public currentMaxTreks: number = environment.treksByStep;\n  public loaderStatus: Boolean;\n\n  private treksTool: TreksService;\n  @ViewChild('content') private content: IonContent;\n\n  constructor(\n    private filterTreks: FilterTreksService,\n    public loading: LoadingService,\n    private modalController: ModalController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private settings: SettingsService,\n    private network: Network,\n    public platform: Platform,\n  ) {\n    super();\n  }\n\n  ionViewWillEnter() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      // load tools when enter route\n      this.route.data.subscribe(data => {\n        const context: TreksContext = data.context;\n        this.treksTool = context.treksTool;\n        this.mapLink = context.treksTool.getTreksMapUrl();\n        this.offline = context.offline;\n      }),\n\n      // select treks when filter change or when we enter route\n      combineLatest(\n        this.route.data.pipe(\n          map(data => data.context),\n          mergeMap((context: TreksContext) => context.treksTool.filteredTreks$),\n        ),\n        this.filterTreks.activeFiltersNumber$,\n        this.settings.data$,\n      ).subscribe(([filteredTreks, numberOfActiveFilters, settings]) => {\n        if (settings) {\n          if (this.platform.is('ios') || this.platform.is('android')) {\n            this.noNetwork = this.network.type === 'none';\n          }\n          this.numberOfActiveFilters = !!numberOfActiveFilters ? `(${numberOfActiveFilters})` : '';\n          this.filteredTreks = [...filteredTreks];\n        }\n      }),\n\n      // get number of offline treks\n      this.offlineTreks.treks$.subscribe(treks => {\n        if (!treks) {\n          this.nbOfflineTreks = 0;\n        } else {\n          this.nbOfflineTreks = treks.features.length;\n        }\n      }),\n      this.loading.status.pipe(delay(0)).subscribe(status => (this.loaderStatus = status)),\n    );\n  }\n\n  public expandTreks() {\n    if (this.currentMaxTreks  this.filteredTreks.length) {\n        this.currentMaxTreks = this.filteredTreks.length;\n      } else {\n        this.currentMaxTreks += this.treksByStep;\n      }\n    } else {\n      this.currentMaxTreks = this.treksByStep;\n    }\n  }\n\n  public changeColSize(): void {\n    this.colSize = this.colSize === 12 ? 6 : 12;\n    this.content.scrollToTop();\n  }\n\n  public getMdColSize(): number {\n    return this.colSize / 2;\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.content.scrollToTop();\n    }\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  private navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public resetFilters() {\n    this.settings.resetFilters();\n  }\n\n  public trackTrek(index: number, element: MinimalTrek): number | null {\n    return element ? element.properties.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n   0)\">\n    \n      \n        \n          \n            {{ 'toolbar.filters' | translate }}\n            {{ numberOfActiveFilters }}\n          \n            {{ 'toolbar.search' | translate }} \n        \n        \n          \n          \n        \n      \n    \n  \n\n\n  \n  \n    \n    \n  \n\n  \n     0; else noTreks\">\n      \n        \n          \n            \n              \n            \n          \n        \n      \n    \n\n     treksByStep\">\n      \n        \n          = treksByStep\"\n            [translateParams]=\"{ nb: treksByStep}\">\n            treks.showAllLabel\n          \n          \n            treks.showAllLabel\n          \n        \n        \n          {{ 'treks.hideAllLabel' | translate }}\n        \n      \n    \n     0;\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n      \n        \n      \n    \n  \n\n  \n    \n      \n         0\">\n          \n            \n              \n                Les filtres sélectionnés ne correspondent pas à votre randonnée enregistrée.\n              \n               1\">\n                Les filtres sélectionnés ne correspondent à aucune de vos {{ nbOfflineTreks }} randonnées enregistrées.\n              \n            \n            \n              \n                \n                  Afficher toutes les randonnées enregistrées\n                \n              \n            \n          \n          \n            \n              Ici, vous retrouverez vos randonnées disponibles hors ligne\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    treks.page.scss\n                \n                .list-mode-card {\n  position: relative;\n}\n\n.icon-list-square {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  transform: scale(0);\n  transition: transform 0.3s ease;\n}\n\n.icon-list-card {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  transform: scale(1);\n  transition: transform 0.3s ease;\n}\n\n.list-mode-card .icon-list-card {\n  transform: scale(0);\n}\n\n.list-mode-card .icon-list-square {\n  transform: scale(1);\n}\n\n.list-mode-disabled {\n  cursor: default;\n  opacity: .5;\n  pointer-events: none;\n}\n\n.custom-button {\n  width: 100px;\n  text-transform: capitalize;\n}\n\n.button-margin-left {\n  margin-left: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}      0)\">                                        {{ \\'toolbar.filters\\' | translate }}            {{ numberOfActiveFilters }}                      {{ \\'toolbar.search\\' | translate }}                                                                              0; else noTreks\">                                                                                               treksByStep\">                        = treksByStep\"            [translateParams]=\"{ nb: treksByStep}\">            treks.showAllLabel                                treks.showAllLabel                                    {{ \\'treks.hideAllLabel\\' | translate }}                       0;\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">                                               0\">                                                    Les filtres sélectionnés ne correspondent pas à votre randonnée enregistrée.                             1\">                Les filtres sélectionnés ne correspondent à aucune de vos {{ nbOfflineTreks }} randonnées enregistrées.                                                                                      Afficher toutes les randonnées enregistrées                                                                                        Ici, vous retrouverez vos randonnées disponibles hors ligne                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksPageModule.html":{"url":"modules/TreksPageModule.html","title":"module - TreksPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\ncluster_TreksPageModule_imports\n\n\n\n\nTreksPage\n\nTreksPage\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks/treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { RouterModule } from '@angular/router';\nimport { TreksPage } from './treks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedTreksModule,\n    SharedUiModule,\n    RouterModule.forChild([]),\n    TranslateModule.forChild(),\n  ],\n  declarations: [TreksPage],\n})\nexport class TreksPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksService.html":{"url":"interfaces/TreksService.html","title":"interface - TreksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filteredTreks$\n                                \n                                \n                                        offline\n                                \n                                \n                                        treks$\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCommonImgSrc\n                                \n                                \n                                    getMapConfigForTrekById\n                                \n                                \n                                    getPoisForTrekById\n                                \n                                \n                                    getTouristicContentsForTrekById\n                                \n                                \n                                    getTouristicEventsForTrekById\n                                \n                                \n                                    getTrekById\n                                \n                                \n                                    getTrekDetailsUrl\n                                \n                                \n                                    getTrekImageSrc\n                                \n                                \n                                    getTrekMapUrl\n                                \n                                \n                                    getTreksMapUrl\n                                \n                                \n                                    getTreksUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetMapConfigForTrekById(trek: Trek, isOffline: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isOffline\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoisForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicContentsForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicEventsForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekDetailsUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekMapUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredTreks$\n                                    \n                                \n                                \n                                    \n                                        filteredTreks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treks$\n                                    \n                                \n                                \n                                    \n                                        treks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnSubscribe.html":{"url":"classes/UnSubscribe.html","title":"class - UnSubscribe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnSubscribe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/abstract/unsubscribe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nexport class UnSubscribe implements OnInit, OnDestroy {\n  protected subscriptions$$: Subscription[];\n\n  constructor() {\n    this.subscriptions$$ = [];\n  }\n\n  ngOnInit() {\n    if (!!this.subscriptions$$) {\n      this.subscriptions$$ = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$$.forEach((subscription: Subscription) => unsubscribe(subscription));\n    this.subscriptions$$ = [];\n  }\n\n}\n\nexport function unsubscribe(subscription: Subscription) {\n  if (subscription && subscription.unsubscribe) {\n    subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            class\n            UnSubscribe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            function\n            unsubscribe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/animations.ts\n            \n            variable\n            expandCollapse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/collapsible-list/collapsible-list.component.ts\n            \n            component\n            CollapsibleListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/connect-error/connect-error.component.ts\n            \n            component\n            ConnectErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter-value/filter-value.component.ts\n            \n            component\n            FilterValueComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            component\n            GeolocateNotificationsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/information-desk-details/information-desk-details.component.ts\n            \n            component\n            InformationDeskDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            component\n            MapTrekVizComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            component\n            MapTreksVizComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/poi-details/poi-details.component.ts\n            \n            component\n            PoiDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/poi/poi.component.ts\n            \n            component\n            PoiComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/progress/progress.component.ts\n            \n            component\n            ProgressComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/trek-card/trek-card.component.ts\n            \n            component\n            TrekCardComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            ContainsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            DataSetting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            FilterValue\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrekProperties\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationDesk\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationIntro\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationItem\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            IntervalFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrekProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTreks\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Poi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Pois\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Property\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Settings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategorie\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategoryWithFeatures\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Trek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekContext\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekProperties\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/more/more-item/more-item.page.ts\n            \n            component\n            MoreItemPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/more/more.page.ts\n            \n            component\n            MorePage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/trek-details/trek-details.page.ts\n            \n            component\n            TrekDetailsPage\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/pages/trek-map/trek-map.page.ts\n            \n            component\n            TrekMapPage\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/pages/treks-map/treks-map.page.ts\n            \n            component\n            TreksMapPage\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/pages/treks/treks.page.ts\n            \n            component\n            TreksPage\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/resolvers/more-item.resolver.ts\n            \n            guard\n            MoreItemResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/more.resolver.ts\n            \n            guard\n            MoreResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/trek.resolver.ts\n            \n            guard\n            TrekContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/treks.resolver.ts\n            \n            guard\n            TreksContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            injectable\n            FilterTreksService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/geolocate/geolocate.service.ts\n            \n            injectable\n            GeolocateService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/more-informations/more-informations.service.ts\n            \n            injectable\n            MoreInformationsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            injectable\n            OfflineTreksService\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            injectable\n            OnlineTreksService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/search-treks/search-treks.service.ts\n            \n            injectable\n            SearchTreksService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.6\n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/background-geolocation : ^5.3.0\n        \n            @ionic-native/core : ^5.0.0\n        \n            @ionic-native/file : ^5.0.0\n        \n            @ionic-native/globalization : ^5.1.0\n        \n            @ionic-native/ionic-webview : ^5.0.0\n        \n            @ionic-native/local-notifications : ^5.3.0\n        \n            @ionic-native/network : ^5.3.0\n        \n            @ionic-native/screen-orientation : ^5.1.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.0.0\n        \n            @ionic-native/zip : ^5.0.0\n        \n            @ionic/angular : ^4.2.0\n        \n            @ionic/storage : ^2.2.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @turf/distance : ^6.0.1\n        \n            @turf/helpers : ^6.1.4\n        \n            @types/lodash.clonedeep : ^4.5.5\n        \n            @types/mapbox-gl : ^0.51.4\n        \n            cordova-android : 7.1.4\n        \n            cordova-ios : 4.5.5\n        \n            cordova-plugin-badge : ^0.8.8\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : 6.0.1\n        \n            cordova-plugin-globalization : 1.11.0\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^3.1.2\n        \n            cordova-plugin-local-notification : git+https://github.com/Steffaan/cordova-plugin-local-notifications.git\n        \n            cordova-plugin-mauron85-background-geolocation : 3.0.1\n        \n            cordova-plugin-network-information : 2.0.1\n        \n            cordova-plugin-screen-orientation : 3.0.1\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-plugin-zip : 3.1.0\n        \n            cordova-sqlite-storage : 3.0.0\n        \n            core-js : ^2.5.4\n        \n            es6-promise-plugin : 4.2.2\n        \n            lodash.clonedeep : ^4.5.0\n        \n            mapbox-gl : ^0.53.0-beta.1\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            unsubscribe   (src/.../unsubscribe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/components/abstract/unsubscribe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGeotrek Mobile\nINSTALLATION\nBefore proceeding, make sure the latest version of Node.js and npm are installed\nnpm install -g ionic\n\ngit clone git@github.com:GeotrekCE/Geotrek-mobile.git\n\ncd geotrek-mobile-refonte-ionic\n\nnpm installRUN THE APP IN THE BROWSER\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.ts' with your personal api url\nionic serveRUN THE APP ON DEVICE\niOS\nNeed iOS environment setup available only on macOS\nionic cordova run iosAndroid\nNeed Android environment setup available on Windows, macOS and Linux\nionic cordova run androidBUILD RELEASE APP\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.prod.ts' with your personal api url\niOS\nionic cordova build ios --prod --releaseAndroid\nionic cordova build android --prod --releaseCUSTOMIZATION OPTIONS\nYou can find below all available options. You can easily overwrite them to customize your app.\nconfig.xml\nApp id\nApp name\nGeotrek Startersrc/environments/environment.ts & environment.prod.ts\nYou can overwrite a lot of options inside these files:AppName (header of the app) , availableLanguage, api url, map options and more\nenvironment.prod.ts will be use for developmentenvironment.prod.ts will be use for release app\nsrc/assets/i18n\nYou can find all the internationalization ressources here (by default Fr and En)\nsrc/assets/map/icons/\nLocal icons to display on the map, like departure or parking icon\nsrc/assets/map/zone/zone.geojson\nGeosjon to display on the mapGenerally represents the limits of the geographical area of the application\nsrc/theme/variables.scss\nColors that will be usedThe most important point here is the primary color to customize your application\nicons and splashscreen\n\nThe source image for icons should ideally be at least 1024×1024px and located in resources/icon.png\n\nThe source image for splash screens should ideally be at least 2732×2732px and located in resources/splash.png. For best results, the splash screen's artwork should roughly fit within a square (1200×1200px) at the center of the image.\n\n\nThen you just have to run\nionic cordova resourcesOther resources\n\nAll others resources are provided by the api\nWe download a global package for offline mode when user downloads his first trek\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2019, Makina Corpus\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoreItemPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MorePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedTreksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nAppModule -->\n\nFilterValueComponent->AppModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nAppModule -->\n\nFiltersComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nAppModule -->\n\nSharedUiModule->AppModule\n\n\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nMorePage\n\nMorePage\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nTreksPage\n\nTreksPage\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    29 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        40 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneDeep   (src/.../offline-treks.service.ts)\n                        \n                        \n                            cloneDeep   (src/.../online-treks.service.ts)\n                        \n                        \n                            distance   (src/.../geolocate-notifications.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            expandCollapse   (src/.../animations.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-trek-viz.component.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-treks-viz.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/offline-treks/offline-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/online-treks/online-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: true,\n  availableLanguage: ['fr', 'en'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    iconSize: 0.8, // check your icon size, ideally it would be 48px*48px\n    globalMapIconSize: 0.5,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': '#8e44ad',\n      'circle-stroke-color': '#fff',\n      'circle-radius': 23,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': '#833569',\n        'fill-outline-color': '#898083',\n        'fill-opacity': 0.6,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': '#833569',\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: false,\n  availableLanguage: ['fr', 'en'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    iconSize: 0.8, // check your icon size, ideally it would be 48px*48px\n    globalMapIconSize: 0.5,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': '#8e44ad',\n      'circle-stroke-color': '#fff',\n      'circle-radius': 23,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': '#833569',\n        'fill-outline-color': '#898083',\n        'fill-opacity': 0.6,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': '#833569',\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            expandCollapse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : trigger('expandCollapse', [\n    transition(':enter', [\n      style({ transform: 'scaleY(0)' }),\n      animate('250ms ease-out', style({ transform: 'scaleY(1)' }))\n    ]),\n    transition(':leave', [\n      style({ transform: 'scaleY(1)' }),\n      animate('250ms ease-in', style({ transform: 'scaleY(0)' }))\n    ])\n  ])\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
