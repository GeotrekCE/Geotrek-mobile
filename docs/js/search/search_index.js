var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.555,1,1.228]],["body/components/AppComponent.html",[0,0.903,1,2.133,2,1.955,3,0.138,4,0.097,5,1.515,6,1.515,7,1.515,8,0.111,9,3.935,10,1.515,11,2.918,12,2.652,13,3.138,14,2.019,15,5.995,16,0.288,17,1.391,18,7.191,19,1.349,20,3.565,21,3.297,22,5.747,23,6.231,24,2.886,25,4.136,26,6.231,27,3.694,28,3.457,29,1.3,30,3.457,31,1.269,32,4.498,33,1.013,34,0.012,35,0.457,36,0.288,37,0.895,38,4.498,39,1.044,40,1.335,41,0.249,42,0.624,43,1.673,44,1.673,45,1.673,46,1.857,47,1.18,48,3.114,49,3.565,50,3.935,51,3.565,52,3.935,53,2.465,54,2.162,55,2.254,56,3.935,57,2.465,58,0.138,59,0.581,60,2.333,61,4.498,62,4.498,63,7.489,64,2.354,65,2.254,66,2.465,67,4.498,68,4.382,69,4.498,70,4.498,71,4.498,72,3.935,73,3.935,74,0.501,75,4.087,76,2.883,77,3.565,78,4.498,79,4.498,80,1.673,81,4.498,82,2.465,83,4.498,84,4.751,85,3.935,86,3.935,87,4.498,88,4.498,89,4.498,90,0.372,91,2.019,92,2.019,93,1.515,94,2.422,95,1.515,96,1.515,97,1.335,98,1.515,99,1.515,100,1.335,101,1.515,102,1.515,103,1.335,104,1.515,105,1.335,106,1.515,107,1.335,108,0.52,109,1.515,110,1.335,111,1.515,112,1.515,113,1.335,114,1.467,115,1.421,116,2.271,117,1.335,118,1.467,119,1.515,120,1.335,121,1.515,122,1.335,123,1.572,124,0.68,125,2.019,126,1.377,127,0.622,128,1.335,129,1.294,130,1.515,131,1.335,132,1.515,133,1.335,134,1.515,135,1.335,136,0.54,137,1.335,138,1.515,139,1.335,140,1.515,141,1.294,142,1.515,143,1.335,144,1.515,145,1.377,146,1.335,147,2.019,148,1.335,149,1.335,150,1.515,151,1.335,152,1.515,153,1.515,154,0.006,155,0.008,156,0.006]],["title/modules/AppModule.html",[157,1.267,158,3.025]],["body/modules/AppModule.html",[1,2.421,3,0.125,4,0.088,8,0.157,22,4.091,23,4.436,26,4.436,34,0.012,41,0.268,42,0.564,43,2.081,44,1.512,47,1.066,48,3.769,49,3.222,50,3.557,51,3.222,52,3.557,56,3.557,58,0.172,59,0.526,90,0.336,103,2.218,105,2.315,107,2.218,113,2.315,115,1.768,117,2.315,135,2.315,137,2.315,139,2.315,149,2.315,154,0.006,155,0.008,156,0.006,157,1.245,158,6.319,159,1.678,160,1.807,161,3.078,162,3.078,163,2.845,164,1.807,165,3.557,166,3.557,167,3.557,168,3.557,169,3.557,170,5.097,171,3.594,172,4.791,173,2.396,174,1.878,175,1.807,176,3.222,177,5.598,178,2.585,179,5.598,180,4.679,181,5.598,182,2.128,183,2.585,184,5.598,185,4.897,186,2.772,187,5.598,188,4.065,189,5.598,190,1.414,191,3.816,192,3.557,193,3.557,194,3.816,195,3.557,196,2.772,197,2.338,198,2.338,199,2.037,200,5.598,201,2.128,202,5.598,203,4.065,204,3.557,205,3.816,206,3.587,207,3.222,208,3.587,209,3.222,210,4.091,211,2.972,212,3.222,213,4.065,214,4.897,215,3.557,216,4.065,217,4.897,218,3.222,219,3.557,220,4.897,221,3.222,222,3.557,223,4.897,224,4.065,225,4.065,226,3.222,227,4.897,228,3.557,229,4.065,230,4.091,231,3.557,232,3.816,233,2.605,234,2.772,235,4.065,236,4.065,237,4.065,238,3.557,239,4.065,240,3.557,241,2.972,242,4.897,243,3.557,244,2.972,245,3.557,246,4.065,247,4.065,248,3.222,249,4.065,250,4.065,251,3.222,252,4.065,253,4.065,254,3.222,255,4.065,256,3.222,257,3.557,258,1.564,259,1.74,260,4.065,261,4.065,262,4.065,263,4.065,264,3.557,265,4.065,266,4.065,267,2.31,268,4.065,269,6.402,270,4.065,271,3.222,272,4.065,273,4.065,274,5.598,275,4.065]],["title/modules/AppRoutingModule.html",[157,1.267,170,2.822]],["body/modules/AppRoutingModule.html",[3,0.19,4,0.133,8,0.152,12,2.24,34,0.012,41,0.225,42,0.857,58,0.19,59,0.798,154,0.009,155,0.01,156,0.009,159,2.548,164,2.743,170,4.989,178,2.851,183,3.38,190,2.148,267,2.548,276,6.173,277,6.173,278,3.83,279,4.083,280,1.57,281,4.886,282,5.401,283,5.401,284,4.892,285,6.824,286,6.173,287,6.173,288,7.318,289,5.349,290,7.318,291,6.173,292,6.173,293,1.228,294,1.082,295,6.173,296,6.173,297,6.173]],["title/injectables/CacheService.html",[298,1.394,299,2.822]],["body/injectables/CacheService.html",[3,0.134,4,0.094,8,0.107,13,2.284,16,0.28,17,1.363,19,1.322,31,1.679,33,1.669,34,0.012,35,0.45,36,0.525,37,1.321,39,1.363,41,0.218,42,0.606,58,0.134,59,0.564,60,2.41,74,0.825,80,2.184,82,3.219,154,0.006,155,0.008,156,0.006,180,5.192,182,2.284,258,2.555,259,2.842,280,1.11,298,1.978,299,4.005,300,2.391,301,3.818,302,0.654,303,5.629,304,2.302,305,7.933,306,6.64,307,6.64,308,7.414,309,5.874,310,3.459,311,5.874,312,4.854,313,5.874,314,1.077,315,4.527,316,4.364,317,5.14,318,0.953,319,1.694,320,5.874,321,7.104,322,1.327,323,4.364,324,2.644,325,3.219,326,2.27,327,4.364,328,1.03,329,5.874,330,4.364,331,4.655,332,6.215,333,4.655,334,4.364,335,4.751,336,4.364,337,2.797,338,1.623,339,2.797,340,4.364,341,5.874,342,4.364,343,4.527,344,2.391,345,2.391,346,5.874,347,4.364,348,4.364,349,4.364,350,5.81,351,4.364,352,4.364,353,4.364,354,4.364,355,6.64,356,5.874,357,6.64,358,7.104,359,5.874,360,5.874,361,4.364,362,3.459,363,4.364,364,4.364,365,4.364,366,4.364,367,1.11,368,4.364,369,4.364,370,6.64,371,4.364,372,4.364,373,3.818,374,6.64,375,5.874,376,4.364,377,4.364,378,6.64,379,3.818,380,4.364,381,4.364,382,4.364,383,3.459,384,4.364,385,4.364,386,1.11,387,4.364,388,4.364,389,4.364,390,4.364,391,4.364,392,2.797,393,2.797,394,3.818,395,4.364,396,4.364]],["title/components/CollapsibleListComponent.html",[0,0.555,97,1.228]],["body/components/CollapsibleListComponent.html",[0,0.878,1,1.262,2,1.883,3,0.131,4,0.092,5,1.432,6,1.432,7,1.432,8,0.105,10,1.432,11,2.906,12,2.641,14,1.944,16,0.273,17,1.34,19,1.475,31,1.74,34,0.012,35,0.391,36,0.497,39,1.34,40,1.713,41,0.177,42,0.59,58,0.131,59,0.55,74,0.818,80,2.147,90,0.352,91,1.944,92,1.944,93,1.432,94,2.367,95,1.432,96,1.432,97,2.086,98,2.656,99,1.432,100,1.262,101,1.432,102,1.432,103,1.262,104,1.432,105,1.262,106,1.432,107,1.262,108,0.492,109,1.432,110,1.262,111,1.432,112,1.432,113,1.262,114,1.387,115,1.344,116,2.207,117,1.262,118,1.387,119,1.432,120,1.262,121,1.432,122,1.262,123,1.514,124,0.664,125,1.944,126,1.302,127,0.608,128,1.262,129,1.223,130,1.432,131,1.262,132,1.432,133,1.262,134,1.432,135,1.262,136,0.511,137,1.262,138,1.432,139,1.262,140,1.432,141,1.223,142,1.432,143,1.262,144,1.432,145,1.302,146,1.262,147,1.944,148,1.262,149,1.262,150,1.432,151,1.262,152,1.432,153,1.432,154,0.006,155,0.008,156,0.006,302,0.642,304,2.293,314,0.942,317,6.63,326,2.25,397,1.48,398,7.24,399,6.558,400,3.721,401,1.944,402,3.284,403,3.7,404,2.009,405,6.554,406,5.773,407,6.554,408,6.554,409,6.63,410,3.124,411,7.029,412,3.163,413,1.927,414,6.554,415,6.554,416,3.971,417,6.554,418,1.927,419,5.773,420,4.253,421,4.22,422,4.253,423,7.029,424,4.253,425,4.253,426,6.554,427,4.253,428,4.253,429,4.253,430,4.253,431,4.253,432,4.253,433,2.221,434,4.247,435,4.22,436,3.721,437,3.721,438,5.734,439,4.253,440,4.253,441,4.253,442,4.253,443,4.253,444,4.253,445,4.253]],["title/components/ConnectErrorComponent.html",[0,0.555,100,1.228]],["body/components/ConnectErrorComponent.html",[0,0.932,1,1.422,2,2.038,3,0.147,4,0.103,5,1.614,6,1.614,7,1.614,8,0.118,10,1.614,11,2.93,12,2.664,14,2.105,16,0.307,19,1.566,31,1.66,34,0.012,35,0.423,36,0.307,41,0.147,42,0.665,58,0.147,59,0.619,74,0.82,90,0.396,91,2.105,92,2.105,93,1.614,94,2.483,95,1.614,96,1.614,97,1.422,98,1.614,99,1.614,100,2.187,101,2.727,102,1.614,103,1.422,104,1.614,105,1.422,106,1.614,107,1.422,108,0.554,109,1.614,110,1.422,111,1.614,112,1.614,113,1.422,114,1.563,115,1.514,116,2.342,117,1.422,118,1.563,119,1.614,120,1.422,121,1.614,122,1.422,123,1.639,124,0.697,125,2.105,126,1.467,127,0.638,128,1.422,129,1.378,130,1.614,131,1.422,132,1.614,133,1.422,134,1.614,135,1.422,136,0.576,137,1.422,138,1.614,139,1.422,140,1.614,141,1.378,142,1.614,143,1.422,144,1.614,145,1.467,146,1.422,147,2.105,148,1.422,149,1.422,150,1.614,151,1.422,152,1.614,153,1.614,154,0.007,155,0.009,156,0.007,259,2.051,304,2.132,326,2.257,335,4.458,397,1.667,404,2.174,412,3.425,434,4.189,446,6.986,447,6.328,448,4.193,449,4.261,450,6.955,451,6.25,452,7.646,453,1.886,454,5.026,455,1.945,456,4.261,457,6.955,458,6.25,459,4.792,460,4.792,461,4.792,462,4.792,463,4.261,464,4.953,465,3.798,466,4.792]],["title/interfaces/ContainsFilter.html",[467,0.408,468,1.021]],["body/interfaces/ContainsFilter.html",[3,0.106,4,0.075,8,0.085,16,0.222,29,0.667,34,0.012,35,0.537,36,0.543,41,0.18,58,0.262,74,0.385,90,0.413,108,0.788,124,0.327,127,0.589,136,0.6,154,0.005,155,0.007,156,0.005,293,0.688,294,1.028,302,0.833,314,1.18,318,1.09,319,1.501,322,0.646,328,1.523,367,1.271,386,1.271,413,0.907,418,0.907,453,0.854,455,1.633,467,0.84,468,1.232,469,0.907,470,0.88,471,1.693,472,1.649,473,1.786,474,1.841,475,1.841,476,1.841,477,1.974,478,1.918,479,1.586,480,1.629,481,0.88,482,0.936,483,1.361,484,0.755,485,0.755,486,0.779,487,1.732,488,1.057,489,1.491,490,0.936,491,1.351,492,1.538,493,1.271,494,1.586,495,1.861,496,1.805,497,1.271,498,1.736,499,1.686,500,1.586,501,1.351,502,1.351,503,1.351,504,1.057,505,1.841,506,1.351,507,1.501,508,1.31,509,1.351,510,1.351,511,1.351,512,1.31,513,1.351,514,1.361,515,1.351,516,1.351,517,1.124,518,1.271,519,1.31,520,1.956,521,0.936,522,0.936,523,1.351,524,0.936,525,0.936,526,1.31,527,0.936,528,0.936,529,0.936,530,0.936,531,0.936,532,0.936,533,0.936,534,1.351,535,1.31,536,1.491,537,1.31,538,1.159,539,0.803,540,0.755,541,0.854,542,0.936,543,0.803,544,1.351,545,1.232,546,0.803,547,0.803,548,1.159,549,0.854,550,1.32,551,0.936,552,0.907,553,1.361,554,1.403,555,0.88,556,0.854,557,1.195,558,1.403,559,1.271,560,1.32,561,0.803,562,0.936,563,0.936,564,0.936,565,0.936,566,0.907,567,0.907,568,0.907,569,0.907,570,0.907,571,0.907,572,0.936,573,0.907,574,0.936,575,0.936,576,0.828,577,0.907,578,1.195,579,1.124,580,0.854,581,0.71,582,0.828]],["title/interfaces/DataSetting.html",[467,0.408,548,0.961]],["body/interfaces/DataSetting.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.55,36,0.542,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.834,314,1.181,318,1.092,319,1.502,322,0.648,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.635,467,0.84,468,0.855,469,0.909,470,0.882,471,1.679,472,1.649,473,1.54,474,1.588,475,1.588,476,1.588,477,1.975,478,1.92,479,1.588,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.734,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.588,495,1.862,496,1.806,497,1.273,498,1.738,499,1.687,500,1.588,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.99,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.787,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.362,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/interfaces/Filter.html",[108,0.479,467,0.408]],["body/interfaces/Filter.html",[3,0.105,4,0.073,8,0.084,16,0.218,29,0.656,34,0.012,35,0.548,36,0.547,41,0.179,58,0.262,74,0.379,90,0.408,108,0.783,124,0.322,127,0.586,136,0.593,154,0.005,155,0.007,156,0.005,293,0.677,294,1.019,302,0.83,314,1.181,318,1.078,319,1.494,322,0.636,328,1.522,367,1.256,386,1.256,413,1.671,418,1.671,453,0.84,455,1.621,467,0.838,468,0.84,469,0.893,470,0.866,471,1.673,472,1.645,473,1.524,474,1.571,475,1.571,476,1.571,477,1.968,478,1.909,479,1.571,480,1.619,481,0.866,482,0.921,483,1.348,484,0.743,485,0.743,486,0.766,487,1.721,488,1.045,489,1.478,490,0.921,491,1.335,492,1.524,493,1.256,494,1.571,495,1.851,496,1.795,497,1.256,498,1.723,499,1.678,500,1.571,501,1.335,502,1.335,503,1.335,504,1.045,505,1.83,506,1.335,507,1.494,508,1.295,509,1.335,510,1.335,511,1.335,512,1.295,513,1.335,514,1.348,515,1.335,516,1.335,517,1.111,518,1.256,519,1.295,520,1.95,521,0.921,522,0.921,523,1.335,524,0.921,525,0.921,526,1.295,527,0.921,528,0.921,529,0.921,530,0.921,531,0.921,532,0.921,533,0.921,534,1.335,535,1.671,536,1.721,537,1.774,538,1.479,539,0.79,540,0.743,541,0.84,542,0.921,543,0.79,544,1.335,545,1.218,546,0.79,547,0.79,548,1.146,549,0.84,550,1.308,551,0.921,552,0.893,553,1.348,554,1.39,555,0.866,556,0.84,557,1.182,558,1.39,559,1.256,560,1.308,561,0.79,562,0.921,563,0.921,564,0.921,565,0.921,566,0.893,567,0.893,568,0.893,569,0.893,570,0.893,571,0.893,572,0.921,573,0.893,574,0.921,575,0.921,576,0.815,577,0.893,578,1.182,579,1.111,580,0.84,581,0.699,582,0.815]],["title/components/FilterComponent.html",[0,0.555,103,1.228]],["body/components/FilterComponent.html",[0,0.907,1,1.346,2,1.966,3,0.139,4,0.098,5,1.528,6,1.528,7,1.528,8,0.112,10,1.528,11,2.919,12,2.654,14,2.031,16,0.291,17,1.399,19,1.524,31,1.668,33,1.021,34,0.012,35,0.459,36,0.505,37,0.903,39,1.399,40,2.009,41,0.208,42,0.63,58,0.139,59,0.587,80,1.687,90,0.375,91,2.031,92,2.031,93,1.528,94,2.43,95,1.528,96,1.528,97,1.346,98,1.528,99,1.528,100,1.346,101,1.528,102,1.528,103,2.141,104,1.528,105,1.346,106,1.528,107,1.346,108,0.946,109,1.528,110,1.346,111,1.528,112,1.528,113,1.346,114,1.48,115,1.433,116,2.28,117,1.346,118,1.48,119,1.528,120,1.346,121,1.528,122,1.346,123,1.581,124,0.682,125,2.031,126,1.389,127,0.625,128,1.346,129,1.305,130,1.528,131,1.346,132,1.528,133,1.346,134,1.528,135,1.346,136,0.545,137,1.346,138,1.528,139,1.346,140,1.528,141,1.305,142,1.528,143,1.346,144,1.528,145,1.389,146,1.346,147,2.031,148,1.346,149,1.346,150,1.528,151,1.346,152,1.528,153,1.528,154,0.006,155,0.008,156,0.006,259,1.942,267,1.873,302,0.671,304,2.316,314,0.808,325,3.304,326,2.299,335,4.34,397,1.579,401,2.031,402,3.393,404,2.098,409,5.924,410,3.206,412,3.304,434,3.71,435,4.407,436,3.97,437,3.97,438,3.97,456,4.111,463,4.111,507,1.39,538,1.399,543,1.743,581,1.39,583,3.97,584,6.771,585,6.029,586,6.771,587,5.924,588,6.029,589,4.537,590,4.537,591,4.537,592,4.537,593,4.537,594,4.537,595,1.433,596,4.537,597,4.537,598,6.029,599,4.537,600,3.316,601,3.97,602,6.029,603,4.537,604,4.111,605,4.537]],["title/injectables/FilterTreksService.html",[298,1.394,606,2.653]],["body/injectables/FilterTreksService.html",[3,0.114,4,0.08,8,0.091,13,1.944,16,0.238,17,1.22,19,0.836,29,1.013,30,3.188,31,1.684,33,1.771,34,0.012,35,0.533,36,0.51,37,1.565,39,1.801,41,0.223,42,0.515,57,2.035,58,0.114,59,0.48,60,2.46,74,0.413,76,2.381,80,2.466,82,3.634,108,0.979,123,0.974,124,0.627,154,0.005,155,0.007,156,0.005,258,3.174,267,1.533,280,1.687,298,1.77,300,2.035,302,0.585,304,2.083,319,1.566,322,1.47,324,2.25,328,1.42,338,1.381,344,2.035,345,2.035,367,0.945,433,1.429,468,1.793,477,1.843,480,0.889,486,1.493,488,1.684,507,1.361,535,0.974,536,0.945,539,1.801,540,1.147,541,1.843,549,1.915,561,0.862,595,1.173,600,2.715,606,3.368,607,6.366,608,5.149,609,2.533,610,6.099,611,8.439,612,5.256,613,5.256,614,5.256,615,5.256,616,5.256,617,6.099,618,3.715,619,3.715,620,3.715,621,3.715,622,5.256,623,3.715,624,5.256,625,3.715,626,5.256,627,3.715,628,5.256,629,3.715,630,5.256,631,3.25,632,5.256,633,3.715,634,5.256,635,3.25,636,3.715,637,5.255,638,3.715,639,3.715,640,2.944,641,2.944,642,2.533,643,2.944,644,5.256,645,3.715,646,4.598,647,3.715,648,3.715,649,5.256,650,3.715,651,3.715,652,3.715,653,3.715,654,5.256,655,3.715,656,5.256,657,5.256,658,3.715,659,3.715,660,3.715,661,3.715,662,5.256,663,3.715,664,5.336,665,3.715,666,3.715,667,3.715,668,2.715,669,6.099,670,5.256,671,3.25,672,3.715,673,2.25,674,3.715,675,3.715,676,3.715,677,3.25,678,3.715,679,3.715,680,3.715,681,3.715,682,2.533,683,3.715,684,3.715,685,3.715,686,3.715,687,3.25,688,3.715,689,3.715,690,3.715,691,3.715,692,3.25,693,3.715]],["title/interfaces/FilterValue.html",[467,0.408,538,0.961]],["body/interfaces/FilterValue.html",[3,0.104,4,0.073,8,0.083,16,0.218,29,0.655,34,0.012,35,0.548,36,0.544,37,1.402,41,0.178,58,0.262,74,0.378,90,0.407,108,0.736,124,0.321,127,0.585,136,0.592,154,0.005,155,0.007,156,0.005,293,0.675,294,1.017,302,0.829,314,1.181,318,1.076,319,1.493,322,0.634,328,1.527,367,1.253,386,1.253,413,0.89,418,0.89,453,0.838,455,1.619,467,0.838,468,0.838,469,0.89,470,0.864,471,1.672,472,1.645,473,1.521,474,1.569,475,1.569,476,1.569,477,1.967,478,1.907,479,1.569,480,1.617,481,0.864,482,0.918,483,1.346,484,0.741,485,0.741,486,0.764,487,1.719,488,1.043,489,1.475,490,0.918,491,1.333,492,1.521,493,1.253,494,1.569,495,1.849,496,1.793,497,1.253,498,1.721,499,1.677,500,1.569,501,1.333,502,1.333,503,1.333,504,1.043,505,1.828,506,1.333,507,1.558,508,1.292,509,1.333,510,1.333,511,1.333,512,1.292,513,1.333,514,1.346,515,1.333,516,1.333,517,1.109,518,1.253,519,1.292,520,1.949,521,0.918,522,0.918,523,1.333,524,0.918,525,0.918,526,1.292,527,0.918,528,0.918,529,0.918,530,0.918,531,0.918,532,0.918,533,0.918,534,1.333,535,1.292,536,1.793,537,1.292,538,1.346,539,0.788,540,0.741,541,0.838,542,0.918,543,1.477,544,1.828,545,1.667,546,0.788,547,0.788,548,1.144,549,0.838,550,1.306,551,0.918,552,0.89,553,1.346,554,1.388,555,0.864,556,0.838,557,1.179,558,1.388,559,1.253,560,1.306,561,0.788,562,0.918,563,0.918,564,0.918,565,0.918,566,0.89,567,0.89,568,0.89,569,0.89,570,0.89,571,0.89,572,0.918,573,0.89,574,0.918,575,0.918,576,0.812,577,0.89,578,1.179,579,1.109,580,0.838,581,0.697,582,0.812]],["title/components/FilterValueComponent.html",[0,0.555,107,1.228]],["body/components/FilterValueComponent.html",[0,0.92,1,1.385,2,2.004,3,0.144,4,0.101,5,1.572,6,1.572,7,1.572,8,0.115,10,1.572,11,2.925,12,2.659,14,2.069,16,0.299,17,1.426,19,1.546,31,1.648,33,1.051,34,0.012,35,0.465,36,0.468,37,0.929,39,1.426,40,1.823,41,0.189,42,0.648,58,0.144,59,0.603,90,0.386,91,2.069,92,2.069,93,1.572,94,2.457,95,1.572,96,1.572,97,1.385,98,1.572,99,1.572,100,1.385,101,1.572,102,1.572,103,1.385,104,1.572,105,1.385,106,1.572,107,2.165,108,0.931,109,1.572,110,1.385,111,1.572,112,1.572,113,1.385,114,1.522,115,1.475,116,2.313,117,1.385,118,1.522,119,1.572,120,1.385,121,1.572,122,1.385,123,1.611,124,0.69,125,2.069,126,1.429,127,0.632,128,1.385,129,1.343,130,1.572,131,1.385,132,1.572,133,1.385,134,1.572,135,1.385,136,0.561,137,1.385,138,1.572,139,1.385,140,1.572,141,1.343,142,1.572,143,1.385,144,1.572,145,1.429,146,1.385,147,2.069,148,1.385,149,1.385,150,1.572,151,1.385,152,1.572,153,1.572,154,0.006,155,0.008,156,0.006,251,6.289,259,1.998,304,2.035,314,0.823,326,2.517,335,4.401,397,1.624,401,2.069,402,3.442,404,2.137,410,3.243,412,3.366,434,3.763,456,4.189,463,4.189,538,1.807,543,1.083,581,1.409,587,6.008,595,1.475,601,4.084,694,6.942,695,4.084,696,6.867,697,6.144,698,6.144,699,6.144,700,4.668,701,4.668,702,4.668,703,6.144,704,6.867,705,4.668,706,2.685,707,4.668,708,6.144,709,3.7,710,3.7,711,3.7,712,2.339,713,3.7]],["title/components/FiltersComponent.html",[0,0.555,105,1.228]],["body/components/FiltersComponent.html",[0,0.771,1,0.994,2,1.592,3,0.103,4,0.072,5,1.129,6,1.129,7,1.129,8,0.082,10,1.129,11,2.848,12,2.589,14,1.644,16,0.313,17,1.133,19,1.099,21,3.101,24,3.004,27,3.155,28,3.041,29,1.296,30,3.232,31,1.73,33,1.296,34,0.012,35,0.455,36,0.485,37,1.145,39,1.757,40,2.36,41,0.236,42,0.465,47,0.879,53,1.836,54,1.611,55,2.885,57,1.836,58,0.103,59,0.433,60,1.995,74,0.543,80,2.141,82,2.675,90,0.277,91,1.644,92,2.363,93,1.129,94,2.13,95,1.129,96,1.129,97,0.994,98,1.129,99,1.129,100,0.994,101,1.129,102,1.129,103,0.994,104,1.129,105,1.877,106,1.129,107,0.994,108,0.92,109,1.129,110,0.994,111,1.129,112,1.129,113,0.994,114,1.093,115,1.059,116,1.939,117,0.994,118,1.093,119,1.129,120,0.994,121,1.129,122,0.994,123,1.28,124,0.685,125,1.644,126,1.026,127,0.548,128,0.994,129,0.964,130,1.129,131,0.994,132,1.129,133,0.994,134,1.129,135,0.994,136,0.402,137,0.994,138,1.129,139,0.994,140,1.129,141,0.964,142,1.129,143,0.994,144,1.129,145,1.026,146,0.994,147,1.644,148,0.994,149,0.994,150,1.129,151,0.994,152,1.129,153,1.129,154,0.005,155,0.007,156,0.005,258,1.289,259,2.089,280,1.71,284,2.656,302,0.543,304,2.384,314,0.847,322,1.182,326,2.058,328,1.109,338,1.246,397,1.166,401,1.644,402,2.885,404,1.698,410,3.219,433,1.289,471,1.033,486,1.099,507,1.38,538,1.629,549,1.731,581,1.182,595,1.059,600,2.449,606,2.148,608,2.148,640,2.656,687,2.932,712,2.446,714,2.932,715,3.373,716,3.312,717,5.757,718,4.881,719,4.563,720,6.723,721,7.244,722,2.675,723,2.675,724,6.325,725,4.313,726,6.325,727,4.881,728,3.832,729,4.881,730,2.885,731,2.449,732,4.054,733,3.312,734,3.466,735,4.642,736,4.881,737,3.568,738,3.351,739,3.351,740,3.351,741,4.881,742,3.351,743,4.881,744,3.351,745,3.351,746,4.881,747,3.351,748,3.312,749,1.927,750,1.927,751,3.351,752,3.351,753,3.351,754,3.351,755,3.69,756,3.351,757,1.489,758,1.927,759,2.148,760,2.656,761,2.03,762,2.656,763,1.927,764,1.754,765,1.927,766,2.285,767,5.757,768,2.932,769,3.351,770,3.351,771,2.148,772,3.351,773,3.351,774,1.927,775,2.656,776,2.932,777,3.351,778,4.881,779,3.351,780,3.351,781,4.881,782,3.351,783,3.351,784,4.881,785,3.351,786,3.351,787,3.351,788,2.932,789,3.351,790,3.351,791,2.932,792,3.351,793,4.881,794,3.351,795,3.351,796,3.351,797,2.932,798,2.449,799,3.351,800,4.881,801,4.27,802,4.881,803,4.881,804,4.881,805,4.881,806,4.881,807,4.881,808,2.449]],["title/components/GeolocateNotificationsComponent.html",[0,0.555,110,1.228]],["body/components/GeolocateNotificationsComponent.html",[0,0.748,1,0.943,2,1.531,3,0.098,4,0.069,5,1.07,6,1.07,7,1.07,8,0.078,10,1.07,11,2.834,12,2.576,14,1.581,16,0.204,17,1.09,19,1.057,20,2.519,21,3.197,24,3.05,25,3.547,31,1.735,33,1.257,34,0.012,35,0.466,36,0.5,37,1.111,39,1.697,40,2.216,41,0.234,42,0.441,43,1.182,44,1.182,45,1.182,46,1.312,47,1.231,48,1.468,58,0.098,59,0.411,60,1.952,64,2.458,65,2.353,66,3.904,68,2.323,74,0.354,82,1.742,90,0.263,91,1.581,92,1.581,93,1.07,94,2.077,95,1.07,96,1.07,97,0.943,98,1.07,99,1.07,100,0.943,101,1.07,102,1.07,103,0.943,104,1.07,105,0.943,106,1.07,107,0.943,108,0.368,109,1.07,110,1.83,111,2.595,112,1.07,113,0.943,114,1.037,115,1.004,116,1.881,117,0.943,118,1.037,119,1.07,120,0.943,121,1.07,122,0.943,123,1.231,124,0.583,125,1.581,126,0.973,127,0.534,128,0.943,129,0.914,130,1.07,131,0.943,132,1.07,133,0.943,134,1.07,135,0.943,136,0.564,137,0.943,138,1.07,139,0.943,140,1.07,141,0.914,142,1.07,143,0.943,144,1.07,145,0.973,146,0.943,147,1.581,148,0.943,149,0.943,150,1.07,151,0.943,152,1.07,153,1.07,154,0.004,155,0.006,156,0.004,217,6.646,218,2.519,219,2.781,259,1.361,267,2.716,280,1.86,293,0.934,302,0.523,304,2.083,314,0.629,315,3.201,326,0.973,328,0.979,333,2.519,335,3.579,338,1.182,397,1.106,401,1.581,402,2.798,404,1.634,410,2.741,412,2.573,433,2.148,434,3.06,454,2.167,455,0.809,456,3.201,463,3.201,472,1.111,477,0.784,480,0.761,496,0.809,550,1.257,595,1.004,641,2.519,642,2.167,643,2.519,716,3.212,730,3.091,757,2.924,809,6.523,810,6.017,811,2.519,812,4.425,813,4.108,814,5.584,815,4.695,816,6.02,817,5.584,818,5.584,819,4.425,820,5.584,821,3.961,822,6.167,823,4.695,824,6.167,825,6.167,826,3.721,827,6.167,828,4.885,829,5.584,830,4.885,831,4.205,832,4.695,833,3.178,834,3.178,835,3.178,836,3.178,837,4.695,838,3.178,839,3.178,840,3.178,841,3.178,842,3.721,843,4.887,844,3.178,845,2.519,846,3.178,847,3.178,848,3.178,849,3.178,850,3.178,851,3.178,852,3.178,853,3.178,854,3.178,855,4.108,856,2.781,857,3.178,858,3.178,859,3.178,860,3.178,861,3.178,862,3.178,863,3.178,864,4.695,865,3.178,866,3.178,867,3.721,868,2.519,869,3.178,870,3.178,871,3.178,872,3.178,873,3.178,874,3.178,875,3.178,876,2.781,877,3.178,878,3.178,879,4.695,880,4.695,881,6.167,882,3.178,883,3.178,884,3.178,885,4.695,886,3.178,887,4.695,888,3.178,889,2.781,890,3.178,891,3.178,892,3.178,893,3.178,894,3.178,895,3.178,896,3.178,897,3.178,898,3.178,899,3.178,900,3.178,901,3.178,902,4.695,903,4.108,904,3.807,905,3.178,906,3.178,907,3.178,908,3.178,909,3.178,910,3.178,911,3.178,912,3.178,913,3.178,914,3.178,915,3.178,916,3.178,917,3.178,918,2.519,919,2.037,920,3.178,921,2.781,922,3.178,923,2.519,924,3.178,925,2.519,926,2.519,927,2.519,928,2.519,929,3.178,930,2.519,931,3.178,932,3.178,933,4.695,934,4.695]],["title/injectables/GeolocateService.html",[298,1.394,831,2.822]],["body/injectables/GeolocateService.html",[3,0.147,4,0.103,8,0.118,13,2.506,16,0.307,17,1.45,19,1.406,21,3.535,24,2.976,25,4.238,31,1.748,33,1.406,34,0.012,35,0.423,36,0.49,37,1.243,39,1.819,40,2.063,41,0.241,42,0.664,43,1.78,44,1.78,45,1.78,46,1.976,47,1.256,48,2.211,58,0.147,59,0.619,60,1.42,64,3.269,65,3.13,66,4.188,74,0.533,80,2.322,154,0.007,155,0.009,156,0.007,186,3.264,210,5.983,211,3.499,212,3.794,258,2.403,259,2.674,267,2.578,280,1.944,298,2.104,300,2.623,302,0.695,304,2.283,314,0.987,326,1.466,338,1.78,345,2.623,433,1.842,755,4.455,819,5.509,821,4.708,831,4.258,935,4.188,936,7.369,937,7.369,938,7.369,939,7.369,940,6.246,941,7.369,942,4.787,943,6.246,944,4.787,945,4.787,946,4.787,947,4.787,948,6.246,949,4.787,950,6.246,951,4.787,952,4.787,953,4.95,954,4.787,955,6.246,956,4.787,957,4.787,958,4.565,959,6.246,960,4.787,961,4.787,962,6.246,963,4.787,964,4.787,965,4.787,966,4.787,967,4.787,968,3.794,969,4.787,970,4.787,971,4.787,972,4.787,973,4.787,974,4.787,975,4.188,976,4.188,977,4.787,978,4.188,979,4.787,980,4.787,981,4.787,982,4.787,983,4.787,984,3.068,985,4.787,986,4.787,987,4.188,988,4.787,989,4.787,990,4.787,991,4.787]],["title/interfaces/HydratedTrek.html",[467,0.408,517,0.932]],["body/interfaces/HydratedTrek.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.537,36,0.546,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.873,314,1.18,318,1.092,319,1.502,322,0.648,325,2.742,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.635,467,0.84,468,0.855,469,0.909,470,0.882,471,1.694,472,1.626,473,1.54,474,1.588,475,1.588,476,1.588,477,1.99,478,1.92,479,1.588,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.734,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.588,495,2.002,496,1.806,497,1.273,498,1.738,499,1.687,500,1.588,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.321,518,1.635,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/interfaces/HydratedTrekProperties.html",[467,0.408,518,1.053]],["body/interfaces/HydratedTrekProperties.html",[3,0.093,4,0.065,8,0.074,16,0.193,29,0.581,34,0.012,35,0.537,36,0.555,37,1.432,41,0.166,58,0.259,74,0.335,90,0.373,108,0.695,124,0.285,127,0.557,136,0.542,154,0.004,155,0.006,156,0.004,293,0.599,294,0.948,302,0.801,314,1.181,318,0.985,319,1.437,322,0.563,328,1.525,367,1.148,386,1.148,413,0.79,418,0.79,453,0.743,455,1.528,467,0.829,468,0.743,469,0.79,470,0.766,471,1.632,472,1.618,473,1.771,474,1.826,475,1.826,476,1.826,477,1.923,478,1.836,479,1.463,480,1.54,481,0.766,482,0.815,483,1.256,484,0.658,485,0.658,486,0.678,487,1.637,488,0.955,489,1.376,490,0.815,491,1.22,492,1.771,493,1.637,494,1.826,495,1.771,496,1.718,497,1.148,498,1.893,499,1.688,500,1.826,501,1.74,502,1.74,503,1.74,504,1.362,505,1.947,506,1.74,507,1.511,508,1.687,509,1.74,510,1.74,511,1.74,512,1.687,513,1.74,514,1.493,515,1.74,516,1.74,517,1.016,518,1.376,519,1.687,520,2.079,521,1.625,522,1.625,523,1.74,524,1.625,525,1.625,526,1.184,527,0.815,528,0.815,529,0.815,530,0.815,531,0.815,532,0.815,533,0.815,534,1.22,535,1.184,536,1.376,537,1.184,538,1.047,539,0.699,540,0.658,541,0.743,542,0.815,543,0.699,544,1.22,545,1.113,546,0.699,547,0.699,548,1.047,549,0.743,550,1.218,551,0.815,552,0.79,553,1.256,554,1.295,555,0.766,556,0.743,557,1.08,558,1.295,559,1.148,560,1.218,561,0.699,562,0.815,563,0.815,564,0.815,565,0.815,566,0.79,567,0.79,568,0.79,569,0.79,570,0.79,571,0.79,572,0.815,573,0.79,574,0.815,575,0.815,576,0.721,577,0.79,578,1.08,579,1.016,580,0.743,581,0.618,582,0.721]],["title/interfaces/InformationDesk.html",[467,0.408,514,0.961]],["body/interfaces/InformationDesk.html",[3,0.101,4,0.071,8,0.08,16,0.21,29,0.631,34,0.012,35,0.545,36,0.551,41,0.175,58,0.261,74,0.364,90,0.397,108,0.723,124,0.309,127,0.576,136,0.576,154,0.005,155,0.007,156,0.005,293,0.651,294,0.996,302,0.821,314,1.183,318,1.047,319,1.476,322,0.611,328,1.526,367,1.22,386,1.22,413,0.858,418,0.858,453,0.807,455,1.591,467,0.836,468,0.807,469,0.858,470,0.832,471,1.66,472,1.637,473,1.489,474,1.536,475,1.536,476,1.536,477,1.954,478,1.886,479,1.536,480,1.593,481,0.832,482,0.885,483,1.318,484,0.714,485,0.714,486,0.736,487,1.694,488,1.015,489,1.444,490,0.885,491,1.297,492,1.489,493,1.22,494,1.536,495,1.825,496,1.77,497,1.22,498,1.691,499,1.745,500,1.536,501,1.297,502,1.297,503,1.297,504,1.015,505,1.994,506,1.297,507,1.476,508,1.258,509,1.297,510,1.297,511,1.297,512,1.258,513,1.297,514,1.451,515,1.297,516,1.297,517,1.08,518,1.22,519,1.258,520,1.971,521,0.885,522,0.885,523,1.297,524,0.885,525,0.885,526,1.746,527,1.691,528,1.691,529,1.691,530,1.691,531,1.691,532,1.691,533,1.691,534,1.801,535,1.258,536,1.444,537,1.258,538,1.113,539,0.759,540,0.714,541,0.807,542,0.885,543,0.759,544,1.297,545,1.183,546,0.759,547,0.759,548,1.113,549,0.807,550,1.278,551,0.885,552,0.858,553,1.318,554,1.359,555,0.832,556,0.807,557,1.148,558,1.359,559,1.22,560,1.278,561,0.759,562,0.885,563,0.885,564,0.885,565,0.885,566,0.858,567,0.858,568,0.858,569,0.858,570,0.858,571,0.858,572,0.885,573,0.858,574,0.885,575,0.885,576,0.783,577,0.858,578,1.148,579,1.08,580,0.807,581,0.671,582,0.783]],["title/components/InformationDeskDetailsComponent.html",[0,0.555,113,1.228]],["body/components/InformationDeskDetailsComponent.html",[0,0.886,1,1.285,2,1.906,3,0.133,4,0.093,5,1.459,6,1.459,7,1.459,8,0.106,10,1.459,11,2.91,12,2.645,14,1.969,16,0.278,17,1.357,19,0.975,24,2.502,31,1.676,33,0.975,34,0.012,35,0.448,36,0.474,37,0.862,39,1.357,40,1.963,41,0.218,42,0.601,45,1.611,46,1.788,47,1.136,58,0.133,59,0.56,74,0.65,90,0.358,91,1.969,92,1.969,93,1.459,94,2.385,95,1.459,96,1.459,97,1.285,98,1.459,99,1.459,100,1.285,101,1.459,102,1.459,103,1.285,104,1.459,105,1.285,106,1.459,107,1.285,108,0.501,109,1.459,110,1.285,111,1.459,112,1.459,113,2.101,114,2.583,115,2.725,116,2.228,117,1.285,118,1.413,119,1.459,120,1.285,121,1.459,122,1.285,123,1.533,124,0.669,125,1.969,126,1.326,127,0.613,128,1.285,129,1.246,130,1.459,131,1.285,132,1.459,133,1.285,134,1.459,135,1.285,136,0.52,137,1.285,138,1.459,139,1.285,140,1.459,141,1.246,142,1.459,143,1.285,144,1.459,145,1.326,146,1.285,147,1.969,148,1.285,149,1.285,150,1.459,151,1.285,152,1.459,153,1.459,154,0.006,155,0.008,156,0.006,244,5.866,302,0.65,304,2.062,314,0.58,326,1.789,397,1.507,404,2.034,514,1.768,526,1.533,595,1.369,725,4.829,728,4.291,731,3.166,732,4.739,735,5.199,737,5.177,798,3.166,992,7.022,993,3.433,994,5.114,995,5.788,996,5.114,997,5.243,998,6.615,999,5.845,1000,4.332,1001,3.79,1002,3.746,1003,4.332,1004,4.332,1005,5.114,1006,2.954,1007,5.845,1008,4.332,1009,4.332,1010,4.332,1011,4.332,1012,5.845,1013,5.845,1014,5.845,1015,5.845,1016,5.845]],["title/interfaces/InformationIntro.html",[467,0.408,546,0.961]],["body/interfaces/InformationIntro.html",[3,0.107,4,0.075,8,0.086,16,0.223,29,0.672,34,0.012,35,0.538,36,0.54,41,0.181,58,0.262,74,0.388,90,0.415,108,0.745,124,0.329,127,0.591,136,0.603,154,0.005,155,0.007,156,0.005,293,0.693,294,1.032,302,0.835,314,1.181,318,1.096,319,1.505,322,0.651,328,1.526,367,1.278,386,1.278,413,0.914,418,0.914,453,0.86,455,1.865,467,0.84,468,0.86,469,0.914,470,0.887,471,1.681,472,1.65,473,1.544,474,1.592,475,1.592,476,1.592,477,1.976,478,1.923,479,1.592,480,1.634,481,0.887,482,0.943,483,1.366,484,0.761,485,0.761,486,0.785,487,1.737,488,1.063,489,1.498,490,0.943,491,1.358,492,1.544,493,1.278,494,1.592,495,1.866,496,1.809,497,1.278,498,1.742,499,1.689,500,1.592,501,1.358,502,1.358,503,1.358,504,1.063,505,1.847,506,1.358,507,1.505,508,1.317,509,1.358,510,1.358,511,1.358,512,1.317,513,1.358,514,1.366,515,1.358,516,1.358,517,1.13,518,1.278,519,1.317,520,1.959,521,0.943,522,0.943,523,1.358,524,0.943,525,0.943,526,1.317,527,0.943,528,0.943,529,0.943,530,0.943,531,0.943,532,0.943,533,0.943,534,1.358,535,1.317,536,1.498,537,1.317,538,1.166,539,0.809,540,0.761,541,0.86,542,0.943,543,0.809,544,1.358,545,1.239,546,1.166,547,0.809,548,1.166,549,0.86,550,1.325,551,0.943,552,0.914,553,1.366,554,1.409,555,0.887,556,0.86,557,1.202,558,1.409,559,1.278,560,1.325,561,0.809,562,0.943,563,0.943,564,0.943,565,0.943,566,0.914,567,0.914,568,0.914,569,0.914,570,0.914,571,0.914,572,0.943,573,0.914,574,0.943,575,0.943,576,0.834,577,0.914,578,1.202,579,1.13,580,0.86,581,0.715,582,0.834]],["title/interfaces/InformationItem.html",[467,0.408,547,0.961]],["body/interfaces/InformationItem.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.537,36,0.542,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.834,314,1.181,318,1.092,319,1.502,322,0.648,328,1.525,367,1.273,386,1.273,413,0.909,418,0.909,453,1.586,455,1.862,467,0.84,468,0.855,469,0.909,470,0.882,471,1.679,472,1.649,473,1.54,474,1.588,475,1.588,476,1.588,477,1.975,478,1.92,479,1.588,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.734,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.588,495,1.862,496,1.806,497,1.273,498,1.738,499,1.687,500,1.588,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,1.161,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/interfaces/IntervalFilter.html",[467,0.408,541,1.021]],["body/interfaces/IntervalFilter.html",[3,0.108,4,0.075,8,0.086,16,0.224,29,0.675,34,0.012,35,0.538,36,0.542,41,0.181,58,0.262,74,0.39,90,0.417,108,0.791,124,0.331,127,0.592,136,0.605,154,0.005,155,0.007,156,0.005,293,0.697,294,1.035,302,0.836,314,1.18,318,1.1,319,1.507,322,0.654,328,1.524,367,1.282,386,1.282,413,0.918,418,0.918,453,0.864,455,1.642,467,0.84,468,0.864,469,0.918,470,0.891,471,1.697,472,1.651,473,1.548,474,1.596,475,1.596,476,1.596,477,1.978,478,1.925,479,1.596,480,1.637,481,0.891,482,0.947,483,1.37,484,0.764,485,0.764,486,0.788,487,1.74,488,1.066,489,1.501,490,0.947,491,1.363,492,1.548,493,1.282,494,1.596,495,1.868,496,1.812,497,1.282,498,1.746,499,1.691,500,1.596,501,1.363,502,1.363,503,1.363,504,1.066,505,1.85,506,1.363,507,1.507,508,1.321,509,1.363,510,1.363,511,1.363,512,1.321,513,1.363,514,1.37,515,1.363,516,1.363,517,1.134,518,1.282,519,1.321,520,1.96,521,0.947,522,0.947,523,1.363,524,0.947,525,0.947,526,1.321,527,0.947,528,0.947,529,0.947,530,0.947,531,0.947,532,0.947,533,0.947,534,1.363,535,1.321,536,1.501,537,1.321,538,1.169,539,0.813,540,0.764,541,1.243,542,0.947,543,0.813,544,1.363,545,1.243,546,0.813,547,0.813,548,1.169,549,0.864,550,1.329,551,0.947,552,0.918,553,1.37,554,1.412,555,0.891,556,0.864,557,1.206,558,1.412,559,1.282,560,1.329,561,0.813,562,0.947,563,0.947,564,0.947,565,0.947,566,0.918,567,0.918,568,0.918,569,0.918,570,0.918,571,0.918,572,0.947,573,0.918,574,0.947,575,0.947,576,0.838,577,0.918,578,1.206,579,1.134,580,0.864,581,0.719,582,0.838]],["title/components/LayersVisibilityComponent.html",[0,0.555,117,1.228]],["body/components/LayersVisibilityComponent.html",[0,0.933,1,1.425,2,2.041,3,0.148,4,0.104,5,1.617,6,1.617,7,1.617,8,0.118,10,1.617,11,2.931,12,2.664,14,2.108,16,0.308,17,1.453,19,1.081,31,1.619,33,1.409,34,0.012,35,0.5,36,0.473,37,1.245,39,1.453,40,1.857,41,0.192,42,0.666,47,1.259,58,0.148,59,0.621,90,0.397,91,2.108,92,2.108,93,1.617,94,2.484,95,1.617,96,1.617,97,1.425,98,1.617,99,1.617,100,1.425,101,1.617,102,1.617,103,1.425,104,1.617,105,1.425,106,1.617,107,1.425,108,0.555,109,1.617,110,1.425,111,1.617,112,1.617,113,1.425,114,1.566,115,1.517,116,2.345,117,2.189,118,2.715,119,1.617,120,1.425,121,1.617,122,1.425,123,1.641,124,0.697,125,2.108,126,1.47,127,0.639,128,1.425,129,1.381,130,1.617,131,1.425,132,1.617,133,1.425,134,1.617,135,1.425,136,0.577,137,1.425,138,1.617,139,1.425,140,1.617,141,1.381,142,1.617,143,1.425,144,1.617,145,1.47,146,1.425,147,2.108,148,1.425,149,1.425,150,1.617,151,1.425,152,1.617,153,1.617,154,0.007,155,0.009,156,0.007,248,6.217,302,0.696,304,1.942,397,1.671,404,2.177,682,3.274,706,2.762,709,3.806,710,3.806,711,3.806,712,2.407,713,3.806,728,4.469,735,5.027,1017,6.863,1018,4.201,1019,6.258,1020,6.962,1021,6.258,1022,6.962,1023,6.258,1024,4.201,1025,6.258,1026,4.802,1027,6.258,1028,4.802,1029,4.802,1030,4.802,1031,4.802,1032,4.802,1033,4.802,1034,4.802,1035,4.201,1036,6.258]],["title/components/LoaderComponent.html",[0,0.555,120,1.228]],["body/components/LoaderComponent.html",[0,0.906,1,1.342,2,1.963,3,0.139,4,0.098,5,1.524,6,1.524,7,1.524,8,0.111,10,1.524,11,2.919,12,2.653,14,2.027,16,0.386,17,1.397,19,1.018,31,1.667,33,1.018,34,0.012,35,0.458,36,0.481,37,0.9,39,1.05,40,1.785,41,0.222,42,0.628,58,0.139,59,0.585,60,2.006,74,0.67,90,0.374,91,2.027,92,2.027,93,1.524,94,2.427,95,1.524,96,1.524,97,1.342,98,1.524,99,1.524,100,1.342,101,1.524,102,1.524,103,1.342,104,1.524,105,1.342,106,1.524,107,1.342,108,0.523,109,1.524,110,1.342,111,1.524,112,1.524,113,1.342,114,1.475,115,1.429,116,2.277,117,1.342,118,1.475,119,1.524,120,2.138,121,1.524,122,1.342,123,1.578,124,0.681,125,2.027,126,1.385,127,0.624,128,1.342,129,1.301,130,1.524,131,1.342,132,1.524,133,1.342,134,1.524,135,1.342,136,0.543,137,1.342,138,1.524,139,1.342,140,1.524,141,1.301,142,1.524,143,1.342,144,1.524,145,1.385,146,1.342,147,2.027,148,1.342,149,1.342,150,1.524,151,1.342,152,1.524,153,1.524,154,0.006,155,0.008,156,0.006,196,3.085,205,4.914,302,0.67,304,2.196,322,1.347,326,1.842,338,1.682,344,2.479,383,4.769,397,1.574,401,2.027,404,2.094,412,3.297,416,2.741,434,3.705,453,1.116,507,1.479,543,1.05,604,3.085,712,3.016,716,3.889,730,3.612,757,3.005,808,4.399,958,3.307,984,2.899,1006,3.085,1037,3.958,1038,6.762,1039,6.018,1040,7.716,1041,4.366,1042,6.762,1043,6.762,1044,3.085,1045,4.316,1046,6.018,1047,4.524,1048,5.916,1049,4.524,1050,4.524,1051,4.524,1052,4.524,1053,3.958,1054,4.524,1055,4.524,1056,4.524,1057,6.018,1058,4.524,1059,4.524,1060,3.307,1061,2.741,1062,3.085,1063,4.524,1064,3.958,1065,4.103,1066,3.307,1067,3.307,1068,3.958,1069,3.585,1070,4.524,1071,4.524,1072,4.524,1073,3.958,1074,3.958]],["title/interceptors/LoadingInterceptor.html",[172,2.653,1075,3.621]],["body/interceptors/LoadingInterceptor.html",[3,0.16,4,0.112,8,0.128,13,2.723,16,0.333,17,1.529,19,1.483,31,1.395,33,1.483,34,0.012,35,0.446,36,0.422,37,1.311,39,1.207,40,1.955,41,0.234,42,0.722,58,0.203,59,0.852,60,1.543,80,2.45,123,1.364,154,0.007,155,0.009,156,0.007,172,4.222,182,2.723,258,2.924,259,2.82,280,1.934,298,2.435,304,1.451,314,1.073,319,1.56,337,3.333,338,1.934,339,3.333,343,3.546,344,2.85,345,2.85,392,3.333,393,3.333,401,1.752,403,3.333,472,1.311,507,1.067,673,3.151,706,2.992,755,4.222,958,3.802,1041,4.381,1044,3.546,1045,4.372,1076,5.201,1077,4.122,1078,6.588,1079,5.201,1080,5.764,1081,6.65,1082,6.024,1083,6.65,1084,5.201,1085,5.201,1086,5.764,1087,5.764,1088,5.764,1089,4.551,1090,4.551,1091,4.551,1092,6.326,1093,4.551,1094,4.551,1095,4.551,1096,4.551,1097,4.551,1098,4.551,1099,4.551,1100,4.551,1101,4.551,1102,4.551,1103,5.764,1104,4.551,1105,5.764,1106,4.551,1107,4.551,1108,4.551,1109,5.764,1110,4.551,1111,4.551,1112,4.551,1113,4.551,1114,4.551,1115,4.551,1116,4.551,1117,4.551,1118,4.122,1119,4.551,1120,4.551,1121,5.764]],["title/injectables/LoadingService.html",[298,1.394,1045,2.381]],["body/injectables/LoadingService.html",[3,0.152,4,0.107,8,0.122,13,2.593,16,0.318,17,1.482,19,1.591,31,1.674,33,1.591,34,0.012,35,0.479,36,0.453,37,1.406,39,1.64,40,2.215,41,0.23,42,0.688,58,0.196,59,0.826,60,2.097,74,0.711,80,2.375,123,1.299,154,0.007,155,0.009,156,0.007,172,3.175,182,2.593,258,2.872,259,3.195,280,1.899,298,2.38,300,2.715,302,0.711,304,1.971,314,1.127,319,1.532,324,3.001,326,1.955,337,3.175,338,1.842,339,3.175,343,3.378,344,2.715,345,2.715,392,3.175,393,3.175,401,1.668,403,3.175,472,1.537,507,1.017,673,3.001,706,2.85,755,4.529,958,5.166,1041,3.869,1045,4.065,1077,3.926,1080,4.334,1081,5.587,1082,5.061,1083,5.587,1086,5.587,1087,5.587,1088,5.587,1089,5.587,1090,4.334,1091,6.183,1092,6.183,1093,4.334,1094,4.334,1095,4.334,1096,4.334,1097,4.334,1098,6.183,1099,4.334,1100,4.334,1101,4.334,1102,5.587,1103,5.587,1104,4.334,1105,5.587,1106,5.587,1107,4.334,1108,4.334,1109,5.587,1110,5.587,1111,4.334,1112,4.334,1113,4.334,1114,4.334,1115,4.334,1116,4.334,1117,4.334,1118,3.926,1119,4.334,1120,4.334,1121,5.587,1122,6.386,1123,5.587,1124,6.386,1125,4.954,1126,4.954,1127,4.954,1128,4.954]],["title/components/MapTreksVizComponent.html",[0,0.555,122,1.228]],["body/components/MapTreksVizComponent.html",[0,0.624,1,0.703,2,1.223,3,0.073,4,0.138,5,0.798,6,0.798,7,0.798,8,0.058,10,0.798,11,2.742,12,2.492,14,1.263,16,0.393,17,0.871,19,0.844,21,2.749,24,1.992,25,3.044,31,1.669,33,1.048,34,0.012,35,0.415,36,0.514,37,0.926,39,1.546,40,2.035,41,0.224,42,0.329,43,0.881,44,0.881,45,1.395,46,0.978,47,0.622,48,1.095,58,0.073,59,0.306,60,2.222,64,1.963,65,1.88,66,2.551,74,0.264,76,2.404,80,1.968,82,2.055,90,0.196,91,1.263,92,1.568,93,0.798,94,1.782,95,0.798,96,0.798,97,0.703,98,0.798,99,0.798,100,0.703,101,0.798,102,0.798,103,0.703,104,0.798,105,0.703,106,0.798,107,0.703,108,0.667,109,0.798,110,0.703,111,1.782,112,0.798,113,0.703,114,0.773,115,0.749,116,1.568,117,0.703,118,1.518,119,0.798,120,0.703,121,0.798,122,1.57,123,2.006,124,0.806,125,1.263,126,0.726,127,0.631,128,0.703,129,1.079,130,0.798,131,0.703,132,0.798,133,0.703,134,0.798,135,0.703,136,0.285,137,0.703,138,0.798,139,0.703,140,0.798,141,0.682,142,0.798,143,0.703,144,0.798,145,0.726,146,0.703,147,1.263,148,0.703,149,0.703,150,0.798,151,0.703,152,0.798,153,0.798,154,0.003,155,0.005,156,0.003,173,2.625,220,5.62,221,1.879,222,2.074,258,0.912,259,2.265,267,0.978,280,1.927,293,0.746,294,0.816,302,0.417,304,1.959,314,0.503,315,1.616,319,0.77,322,0.989,326,1.425,328,0.816,335,3.695,338,0.881,383,1.879,386,0.603,397,0.825,401,1.263,404,1.305,410,2.069,412,2.551,421,1.733,433,1.443,434,3.36,449,1.616,454,3.174,456,2.558,463,3.174,464,2.973,465,1.879,471,0.794,472,1.278,477,1.585,478,0.984,480,1.537,481,1.184,483,1.08,484,0.517,485,0.819,487,1.467,488,0.985,493,1.184,495,0.622,496,0.954,507,0.77,540,0.819,543,0.55,545,1.148,548,1.423,561,1.08,579,1.048,581,0.955,595,0.749,637,3.689,673,1.436,715,2.948,716,2.677,722,2.055,723,2.055,730,3.219,748,2.677,749,1.363,750,1.363,757,1.053,758,1.363,765,1.363,771,1.519,774,2.158,812,3.689,816,4.86,821,2.677,826,2.973,831,3.608,842,2.973,843,4.194,845,1.879,855,3.282,856,2.074,867,1.879,868,1.879,876,3.282,889,2.074,903,2.074,904,4.541,918,1.879,919,1.519,923,1.879,925,1.879,926,1.879,927,1.879,928,1.879,930,1.879,984,1.519,1048,3.282,1060,2.742,1061,2.273,1062,2.558,1065,2.558,1067,1.733,1082,2.973,1129,6.164,1130,5.685,1131,1.879,1132,3.751,1133,4.655,1134,3.751,1135,4.655,1136,6.132,1137,5.292,1138,5.292,1139,5.292,1140,3.751,1141,4.655,1142,3.689,1143,3.689,1144,2.074,1145,3.751,1146,2.371,1147,2.371,1148,2.371,1149,2.371,1150,2.371,1151,2.371,1152,2.371,1153,2.371,1154,2.371,1155,3.751,1156,3.751,1157,2.371,1158,2.371,1159,3.751,1160,2.371,1161,2.371,1162,4.655,1163,2.371,1164,2.371,1165,2.371,1166,3.751,1167,3.751,1168,2.371,1169,1.879,1170,2.074,1171,2.371,1172,3.751,1173,2.371,1174,2.371,1175,2.371,1176,2.371,1177,2.371,1178,2.371,1179,4.655,1180,3.751,1181,4.655,1182,6.661,1183,3.402,1184,2.371,1185,2.371,1186,2.371,1187,1.879,1188,2.973,1189,3.751,1190,1.519,1191,3.751,1192,3.751,1193,2.371,1194,2.371,1195,2.371,1196,2.371,1197,2.371,1198,2.973,1199,1.879,1200,2.371,1201,2.074,1202,2.074,1203,2.371,1204,2.371,1205,2.371,1206,2.371,1207,2.371,1208,2.371,1209,2.371,1210,2.371,1211,2.371,1212,2.371,1213,3.402,1214,2.371,1215,2.371,1216,2.371,1217,2.371,1218,3.751,1219,2.371,1220,3.751,1221,2.371,1222,2.371,1223,2.371,1224,2.371,1225,2.371,1226,2.371,1227,2.371,1228,2.371,1229,2.371,1230,2.371,1231,2.371,1232,2.371,1233,2.074,1234,4.655,1235,2.074,1236,4.63,1237,2.371,1238,2.371,1239,2.371,1240,6.132,1241,5.292,1242,2.371,1243,2.074,1244,2.371,1245,5.766,1246,6,1247,5.292,1248,4.072,1249,3.751,1250,2.371,1251,3.282,1252,2.074,1253,3.282,1254,2.074,1255,2.371,1256,2.074,1257,2.074,1258,3.282,1259,2.074,1260,2.074,1261,3.751,1262,2.371,1263,2.371,1264,2.371,1265,2.371,1266,2.371,1267,2.371,1268,2.074,1269,2.371,1270,3.751,1271,3.751,1272,3.751,1273,3.751,1274,2.371,1275,3.751,1276,3.751,1277,2.371,1278,2.074,1279,2.371,1280,2.371,1281,5.766,1282,2.371,1283,2.371,1284,2.371,1285,2.371,1286,2.371,1287,2.371,1288,2.371,1289,2.371,1290,2.371,1291,2.371,1292,3.751,1293,5.292,1294,3.751,1295,3.751,1296,2.371,1297,2.371,1298,2.371,1299,3.751,1300,2.074,1301,2.371,1302,2.371,1303,2.371,1304,2.371,1305,2.371,1306,2.371,1307,2.371,1308,2.371,1309,2.371,1310,2.371,1311,2.371,1312,2.371,1313,2.371,1314,2.371,1315,2.371,1316,2.371,1317,2.371,1318,2.074,1319,1.879,1320,2.074,1321,2.074,1322,1.879,1323,1.616,1324,3.282]],["title/interfaces/MinimalTrek.html",[467,0.408,488,0.876]],["body/interfaces/MinimalTrek.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.537,36,0.546,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.873,314,1.18,318,1.092,319,1.502,322,0.648,325,2.742,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.635,467,0.84,468,0.855,469,0.909,470,0.882,471,1.694,472,1.626,473,1.54,474,1.588,475,1.588,476,1.588,477,1.99,478,1.92,479,1.588,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.734,488,1.243,489,1.734,490,0.938,491,1.353,492,1.54,493,1.273,494,1.588,495,2.002,496,1.806,497,1.273,498,1.738,499,1.687,500,1.588,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/interfaces/MinimalTrekProperties.html",[467,0.408,489,1.053]],["body/interfaces/MinimalTrekProperties.html",[3,0.103,4,0.072,8,0.082,16,0.214,29,0.644,34,0.012,35,0.547,36,0.549,41,0.177,58,0.261,74,0.372,90,0.403,108,0.731,124,0.316,127,0.581,136,0.585,154,0.005,155,0.007,156,0.005,293,0.665,294,1.008,302,0.825,314,1.18,318,1.063,319,1.485,322,0.624,325,2.669,328,1.533,367,1.239,386,1.239,413,0.876,418,0.876,453,0.824,455,1.607,467,0.837,468,0.824,469,0.876,470,0.85,471,1.667,472,1.641,473,1.839,474,1.896,475,1.896,476,1.896,477,1.962,478,1.898,479,1.554,480,1.607,481,0.85,482,0.904,483,1.334,484,0.729,485,0.729,486,0.752,487,1.708,488,1.031,489,1.607,490,1.708,491,1.317,492,1.839,493,1.708,494,1.896,495,1.839,496,1.783,497,1.239,498,1.708,499,1.67,500,1.554,501,1.317,502,1.317,503,1.317,504,1.031,505,1.816,506,1.317,507,1.485,508,1.278,509,1.317,510,1.317,511,1.317,512,1.278,513,1.317,514,1.334,515,1.317,516,1.317,517,1.096,518,1.239,519,1.278,520,1.943,521,0.904,522,0.904,523,1.317,524,0.904,525,0.904,526,1.278,527,0.904,528,0.904,529,0.904,530,0.904,531,0.904,532,0.904,533,0.904,534,1.317,535,1.278,536,1.462,537,1.278,538,1.131,539,0.776,540,0.729,541,0.824,542,0.904,543,0.776,544,1.317,545,1.202,546,0.776,547,0.776,548,1.131,549,0.824,550,1.294,551,0.904,552,0.876,553,1.334,554,1.375,555,0.85,556,0.824,557,1.166,558,1.375,559,1.239,560,1.294,561,0.776,562,0.904,563,0.904,564,0.904,565,0.904,566,0.876,567,0.876,568,0.876,569,0.876,570,0.876,571,0.876,572,0.904,573,0.876,574,0.904,575,0.904,576,0.8,577,0.876,578,1.166,579,1.096,580,0.824,581,0.686,582,0.8]],["title/interfaces/MinimalTreks.html",[467,0.408,486,0.932]],["body/interfaces/MinimalTreks.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.55,36,0.545,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.834,314,1.181,318,1.092,319,1.502,322,0.648,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.635,467,0.84,468,0.855,469,0.909,470,0.882,471,1.679,472,1.626,473,1.54,474,1.588,475,1.588,476,1.588,477,1.975,478,1.92,479,1.588,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,1.126,487,1.906,488,1.36,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.588,495,1.862,496,1.806,497,1.273,498,1.738,499,1.687,500,1.588,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/injectables/MoreInformationsService.html",[298,1.394,1325,2.822]],["body/injectables/MoreInformationsService.html",[3,0.168,4,0.118,8,0.134,13,2.862,16,0.351,17,1.578,19,1.231,24,3.167,25,4.452,31,1.638,33,1.53,34,0.012,35,0.46,36,0.436,37,1.352,39,1.578,41,0.253,42,0.759,43,2.033,44,2.033,45,2.033,46,2.257,58,0.168,59,0.707,60,2.296,74,0.609,75,4.635,154,0.008,155,0.009,156,0.008,182,2.862,258,2.615,259,2.91,280,1.729,298,2.289,299,5.277,300,2.996,302,0.757,303,5.387,304,2.263,319,1.634,326,1.674,328,1.297,338,2.033,345,2.996,472,1.088,546,1.269,547,1.269,595,1.728,682,3.728,1002,4.357,1325,4.635,1326,6.964,1327,5.818,1328,4.784,1329,5.863,1330,6.798,1331,7.739,1332,5.468,1333,6.798,1334,6.798,1335,5.468,1336,5.468,1337,5.863,1338,4.784,1339,6.133,1340,5.387,1341,5.387,1342,5.387,1343,5.468,1344,5.468]],["title/components/MoreItemPage.html",[0,0.555,128,1.228]],["body/components/MoreItemPage.html",[0,0.893,1,1.305,2,1.925,3,0.135,4,0.095,5,1.481,6,1.481,7,1.481,8,0.108,10,1.481,11,2.913,12,2.648,14,1.988,16,0.282,17,1.37,19,1.329,31,1.704,33,0.99,34,0.012,35,0.451,36,0.457,37,0.875,39,1.654,40,2.114,41,0.219,42,0.61,58,0.135,59,0.568,60,1.752,74,0.489,90,0.364,91,1.988,92,1.988,93,1.481,94,2.4,95,1.481,96,1.481,97,1.305,98,1.481,99,1.481,100,1.305,101,1.481,102,1.481,103,1.305,104,1.481,105,1.305,106,1.481,107,1.305,108,0.509,109,1.481,110,1.305,111,1.481,112,1.481,113,1.305,114,1.434,115,1.389,116,2.245,117,1.305,118,1.434,119,1.481,120,1.305,121,1.481,122,1.305,123,1.548,124,0.674,125,1.988,126,1.346,127,0.617,128,2.114,129,2.286,130,1.481,131,1.305,132,1.481,133,1.305,134,1.481,135,1.305,136,0.528,137,1.305,138,1.481,139,1.305,140,1.481,141,1.265,142,1.481,143,1.305,144,1.481,145,1.346,146,1.305,147,1.988,148,1.305,149,1.305,150,1.481,151,1.305,152,1.481,153,1.481,154,0.006,155,0.008,156,0.006,190,1.53,267,1.815,280,1.118,293,1.175,302,0.657,326,1.346,328,1.035,397,1.53,401,1.988,402,3.34,404,2.054,410,3.474,433,2.564,471,1.25,504,1.25,547,1.654,595,1.389,715,3.679,716,3.834,722,3.235,723,3.235,730,3.34,748,3.834,749,2.529,750,2.529,757,1.954,758,2.529,761,2.664,765,2.529,766,2.998,774,2.529,1345,6.196,1346,5.715,1347,3.847,1348,6.503,1349,6.666,1350,5.904,1351,4.763,1352,6.666,1353,5.282,1354,5.647,1355,3.847,1356,5.208,1357,5.01,1358,5.904,1359,4.397,1360,4.397,1361,4.397,1362,4.397,1363,3.847,1364,4.397,1365,4.679,1366,4.397,1367,3.485,1368,5.904]],["title/modules/MoreItemPageModule.html",[157,1.267,1369,3.025]],["body/modules/MoreItemPageModule.html",[0,0.783,3,0.18,4,0.126,8,0.144,34,0.012,41,0.259,42,0.811,43,2.172,44,2.172,47,1.532,58,0.18,59,0.755,90,0.483,128,2.475,129,1.681,154,0.008,155,0.01,156,0.008,157,1.789,159,2.412,160,2.596,161,3.662,162,2.809,163,2.596,164,2.596,171,3.963,173,3.031,174,2.699,175,2.596,178,3.27,183,3.27,190,2.033,191,4.827,192,5.112,193,5.112,197,3.361,198,3.361,199,3.548,201,3.058,278,3.058,279,3.988,280,1.486,281,3.54,1345,4.63,1346,4.271,1348,5.112,1369,6.153,1370,5.112,1371,5.112,1372,5.843,1373,5.843,1374,3.706,1375,2.699,1376,5.843,1377,4.271,1378,4.271,1379,3.058,1380,3.745,1381,3.201]],["title/guards/MoreItemResolver.html",[191,2.822,1382,2.822]],["body/guards/MoreItemResolver.html",[3,0.169,4,0.119,8,0.135,16,0.353,17,1.585,19,1.537,21,3.527,31,1.445,33,1.537,34,0.012,35,0.462,36,0.438,37,1.358,39,1.278,41,0.261,42,0.764,45,2.048,46,2.273,47,1.444,48,2.543,58,0.169,59,0.712,60,2.202,64,2.882,65,2.76,129,1.964,154,0.008,155,0.009,156,0.008,182,2.882,190,1.916,191,4.655,232,5.618,233,3.529,234,3.754,258,2.855,280,1.401,298,2.299,337,3.529,338,2.539,339,3.529,343,3.754,344,3.017,392,3.529,393,3.529,401,1.855,504,1.166,547,1.278,595,1.74,1325,5.29,1327,4.025,1351,3.529,1353,4.364,1379,4.061,1383,3.754,1384,6.493,1385,4.818,1386,4.818,1387,5.507,1388,5.411,1389,5.671,1390,5.507,1391,5.411,1392,4.818,1393,4.818,1394,5.507,1395,5.507,1396,5.507,1397,4.025,1398,4.025,1399,4.025,1400,5.507,1401,4.364,1402,4.364]],["title/components/MorePage.html",[0,0.555,131,1.228]],["body/components/MorePage.html",[0,0.894,1,1.308,2,1.929,3,0.136,4,0.095,5,1.485,6,1.485,7,1.485,8,0.108,10,1.485,11,2.913,12,2.648,14,1.992,16,0.283,17,1.373,19,0.993,31,1.705,33,0.993,34,0.012,35,0.452,36,0.457,37,0.877,39,1.656,40,2.207,41,0.229,42,0.612,45,1.639,46,1.82,58,0.136,59,0.57,60,1.308,74,0.658,90,0.365,91,1.992,92,1.992,93,1.485,94,2.402,95,1.485,96,1.485,97,1.308,98,1.485,99,1.485,100,1.308,101,1.485,102,1.485,103,1.308,104,1.485,105,1.308,106,1.485,107,1.308,108,0.51,109,1.485,110,1.308,111,1.485,112,1.485,113,1.308,114,1.438,115,1.393,116,2.248,117,1.308,118,1.438,119,1.485,120,1.308,121,1.485,122,1.308,123,1.551,124,0.674,125,1.992,126,1.35,127,0.618,128,1.308,129,1.92,130,1.485,131,2.116,132,1.485,133,1.308,134,1.485,135,1.308,136,0.53,137,1.308,138,1.485,139,1.308,140,1.485,141,1.268,142,1.485,143,1.308,144,1.485,145,1.35,146,1.308,147,1.992,148,1.308,149,1.308,150,1.485,151,1.308,152,1.485,153,1.485,154,0.006,155,0.008,156,0.006,190,1.534,267,1.82,280,1.122,302,0.658,304,2.136,314,0.793,326,1.811,397,1.534,401,1.992,402,3.345,404,2.058,410,3.477,416,4.044,433,2.568,471,1.252,504,1.252,546,1.656,595,1.393,682,3.006,715,3.682,722,3.241,723,3.241,730,3.345,748,3.839,749,2.536,750,2.536,757,1.959,758,2.536,761,2.671,765,2.536,766,3.006,774,2.536,1351,4.768,1354,5.653,1355,3.858,1356,5.214,1357,5.014,1363,3.858,1365,4.688,1367,3.494,1403,3.858,1404,6.675,1405,5.915,1406,5.896,1407,6.675,1408,5.915,1409,4.409,1410,4.409,1411,5.175,1412,4.409,1413,4.409,1414,4.409,1415,4.409,1416,5.915]],["title/modules/MorePageModule.html",[157,1.267,1417,2.822]],["body/modules/MorePageModule.html",[0,0.787,3,0.181,4,0.127,8,0.144,34,0.012,41,0.259,42,0.815,43,2.183,44,2.183,47,1.54,58,0.181,59,0.759,90,0.485,131,2.478,154,0.008,155,0.01,156,0.008,157,1.798,159,2.424,160,2.609,161,3.67,162,2.823,163,2.609,164,2.609,171,3.968,173,3.04,174,2.712,175,2.609,178,3.28,183,3.28,190,2.043,194,4.842,195,5.137,197,3.377,198,3.377,199,3.559,201,3.074,278,3.074,279,3.996,280,1.494,281,3.557,416,3.557,1374,3.717,1375,2.712,1377,4.292,1378,4.292,1379,3.074,1380,3.763,1381,3.218,1417,5.744,1418,5.137,1419,5.137,1420,5.872,1421,5.872,1422,5.872]],["title/guards/MoreResolver.html",[194,2.822,1382,2.822]],["body/guards/MoreResolver.html",[3,0.174,4,0.122,8,0.139,16,0.363,19,1.563,21,3.548,31,1.198,33,1.274,34,0.012,35,0.383,36,0.363,37,1.126,41,0.262,42,0.785,45,2.104,46,2.336,47,1.484,48,2.614,58,0.174,59,0.732,60,2.229,64,2.962,65,2.836,129,1.997,154,0.008,155,0.01,156,0.008,182,2.962,190,1.969,194,4.734,232,5.651,233,3.627,234,3.859,258,2.671,298,2.339,302,0.63,337,3.627,339,3.627,343,4.734,344,3.101,392,3.627,393,3.627,401,1.906,504,1.198,546,1.314,595,1.788,1325,5.341,1327,4.137,1351,3.627,1379,4.1,1383,3.859,1386,4.951,1389,5.076,1391,5.503,1392,4.951,1393,4.951,1397,4.137,1398,4.137,1399,4.137,1401,4.485,1402,4.485,1423,4.951,1424,5.659,1425,5.659,1426,5.659,1427,5.659]],["title/injectables/OnlineTreksService.html",[28,1.99,298,1.394]],["body/injectables/OnlineTreksService.html",[3,0.103,4,0.072,8,0.082,13,1.748,16,0.214,17,1.13,19,1.096,24,2.459,25,3.632,28,2.34,31,1.753,33,1.73,34,0.012,35,0.52,36,0.499,37,1.529,39,1.86,40,0.991,41,0.233,42,0.463,43,1.242,44,1.242,45,1.242,46,1.378,54,3.997,55,1.673,58,0.103,59,0.432,60,2.28,74,0.703,75,4.577,123,0.876,124,0.543,127,0.674,154,0.005,155,0.007,156,0.005,173,1.429,180,4.616,182,1.748,258,3.106,259,3.237,280,1.886,293,0.664,294,1.007,298,1.64,299,4.305,300,1.83,302,0.542,303,4.553,304,2.425,310,2.646,312,3.559,314,1.055,319,1.631,324,2.023,326,1.933,328,1.475,338,1.242,345,1.83,401,1.125,433,1.873,449,2.277,483,1.466,484,0.729,485,0.729,486,0.752,488,1.216,499,1.73,519,0.876,550,0.752,553,0.775,558,0.799,560,1.096,561,1.334,566,1.656,567,1.277,568,1.277,569,1.656,570,1.277,571,1.277,573,1.656,579,1.421,595,1.055,606,4.047,608,2.14,609,2.277,631,2.921,635,2.921,673,3.826,755,2.14,759,2.14,762,2.646,808,4.616,867,2.646,953,5.004,1002,4.047,1183,2.441,1198,2.646,1199,2.646,1213,2.441,1318,2.921,1323,2.277,1329,4.553,1337,5.554,1338,2.921,1339,6.09,1340,5.32,1341,5.32,1342,5.32,1428,6.589,1429,5.746,1430,4.259,1431,4.868,1432,4.259,1433,4.259,1434,4.259,1435,4.259,1436,4.259,1437,4.259,1438,4.259,1439,6.315,1440,6.315,1441,5.027,1442,4.868,1443,3.339,1444,3.339,1445,4.868,1446,3.339,1447,5.877,1448,4.868,1449,3.339,1450,4.868,1451,3.339,1452,4.868,1453,3.339,1454,4.868,1455,3.339,1456,3.339,1457,3.339,1458,3.339,1459,3.339,1460,3.339,1461,3.339,1462,3.339,1463,3.339,1464,3.339,1465,2.921,1466,3.339,1467,3.339,1468,3.339,1469,3.339,1470,3.339,1471,3.339,1472,3.339,1473,3.339,1474,3.339,1475,3.339,1476,3.339,1477,2.646,1478,3.339,1479,3.339,1480,3.339,1481,3.339,1482,3.339,1483,3.339,1484,3.339,1485,3.339,1486,3.339,1487,3.339,1488,3.339,1489,3.339,1490,3.339,1491,3.339,1492,3.339,1493,2.921,1494,2.921,1495,3.339]],["title/interfaces/Picture.html",[467,0.408,499,0.932]],["body/interfaces/Picture.html",[3,0.106,4,0.074,8,0.085,16,0.221,29,0.665,34,0.012,35,0.537,36,0.542,41,0.18,58,0.262,74,0.384,90,0.562,108,0.742,124,0.326,127,0.589,136,0.599,154,0.005,155,0.007,156,0.005,293,0.686,294,1.026,302,0.833,314,1.182,318,1.485,319,1.5,322,0.645,328,1.523,367,1.268,386,1.268,413,0.905,418,0.905,453,0.851,455,1.859,467,0.839,468,0.851,469,0.905,470,0.877,471,1.677,472,1.624,473,1.535,474,1.583,475,1.583,476,1.583,477,1.973,478,1.917,479,1.583,480,1.627,481,0.877,482,0.933,483,1.358,484,0.753,485,0.753,486,0.776,487,1.73,488,1.055,489,1.489,490,0.933,491,1.839,492,1.535,493,1.268,494,1.583,495,1.859,496,1.803,497,1.268,498,1.734,499,1.716,500,1.583,501,1.348,502,1.348,503,1.348,504,1.055,505,1.839,506,1.348,507,1.5,508,1.307,509,1.348,510,1.348,511,1.348,512,1.307,513,1.348,514,1.358,515,1.348,516,1.348,517,1.122,518,1.268,519,1.307,520,1.955,521,0.933,522,0.933,523,1.348,524,0.933,525,0.933,526,1.307,527,0.933,528,0.933,529,0.933,530,0.933,531,0.933,532,0.933,533,0.933,534,1.348,535,1.307,536,1.489,537,1.307,538,1.157,539,0.801,540,0.753,541,0.851,542,0.933,543,0.801,544,1.348,545,1.23,546,0.801,547,0.801,548,1.157,549,0.851,550,1.318,551,0.933,552,0.905,553,1.358,554,1.401,555,0.877,556,0.851,557,1.193,558,1.401,559,1.268,560,1.318,561,0.801,562,0.933,563,0.933,564,0.933,565,0.933,566,0.905,567,0.905,568,0.905,569,0.905,570,0.905,571,0.905,572,0.933,573,0.905,574,0.933,575,0.933,576,0.825,577,0.905,578,1.193,579,1.122,580,0.851,581,0.708,582,0.825]],["title/interfaces/Poi.html",[136,0.497,467,0.408]],["body/interfaces/Poi.html",[3,0.106,4,0.075,8,0.085,16,0.222,29,0.668,34,0.012,35,0.537,36,0.548,41,0.18,58,0.262,74,0.385,90,0.413,108,0.743,124,0.327,127,0.59,136,0.705,154,0.005,155,0.007,156,0.005,293,0.689,294,1.028,302,0.873,314,1.18,318,1.091,319,1.502,322,0.647,325,3.519,328,1.523,367,1.271,386,1.271,413,0.908,418,0.908,453,0.854,455,1.634,467,0.84,468,0.854,469,0.908,470,0.881,471,1.694,472,1.625,473,1.538,474,1.586,475,1.586,476,1.586,477,1.99,478,1.919,479,1.586,480,1.63,481,0.881,482,0.936,483,1.361,484,0.756,485,0.756,486,0.779,487,1.733,488,1.058,489,1.492,490,0.936,491,1.352,492,1.538,493,1.271,494,1.586,495,2.001,496,1.805,497,1.271,498,1.737,499,1.686,500,1.586,501,1.352,502,1.352,503,1.352,504,1.058,505,1.842,506,1.352,507,1.502,508,1.311,509,1.352,510,1.352,511,1.352,512,1.311,513,1.352,514,1.361,515,1.352,516,1.352,517,1.125,518,1.271,519,1.311,520,1.956,521,0.936,522,0.936,523,1.352,524,0.936,525,0.936,526,1.311,527,0.936,528,0.936,529,0.936,530,0.936,531,0.936,532,0.936,533,0.936,534,1.352,535,1.311,536,1.492,537,1.311,538,1.16,539,0.804,540,0.756,541,0.854,542,0.936,543,0.804,544,1.352,545,1.233,546,0.804,547,0.804,548,1.16,549,0.854,550,1.32,551,0.936,552,0.908,553,1.361,554,1.404,555,0.881,556,0.854,557,1.196,558,1.404,559,1.271,560,1.32,561,0.804,562,0.936,563,0.936,564,0.936,565,0.936,566,0.908,567,0.908,568,0.908,569,0.908,570,0.908,571,0.908,572,0.936,573,0.908,574,0.936,575,0.936,576,0.829,577,0.908,578,1.196,579,1.125,580,0.854,581,0.711,582,0.829]],["title/components/PoiComponent.html",[0,0.555,133,1.228]],["body/components/PoiComponent.html",[0,0.846,1,1.175,2,1.792,3,0.122,4,0.085,5,1.333,6,1.333,7,1.333,8,0.097,10,1.333,11,2.889,12,2.626,14,1.851,16,0.254,17,1.276,19,0.891,27,3.926,28,3.444,31,1.705,33,1.237,34,0.012,35,0.462,36,0.505,37,1.093,39,0.919,40,1.631,41,0.22,42,0.549,45,1.472,46,1.634,53,2.169,54,1.903,55,2.754,58,0.122,59,0.512,74,0.759,80,1.472,90,0.327,91,1.851,92,1.851,93,1.333,94,2.297,95,1.333,96,1.333,97,1.175,98,1.333,99,1.333,100,1.175,101,1.333,102,1.333,103,1.175,104,1.333,105,1.175,106,1.333,107,1.175,108,0.458,109,1.333,110,1.175,111,1.333,112,1.333,113,1.175,114,2.059,115,1.251,116,2.126,117,1.175,118,1.291,119,1.333,120,1.175,121,1.333,122,1.175,123,1.441,124,0.645,125,1.851,126,1.212,127,0.658,128,1.175,129,1.139,130,1.333,131,1.175,132,1.333,133,2.023,134,1.333,135,1.175,136,0.946,137,1.175,138,1.333,139,1.175,140,1.333,141,1.139,142,1.333,143,1.175,144,1.333,145,1.212,146,1.175,147,1.851,148,1.175,149,1.175,150,1.333,151,1.175,152,1.333,153,1.333,154,0.005,155,0.008,156,0.005,280,1.007,294,1.107,302,0.612,304,2.34,314,0.914,318,1.2,322,1.471,326,2.088,397,1.377,401,1.851,404,1.912,412,3.011,416,2.399,433,2.114,434,3.926,499,1.669,548,1.465,552,1.441,581,1.296,595,1.251,604,2.699,668,4.017,673,3.33,712,1.984,733,3.922,734,3.926,763,2.277,764,2.072,771,2.537,812,5.003,826,4.355,842,4.355,843,5.404,845,3.137,919,3.522,997,5.003,1002,3.522,1006,2.699,1060,2.894,1061,2.399,1062,3.747,1066,2.894,1190,2.537,1323,2.699,1496,3.464,1497,6.313,1498,5.496,1499,5.523,1500,5.523,1501,3.464,1502,5.496,1503,3.959,1504,3.959,1505,3.959,1506,3.959,1507,3.959,1508,3.959,1509,5.496,1510,3.959,1511,3.959,1512,3.959,1513,4.808,1514,4.808,1515,3.959,1516,3.464,1517,3.464,1518,3.464,1519,3.464,1520,5.966,1521,6.268,1522,3.137,1523,3.137,1524,5.496,1525,5.496,1526,4.808,1527,5.496,1528,3.137,1529,3.464,1530,3.464,1531,4.808,1532,3.137,1533,3.464]],["title/components/PoiDetailsComponent.html",[0,0.555,135,1.228]],["body/components/PoiDetailsComponent.html",[0,0.793,1,1.044,2,1.649,3,0.108,4,0.076,5,1.185,6,1.185,7,1.185,8,0.087,10,1.185,11,2.861,12,2.6,14,1.703,16,0.226,17,1.174,19,1.138,27,3.756,28,3.295,29,1.376,30,3.295,31,1.733,33,0.792,34,0.012,35,0.401,36,0.51,37,0.7,39,1.174,40,1.756,41,0.231,42,0.488,45,1.309,46,1.453,47,0.923,53,1.928,54,1.692,55,2.535,57,1.928,58,0.108,59,0.455,74,0.763,80,1.309,90,0.489,91,1.703,92,1.703,93,1.185,94,2.179,95,1.185,96,1.185,97,1.044,98,1.185,99,1.185,100,1.044,101,1.185,102,1.185,103,1.044,104,1.185,105,1.044,106,1.185,107,1.044,108,0.407,109,1.185,110,1.044,111,1.185,112,1.185,113,1.044,114,1.148,115,1.112,116,1.994,117,1.044,118,1.148,119,1.185,120,1.044,121,1.185,122,1.044,123,1.326,124,0.612,125,1.703,126,1.077,127,0.636,128,1.044,129,1.012,130,1.185,131,1.044,132,1.185,133,1.044,134,1.185,135,1.92,136,0.971,137,1.044,138,1.185,139,1.044,140,1.185,141,1.012,142,1.185,143,1.044,144,1.185,145,1.077,146,1.044,147,1.703,148,1.044,149,1.044,150,1.185,151,1.044,152,1.185,153,1.185,154,0.005,155,0.007,156,0.005,241,6.017,280,1.286,294,1.038,302,0.563,304,2.409,314,0.918,318,1.104,322,1.432,326,2.098,338,1.309,397,1.224,404,1.76,416,2.132,433,1.946,499,1.606,581,1.215,595,1.112,604,2.4,668,3.697,712,1.764,725,4.412,728,3.921,731,2.572,732,4.393,733,3.943,734,3.756,735,4.983,737,4.73,757,2.631,763,2.024,764,1.842,771,3.241,798,2.572,993,2.789,994,4.425,995,5.179,996,4.425,997,4.691,1001,3.079,1002,3.241,1005,3.079,1061,2.132,1062,3.448,1066,2.572,1190,3.241,1323,2.4,1499,5.179,1500,4.425,1513,4.425,1514,4.425,1516,3.079,1517,3.079,1518,3.079,1519,3.079,1520,5.662,1521,5.997,1522,2.789,1523,2.789,1526,4.425,1528,2.789,1529,3.079,1530,3.079,1531,4.425,1532,2.789,1533,3.079,1534,7.202,1535,5.92,1536,5.92,1537,5.057,1538,3.519,1539,3.519,1540,3.519,1541,3.519,1542,3.519,1543,3.519,1544,3.519,1545,3.519,1546,3.519,1547,3.519,1548,3.519,1549,3.519,1550,5.057,1551,3.519,1552,3.519,1553,3.519,1554,3.519,1555,3.519,1556,3.519,1557,3.519,1558,3.519,1559,3.519,1560,3.519,1561,3.519,1562,3.519,1563,3.519,1564,5.057,1565,5.057,1566,5.057,1567,5.057]],["title/interfaces/Pois.html",[467,0.408,550,0.932]],["body/interfaces/Pois.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.673,34,0.012,35,0.538,36,0.543,41,0.181,58,0.262,74,0.388,90,0.416,108,0.746,124,0.33,127,0.591,136,0.774,154,0.005,155,0.007,156,0.005,293,0.694,294,1.033,302,0.835,314,1.18,318,1.097,319,1.505,322,0.652,328,1.524,367,1.279,386,1.279,413,0.915,418,0.915,453,0.861,455,1.64,467,0.84,468,0.861,469,0.915,470,0.888,471,1.696,472,1.627,473,1.545,474,1.594,475,1.594,476,1.594,477,1.977,478,1.969,479,1.594,480,1.635,481,0.888,482,0.944,483,1.368,484,0.762,485,0.762,486,0.786,487,1.909,488,1.064,489,1.499,490,0.944,491,1.36,492,1.545,493,1.279,494,1.594,495,1.867,496,1.81,497,1.279,498,1.744,499,1.69,500,1.594,501,1.36,502,1.36,503,1.36,504,1.064,505,1.848,506,1.36,507,1.505,508,1.319,509,1.36,510,1.36,511,1.36,512,1.319,513,1.36,514,1.368,515,1.36,516,1.36,517,1.132,518,1.279,519,1.319,520,1.959,521,0.944,522,0.944,523,1.36,524,0.944,525,0.944,526,1.319,527,0.944,528,0.944,529,0.944,530,0.944,531,0.944,532,0.944,533,0.944,534,1.36,535,1.319,536,1.499,537,1.319,538,1.167,539,0.81,540,0.762,541,0.861,542,0.944,543,0.81,544,1.36,545,1.24,546,0.81,547,0.81,548,1.167,549,0.861,550,1.451,551,0.944,552,0.915,553,1.368,554,1.41,555,0.888,556,0.861,557,1.203,558,1.41,559,1.279,560,1.326,561,0.81,562,0.944,563,0.944,564,0.944,565,0.944,566,0.915,567,0.915,568,0.915,569,0.915,570,0.915,571,0.915,572,0.944,573,0.915,574,0.944,575,0.944,576,0.835,577,0.915,578,1.203,579,1.132,580,0.861,581,0.716,582,0.835]],["title/components/ProgressComponent.html",[0,0.555,137,1.228]],["body/components/ProgressComponent.html",[0,0.922,1,1.392,2,2.01,3,0.144,4,0.101,5,1.58,6,1.58,7,1.58,8,0.115,10,1.58,11,2.926,12,2.66,14,2.076,16,0.301,17,1.431,19,1.056,24,3.13,31,1.65,33,1.056,34,0.012,35,0.466,36,0.469,37,0.933,39,1.431,40,2.169,41,0.212,42,0.651,55,2.351,58,0.144,59,0.606,60,2.169,90,0.388,91,2.076,92,2.076,93,1.58,94,2.462,95,1.58,96,1.58,97,1.392,98,1.58,99,1.58,100,1.392,101,1.58,102,1.58,103,1.392,104,1.58,105,1.392,106,1.58,107,1.392,108,0.543,109,1.58,110,1.392,111,1.58,112,1.58,113,1.392,114,1.53,115,1.482,116,2.318,117,1.392,118,1.53,119,1.58,120,1.392,121,1.58,122,1.392,123,1.617,124,0.691,125,2.076,126,1.436,127,0.633,128,1.392,129,1.349,130,1.58,131,1.392,132,1.58,133,1.392,134,1.58,135,1.392,136,0.564,137,2.169,138,1.58,139,1.392,140,1.58,141,1.349,142,1.58,143,1.392,144,1.58,145,1.436,146,1.392,147,2.076,148,1.392,149,1.392,150,1.58,151,1.392,152,1.58,153,1.58,154,0.006,155,0.009,156,0.006,302,0.686,304,2.118,328,1.081,338,1.744,397,1.632,404,2.144,728,4.429,733,4.205,734,4.161,757,3.059,763,2.699,764,2.456,1006,3.199,1074,5.393,1501,4.105,1568,4.105,1569,6.164,1570,6.164,1571,6.884,1572,6.164,1573,7.795,1574,7.311,1575,6.884,1576,7.311,1577,6.164,1578,4.692,1579,4.692,1580,4.692,1581,4.692,1582,4.692,1583,6.164,1584,4.692,1585,4.692,1586,4.692,1587,4.692,1588,6.164,1589,6.164]],["title/interfaces/Property.html",[467,0.408,520,1.021]],["body/interfaces/Property.html",[3,0.105,4,0.074,8,0.084,16,0.219,29,0.659,34,0.012,35,0.549,36,0.543,37,1.406,41,0.179,58,0.262,74,0.38,90,0.409,108,0.738,124,0.323,127,0.587,136,0.595,154,0.005,155,0.007,156,0.005,293,0.68,294,1.021,302,0.831,314,1.181,318,1.081,319,1.496,322,0.638,328,1.524,367,1.259,386,1.259,413,0.896,418,0.896,453,0.843,455,1.624,467,0.839,468,0.843,469,0.896,470,0.869,471,1.674,472,1.646,473,1.527,474,1.574,475,1.574,476,1.574,477,1.969,478,1.911,479,1.574,480,1.621,481,0.869,482,0.924,483,1.351,484,0.746,485,0.746,486,0.769,487,1.724,488,1.048,489,1.481,490,0.924,491,1.339,492,1.527,493,1.259,494,1.574,495,1.853,496,1.797,497,1.259,498,1.726,499,1.68,500,1.574,501,1.339,502,1.339,503,1.339,504,1.048,505,1.832,506,1.339,507,1.496,508,1.298,509,1.339,510,1.339,511,1.339,512,1.298,513,1.339,514,1.351,515,1.339,516,1.339,517,1.114,518,1.259,519,1.298,520,1.969,521,0.924,522,0.924,523,1.832,524,0.924,525,0.924,526,1.298,527,0.924,528,0.924,529,0.924,530,0.924,531,0.924,532,0.924,533,0.924,534,1.339,535,1.298,536,1.481,537,1.298,538,1.149,539,0.793,540,0.746,541,0.843,542,0.924,543,0.793,544,1.832,545,1.672,546,0.793,547,0.793,548,1.149,549,0.843,550,1.31,551,0.924,552,0.896,553,1.351,554,1.393,555,0.869,556,0.843,557,1.185,558,1.393,559,1.259,560,1.31,561,0.793,562,0.924,563,0.924,564,0.924,565,0.924,566,0.896,567,0.896,568,0.896,569,0.896,570,0.896,571,0.896,572,0.924,573,0.896,574,0.924,575,0.924,576,0.818,577,0.896,578,1.185,579,1.114,580,0.843,581,0.701,582,0.818]],["title/components/SearchComponent.html",[0,0.555,139,1.228]],["body/components/SearchComponent.html",[0,0.815,1,1.098,2,1.709,3,0.114,4,0.08,5,1.246,6,1.246,7,1.246,8,0.091,10,1.246,11,2.873,12,2.612,14,1.765,16,0.336,17,1.216,19,1.18,21,3.194,24,3.106,27,3.335,28,3.182,31,1.699,33,1.49,34,0.012,35,0.491,36,0.489,37,1.317,39,1.732,40,2.3,41,0.229,42,0.513,47,0.97,53,2.027,54,1.779,55,3.05,58,0.114,59,0.478,60,2.3,74,0.583,80,1.949,90,0.306,91,1.765,92,2.444,93,1.246,94,2.229,95,1.246,96,1.246,97,1.098,98,1.246,99,1.246,100,1.098,101,1.246,102,1.246,103,1.098,104,1.246,105,1.098,106,1.246,107,1.098,108,0.428,109,1.246,110,1.098,111,1.246,112,1.246,113,1.098,114,1.207,115,1.169,116,2.05,117,1.098,118,1.207,119,1.246,120,1.098,121,1.246,122,1.098,123,1.375,124,0.721,125,1.765,126,1.133,127,0.66,128,1.098,129,1.064,130,1.246,131,1.098,132,1.246,133,1.098,134,1.246,135,1.098,136,0.444,137,1.098,138,1.246,139,1.964,140,1.246,141,1.064,142,1.246,143,1.098,144,1.246,145,1.133,146,1.098,147,1.765,148,1.098,149,1.098,150,1.246,151,1.098,152,1.246,153,1.246,154,0.005,155,0.007,156,0.005,163,2.329,258,1.423,280,1.333,302,0.583,304,2.321,314,0.936,322,1.394,326,1.604,328,1.336,397,1.287,401,1.765,402,3.05,404,1.823,410,3.316,471,1.109,472,0.736,486,1.37,488,1.288,561,1.413,578,0.885,595,1.169,715,3.488,719,4.153,722,2.872,723,2.872,725,4.513,730,3.05,731,2.704,732,4.243,733,3.501,734,3.627,735,4.782,737,3.831,748,3.501,749,2.128,750,2.128,757,1.644,758,2.128,761,2.242,763,2.128,764,1.937,765,2.128,766,2.523,768,3.237,774,2.128,775,2.932,776,3.237,798,2.704,801,4.585,1041,3.175,1143,4.153,1183,4.449,1590,3.237,1591,5.304,1592,5.792,1593,6.086,1594,5.241,1595,6.086,1596,5.241,1597,6.086,1598,5.241,1599,3.7,1600,4.585,1601,3.7,1602,3.7,1603,5.241,1604,3.7,1605,5.325,1606,5.241,1607,3.7,1608,3.7,1609,3.7,1610,3.7,1611,2.932,1612,2.932,1613,2.932,1614,3.7,1615,5.241,1616,3.7,1617,3.7,1618,3.7,1619,3.7,1620,5.241,1621,4.585,1622,5.241,1623,5.241]],["title/injectables/SearchTreksService.html",[298,1.394,1591,3.025]],["body/injectables/SearchTreksService.html",[3,0.188,4,0.132,8,0.15,13,3.202,16,0.392,17,1.689,31,1.295,33,1.377,34,0.012,35,0.414,36,0.392,37,1.217,39,1.42,41,0.224,42,0.849,58,0.188,59,0.791,124,0.734,154,0.008,155,0.01,156,0.008,258,3.094,298,2.451,300,3.352,304,2.167,314,1.041,345,3.352,488,1.764,595,1.933,609,4.171,1591,5.32,1592,6.368,1605,7.186,1611,5.768,1624,6.368,1625,7.278,1626,6.117,1627,6.117,1628,6.117,1629,6.117]],["title/interfaces/Settings.html",[29,0.798,467,0.408]],["body/interfaces/Settings.html",[3,0.107,4,0.075,8,0.086,16,0.223,29,0.968,34,0.012,35,0.538,36,0.54,41,0.181,58,0.262,74,0.388,90,0.415,108,0.823,124,0.329,127,0.591,136,0.603,154,0.005,155,0.007,156,0.005,293,1.282,294,1.032,302,0.835,314,1.18,318,1.096,319,1.505,322,0.651,328,1.524,367,1.278,386,1.278,413,0.914,418,0.914,453,0.86,455,1.639,467,0.84,468,0.86,469,0.914,470,0.887,471,1.681,472,1.627,473,1.544,474,1.592,475,1.592,476,1.592,477,1.976,478,1.923,479,1.592,480,1.634,481,0.887,482,0.943,483,1.366,484,0.761,485,0.761,486,0.785,487,1.737,488,1.063,489,1.498,490,0.943,491,1.358,492,1.544,493,1.278,494,1.592,495,1.866,496,1.809,497,1.278,498,1.742,499,1.689,500,1.592,501,1.358,502,1.358,503,1.358,504,1.063,505,1.847,506,1.358,507,1.505,508,1.317,509,1.358,510,1.358,511,1.358,512,1.317,513,1.358,514,1.366,515,1.358,516,1.358,517,1.13,518,1.278,519,1.317,520,1.959,521,0.943,522,0.943,523,1.358,524,0.943,525,0.943,526,1.317,527,0.943,528,0.943,529,0.943,530,0.943,531,0.943,532,0.943,533,0.943,534,1.358,535,1.317,536,1.498,537,1.317,538,1.166,539,0.809,540,0.761,541,0.86,542,0.943,543,0.809,544,1.358,545,1.239,546,0.809,547,0.809,548,1.495,549,1.589,550,1.325,551,0.943,552,0.914,553,1.366,554,1.409,555,0.887,556,0.86,557,1.202,558,1.409,559,1.278,560,1.325,561,0.809,562,0.943,563,0.943,564,0.943,565,0.943,566,0.914,567,0.914,568,0.914,569,0.914,570,0.914,571,0.914,572,0.943,573,0.914,574,0.943,575,0.943,576,0.834,577,0.914,578,1.202,579,1.13,580,0.86,581,0.715,582,0.834]],["title/injectables/SettingsService.html",[30,1.99,298,1.394]],["body/injectables/SettingsService.html",[3,0.099,4,0.07,8,0.08,13,1.694,16,0.207,17,1.104,19,0.728,24,2.415,25,3.578,29,1.382,30,2.287,31,1.731,33,1.613,34,0.012,35,0.517,36,0.502,37,1.425,39,1.77,40,2.126,41,0.226,42,0.449,43,1.203,44,1.203,45,1.203,46,1.335,58,0.099,59,0.418,60,2.345,66,1.773,74,0.797,75,2.206,76,2.074,80,1.769,82,2.607,108,0.829,124,0.306,127,0.574,154,0.004,155,0.007,156,0.004,180,4.845,182,1.694,226,2.564,230,3.477,258,2.756,259,3.211,280,1.967,293,1.122,298,1.602,300,1.773,302,0.529,304,2.393,310,2.564,312,4.547,314,0.985,319,1.158,324,1.96,326,2.297,328,1.256,338,1.203,345,1.773,433,1.83,472,1.425,473,0.849,487,0.823,512,1.248,514,1.309,517,1.56,520,1.967,537,0.849,539,1.741,540,0.706,543,0.751,548,1.444,549,1.851,553,1.538,554,0.774,555,1.21,556,1.535,557,1.489,580,1.174,595,1.022,600,2.365,637,4.471,642,2.206,646,2.831,673,2.882,677,2.831,755,3.616,759,2.074,760,2.564,788,2.831,791,2.831,797,2.831,821,3.245,868,3.77,953,4.93,1002,3.049,1006,2.206,1329,4.471,1337,3.77,1339,3.77,1340,2.564,1341,2.564,1342,2.564,1630,2.831,1631,6.674,1632,4.757,1633,4.757,1634,6.22,1635,4.757,1636,5.642,1637,6.22,1638,6.22,1639,4.757,1640,4.757,1641,6.22,1642,4.757,1643,4.757,1644,3.235,1645,4.757,1646,3.235,1647,3.235,1648,4.757,1649,3.235,1650,3.235,1651,3.235,1652,5.642,1653,3.235,1654,3.235,1655,4.757,1656,3.235,1657,4.757,1658,4.547,1659,3.235,1660,3.235,1661,3.235,1662,3.235,1663,4.757,1664,3.235,1665,4.757,1666,3.235,1667,2.831,1668,3.235,1669,3.235,1670,3.235,1671,3.235,1672,3.235,1673,3.235,1674,3.235,1675,4.757,1676,3.235,1677,3.235,1678,3.235,1679,3.235,1680,3.235,1681,3.235,1682,3.235,1683,5.642,1684,3.235,1685,3.235,1686,3.235,1687,3.235,1688,3.235,1689,3.235,1690,3.235,1691,3.235,1692,3.235,1693,3.235,1694,3.235,1695,5.642,1696,3.235,1697,3.235,1698,4.757,1699,3.235,1700,6.22,1701,4.757,1702,3.235,1703,3.235,1704,4.757,1705,3.235,1706,3.235,1707,4.757,1708,3.235,1709,4.757,1710,3.235,1711,3.235,1712,3.235,1713,3.235,1714,4.757,1715,3.235,1716,3.235,1717,3.235,1718,3.235,1719,3.235,1720,3.235,1721,3.235,1722,3.235,1723,4.757,1724,3.235,1725,3.235,1726,3.235,1727,4.757,1728,3.235,1729,3.235,1730,3.235,1731,3.235,1732,4.757,1733,3.235,1734,3.235,1735,3.235,1736,3.235,1737,5.642,1738,3.235,1739,3.235,1740,3.235]],["title/modules/SharedModule.html",[157,1.267,1741,2.653]],["body/modules/SharedModule.html",[3,0.177,4,0.124,8,0.142,34,0.012,41,0.256,42,0.799,43,2.14,44,2.14,47,1.51,58,0.177,59,0.744,90,0.476,110,2.546,122,2.546,124,0.663,126,2.627,127,0.607,154,0.008,155,0.01,156,0.008,157,1.762,159,2.376,160,2.558,161,3.639,162,2.767,163,2.558,164,3.364,173,3.004,174,2.659,175,2.558,178,2.659,183,3.241,199,3.516,201,3.013,810,4.208,1130,5.129,1374,3.673,1375,2.659,1381,3.154,1741,5.519,1742,5.037,1743,5.037,1744,5.037,1745,5.757,1746,5.757,1747,5.757,1748,7.017,1749,7.017]],["title/modules/SharedTreksModule.html",[157,1.267,1750,2.653]],["body/modules/SharedTreksModule.html",[3,0.182,4,0.128,8,0.145,34,0.012,41,0.257,42,0.821,43,2.2,44,2.2,47,1.552,58,0.182,59,0.765,90,0.489,133,2.555,143,2.555,154,0.008,155,0.01,156,0.008,157,1.811,159,2.442,160,2.629,161,3.682,162,2.844,163,2.629,164,3.404,173,3.054,174,2.733,175,2.629,178,2.733,183,3.295,190,2.058,199,3.575,201,3.097,278,3.734,1374,3.734,1375,2.733,1381,3.242,1750,5.473,1751,5.176,1752,5.176,1753,5.176,1754,5.176,1755,5.916,1756,5.916,1757,5.916,1758,4.689,1759,5.916]],["title/modules/SharedUiModule.html",[157,1.267,171,1.99]],["body/modules/SharedUiModule.html",[3,0.178,4,0.125,8,0.143,34,0.012,41,0.256,42,0.805,47,1.521,58,0.178,59,0.75,90,0.479,97,2.549,100,2.549,120,2.549,154,0.008,155,0.01,156,0.008,157,1.775,159,2.394,160,2.577,161,3.65,162,2.788,163,2.577,164,3.374,171,4.143,173,3.017,174,2.679,175,2.577,178,2.679,183,3.256,190,2.018,199,3.532,278,3.689,399,4.596,447,4.596,1374,3.689,1375,2.679,1754,5.074,1760,5.074,1761,5.074,1762,5.074,1763,5.799,1764,5.799,1765,5.799,1766,5.799,1767,5.799,1768,5.799]],["title/components/TabsPage.html",[0,0.555,141,1.191]],["body/components/TabsPage.html",[0,0.938,1,1.441,2,2.056,3,0.149,4,0.105,5,1.636,6,1.636,7,1.636,8,0.119,10,1.636,11,2.933,12,2.666,14,2.123,19,1.093,20,3.849,21,3.368,24,3.368,31,1.028,33,1.093,34,0.012,35,0.474,36,0.311,37,0.966,41,0.228,42,0.674,47,1.274,58,0.149,59,0.628,60,1.871,90,0.402,91,2.123,92,2.123,93,1.636,94,2.495,95,1.636,96,1.636,97,1.441,98,1.636,99,1.636,100,1.441,101,1.636,102,1.636,103,1.441,104,1.636,105,1.441,106,1.636,107,1.441,108,0.562,109,1.636,110,1.441,111,1.636,112,1.636,113,1.441,114,1.584,115,1.534,116,2.358,117,1.441,118,1.584,119,1.636,120,1.441,121,1.636,122,1.441,123,1.654,124,0.7,125,2.123,126,1.487,127,0.641,128,1.441,129,1.397,130,1.636,131,1.441,132,1.636,133,1.441,134,1.636,135,1.441,136,0.583,137,1.441,138,1.636,139,1.441,140,1.636,141,2.131,142,1.636,143,1.441,144,1.636,145,1.487,146,1.441,147,2.123,148,1.441,149,1.441,150,1.636,151,1.441,152,1.636,153,1.636,154,0.007,155,0.009,156,0.007,190,1.69,280,1.235,294,0.851,318,1.617,397,1.69,404,2.193,540,1.749,682,3.311,1357,5.134,1375,2.243,1477,4.996,1769,4.249,1770,5.516,1771,7,1772,6.305,1773,4.857,1774,4.857,1775,4.857,1776,4.857,1777,4.249,1778,6.305,1779,6.305,1780,6.305]],["title/modules/TabsPageModule.html",[157,1.267,1781,3.025]],["body/modules/TabsPageModule.html",[3,0.178,4,0.125,8,0.143,34,0.012,41,0.26,42,0.805,43,2.156,44,2.156,47,1.521,58,0.178,59,0.75,90,0.479,141,2.367,154,0.008,155,0.01,156,0.008,157,1.775,159,2.394,160,2.577,161,3.65,162,2.788,163,2.577,164,2.577,171,3.956,173,3.017,174,2.679,175,2.577,178,3.256,183,3.256,197,3.336,198,3.336,199,3.532,201,3.036,1374,3.689,1375,2.679,1381,3.178,1417,5.611,1781,6.318,1782,5.074,1783,5.074,1784,5.074,1785,5.611,1786,5.611,1787,5.799,1788,5.074,1789,5.799,1790,5.799,1791,5.799]],["title/modules/TabsPageRoutingModule.html",[157,1.267,1785,2.822]],["body/modules/TabsPageRoutingModule.html",[0,0.99,3,0.168,4,0.118,8,0.134,34,0.012,41,0.245,42,0.757,58,0.168,59,0.705,123,1.78,124,0.767,127,0.669,129,1.569,141,1.953,151,2.193,154,0.008,155,0.009,156,0.008,159,2.252,164,2.424,178,2.52,183,3.135,190,1.898,208,4.736,209,4.323,267,3.05,278,3.553,279,3.868,280,1.388,281,5.184,282,4.773,283,4.773,284,4.323,285,7.095,293,1.47,294,1.356,1346,3.988,1353,4.323,1379,3.553,1380,3.496,1477,4.323,1770,4.773,1785,4.628,1788,4.773,1792,5.455,1793,5.455,1794,7.733,1795,4.35,1796,6.788,1797,5.38,1798,6.788,1799,4.962,1800,6.788,1801,5.455,1802,5.455,1803,5.455]],["title/interfaces/TouristicCategorie.html",[467,0.408,556,1.021]],["body/interfaces/TouristicCategorie.html",[3,0.107,4,0.075,8,0.086,16,0.223,29,0.672,34,0.012,35,0.55,36,0.54,41,0.181,58,0.262,74,0.388,90,0.415,108,0.745,124,0.329,127,0.591,136,0.603,154,0.005,155,0.007,156,0.005,293,0.693,294,1.032,302,0.835,314,1.181,318,1.096,319,1.505,322,0.651,328,1.526,367,1.278,386,1.278,413,0.914,418,0.914,453,0.86,455,1.639,467,0.84,468,0.86,469,0.914,470,0.887,471,1.681,472,1.65,473,1.544,474,1.592,475,1.592,476,1.592,477,1.976,478,1.923,479,1.592,480,1.634,481,0.887,482,0.943,483,1.366,484,0.761,485,0.761,486,0.785,487,1.737,488,1.063,489,1.498,490,0.943,491,1.358,492,1.544,493,1.278,494,1.592,495,1.866,496,1.809,497,1.278,498,1.742,499,1.689,500,1.592,501,1.358,502,1.358,503,1.358,504,1.063,505,1.847,506,1.358,507,1.505,508,1.317,509,1.358,510,1.358,511,1.358,512,1.317,513,1.358,514,1.366,515,1.358,516,1.358,517,1.13,518,1.278,519,1.317,520,1.959,521,0.943,522,0.943,523,1.358,524,0.943,525,0.943,526,1.317,527,0.943,528,0.943,529,0.943,530,0.943,531,0.943,532,0.943,533,0.943,534,1.358,535,1.317,536,1.498,537,1.317,538,1.166,539,0.809,540,0.761,541,0.86,542,0.943,543,0.809,544,1.358,545,1.239,546,0.809,547,0.809,548,1.166,549,0.86,550,1.325,551,0.943,552,0.914,553,1.366,554,1.409,555,0.887,556,1.239,557,1.202,558,1.409,559,1.278,560,1.325,561,0.809,562,0.943,563,0.943,564,0.943,565,0.943,566,0.914,567,0.914,568,0.914,569,0.914,570,0.914,571,0.914,572,0.943,573,0.914,574,0.943,575,0.943,576,0.834,577,0.914,578,1.202,579,1.13,580,0.86,581,0.715,582,0.834]],["title/interfaces/TouristicCategoryWithFeatures.html",[467,0.408,557,0.99]],["body/interfaces/TouristicCategoryWithFeatures.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.55,36,0.542,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.834,314,1.18,318,1.092,319,1.502,322,0.648,328,1.525,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.635,467,0.84,468,0.855,469,0.909,470,0.882,471,1.679,472,1.649,473,1.54,474,1.588,475,1.588,476,1.588,477,1.975,478,1.92,479,1.588,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.906,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.588,495,1.862,496,1.806,497,1.273,498,1.738,499,1.687,500,1.588,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.631,555,0.882,556,0.855,557,1.405,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/interfaces/TouristicContent.html",[467,0.408,554,0.99]],["body/interfaces/TouristicContent.html",[3,0.106,4,0.075,8,0.085,16,0.222,29,0.668,34,0.012,35,0.537,36,0.548,41,0.18,58,0.262,74,0.385,90,0.413,108,0.743,124,0.327,127,0.59,136,0.6,154,0.005,155,0.007,156,0.005,293,0.689,294,1.028,302,0.873,314,1.18,318,1.091,319,1.502,322,0.647,325,3.519,328,1.523,367,1.271,386,1.271,413,0.908,418,0.908,453,0.854,455,1.634,467,0.84,468,0.854,469,0.908,470,0.881,471,1.694,472,1.625,473,1.538,474,1.586,475,1.586,476,1.586,477,1.99,478,1.919,479,1.586,480,1.63,481,0.881,482,0.936,483,1.361,484,0.756,485,0.756,486,0.779,487,1.733,488,1.058,489,1.492,490,0.936,491,1.352,492,1.538,493,1.271,494,1.586,495,2.001,496,1.805,497,1.271,498,1.737,499,1.686,500,1.586,501,1.352,502,1.352,503,1.352,504,1.058,505,1.842,506,1.352,507,1.502,508,1.311,509,1.352,510,1.352,511,1.352,512,1.311,513,1.352,514,1.361,515,1.352,516,1.352,517,1.125,518,1.271,519,1.311,520,1.956,521,0.936,522,0.936,523,1.352,524,0.936,525,0.936,526,1.311,527,0.936,528,0.936,529,0.936,530,0.936,531,0.936,532,0.936,533,0.936,534,1.352,535,1.311,536,1.492,537,1.311,538,1.16,539,0.804,540,0.756,541,0.854,542,0.936,543,0.804,544,1.352,545,1.233,546,0.804,547,0.804,548,1.16,549,0.854,550,1.32,551,0.936,552,0.908,553,1.361,554,1.537,555,0.881,556,0.854,557,1.196,558,1.404,559,1.271,560,1.32,561,0.804,562,0.936,563,0.936,564,0.936,565,0.936,566,0.908,567,0.908,568,0.908,569,0.908,570,0.908,571,0.908,572,0.936,573,0.908,574,0.936,575,0.936,576,0.829,577,0.908,578,1.196,579,1.125,580,0.854,581,0.711,582,0.829]],["title/interfaces/TouristicContents.html",[467,0.408,553,0.961]],["body/interfaces/TouristicContents.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.673,34,0.012,35,0.538,36,0.543,41,0.181,58,0.262,74,0.388,90,0.416,108,0.746,124,0.33,127,0.591,136,0.604,154,0.005,155,0.007,156,0.005,293,0.694,294,1.033,302,0.835,314,1.18,318,1.097,319,1.505,322,0.652,328,1.524,367,1.279,386,1.279,413,0.915,418,0.915,453,0.861,455,1.64,467,0.84,468,0.861,469,0.915,470,0.888,471,1.696,472,1.627,473,1.545,474,1.594,475,1.594,476,1.594,477,1.977,478,1.969,479,1.594,480,1.635,481,0.888,482,0.944,483,1.368,484,0.762,485,0.762,486,0.786,487,1.909,488,1.064,489,1.499,490,0.944,491,1.36,492,1.545,493,1.279,494,1.594,495,1.867,496,1.81,497,1.279,498,1.744,499,1.69,500,1.594,501,1.36,502,1.36,503,1.36,504,1.064,505,1.848,506,1.36,507,1.505,508,1.319,509,1.36,510,1.36,511,1.36,512,1.319,513,1.36,514,1.368,515,1.36,516,1.36,517,1.132,518,1.279,519,1.319,520,1.959,521,0.944,522,0.944,523,1.36,524,0.944,525,0.944,526,1.319,527,0.944,528,0.944,529,0.944,530,0.944,531,0.944,532,0.944,533,0.944,534,1.36,535,1.319,536,1.499,537,1.319,538,1.167,539,0.81,540,0.762,541,0.861,542,0.944,543,0.81,544,1.36,545,1.24,546,0.81,547,0.81,548,1.167,549,0.861,550,1.326,551,0.944,552,0.915,553,1.496,554,1.635,555,0.888,556,0.861,557,1.203,558,1.41,559,1.279,560,1.326,561,0.81,562,0.944,563,0.944,564,0.944,565,0.944,566,0.915,567,0.915,568,0.915,569,0.915,570,0.915,571,0.915,572,0.944,573,0.915,574,0.944,575,0.944,576,0.835,577,0.915,578,1.203,579,1.132,580,0.861,581,0.716,582,0.835]],["title/interfaces/TouristicEvent.html",[467,0.408,559,1.053]],["body/interfaces/TouristicEvent.html",[3,0.106,4,0.075,8,0.085,16,0.222,29,0.668,34,0.012,35,0.537,36,0.548,41,0.18,58,0.262,74,0.385,90,0.413,108,0.743,124,0.327,127,0.59,136,0.6,154,0.005,155,0.007,156,0.005,293,0.689,294,1.028,302,0.873,314,1.18,318,1.091,319,1.502,322,0.647,325,3.519,328,1.523,367,1.271,386,1.271,413,0.908,418,0.908,453,0.854,455,1.634,467,0.84,468,0.854,469,0.908,470,0.881,471,1.694,472,1.625,473,1.538,474,1.586,475,1.586,476,1.586,477,1.99,478,1.919,479,1.586,480,1.63,481,0.881,482,0.936,483,1.361,484,0.756,485,0.756,486,0.779,487,1.733,488,1.058,489,1.492,490,0.936,491,1.352,492,1.538,493,1.271,494,1.586,495,2.001,496,1.805,497,1.271,498,1.737,499,1.686,500,1.586,501,1.352,502,1.352,503,1.352,504,1.058,505,1.842,506,1.352,507,1.502,508,1.311,509,1.352,510,1.352,511,1.352,512,1.311,513,1.352,514,1.361,515,1.352,516,1.352,517,1.125,518,1.271,519,1.311,520,1.956,521,0.936,522,0.936,523,1.352,524,0.936,525,0.936,526,1.311,527,0.936,528,0.936,529,0.936,530,0.936,531,0.936,532,0.936,533,0.936,534,1.352,535,1.311,536,1.492,537,1.311,538,1.16,539,0.804,540,0.756,541,0.854,542,0.936,543,0.804,544,1.352,545,1.233,546,0.804,547,0.804,548,1.16,549,0.854,550,1.32,551,0.936,552,0.908,553,1.361,554,1.404,555,0.881,556,0.854,557,1.196,558,1.404,559,1.492,560,1.32,561,0.804,562,0.936,563,0.936,564,0.936,565,0.936,566,0.908,567,0.908,568,0.908,569,0.908,570,0.908,571,0.908,572,0.936,573,0.908,574,0.936,575,0.936,576,0.829,577,0.908,578,1.196,579,1.125,580,0.854,581,0.711,582,0.829]],["title/interfaces/TouristicEvents.html",[467,0.408,558,0.99]],["body/interfaces/TouristicEvents.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.673,34,0.012,35,0.538,36,0.543,41,0.181,58,0.262,74,0.388,90,0.416,108,0.746,124,0.33,127,0.591,136,0.604,154,0.005,155,0.007,156,0.005,293,0.694,294,1.033,302,0.835,314,1.18,318,1.097,319,1.505,322,0.652,328,1.524,367,1.279,386,1.279,413,0.915,418,0.915,453,0.861,455,1.64,467,0.84,468,0.861,469,0.915,470,0.888,471,1.696,472,1.627,473,1.545,474,1.594,475,1.594,476,1.594,477,1.977,478,1.969,479,1.594,480,1.635,481,0.888,482,0.944,483,1.368,484,0.762,485,0.762,486,0.786,487,1.909,488,1.064,489,1.499,490,0.944,491,1.36,492,1.545,493,1.279,494,1.594,495,1.867,496,1.81,497,1.279,498,1.744,499,1.69,500,1.594,501,1.36,502,1.36,503,1.36,504,1.064,505,1.848,506,1.36,507,1.505,508,1.319,509,1.36,510,1.36,511,1.36,512,1.319,513,1.36,514,1.368,515,1.36,516,1.36,517,1.132,518,1.279,519,1.319,520,1.959,521,0.944,522,0.944,523,1.36,524,0.944,525,0.944,526,1.319,527,0.944,528,0.944,529,0.944,530,0.944,531,0.944,532,0.944,533,0.944,534,1.36,535,1.319,536,1.499,537,1.319,538,1.167,539,0.81,540,0.762,541,0.861,542,0.944,543,0.81,544,1.36,545,1.24,546,0.81,547,0.81,548,1.167,549,0.861,550,1.326,551,0.944,552,0.915,553,1.368,554,1.41,555,0.888,556,0.861,557,1.203,558,1.543,559,1.64,560,1.326,561,0.81,562,0.944,563,0.944,564,0.944,565,0.944,566,0.915,567,0.915,568,0.915,569,0.915,570,0.915,571,0.915,572,0.944,573,0.915,574,0.944,575,0.944,576,0.835,577,0.915,578,1.203,579,1.132,580,0.861,581,0.716,582,0.835]],["title/interfaces/Trek.html",[127,0.358,467,0.408]],["body/interfaces/Trek.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.537,36,0.546,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.615,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.873,314,1.18,318,1.092,319,1.502,322,0.648,325,2.742,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.635,467,0.84,468,0.855,469,0.909,470,0.882,471,1.694,472,1.626,473,1.54,474,1.588,475,1.588,476,1.588,477,1.99,478,1.92,479,1.588,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.734,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.588,495,2.002,496,1.806,497,1.635,498,1.738,499,1.687,500,1.588,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/components/TrekCardComponent.html",[0,0.555,143,1.228]],["body/components/TrekCardComponent.html",[0,0.741,1,0.927,2,1.512,3,0.096,4,0.067,5,1.053,6,1.053,7,1.053,8,0.077,10,1.053,11,2.829,12,2.571,14,1.562,16,0.297,17,1.076,19,1.044,24,2.797,25,3.518,27,3.58,28,3.141,29,1.26,30,3.141,31,1.69,33,1.245,34,0.012,35,0.442,36,0.498,37,1.1,39,1.42,40,1.376,41,0.218,42,0.434,43,1.162,44,1.162,47,0.82,53,1.713,54,1.503,55,2.324,57,1.713,58,0.096,59,0.404,60,2.206,66,3.751,68,3.39,74,0.348,80,2.545,90,0.258,91,1.562,92,1.562,93,1.053,94,2.06,95,1.053,96,1.053,97,0.927,98,1.053,99,1.053,100,0.927,101,1.053,102,1.053,103,0.927,104,1.053,105,0.927,106,1.053,107,0.927,108,0.361,109,1.053,110,0.927,111,1.053,112,1.053,113,0.927,114,1.019,115,0.987,116,1.862,117,0.927,118,1.019,119,1.053,120,0.927,121,1.053,122,0.927,123,1.216,124,0.578,125,1.562,126,0.957,127,0.711,128,0.927,129,0.899,130,1.053,131,0.927,132,1.053,133,0.927,134,1.053,135,0.927,136,0.375,137,0.927,138,1.053,139,0.927,140,1.053,141,0.899,142,1.053,143,1.815,144,1.053,145,0.957,146,0.927,147,1.562,148,0.927,149,0.927,150,1.053,151,0.927,152,1.053,153,1.053,154,0.004,155,0.006,156,0.004,205,2.131,267,1.29,280,1.556,294,1.072,302,0.516,304,2.343,314,0.996,318,1.012,324,2.81,326,0.957,328,1.2,332,4.057,333,3.675,397,1.087,401,1.562,402,2.771,404,1.613,410,2.718,412,2.541,416,1.894,433,1.784,434,3.352,453,1.364,493,0.795,499,1.245,507,1.341,517,1.541,595,0.987,604,3.162,668,3.39,671,4.057,706,3.518,712,1.566,733,3.758,734,3.58,763,1.798,764,1.636,816,5.425,821,3.937,904,3.77,918,2.477,919,2.003,921,4.057,923,2.477,925,2.477,926,2.477,927,2.477,928,2.477,930,2.477,968,2.477,984,2.003,1061,2.81,1062,4.455,1064,4.057,1065,2.131,1066,2.285,1067,2.285,1144,2.734,1190,2.003,1198,2.477,1319,2.477,1320,2.734,1321,2.734,1322,2.477,1323,2.131,1324,4.057,1522,2.477,1523,2.477,1528,4.848,1758,6.372,1804,7.035,1805,2.734,1806,5.529,1807,4.637,1808,5.529,1809,5.529,1810,5.529,1811,4.637,1812,6.117,1813,4.637,1814,6.534,1815,7.086,1816,4.637,1817,3.125,1818,3.125,1819,3.125,1820,4.637,1821,3.125,1822,3.125,1823,3.125,1824,4.637,1825,6.117,1826,3.125,1827,5.529,1828,3.125,1829,3.125,1830,3.125,1831,3.125,1832,3.125,1833,3.125,1834,3.125,1835,3.125,1836,4.637,1837,3.125,1838,4.637,1839,4.637,1840,3.125,1841,3.125,1842,3.125,1843,3.125,1844,3.125,1845,4.637,1846,4.637,1847,4.637,1848,3.125,1849,3.125,1850,3.125,1851,3.125,1852,3.125,1853,3.125,1854,3.125,1855,3.125,1856,3.125,1857,3.125,1858,3.125,1859,3.125,1860,3.125,1861,3.125,1862,3.125,1863,3.125,1864,3.125,1865,4.637,1866,4.637,1867,4.637,1868,4.637,1869,4.637,1870,6.845,1871,6.117,1872,4.637,1873,4.637,1874,6.117,1875,4.637,1876,4.637,1877,4.637,1878,4.637,1879,3.125,1880,4.057,1881,3.125,1882,3.125,1883,3.125,1884,4.637,1885,3.125,1886,3.125,1887,3.125,1888,3.125,1889,4.637,1890,4.637,1891,4.637,1892,3.125,1893,3.125,1894,3.125]],["title/interfaces/TrekContext.html",[467,0.408,576,0.99]],["body/interfaces/TrekContext.html",[3,0.103,4,0.072,8,0.082,16,0.215,29,0.645,34,0.012,35,0.533,36,0.547,41,0.177,58,0.261,74,0.372,90,0.403,108,0.731,124,0.316,127,0.666,136,0.586,154,0.005,155,0.007,156,0.005,293,0.666,294,1.23,302,0.826,314,1.179,318,1.064,319,1.486,322,0.625,328,1.52,367,1.24,386,1.24,413,0.878,418,0.878,453,0.826,455,1.608,467,0.837,468,0.826,469,0.878,470,0.851,471,1.667,472,1.617,473,1.509,474,1.556,475,1.556,476,1.556,477,1.962,478,1.899,479,1.556,480,1.608,481,0.851,482,0.905,483,1.559,484,0.73,485,0.73,486,0.753,487,1.709,488,1.032,489,1.463,490,0.905,491,1.319,492,1.509,493,1.24,494,1.556,495,1.84,496,1.784,497,1.24,498,1.709,499,1.67,500,1.556,501,1.319,502,1.319,503,1.319,504,1.032,505,1.817,506,1.319,507,1.553,508,1.279,509,1.319,510,1.319,511,1.319,512,1.279,513,1.319,514,1.335,515,1.319,516,1.319,517,1.423,518,1.24,519,1.279,520,1.943,521,0.905,522,0.905,523,1.319,524,0.905,525,0.905,526,1.279,527,0.905,528,0.905,529,0.905,530,0.905,531,0.905,532,0.905,533,0.905,534,1.319,535,1.279,536,1.463,537,1.279,538,1.132,539,0.777,540,0.73,541,0.826,542,0.905,543,0.777,544,1.319,545,1.203,546,0.777,547,0.777,548,1.132,549,0.826,550,1.67,551,0.905,552,0.878,553,1.722,554,1.377,555,0.851,556,0.826,557,1.513,558,1.776,559,1.24,560,1.512,561,0.777,562,0.905,563,0.905,564,0.905,565,0.905,566,0.878,567,0.878,568,0.878,569,0.878,570,0.878,571,0.878,572,0.905,573,0.878,574,0.905,575,0.905,576,1.167,577,1.658,578,1.608,579,1.512,580,1.56,581,1.297,582,0.801]],["title/guards/TrekContextResolver.html",[206,2.653,1382,2.822]],["body/guards/TrekContextResolver.html",[3,0.144,4,0.101,8,0.115,16,0.301,17,1.432,19,1.388,21,3.402,27,3.774,28,3.516,30,3.82,31,1.306,33,1.388,34,0.012,35,0.418,36,0.395,37,1.227,39,1.09,41,0.259,42,0.652,45,1.746,46,1.938,47,1.232,48,2.169,53,2.573,54,2.258,55,3.091,57,2.573,58,0.144,59,0.607,60,2.358,64,2.458,65,2.354,123,1.618,127,0.688,154,0.006,155,0.009,156,0.006,182,2.458,190,1.634,196,3.202,206,3.953,232,5.418,233,3.01,234,3.202,258,2.922,280,2.021,294,1.332,298,2.077,322,1.367,337,3.01,338,1.746,339,3.01,344,2.573,392,3.01,393,3.01,401,1.582,483,1.432,484,1.025,485,1.025,504,0.994,517,1.646,550,1.646,553,1.763,558,1.75,560,1.646,576,1.476,577,1.232,578,1.124,579,1.388,580,1.522,581,1.266,595,1.484,733,3.962,734,4.008,763,2.701,764,2.458,1041,4.173,1044,3.202,1045,4.207,1118,3.722,1123,4.109,1351,3.01,1357,5.093,1379,3.828,1383,3.202,1388,4.888,1389,5.346,1391,4.888,1397,3.433,1398,3.433,1399,3.433,1401,3.722,1402,3.722,1447,4.888,1612,3.722,1613,3.722,1621,4.109,1895,4.109,1896,4.696,1897,4.696,1898,6.168,1899,4.696,1900,4.109,1901,4.696,1902,4.696,1903,4.696,1904,4.696,1905,4.696,1906,4.696,1907,4.696,1908,4.696,1909,4.696,1910,4.696,1911,4.696,1912,3.722,1913,4.696,1914,4.696,1915,4.696,1916,4.696]],["title/modules/TrekDetailsPageModule.html",[157,1.267,1917,3.025]],["body/modules/TrekDetailsPageModule.html",[0,0.766,3,0.176,4,0.123,8,0.14,34,0.012,41,0.26,42,0.793,43,2.125,44,2.125,47,1.499,58,0.176,59,0.739,90,0.472,127,0.495,145,2.542,154,0.008,155,0.01,156,0.008,157,1.749,159,2.359,160,2.539,161,3.627,162,2.747,163,2.539,164,2.539,171,3.943,173,2.99,174,2.639,175,2.539,178,3.226,183,3.226,190,1.988,197,4.018,198,3.287,199,3.501,201,2.991,206,4.477,207,4.529,278,2.991,279,3.949,280,1.454,281,3.462,1374,3.656,1375,2.639,1377,4.177,1378,4.177,1379,2.991,1380,3.662,1381,3.131,1750,5.256,1795,3.662,1797,4.529,1917,6.211,1918,5,1919,5,1920,5.715,1921,4.177,1922,5.715,1923,5,1924,5.715]],["title/components/TrekMapPage.html",[0,0.555,146,1.228]],["body/components/TrekMapPage.html",[0,0.867,1,0.907,2,1.487,3,0.094,4,0.066,5,1.029,6,1.029,7,1.029,8,0.075,10,1.029,11,2.823,12,2.566,14,1.536,16,0.292,17,1.059,19,1.027,21,3.011,29,1.248,30,3.112,31,1.741,33,1.362,34,0.012,35,0.46,36,0.501,37,1.204,39,1.678,40,2.193,41,0.235,42,0.424,47,0.802,57,1.675,58,0.094,59,0.395,60,2.087,65,1.532,66,3.854,74,0.72,80,1.136,90,0.253,91,1.536,92,1.536,93,1.029,94,2.037,95,1.029,96,1.029,97,0.907,98,1.029,99,1.029,100,0.907,101,1.029,102,1.029,103,0.907,104,1.029,105,0.907,106,1.029,107,0.907,108,0.353,109,1.029,110,0.907,111,1.029,112,1.029,113,1.619,114,0.997,115,1.724,116,1.837,117,0.907,118,0.997,119,1.029,120,0.907,121,1.029,122,0.907,123,1.896,124,0.572,125,1.536,126,0.936,127,0.661,128,0.907,129,0.879,130,1.029,131,0.907,132,1.029,133,0.907,134,1.029,135,1.619,136,0.845,137,0.907,138,1.029,139,0.907,140,1.029,141,0.879,142,1.029,143,0.907,144,1.029,145,0.936,146,1.795,147,1.536,148,0.907,149,0.907,150,1.029,151,0.907,152,1.029,153,1.029,154,0.004,155,0.006,156,0.004,190,1.063,196,2.084,205,3.72,240,2.674,241,2.234,242,3.99,243,2.674,244,2.234,258,2.328,267,2.252,280,1.539,289,5.958,293,1.085,294,1.061,302,0.508,304,2.402,314,0.731,322,1.314,326,1.981,397,1.063,401,1.536,404,1.587,410,2.425,421,2.234,433,2.49,449,3.11,471,0.965,483,1.266,484,0.667,485,0.667,504,1.155,514,1.576,517,1.228,540,1.536,550,1.228,557,1.306,576,1.091,579,1.228,580,1.346,581,1.242,595,0.966,706,3.48,712,1.532,715,3.264,716,3.138,722,2.499,723,2.499,725,2.084,730,3.525,732,4.508,748,3.138,749,1.758,750,1.758,757,1.358,758,1.758,761,1.852,765,1.758,771,2.923,774,2.623,775,2.422,808,2.234,821,4.046,828,4.774,830,3.99,984,1.959,1041,2.763,1044,2.084,1045,3.48,1060,2.234,1067,2.234,1142,3.614,1187,2.422,1188,2.422,1190,2.923,1322,2.422,1351,4.148,1354,4.795,1356,4.422,1357,4.508,1365,3.614,1367,2.422,1375,1.412,1493,2.674,1494,3.99,1777,2.674,1795,2.923,1912,2.422,1921,5.958,1925,2.422,1926,4.774,1927,3.99,1928,5.456,1929,5.456,1930,5.456,1931,5.293,1932,4.561,1933,5.456,1934,6.05,1935,3.99,1936,3.056,1937,4.561,1938,3.056,1939,3.056,1940,4.561,1941,3.056,1942,4.795,1943,4.561,1944,3.056,1945,3.056,1946,2.674,1947,2.674,1948,2.674,1949,2.674,1950,2.674,1951,2.674,1952,4.561,1953,2.674,1954,3.056,1955,2.674,1956,2.674,1957,3.056,1958,3.056,1959,2.674,1960,4.561,1961,2.674,1962,3.056,1963,2.674,1964,2.674,1965,3.056,1966,3.056,1967,3.056,1968,3.056,1969,3.056,1970,3.056,1971,3.056,1972,3.056,1973,3.056,1974,3.056,1975,3.056,1976,5.456,1977,3.056,1978,3.056,1979,3.056,1980,4.774,1981,3.056,1982,3.056,1983,3.056,1984,5.456,1985,3.056,1986,3.99,1987,3.99,1988,3.056,1989,3.056,1990,2.674,1991,4.561,1992,2.674]],["title/modules/TrekMapPageModule.html",[157,1.267,1993,3.025]],["body/modules/TrekMapPageModule.html",[0,0.769,3,0.177,4,0.124,8,0.141,34,0.012,41,0.26,42,0.797,43,2.135,44,2.135,47,1.506,58,0.177,59,0.742,90,0.475,127,0.497,146,2.466,154,0.008,155,0.01,156,0.008,157,1.758,159,2.37,160,2.552,161,3.635,162,2.761,163,2.552,164,2.552,171,3.947,173,2.999,174,2.652,175,2.552,178,3.236,183,3.236,190,1.998,197,3.303,198,3.303,199,3.511,201,3.006,206,4.49,207,4.551,278,3.006,279,3.958,280,1.461,281,3.479,289,4.198,1374,3.667,1375,2.652,1377,4.198,1378,4.198,1379,3.006,1380,3.68,1381,3.147,1741,5.262,1795,3.68,1921,4.198,1993,6.215,1994,5.024,1995,5.024,1996,5.743,1997,5.024,1998,5.024,1999,5.024]],["title/interfaces/TrekProperties.html",[467,0.408,497,1.053]],["body/interfaces/TrekProperties.html",[3,0.099,4,0.069,8,0.079,16,0.206,29,0.621,34,0.012,35,0.529,36,0.551,37,1.235,41,0.173,58,0.261,74,0.358,90,0.392,108,0.718,124,0.304,127,0.573,136,0.569,154,0.004,155,0.007,156,0.004,293,0.641,294,0.986,302,0.817,314,1.182,318,1.035,319,1.468,322,0.602,328,1.525,367,1.206,386,1.206,413,0.844,418,0.844,453,0.794,455,1.579,467,0.834,468,0.794,469,0.844,470,0.819,471,1.671,472,1.607,473,1.476,474,1.522,475,1.522,476,1.522,477,1.948,478,1.876,479,1.522,480,1.583,481,0.819,482,0.871,483,1.306,484,0.703,485,0.703,486,0.725,487,1.683,488,1.003,489,1.579,490,0.871,491,1.282,492,1.815,493,1.206,494,1.522,495,1.815,496,1.76,497,1.431,498,1.935,499,1.715,500,1.871,501,1.789,502,1.789,503,1.789,504,1.4,505,1.985,506,1.789,507,1.538,508,1.735,509,1.789,510,1.789,511,1.789,512,1.735,513,1.789,514,1.535,515,1.789,516,1.789,517,1.067,518,1.206,519,1.243,520,1.929,521,0.871,522,0.871,523,1.282,524,0.871,525,0.871,526,1.243,527,0.871,528,0.871,529,0.871,530,0.871,531,0.871,532,0.871,533,0.871,534,1.282,535,1.243,536,1.431,537,1.243,538,1.1,539,0.747,540,0.703,541,0.794,542,0.871,543,0.747,544,1.282,545,1.17,546,0.747,547,0.747,548,1.1,549,0.794,550,1.266,551,0.871,552,0.844,553,1.306,554,1.346,555,0.819,556,0.794,557,1.134,558,1.346,559,1.206,560,1.266,561,0.747,562,0.871,563,0.871,564,0.871,565,0.871,566,0.844,567,0.844,568,0.844,569,0.844,570,0.844,571,0.844,572,0.871,573,0.844,574,0.871,575,0.871,576,0.771,577,0.844,578,1.134,579,1.067,580,0.794,581,0.661,582,0.771]],["title/interfaces/TreksContext.html",[467,0.408,582,0.99]],["body/interfaces/TreksContext.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.537,36,0.542,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.59,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.246,302,0.834,314,1.18,318,1.093,319,1.503,322,0.649,328,1.523,367,1.274,386,1.274,413,0.911,418,0.911,453,0.857,455,1.636,467,0.84,468,0.857,469,0.911,470,0.883,471,1.679,472,1.626,473,1.541,474,1.589,475,1.589,476,1.589,477,1.975,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,0.782,487,1.735,488,1.06,489,1.495,490,0.939,491,1.355,492,1.541,493,1.274,494,1.589,495,1.863,496,1.807,497,1.274,498,1.739,499,1.687,500,1.589,501,1.355,502,1.355,503,1.355,504,1.06,505,1.844,506,1.355,507,1.567,508,1.314,509,1.355,510,1.355,511,1.355,512,1.314,513,1.355,514,1.364,515,1.355,516,1.355,517,1.127,518,1.274,519,1.314,520,1.957,521,0.939,522,0.939,523,1.355,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.355,535,1.314,536,1.495,537,1.314,538,1.163,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.355,545,1.236,546,0.806,547,0.806,548,1.163,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.406,555,0.883,556,0.857,557,1.199,558,1.406,559,1.274,560,1.535,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.632,579,1.535,580,0.857,581,0.713,582,1.199]],["title/guards/TreksContextResolver.html",[208,2.653,1382,2.822]],["body/guards/TreksContextResolver.html",[3,0.169,4,0.118,8,0.135,16,0.351,17,1.58,19,1.532,21,3.524,27,3.73,28,3.724,31,1.441,33,1.532,34,0.012,35,0.461,36,0.437,37,1.354,39,1.272,41,0.258,42,0.761,45,2.038,46,2.262,47,1.438,48,2.532,53,3.003,54,2.635,55,3.412,58,0.169,59,0.709,60,2.298,64,3.564,65,3.412,154,0.008,155,0.009,156,0.008,190,1.907,208,4.363,232,5.612,233,3.513,234,3.737,258,2.109,280,1.884,294,1.396,298,2.293,319,1.52,338,2.038,401,1.846,504,1.16,560,1.744,578,1.312,579,1.532,582,1.312,595,1.732,733,4.26,734,4.244,763,3.153,764,2.869,1379,4.054,1383,3.737,1388,5.395,1389,5.662,1397,4.006,1398,4.006,1399,4.006,1612,4.344,1613,4.344,1900,4.795,2000,4.795,2001,5.481,2002,5.481,2003,5.481,2004,5.481,2005,5.481]],["title/components/TreksMapPage.html",[0,0.555,148,1.228]],["body/components/TreksMapPage.html",[0,0.837,1,0.835,2,1.398,3,0.087,4,0.061,5,0.948,6,0.948,7,0.948,8,0.069,10,0.948,11,2.798,12,2.544,14,1.444,16,0.181,17,0.995,19,0.965,21,2.929,24,2.485,27,3.423,28,3.003,29,1.205,30,3.003,31,1.764,33,1.169,34,0.012,35,0.423,36,0.51,37,1.033,39,1.739,40,2.281,41,0.246,42,0.391,45,1.047,46,1.162,47,0.739,48,1.301,53,1.543,54,1.354,55,2.149,57,1.543,58,0.087,59,0.364,60,2.254,64,1.474,65,1.411,66,3.423,74,0.578,80,1.931,90,0.233,91,1.444,92,1.444,93,0.948,94,1.955,95,0.948,96,0.948,97,0.835,98,0.948,99,0.948,100,0.835,101,0.948,102,0.948,103,0.835,104,0.948,105,1.541,106,0.948,107,0.835,108,0.326,109,0.948,110,0.835,111,0.948,112,0.948,113,0.835,114,0.918,115,0.89,116,1.749,117,0.835,118,0.918,119,0.948,120,0.835,121,0.948,122,0.835,123,1.85,124,0.708,125,1.444,126,0.862,127,0.503,128,0.835,129,0.81,130,0.948,131,0.835,132,0.948,133,0.835,134,0.948,135,0.835,136,0.338,137,0.835,138,0.948,139,1.541,140,0.948,141,0.81,142,0.948,143,0.835,144,0.948,145,0.862,146,0.835,147,1.444,148,1.722,149,0.835,150,0.948,151,0.835,152,0.948,153,0.948,154,0.004,155,0.006,156,0.004,163,1.905,190,0.98,196,1.92,230,5.001,231,2.464,238,2.464,245,2.464,267,1.162,280,1.477,293,0.853,294,0.91,302,0.477,304,2.396,314,0.945,326,1.59,328,0.91,338,1.047,344,1.543,397,0.98,401,1.444,402,2.602,404,1.492,410,3.041,433,2.403,449,2.923,471,0.908,472,0.56,483,1.205,484,0.615,485,0.615,488,1.099,504,1.099,507,1.282,560,1.169,561,1.347,578,1.243,579,1.169,581,1.066,582,1.243,595,0.89,606,4.218,608,1.805,640,3.398,664,6.17,712,1.411,715,3.289,716,2.987,719,3.398,722,2.349,723,2.349,728,3.517,730,3.429,732,4.385,748,2.987,749,1.62,750,1.62,757,2.924,758,1.62,759,1.805,760,2.232,761,1.706,762,2.232,765,1.62,766,1.92,771,1.805,774,1.62,819,4.115,821,3.785,904,1.92,1041,3.517,1044,1.92,1045,3.593,1142,3.398,1143,3.398,1183,2.058,1187,2.232,1188,2.232,1190,3.328,1199,3.398,1319,3.398,1356,4.243,1357,4.385,1406,4.951,1411,3.751,1441,4.543,1532,3.398,1600,3.751,1795,1.805,1799,6.056,1880,2.464,1912,3.398,1925,2.232,1926,4.543,1927,3.751,1931,5.079,1935,3.751,1942,4.6,1946,2.464,1947,2.464,1948,2.464,1949,2.464,1950,2.464,1951,2.464,1953,2.464,1955,2.464,1956,2.464,1959,3.751,1961,2.464,1963,4.543,1964,2.464,1980,3.751,1986,3.751,1987,3.751,1990,3.751,2006,6.566,2007,5.192,2008,5.192,2009,5.192,2010,5.192,2011,5.805,2012,5.805,2013,5.805,2014,2.816,2015,2.816,2016,2.816,2017,4.288,2018,2.816,2019,2.816,2020,2.816,2021,2.816,2022,2.816,2023,2.816,2024,2.816,2025,2.816,2026,2.816,2027,2.816,2028,2.816,2029,2.464,2030,2.816,2031,3.751,2032,2.816,2033,2.816,2034,2.816,2035,2.816,2036,2.816,2037,2.816,2038,2.816,2039,2.816,2040,2.816,2041,2.816,2042,2.816,2043,2.816,2044,2.816,2045,2.816,2046,2.816,2047,2.816,2048,2.816,2049,2.816,2050,2.816,2051,2.816,2052,2.816,2053,4.288,2054,2.816,2055,2.816,2056,2.816,2057,2.816,2058,2.816,2059,2.816,2060,4.288,2061,4.288,2062,2.816,2063,2.816,2064,2.464,2065,2.816]],["title/modules/TreksMapPageModule.html",[157,1.267,2066,3.025]],["body/modules/TreksMapPageModule.html",[0,0.772,3,0.177,4,0.124,8,0.142,34,0.012,41,0.26,42,0.8,43,2.143,44,2.143,47,1.512,58,0.177,59,0.745,90,0.477,124,0.545,148,2.468,154,0.008,155,0.01,156,0.008,157,1.764,159,2.379,160,2.561,161,3.641,162,2.771,163,2.561,164,2.561,171,3.951,173,3.006,174,2.662,175,2.561,178,3.243,183,3.243,190,2.005,197,3.315,198,3.315,199,3.519,201,3.017,208,4.5,209,4.568,278,3.017,279,3.964,280,1.466,281,3.492,1374,3.676,1375,2.662,1379,3.017,1380,3.694,1381,3.158,1741,5.267,1795,3.694,1799,4.213,1997,5.043,1998,5.043,1999,5.043,2006,4.568,2066,6.219,2067,5.043,2068,5.043,2069,5.764]],["title/components/TreksOrderComponent.html",[0,0.555,149,1.228]],["body/components/TreksOrderComponent.html",[0,0.863,1,1.22,2,1.84,3,0.126,4,0.089,5,1.385,6,1.385,7,1.385,8,0.101,10,1.385,11,2.898,12,2.634,14,1.9,16,0.264,17,1.309,19,1.27,21,3.289,24,2.415,29,1.242,30,3.332,31,1.68,33,1.27,34,0.012,35,0.469,36,0.466,37,1.122,39,1.608,40,1.911,41,0.231,42,0.571,47,1.078,48,1.899,57,2.253,58,0.126,59,0.532,60,2.056,64,2.152,65,2.061,66,2.253,74,0.628,90,0.34,91,1.9,92,1.9,93,1.385,94,2.334,95,1.385,96,1.385,97,1.22,98,1.385,99,1.385,100,1.22,101,1.385,102,1.385,103,1.22,104,1.385,105,1.22,106,1.385,107,1.22,108,0.476,109,1.385,110,1.22,111,1.385,112,1.385,113,1.22,114,1.341,115,1.299,116,2.169,117,1.22,118,1.341,119,1.385,120,1.22,121,1.385,122,1.22,123,1.48,124,0.767,125,1.9,126,1.259,127,0.6,128,1.22,129,1.183,130,1.385,131,1.22,132,1.385,133,1.22,134,1.385,135,1.22,136,0.494,137,1.22,138,1.385,139,1.22,140,1.385,141,1.183,142,1.385,143,1.22,144,1.385,145,1.259,146,1.22,147,1.9,148,1.22,149,2.056,150,1.385,151,1.22,152,1.385,153,1.385,154,0.006,155,0.008,156,0.006,174,1.899,210,5.616,211,3.005,212,3.258,254,6.088,267,2.328,280,1.046,302,0.628,304,1.796,326,1.259,397,1.431,404,1.963,410,2.862,433,1.582,471,1.194,539,1.741,540,1.231,595,1.299,692,3.597,706,2.365,709,3.258,710,3.258,711,3.258,712,2.061,713,3.258,715,3.606,722,3.091,723,3.091,728,4.199,730,3.227,735,4.808,748,3.704,749,2.365,750,2.365,757,1.827,758,2.365,761,2.491,765,2.365,774,2.365,821,3.704,975,4.936,976,3.597,978,3.597,1024,3.597,1035,3.597,1658,3.005,2070,6.722,2071,3.597,2072,6.44,2073,5.641,2074,6.44,2075,6.44,2076,6.44,2077,5.641,2078,5.641,2079,4.112,2080,5.641,2081,4.112,2082,4.112,2083,4.112,2084,4.112,2085,4.112,2086,4.112,2087,4.112,2088,5.641,2089,6.44,2090,4.112,2091,3.258,2092,4.112,2093,4.112,2094,4.112,2095,4.112,2096,4.112,2097,5.641,2098,5.641]],["title/modules/TreksPageModule.html",[157,1.267,1786,2.822]],["body/modules/TreksPageModule.html",[3,0.183,4,0.128,8,0.146,34,0.012,41,0.26,42,0.824,43,2.208,44,2.208,47,1.558,58,0.183,59,0.768,90,0.491,151,2.456,154,0.008,155,0.01,156,0.008,157,1.818,159,2.451,160,2.639,161,3.688,162,2.855,163,2.639,164,2.639,171,3.979,173,3.061,174,2.743,175,2.639,178,3.303,183,3.303,190,2.066,197,4.113,198,3.416,199,3.583,201,3.109,278,3.109,1374,3.743,1375,2.743,1381,3.254,1750,5.304,1786,5.826,1923,5.196,2099,5.196,2100,5.196,2101,5.939,2102,5.939,2103,5.939,2104,5.939]],["title/interfaces/TreksService.html",[467,0.408,560,0.932]],["body/interfaces/TreksService.html",[3,0.095,4,0.067,8,0.076,16,0.198,17,1.068,29,0.597,31,1.621,33,1.633,34,0.012,35,0.555,36,0.545,37,1.444,39,1.777,41,0.169,58,0.26,74,0.344,90,0.381,108,0.704,124,0.575,127,0.663,136,0.553,154,0.004,155,0.006,156,0.004,293,0.616,294,1.196,302,0.808,314,1.177,318,1.005,319,1.636,322,0.578,324,1.875,328,1.526,367,1.171,386,1.171,413,0.812,418,0.812,453,0.763,455,1.548,467,0.831,468,0.763,469,0.812,470,0.787,471,1.641,472,1.632,473,1.442,474,1.486,475,1.486,476,1.486,477,1.933,478,1.852,479,1.486,480,1.557,481,0.787,482,0.837,483,1.413,484,0.676,485,0.676,486,0.697,487,1.655,488,0.974,489,1.398,490,0.837,491,1.245,492,1.442,493,1.171,494,1.486,495,1.789,496,1.735,497,1.171,498,1.646,499,1.745,500,1.486,501,1.245,502,1.245,503,1.245,504,0.974,505,1.76,506,1.245,507,1.572,508,1.207,509,1.245,510,1.245,511,1.245,512,1.207,513,1.245,514,1.276,515,1.245,516,1.245,517,1.036,518,1.171,519,1.207,520,1.913,521,0.837,522,0.837,523,1.245,524,0.837,525,0.837,526,1.207,527,0.837,528,0.837,529,0.837,530,0.837,531,0.837,532,0.837,533,0.837,534,1.245,535,1.207,536,1.398,537,1.207,538,1.068,539,0.718,540,0.676,541,0.763,542,0.837,543,0.718,544,1.245,545,1.136,546,0.718,547,0.718,548,1.068,549,0.763,550,1.237,551,0.837,552,0.812,553,1.276,554,1.315,555,0.787,556,0.763,557,1.102,558,1.315,559,1.171,560,1.37,561,1.413,562,1.245,563,1.245,564,1.245,565,1.245,566,1.597,567,1.207,568,1.207,569,1.597,570,1.207,571,1.207,572,1.486,573,1.597,574,0.837,575,0.837,576,0.741,577,0.812,578,1.102,579,1.036,580,0.763,581,0.635,582,0.741,1430,4.027,1432,4.027,1433,4.027,1434,4.027,1435,4.027,1436,4.027,1437,4.027,1438,4.027,1447,3.648,2105,3.095,2106,3.095,2107,3.095,2108,3.095,2109,3.095,2110,3.095,2111,3.095,2112,3.095,2113,3.095,2114,3.095,2115,3.095]],["title/classes/UnSubscribe.html",[59,0.535,715,1.99]],["body/classes/UnSubscribe.html",[3,0.183,4,0.129,8,0.147,16,0.382,17,1.663,19,1.73,31,1.688,34,0.012,36,0.382,39,1.663,40,2.126,41,0.22,42,0.827,58,0.22,59,0.771,154,0.008,155,0.01,156,0.008,256,4.724,302,0.798,401,2.414,402,3.851,410,3.543,715,3.445,716,4.42,722,4.211,723,4.211,730,3.996,757,3.681,2029,5.216,2116,5.962,2117,4.724,2118,7.167,2119,5.962,2120,5.962,2121,7.973,2122,5.962,2123,6.27,2124,7.167]],["title/coverage.html",[2125,4.958]],["body/coverage.html",[0,1.141,1,1.12,8,0.093,9,3.302,28,1.814,29,0.728,30,1.814,34,0.012,36,0.242,45,1.976,54,2.555,59,0.488,80,3.283,97,1.12,100,1.12,103,1.12,105,1.12,107,1.12,108,0.437,110,1.12,113,1.12,115,1.679,117,1.12,120,1.12,122,1.12,124,0.631,126,1.155,127,0.609,128,1.12,131,1.12,133,1.12,135,1.12,136,0.453,137,1.12,139,1.12,141,1.086,143,1.12,145,1.155,146,1.12,148,1.12,149,1.12,151,1.12,154,0.005,155,0.007,156,0.005,172,2.419,176,2.991,191,2.573,194,2.573,206,2.419,208,2.419,241,2.759,244,2.759,248,2.991,251,2.991,254,2.991,256,4.212,259,1.616,271,2.991,289,2.759,298,2.623,299,2.573,301,3.302,331,2.991,398,3.302,399,2.991,400,3.302,435,2.759,446,3.302,447,2.991,448,3.302,467,0.846,468,0.931,470,2.181,486,0.85,488,0.799,489,0.96,497,0.96,499,0.85,514,0.876,517,0.85,518,0.96,520,0.931,538,0.876,541,0.931,546,0.876,547,0.876,548,0.876,550,0.85,553,0.876,554,0.903,556,0.931,557,0.903,558,0.903,559,0.96,560,0.85,576,0.903,582,0.903,583,3.302,606,2.419,607,4.212,608,3.406,609,5.116,642,3.624,694,3.302,695,3.302,714,3.302,715,2.555,734,2.068,759,3.406,764,2.782,809,4.212,810,3.885,811,4.212,831,2.573,935,3.302,992,3.302,993,4.212,1017,3.302,1018,3.302,1037,3.302,1045,2.171,1075,3.302,1077,4.212,1129,5.293,1130,4.882,1131,5.293,1169,4.212,1325,2.573,1326,3.302,1327,2.759,1328,3.302,1345,2.991,1346,2.759,1347,3.302,1382,4.554,1384,3.302,1385,3.302,1403,3.302,1423,3.302,1428,4.212,1496,3.302,1534,3.302,1568,3.302,1590,3.302,1591,2.759,1611,2.991,1624,3.302,1630,3.302,1758,2.991,1769,3.302,1797,2.991,1799,2.759,1804,3.302,1805,3.302,1895,3.302,1921,3.885,1925,4.212,2000,3.302,2006,2.991,2070,3.302,2071,3.302,2117,4.212,2125,3.302,2126,2.991,2127,3.774,2128,3.774,2129,8.177,2130,8.056,2131,6.153,2132,3.302,2133,6.906,2134,5.315,2135,7.303,2136,5.315,2137,5.315,2138,3.774,2139,5.315,2140,5.315,2141,3.302,2142,3.774,2143,3.774,2144,3.774,2145,5.315,2146,3.774,2147,6.153,2148,7.982,2149,3.774,2150,5.315,2151,6.153,2152,5.315,2153,3.774,2154,3.774,2155,3.774,2156,3.774,2157,3.774,2158,5.315,2159,4.65,2160,3.774,2161,3.774,2162,3.302,2163,3.302,2164,3.302,2165,3.302,2166,3.774,2167,3.774]],["title/dependencies.html",[160,2.214,2168,3.016]],["body/dependencies.html",[8,0.122,22,3.617,23,3.922,26,3.922,34,0.012,42,0.687,43,2.373,44,1.84,47,1.298,48,3.935,49,3.922,51,3.922,114,1.614,154,0.007,155,0.009,156,0.007,160,2.199,185,5.584,186,4.351,190,1.722,204,4.33,205,3.374,211,3.617,214,5.584,215,4.33,218,3.922,221,3.922,223,4.33,226,3.922,227,4.33,228,4.33,230,3.617,233,3.172,338,1.84,484,1.08,485,1.393,641,3.922,813,4.33,1069,5.058,1375,2.286,1631,4.33,1658,5.163,1942,3.922,2169,4.949,2170,8.152,2171,4.949,2172,4.949,2173,4.949,2174,8.453,2175,4.949,2176,4.949,2177,4.33,2178,4.949,2179,4.949,2180,6.382,2181,4.949,2182,6.382,2183,4.949,2184,4.949,2185,4.949,2186,4.949,2187,4.949,2188,7.536,2189,4.949,2190,4.949,2191,4.949,2192,4.949,2193,6.382,2194,4.949,2195,4.949,2196,4.949,2197,4.949,2198,4.949,2199,7.565,2200,6.18,2201,4.949,2202,4.33,2203,5.058,2204,4.33,2205,4.33,2206,6.382,2207,4.33,2208,4.949,2209,4.949,2210,4.949,2211,4.33,2212,4.949,2213,4.949,2214,4.949,2215,4.949,2216,4.949,2217,5.584,2218,4.949,2219,4.949,2220,4.949,2221,4.949,2222,6.382,2223,4.949,2224,4.949,2225,4.949,2226,4.949,2227,4.949,2228,4.949,2229,4.949,2230,4.949,2231,4.949,2232,5.058,2233,4.949,2234,4.33,2235,4.949,2236,4.949,2237,4.949,2238,4.949,2239,4.949,2240,4.949,2241,4.949,2242,4.949,2243,4.949,2244,4.949,2245,4.949,2246,4.949]],["title/miscellaneous/functions.html",[2247,2.21,2248,4.36]],["body/miscellaneous/functions.html",[16,0.425,33,1.717,34,0.011,35,0.517,37,1.517,154,0.009,155,0.011,156,0.009,176,5.252,257,5.798,271,6.044,312,4.844,715,3.667,757,2.945,2117,5.252,2123,5.798,2247,4.247,2248,5.798,2249,6.627,2250,6.627]],["title/index.html",[16,0.221,2251,3.016,2252,3.016]],["body/index.html",[4,0.133,12,2.518,21,3.126,22,3.419,34,0.011,35,0.317,45,2.715,48,3.893,74,0.521,76,2.998,77,5.448,84,3.707,123,1.613,127,0.405,129,1.345,154,0.006,155,0.008,156,0.008,186,3.189,264,4.092,267,1.931,294,0.82,315,4.979,318,1.501,350,4.092,362,3.707,373,5.382,379,4.092,394,4.092,403,2.998,433,1.8,454,3.189,472,0.931,480,1.119,492,1.227,508,1.227,539,1.428,545,1.154,919,2.998,1053,6.014,1061,3.727,1065,3.189,1201,5.382,1202,4.092,1213,5.024,1278,4.092,2031,4.092,2091,3.707,2126,4.875,2133,5.382,2168,4.092,2177,6.637,2188,6.814,2199,7.455,2200,6.946,2202,4.092,2203,4.875,2204,4.092,2205,6.014,2207,6.637,2211,4.092,2217,4.092,2232,4.875,2234,5.382,2253,6.014,2254,6.152,2255,4.678,2256,4.678,2257,6.152,2258,4.678,2259,4.092,2260,4.678,2261,7.303,2262,4.678,2263,6.152,2264,6.152,2265,4.678,2266,4.678,2267,4.678,2268,4.678,2269,4.678,2270,4.678,2271,4.678,2272,4.678,2273,6.152,2274,6.152,2275,5.382,2276,5.382,2277,4.678,2278,6.152,2279,6.389,2280,4.678,2281,6.152,2282,6.152,2283,7.303,2284,4.678,2285,4.678,2286,4.678,2287,4.678,2288,4.678,2289,7.303,2290,6.152,2291,4.678,2292,4.678,2293,6.152,2294,4.678,2295,4.678,2296,6.152,2297,6.152,2298,6.152,2299,4.678,2300,6.152,2301,4.678,2302,4.678,2303,4.092,2304,5.448,2305,4.678,2306,4.678,2307,4.678,2308,4.678,2309,6.152,2310,4.092,2311,4.678,2312,6.874,2313,4.678,2314,4.092,2315,4.678,2316,4.678,2317,4.678,2318,4.678,2319,4.678,2320,4.678,2321,6.152,2322,4.678,2323,4.678,2324,4.678,2325,4.678,2326,4.678,2327,5.382,2328,4.678,2329,6.152,2330,4.678,2331,6.152,2332,4.678,2333,4.678,2334,4.678,2335,4.678,2336,4.678,2337,4.678,2338,4.678,2339,4.678,2340,4.092,2341,4.678,2342,4.678,2343,4.678,2344,6.152,2345,4.678,2346,4.678,2347,4.678,2348,4.678,2349,7.788,2350,4.678,2351,4.678,2352,4.678,2353,4.678,2354,4.678,2355,5.382,2356,6.152,2357,4.678,2358,4.678,2359,4.678,2360,4.678,2361,7.788,2362,4.678]],["title/license.html",[2251,3.016,2252,3.016,2363,3.016]],["body/license.html",[4,0.153,34,0.01,68,4.297,154,0.008,155,0.01,156,0.008,175,2.613,293,1.17,362,4.659,403,4.555,706,3.382,2091,6.054,2126,4.659,2203,4.659,2304,6.054,2363,5.144,2364,5.879,2365,5.879,2366,8.125,2367,5.879,2368,5.879,2369,5.879,2370,5.879,2371,5.879,2372,5.879,2373,5.879,2374,7.107,2375,5.879,2376,5.879,2377,5.879,2378,7.639,2379,7.639,2380,5.879,2381,7.107,2382,5.879,2383,5.879,2384,7.107,2385,7.107,2386,7.107,2387,5.879,2388,5.879,2389,5.879,2390,5.879,2391,5.879,2392,7.107,2393,5.879,2394,7.107,2395,5.879,2396,7.107,2397,7.107,2398,7.639,2399,7.107,2400,5.879,2401,5.879,2402,5.879,2403,5.879,2404,5.879,2405,5.879,2406,5.879,2407,5.879,2408,5.879,2409,5.879,2410,5.879,2411,5.879,2412,5.879,2413,5.879,2414,5.879,2415,5.879,2416,5.879,2417,5.879,2418,5.879,2419,5.879,2420,5.879,2421,5.879,2422,5.879,2423,5.879,2424,7.107,2425,5.879,2426,5.879,2427,5.879,2428,5.879,2429,5.879,2430,5.879,2431,5.879,2432,5.879,2433,5.879,2434,5.879,2435,5.879,2436,5.879,2437,5.879]],["title/modules.html",[159,2.339]],["body/modules.html",[34,0.01,77,5.849,154,0.009,155,0.01,156,0.009,158,4.579,159,2.585,170,4.271,171,3.011,186,5.892,1369,4.579,1417,4.271,1741,4.015,1750,4.015,1781,4.579,1785,4.271,1786,4.271,1917,4.579,1993,4.579,2066,4.579,2232,6.849,2438,8.642,2439,8.693,2440,7.381]],["title/overview.html",[2441,4.958]],["body/overview.html",[1,2.335,2,1.471,34,0.012,59,0.583,82,2.472,90,0.373,97,2.335,100,2.335,103,2.003,105,2.003,107,2.003,110,2.335,113,2.003,117,2.003,120,2.335,122,2.335,126,2.409,128,2.003,131,2.003,133,2.335,135,2.003,137,2.003,139,2.003,141,1.942,143,2.335,145,2.067,146,2.003,148,2.003,149,2.003,151,2.003,154,0.006,155,0.008,156,0.006,157,1.381,158,6.349,159,1.862,160,2.005,161,2.169,162,2.169,163,2.005,164,2.005,165,3.947,166,3.947,167,3.947,168,3.947,169,3.947,170,4.603,171,4.104,172,4.327,173,2.571,174,2.084,175,2.005,279,2.361,300,2.472,331,3.575,469,1.183,1068,3.947,1369,5.635,1370,3.947,1371,3.947,1383,3.076,1417,5.365,1418,3.947,1419,3.947,1741,5.349,1742,3.947,1743,3.947,1744,3.947,1750,5.238,1751,3.947,1752,3.947,1753,3.947,1760,3.947,1761,3.947,1762,3.947,1781,6.065,1782,3.947,1783,3.947,1784,3.947,1785,4.603,1786,5.517,1917,5.842,1918,3.947,1919,3.947,1993,5.842,1994,3.947,1995,3.947,2066,5.842,2067,3.947,2068,3.947,2099,3.947,2100,3.947,2441,3.947,2442,3.947,2443,4.511,2444,4.511,2445,4.511]],["title/routes.html",[279,2.966]],["body/routes.html",[34,0.011,154,0.009,155,0.011,156,0.009,279,3.58]],["title/miscellaneous/typealiases.html",[2247,2.21,2446,4.983]],["body/miscellaneous/typealiases.html",[16,0.431,34,0.011,36,0.431,74,0.748,154,0.009,155,0.011,156,0.009,322,1.256,470,1.71,539,1.785,540,1.467,2247,4.308,2447,6.722,2448,6.722]],["title/miscellaneous/variables.html",[2247,2.21,2449,4.36]],["body/miscellaneous/variables.html",[4,0.125,12,2.015,16,0.333,34,0.012,35,0.29,36,0.51,45,2.159,54,1.355,72,3.753,73,3.753,74,0.891,75,2.925,76,2.749,80,2.74,82,4.163,84,4.602,85,3.753,86,3.753,118,1.894,123,2.038,124,0.683,127,0.541,136,0.515,154,0.004,155,0.006,156,0.004,173,3.019,175,1.252,210,3.136,267,2.982,294,0.752,314,0.377,315,2.925,318,0.936,322,0.802,326,2.256,328,0.752,403,2.749,421,3.136,433,2.633,435,3.136,454,5.297,464,5.59,465,3.4,472,1.155,481,1.091,484,1.268,485,0.936,536,1.091,545,1.998,554,1.027,555,1.091,607,2.233,608,1.806,609,4.488,642,3.959,643,3.4,712,3.535,759,3.721,764,1.475,809,2.233,810,2.059,811,3.4,904,5.388,919,2.749,968,3.4,984,2.749,987,5.08,1061,3.518,1065,3.959,1069,6.157,1073,3.753,1129,3.4,1130,3.136,1131,4.602,1169,4.602,1170,3.753,1213,3.136,1233,6.448,1235,3.753,1236,3.753,1243,3.753,1246,7.202,1248,6.647,1251,5.08,1252,5.759,1253,5.759,1254,3.753,1256,3.753,1257,3.753,1258,6.171,1259,3.753,1260,3.753,1268,5.759,1300,3.753,1406,3.4,1428,2.233,1465,3.753,1658,3.136,1667,3.753,1992,6.448,2064,5.08,2132,2.465,2141,3.753,2159,2.465,2162,2.465,2163,2.465,2164,2.465,2165,6.448,2247,1.806,2253,3.753,2259,5.08,2275,6.171,2276,3.753,2279,3.753,2303,3.753,2304,4.602,2310,3.753,2314,3.753,2327,3.753,2340,3.753,2355,3.753,2442,5.759,2449,2.465,2450,2.818,2451,2.818,2452,2.818,2453,2.818,2454,2.818,2455,2.818,2456,2.818,2457,4.29,2458,2.818,2459,5.807,2460,4.29,2461,4.29,2462,4.29,2463,8.097,2464,2.818,2465,2.818,2466,2.818,2467,4.29,2468,4.29,2469,6.582,2470,7.37,2471,4.29,2472,4.29,2473,5.807,2474,7.37,2475,5.807,2476,5.807,2477,5.807,2478,4.29,2479,4.29,2480,4.29,2481,5.807,2482,5.807,2483,7.37,2484,4.29,2485,5.807,2486,4.29,2487,4.29,2488,4.29,2489,4.29,2490,4.29,2491,4.29,2492,4.29,2493,4.29,2494,4.29,2495,4.29,2496,4.29,2497,7.054,2498,4.29,2499,4.29,2500,4.29,2501,5.807,2502,4.29,2503,4.29,2504,7.902,2505,4.29,2506,4.29,2507,4.29,2508,6.582,2509,4.29,2510,4.29,2511,4.29,2512,5.807,2513,5.807,2514,5.807,2515,5.807,2516,4.29,2517,4.29,2518,4.29,2519,4.29,2520,4.29,2521,5.807,2522,4.29,2523,4.29,2524,4.29,2525,4.29,2526,4.29,2527,4.29,2528,4.29,2529,4.29,2530,2.818,2531,2.818,2532,2.818,2533,2.818,2534,4.29,2535,4.29,2536,4.29,2537,4.29,2538,2.818,2539,2.818]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.01",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":1260,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":1073,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["0.51.7",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["0.53.1",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["0.705824",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.29",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2210,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":713,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["1",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).tofixed(1",{"_index":1873,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0",{"_index":1871,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0.1",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1877,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.3.1",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["1/21",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":968,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekCardComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":808,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["1000",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["100px",{"_index":2063,"title":{},"body":{"components/TreksMapPage.html":{}}}],["1024×1024px",{"_index":2328,"title":{},"body":{"index.html":{}}}],["11.0.1",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200×1200px",{"_index":2342,"title":{},"body":{"index.html":{}}}],["12px",{"_index":1880,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["13",{"_index":2442,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1258,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["16px",{"_index":1533,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["17",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1235,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["195",{"_index":1071,"title":{},"body":{"components/LoaderComponent.html":{}}}],["199",{"_index":1072,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{},"license.html":{}}}],["2.0.1",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2212,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["2.6.9",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["2/29",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{}}}],["2019",{"_index":2368,"title":{},"body":{"license.html":{}}}],["20px",{"_index":1883,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["24",{"_index":1874,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["24px",{"_index":1324,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["25",{"_index":2443,"title":{},"body":{"overview.html":{}}}],["250",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2732×2732px",{"_index":2333,"title":{},"body":{"index.html":{}}}],["29",{"_index":2444,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2230,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1531,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["4",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{},"overview.html":{}}}],["4.0.0",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2445,"title":{},"body":{"overview.html":{}}}],["44.410157",{"_index":987,"title":{},"body":{"injectables/GeolocateService.html":{},"miscellaneous/variables.html":{}}}],["48px*48px",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4em",{"_index":466,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["5",{"_index":421,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["5.4.4",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["5.8.0",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1048,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["5s",{"_index":605,"title":{},"body":{"components/FilterComponent.html":{}}}],["6",{"_index":2141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{},"components/TrekCardComponent.html":{}}}],["61b22f",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["625b5d",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.2",{"_index":2170,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1992,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["898083",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1068,"title":{},"body":{"components/LoaderComponent.html":{},"overview.html":{}}}],["a.indexof(v",{"_index":1734,"title":{},"body":{"injectables/SettingsService.html":{}}}],["a.properties.name",{"_index":660,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["above",{"_index":2384,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1322,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["abstract/unsubscribe",{"_index":1168,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["accept",{"_index":1341,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["access",{"_index":508,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["accessibilities",{"_index":476,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["accesstoken",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":1356,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["activatedroutesnapshot",{"_index":1389,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["activefiltersnumber",{"_index":610,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["actual_component",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["actually",{"_index":376,"title":{},"body":{"injectables/CacheService.html":{}}}],["add",{"_index":1053,"title":{},"body":{"components/LoaderComponent.html":{},"index.html":{}}}],["addsourceslayersevents",{"_index":1137,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["addsoustractmaxbounds",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["advice",{"_index":510,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["advised",{"_index":2434,"title":{},"body":{"license.html":{}}}],["advised_parking",{"_index":509,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["alert",{"_index":1308,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alert.present",{"_index":1314,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertcontroller",{"_index":816,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["alertmsg",{"_index":1825,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["alertoption",{"_index":1302,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["aliases",{"_index":2447,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1066,"title":{},"body":{"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["allow",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabetically",{"_index":659,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["already",{"_index":599,"title":{},"body":{"components/FilterComponent.html":{}}}],["always",{"_index":1378,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["alwaysdisplayeditems",{"_index":407,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["ambiance",{"_index":525,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["analytics",{"_index":2177,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["analytics/ngx",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["and/or",{"_index":2389,"title":{},"body":{"license.html":{}}}],["android",{"_index":2200,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["androidbuild",{"_index":2287,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1375,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1317,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["animate('250ms",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animated",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["animations",{"_index":437,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["any).bounds",{"_index":1490,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).fitboundsoptions",{"_index":1492,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).indexof(filtervalue",{"_index":672,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["any).name",{"_index":1399,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["any).properties.id",{"_index":1975,"title":{},"body":{"components/TrekMapPage.html":{}}}],["any).sources['tiles",{"_index":1191,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["api",{"_index":2279,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1329,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/abstract/unsubscribe",{"_index":761,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/components/animations",{"_index":436,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["app/components/collapsible",{"_index":1764,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/connect",{"_index":1766,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/filters/filters.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/geolocate",{"_index":1746,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/information",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/layers",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loader/loader.component",{"_index":1768,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/map",{"_index":1748,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/poi",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/poi/poi.component",{"_index":1756,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/components/progress/progress.component",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/search/search.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/trek",{"_index":1757,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/interfaces/interfaces",{"_index":595,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/map",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/${trekid",{"_index":1480,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/:trekid",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/resolvers/more",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["app/resolvers/more.resolver",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{}}}],["app/resolvers/trek.resolver",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["app/resolvers/treks.resolver",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/services/cache/cache.service",{"_index":1338,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["app/services/filter",{"_index":762,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["app/services/geolocate/geolocate.service",{"_index":856,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["app/services/loading/loading.service",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["app/services/more",{"_index":1392,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["app/services/offline",{"_index":763,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["app/services/online",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["app/services/search",{"_index":1610,"title":{},"body":{"components/SearchComponent.html":{}}}],["app/services/settings/settings.service",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/shared/shared",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["app/shared/shared.module",{"_index":1998,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/tabs/more",{"_index":1776,"title":{},"body":{"components/TabsPage.html":{}}}],["app/tabs/treks",{"_index":1477,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["app/tabs/treks${this.offline",{"_index":1842,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["app/tabs/treks/trek",{"_index":1478,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/tabs/treks/treks",{"_index":1481,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2321,"title":{},"body":{"index.html":{}}}],["applyfilters",{"_index":724,"title":{},"body":{"components/FiltersComponent.html":{}}}],["appmodule",{"_index":158,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1406,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":170,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":2320,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2431,"title":{},"body":{"license.html":{}}}],["array",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["arrival",{"_index":502,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["arrival_city",{"_index":516,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["artwork",{"_index":2337,"title":{},"body":{"index.html":{}}}],["ascent",{"_index":503,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["assets/i18n",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/map/zone/zone.geojson",{"_index":1239,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["assets/map/{fontstack}/{range}.pbf",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assume",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":821,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["attributioncontrol",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":491,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["available",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["availablelanguage",{"_index":2303,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["availablelanguage[0",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["b.properties.name",{"_index":661,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["background",{"_index":1069,"title":{},"body":{"components/LoaderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["background'].tiles[0",{"_index":1192,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["backgroundgeolocation",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundgeolocationconfig",{"_index":955,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationevents",{"_index":956,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider",{"_index":957,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider.distance_filter_provider",{"_index":966,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["badge",{"_index":2209,"title":{},"body":{"dependencies.html":{}}}],["bar",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["baseurl",{"_index":997,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["before",{"_index":1202,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["begin",{"_index":1122,"title":{},"body":{"injectables/LoadingService.html":{}}}],["begin(id",{"_index":1102,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject",{"_index":755,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["behaviorsubject([0",{"_index":1665,"title":{},"body":{"injectables/SettingsService.html":{}}}],["behaviorsubject(false",{"_index":1089,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject(null",{"_index":953,"title":{},"body":{"injectables/GeolocateService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["below",{"_index":2294,"title":{},"body":{"index.html":{}}}],["best",{"_index":2335,"title":{},"body":{"index.html":{}}}],["between",{"_index":1885,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["binary",{"_index":2374,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":507,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["bootstrap",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["border",{"_index":711,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["bottom",{"_index":1494,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["broadcast",{"_index":385,"title":{},"body":{"injectables/CacheService.html":{}}}],["broadcasts",{"_index":354,"title":{},"body":{"injectables/CacheService.html":{}}}],["browse",{"_index":2439,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["bsd",{"_index":2364,"title":{},"body":{"license.html":{}}}],["build",{"_index":2289,"title":{},"body":{"index.html":{}}}],["business",{"_index":2420,"title":{},"body":{"license.html":{}}}],["button",{"_index":1319,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["buttons",{"_index":923,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["buttontext",{"_index":452,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["c",{"_index":2367,"title":{},"body":{"license.html":{}}}],["cache",{"_index":303,"title":{},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["cacheservice",{"_index":299,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"coverage.html":{}}}],["calc(100",{"_index":1882,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["can't",{"_index":1301,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cancel",{"_index":926,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["capitalize",{"_index":2065,"title":{},"body":{"components/TreksMapPage.html":{}}}],["card",{"_index":1528,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["card'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["card.component",{"_index":1759,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["card.component.html",{"_index":1807,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.scss",{"_index":1806,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts",{"_index":1805,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:15",{"_index":1819,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:16",{"_index":1817,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:17",{"_index":1818,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:18",{"_index":1828,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:19",{"_index":1829,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:20",{"_index":1832,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:21",{"_index":1816,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:26",{"_index":1830,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:27",{"_index":1831,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:28",{"_index":1833,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:32",{"_index":1823,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:55",{"_index":1821,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:60",{"_index":1822,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:77",{"_index":1826,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card/trek",{"_index":1758,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":1983,"title":{},"body":{"components/TrekMapPage.html":{}}}],["catcherror",{"_index":339,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["catcherror((error",{"_index":392,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["categories",{"_index":1729,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categories.foreach(categoryid",{"_index":1735,"title":{},"body":{"injectables/SettingsService.html":{}}}],["category",{"_index":555,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["category.name",{"_index":1739,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categoryid",{"_index":1737,"title":{},"body":{"injectables/SettingsService.html":{}}}],["caused",{"_index":2422,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2271,"title":{},"body":{"index.html":{}}}],["center",{"_index":1065,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":542,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["changed",{"_index":1056,"title":{},"body":{"components/LoaderComponent.html":{}}}],["changedetection",{"_index":1569,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy",{"_index":1582,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy.default",{"_index":1570,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectorref",{"_index":1576,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changelayervisibility",{"_index":1022,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["changenotificationsmode",{"_index":822,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes",{"_index":845,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["changes.currentpois",{"_index":871,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes.filteredtreks",{"_index":1175,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changes.poi",{"_index":1511,"title":{},"body":{"components/PoiComponent.html":{}}}],["changescurrentpois",{"_index":870,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.currentvalue",{"_index":872,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.previousvalue",{"_index":873,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrenttreks",{"_index":1174,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.currentvalue",{"_index":1176,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.previousvalue",{"_index":1177,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["channel",{"_index":906,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["channel${this.currentpoistonotify[notifiedindex].id",{"_index":907,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["check",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkauthorization",{"_index":936,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checked",{"_index":543,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["checkedvalue.id",{"_index":676,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkedvalue.interval",{"_index":681,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkiftrackerisrunning",{"_index":937,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checkstate",{"_index":743,"title":{},"body":{"components/FiltersComponent.html":{}}}],["checktonotify",{"_index":823,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["checktonotify(fromcoordinates",{"_index":837,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["children",{"_index":1794,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["circle",{"_index":1246,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["circlecolorexpression",{"_index":1261,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push('match",{"_index":1262,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(['get",{"_index":1263,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(environment.map.clusterpaint['circle",{"_index":1267,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.color",{"_index":1266,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.id",{"_index":1265,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cities",{"_index":512,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["city",{"_index":1714,"title":{},"body":{"injectables/SettingsService.html":{}}}],["class",{"_index":59,"title":{"classes/UnSubscribe.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2116,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["clause",{"_index":2365,"title":{},"body":{"license.html":{}}}],["clickdeleteconfirm",{"_index":1811,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clickdeleteconfirm($event",{"_index":1820,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clicklocalnotifications",{"_index":817,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["clone",{"_index":2268,"title":{},"body":{"index.html":{}}}],["clonedeep",{"_index":759,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedeep(context.mapconfig",{"_index":2038,"title":{},"body":{"components/TreksMapPage.html":{}}}],["clonedeep(environment.onlinemapconfig",{"_index":1489,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["clonedeep(this.filters$.getvalue",{"_index":1691,"title":{},"body":{"injectables/SettingsService.html":{}}}],["clonedeep(this.temporaryfilters$.getvalue",{"_index":784,"title":{},"body":{"components/FiltersComponent.html":{}}}],["clonedeep(trek",{"_index":1697,"title":{},"body":{"injectables/SettingsService.html":{}}}],["close",{"_index":725,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["cluster",{"_index":1236,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule",{"_index":1370,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_declarations",{"_index":1371,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_imports",{"_index":1372,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["cluster_morepagemodule",{"_index":1418,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_declarations",{"_index":1419,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_imports",{"_index":1420,"title":{},"body":{"modules/MorePageModule.html":{}}}],["cluster_sharedmodule",{"_index":1742,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1743,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1744,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule",{"_index":1751,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_declarations",{"_index":1752,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_exports",{"_index":1753,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_shareduimodule",{"_index":1760,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_declarations",{"_index":1761,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_exports",{"_index":1762,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":1782,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":1783,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_imports",{"_index":1784,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule",{"_index":1918,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_declarations",{"_index":1919,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_imports",{"_index":1920,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["cluster_trekmappagemodule",{"_index":1994,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_declarations",{"_index":1995,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_imports",{"_index":1996,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["cluster_treksmappagemodule",{"_index":2067,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_declarations",{"_index":2068,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_imports",{"_index":2069,"title":{},"body":{"modules/TreksMapPageModule.html":{}}}],["cluster_trekspagemodule",{"_index":2099,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_declarations",{"_index":2100,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_imports",{"_index":2101,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["clusterid",{"_index":1275,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusterpaint",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterradius",{"_index":1237,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusters",{"_index":1245,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["code",{"_index":2382,"title":{},"body":{"license.html":{}}}],["collapsed",{"_index":423,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["collapsible",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["collapsiblelistcomponent",{"_index":97,"title":{"components/CollapsibleListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["color",{"_index":545,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":2323,"title":{},"body":{"index.html":{}}}],["column",{"_index":1321,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["combinelatest",{"_index":640,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TreksMapPage.html":{}}}],["combinelatest(treks",{"_index":687,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{}}}],["command",{"_index":2358,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1374,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["commonsrc",{"_index":581,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["complete",{"_index":386,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["componentprops",{"_index":1987,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"overview.html":{}}}],["components/filter",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["components/filter/filter.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["components/treks",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["concat",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":1042,"title":{},"body":{"components/LoaderComponent.html":{}}}],["conditions",{"_index":2379,"title":{},"body":{"license.html":{}}}],["config",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.xml",{"_index":2298,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":2350,"title":{},"body":{"index.html":{}}}],["connect",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["connecterrorcomponent",{"_index":100,"title":{"components/ConnectErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":1961,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["connectionerror",{"_index":1351,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{}}}],["consequential",{"_index":2413,"title":{},"body":{"license.html":{}}}],["console.error('no",{"_index":1906,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["console.log('poi",{"_index":910,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["const",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["constructor(alertcontroller",{"_index":1144,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["constructor(backgroundgeolocation",{"_index":942,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["constructor(cache",{"_index":1332,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["constructor(http",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["constructor(loading",{"_index":1044,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["constructor(modalctrl",{"_index":731,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(more",{"_index":1386,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["constructor(navparams",{"_index":1024,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["constructor(offlinetreks",{"_index":1501,"title":{},"body":{"components/PoiComponent.html":{},"components/ProgressComponent.html":{}}}],["constructor(onlinetreks",{"_index":2001,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TabsPage.html":{}}}],["constructor(private",{"_index":682,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/LayersVisibilityComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"components/TabsPage.html":{}}}],["constructor(protected",{"_index":1113,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["constructor(public",{"_index":1006,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{}}}],["constructor(route",{"_index":1355,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["constructor(settings",{"_index":618,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["contact",{"_index":552,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["container",{"_index":1060,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekMapPage.html":{}}}],["contains",{"_index":535,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["containsfilter",{"_index":468,"title":{"interfaces/ContainsFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["containsfilter(filter",{"_index":620,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["content",{"_index":453,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["context",{"_index":1795,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{}}}],["context.mapconfig",{"_index":1971,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.offline",{"_index":1964,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.pois",{"_index":1968,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.touristiccategorieswithfeatures",{"_index":1970,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trek",{"_index":1966,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool",{"_index":2035,"title":{},"body":{"components/TreksMapPage.html":{}}}],["context.trekstool.filteredtreks",{"_index":2049,"title":{},"body":{"components/TreksMapPage.html":{}}}],["context.trekstool.getcommonimgsrc",{"_index":1972,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool.gettrekdetailsurl((this.currenttrek",{"_index":1974,"title":{},"body":{"components/TrekMapPage.html":{}}}],["contexts",{"_index":575,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["contract",{"_index":2426,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2394,"title":{},"body":{"license.html":{}}}],["coordinates",{"_index":496,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["coordinates[0",{"_index":1290,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[1",{"_index":1291,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["copyright",{"_index":2366,"title":{},"body":{"license.html":{}}}],["cordova",{"_index":2199,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cordova@9.0.0",{"_index":2266,"title":{},"body":{"index.html":{}}}],["core",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["corpus",{"_index":2370,"title":{},"body":{"license.html":{}}}],["count",{"_index":1250,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coverage",{"_index":2125,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":379,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["createmap",{"_index":1138,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["createtranslateloader",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["criterionvalue",{"_index":669,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["cssclass",{"_index":927,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["currentdatasetting",{"_index":1683,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentdatasetting.values.map(value",{"_index":1685,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentorder",{"_index":2074,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["currentpois",{"_index":828,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["currentpoistonotify",{"_index":818,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["currentposition",{"_index":819,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/TreksMapPage.html":{}}}],["currentprogress",{"_index":1573,"title":{},"body":{"components/ProgressComponent.html":{}}}],["currentsearchvalue",{"_index":1595,"title":{},"body":{"components/SearchComponent.html":{}}}],["currenttrek",{"_index":1928,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrek!.properties.name",{"_index":1991,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttypepoi",{"_index":1514,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["currenttypepoi.pictogram",{"_index":1518,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["custom",{"_index":2062,"title":{},"body":{"components/TreksMapPage.html":{}}}],["customevent",{"_index":704,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["customize",{"_index":2297,"title":{},"body":{"index.html":{}}}],["damage",{"_index":2437,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2414,"title":{},"body":{"license.html":{}}}],["data",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"license.html":{}}}],["data.context",{"_index":1959,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["data.id",{"_index":868,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["data.items",{"_index":1414,"title":{},"body":{"components/MorePage.html":{}}}],["data['item",{"_index":1364,"title":{},"body":{"components/MoreItemPage.html":{}}}],["datasetting",{"_index":548,"title":{"interfaces/DataSetting.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["datasetting.find(data",{"_index":1694,"title":{},"body":{"injectables/SettingsService.html":{}}}],["datasettings",{"_index":1141,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["debug",{"_index":971,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["declarations",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["defaultsettings",{"_index":1675,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["delay",{"_index":383,"title":{},"body":{"injectables/CacheService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["delete",{"_index":350,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["deleteconfirm",{"_index":1857,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deleteconfirm.present",{"_index":1864,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deletetrek",{"_index":1812,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["departure",{"_index":492,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["departure_city",{"_index":515,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["dependencies",{"_index":160,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":505,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["description_teaser",{"_index":500,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["desiredaccuracy",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desk",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["details",{"_index":994,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["details.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["details.component.html",{"_index":996,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.scss",{"_index":995,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts",{"_index":993,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1003,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":1004,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":999,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1005,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1540,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1001,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":1546,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1549,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1548,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1545,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1537,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1000,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":1541,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1542,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":1547,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":1543,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:31",{"_index":1544,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1539,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":1538,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.module#trekdetailspagemodule",{"_index":1798,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details.module.ts",{"_index":1922,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page",{"_index":1924,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page.ts",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["details/${this.trek.properties.id",{"_index":1843,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${trekid",{"_index":1479,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/:trekid",{"_index":1796,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/information",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/InformationDeskDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/poi",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/trek",{"_index":1797,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"coverage.html":{}}}],["dev",{"_index":985,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["developmentenvironment.prod.ts",{"_index":2305,"title":{},"body":{"index.html":{}}}],["device",{"_index":2211,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["difficulty",{"_index":473,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["direct",{"_index":2408,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1320,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["directive",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["directives",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["disablegeolocationnotification",{"_index":824,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["disclaimed",{"_index":2404,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2386,"title":{},"body":{"license.html":{}}}],["display",{"_index":1061,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distance",{"_index":642,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distance(from",{"_index":899,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["distance(point(a.geometry.coordinates",{"_index":655,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distance(point(b.geometry.coordinates",{"_index":658,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefilter",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distancefromtreka",{"_index":654,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefromtrekb",{"_index":657,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distribution",{"_index":2391,"title":{},"body":{"license.html":{}}}],["document.createelement('div",{"_index":1221,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["documentation",{"_index":2126,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["domain.fr/mobile",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":2346,"title":{},"body":{"index.html":{}}}],["downloads",{"_index":2348,"title":{},"body":{"index.html":{}}}],["duration",{"_index":501,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["during",{"_index":359,"title":{},"body":{"injectables/CacheService.html":{}}}],["dynamic",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1271,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["each",{"_index":374,"title":{},"body":{"injectables/CacheService.html":{}}}],["ease",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easily",{"_index":2295,"title":{},"body":{"index.html":{}}}],["el",{"_index":1220,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["el.classname",{"_index":1222,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["element.id",{"_index":799,"title":{},"body":{"components/FiltersComponent.html":{}}}],["element.properties.id",{"_index":1619,"title":{},"body":{"components/SearchComponent.html":{}}}],["ellipsis",{"_index":1890,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["email",{"_index":526,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["emit",{"_index":381,"title":{},"body":{"injectables/CacheService.html":{}}}],["emits",{"_index":356,"title":{},"body":{"injectables/CacheService.html":{}}}],["emitted",{"_index":388,"title":{},"body":{"injectables/CacheService.html":{}}}],["empty",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":2310,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["enablegeolocationnotification",{"_index":825,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["end",{"_index":1529,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["entrycomponents",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["env/environment",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["environment",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1411,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{}}}],["environment.availablelanguage",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.indexof(defaultlanguage",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.length",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage[0",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.backgroundgeolocation",{"_index":972,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["environment.map.clusterpaint",{"_index":1249,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.globalmapiconsize",{"_index":1269,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zonelayerproperties",{"_index":1242,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zoneoutlinelayerproperties",{"_index":1244,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox",{"_index":1171,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox.accesstoken",{"_index":1172,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.meterstonotify",{"_index":893,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["environment.offlinemapconfig",{"_index":2004,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.offlinemapconfig.style",{"_index":1193,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.onlinebaseurl",{"_index":1002,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{}}}],["environment.onlinemapconfig",{"_index":2005,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.prod.ts",{"_index":2300,"title":{},"body":{"index.html":{}}}],["environment.trekzoom.zoom",{"_index":1318,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["environment.usefirebase",{"_index":1397,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["erasefilters",{"_index":726,"title":{},"body":{"components/FiltersComponent.html":{}}}],["err",{"_index":1281,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["error",{"_index":449,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["error'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["error.component",{"_index":1767,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["error.component.html",{"_index":451,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.scss",{"_index":450,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts",{"_index":448,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":460,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:11",{"_index":461,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:12",{"_index":459,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:13",{"_index":458,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:9",{"_index":462,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.status",{"_index":1401,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["error/connect",{"_index":447,"title":{},"body":{"components/ConnectErrorComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["es6",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2433,"title":{},"body":{"license.html":{}}}],["event",{"_index":706,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{},"license.html":{}}}],["event.detail.checked",{"_index":707,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["event.detail.value",{"_index":1035,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["event.stoppropagation",{"_index":1844,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["eventemitter",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["everything",{"_index":368,"title":{},"body":{"injectables/CacheService.html":{}}}],["exemplary",{"_index":2412,"title":{},"body":{"license.html":{}}}],["expand",{"_index":597,"title":{},"body":{"components/FilterComponent.html":{}}}],["expandable",{"_index":598,"title":{},"body":{"components/FilterComponent.html":{}}}],["expandableitems",{"_index":408,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expandcollapse",{"_index":435,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expanded",{"_index":409,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["expansion",{"_index":1285,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["exports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["express",{"_index":2395,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1055,"title":{},"body":{"components/LoaderComponent.html":{}}}],["extand",{"_index":1881,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["extends",{"_index":471,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{}}}],["extensive",{"_index":2362,"title":{},"body":{"index.html":{}}}],["extra",{"_index":1887,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["f04141",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fails",{"_index":1916,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fake",{"_index":983,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["false",{"_index":433,"title":{},"body":{"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":477,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["feature.geometry.coordinates",{"_index":877,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["feature.properties",{"_index":1296,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.properties.id",{"_index":867,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["feature.properties.name",{"_index":876,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["feature.properties[filter.id",{"_index":670,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["featurecollection",{"_index":478,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["featureid",{"_index":1312,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties",{"_index":1273,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties.cluster_id",{"_index":1276,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features",{"_index":487,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["features.foreach((feature",{"_index":1303,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].geometry",{"_index":1287,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].properties",{"_index":1274,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresincluster",{"_index":1282,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio",{"_index":1299,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio.push",{"_index":1304,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fff",{"_index":1252,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1254,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2356,"title":{},"body":{"index.html":{}}}],["files:appname",{"_index":2302,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2275,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":108,"title":{"interfaces/Filter.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filter'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filter((loadingid",{"_index":1108,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["filter((v",{"_index":1733,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filter(treks",{"_index":622,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter(value",{"_index":678,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.component.html",{"_index":585,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":584,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.id",{"_index":788,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.name",{"_index":602,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.type",{"_index":649,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values",{"_index":677,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filter.values.filter(value",{"_index":662,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values.foreach(value",{"_index":797,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filtercomponent",{"_index":103,"title":{"components/FilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredfeatures",{"_index":644,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredfeatures.filter(feature",{"_index":647,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredtreks",{"_index":561,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["filters",{"_index":549,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["filters'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filters.component.html",{"_index":718,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":717,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.erase",{"_index":802,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.foreach(filter",{"_index":646,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filters.oneresult",{"_index":804,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.push(filter",{"_index":1686,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filters.results",{"_index":807,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.title",{"_index":800,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.zeroresult",{"_index":803,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filterscomponent",{"_index":105,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtertreks",{"_index":1441,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["filtertreksservice",{"_index":606,"title":{"injectables/FilterTreksService.html":{}},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["filtertreksservice.containsfilter(filter",{"_index":650,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.filter(treks",{"_index":782,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).indexof(feature.properties[filter.id",{"_index":674,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).length",{"_index":665,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedinterval(filter).foreach(([min",{"_index":667,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getnumberofactivefilters(filters",{"_index":686,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.intervalfilter(filter",{"_index":651,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.isfilteractive(filter",{"_index":648,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.sort(filtertreksservice.filter(treks",{"_index":691,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtervalue",{"_index":538,"title":{"interfaces/FilterValue.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filtervalue.checked",{"_index":792,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtervaluecomponent",{"_index":107,"title":{"components/FilterValueComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":2293,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1123,"title":{},"body":{"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["finish(id",{"_index":1106,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["firebase",{"_index":2349,"title":{},"body":{"index.html":{}}}],["firebaseanalytics",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["first",{"_index":2031,"title":{},"body":{"components/TreksMapPage.html":{},"index.html":{}}}],["first_picture",{"_index":490,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["fit",{"_index":2339,"title":{},"body":{"index.html":{}}}],["fitbounds",{"_index":1156,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fitness",{"_index":2401,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1063,"title":{},"body":{"components/LoaderComponent.html":{}}}],["flex",{"_index":1062,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["fly",{"_index":1155,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["flytouserlocation",{"_index":1139,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["following",{"_index":2378,"title":{},"body":{"license.html":{}}}],["font",{"_index":465,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["foreground",{"_index":860,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["forkjoin",{"_index":1898,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["form",{"_index":2387,"title":{},"body":{"license.html":{}}}],["forms",{"_index":2375,"title":{},"body":{"license.html":{}}}],["found",{"_index":1907,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fr",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fromcoordinates",{"_index":839,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["full",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FiltersComponent.html":{},"modules/TabsPageRoutingModule.html":{}}}],["function",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{}}}],["functions",{"_index":2248,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2264,"title":{},"body":{"index.html":{}}}],["geographical",{"_index":2319,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":481,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["geojsonproperties",{"_index":1165,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource",{"_index":1166,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterexpansionzoom",{"_index":1286,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterleaves",{"_index":1279,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsourceraw",{"_index":1167,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geolocate",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["geolocate.cancel",{"_index":914,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.open",{"_index":915,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocatenotificationscomponent",{"_index":110,"title":{"components/GeolocateNotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geolocateservice",{"_index":831,"title":{"injectables/GeolocateService.html":{}},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{}}}],["geolocation",{"_index":1658,"title":{},"body":{"injectables/SettingsService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["geolocation/ngx",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["geolocationconfig",{"_index":964,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["geometry",{"_index":495,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["geosjon",{"_index":2315,"title":{},"body":{"index.html":{}}}],["geotrek",{"_index":2253,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["get(['geolocate.asklocatepermission",{"_index":913,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["get(url",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcheckedidforfilter",{"_index":612,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedidforfilter(filter",{"_index":624,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval",{"_index":613,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval(filter",{"_index":626,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcommonimgsrc",{"_index":573,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getfilteredtreks",{"_index":614,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilteredtreks(treks",{"_index":628,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilters",{"_index":1632,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getfilters(settings",{"_index":1643,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek",{"_index":1633,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek(trek",{"_index":1645,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getmapconfigfortrekbyid",{"_index":1430,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getmapconfigfortrekbyid(trek",{"_index":571,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getminimaltrekbyid",{"_index":1431,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getminimaltrekbyid(trekid",{"_index":1445,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getmoreitembyid",{"_index":1330,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitembyid(id",{"_index":1334,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitems",{"_index":1331,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getnumberofactivefilters",{"_index":615,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getnumberofactivefilters(filters",{"_index":630,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getpoisfortrekbyid",{"_index":1432,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(id",{"_index":563,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(trekid",{"_index":1448,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gets",{"_index":353,"title":{},"body":{"injectables/CacheService.html":{}}}],["getsettings",{"_index":1634,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getting",{"_index":2251,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettouristiccategorieswithfeatures",{"_index":1635,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccategorieswithfeatures(touristiccontents",{"_index":1648,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccontentsfortrekbyid",{"_index":1433,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(id",{"_index":564,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(trekid",{"_index":1450,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettouristiceventsfortrekbyid",{"_index":1434,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(id",{"_index":565,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(trekid",{"_index":1452,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekbyid",{"_index":1435,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(id",{"_index":562,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(trekid",{"_index":1454,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekdetailsurl",{"_index":1436,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekdetailsurl(trekid",{"_index":567,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc",{"_index":1437,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc(trek",{"_index":568,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl",{"_index":1438,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl(trekid",{"_index":570,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreks",{"_index":1439,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettreksmapurl",{"_index":569,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreksurl",{"_index":566,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getvalueforpropertybyid",{"_index":1636,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getvalueforpropertybyid(propertyname",{"_index":1650,"title":{},"body":{"injectables/SettingsService.html":{}}}],["git",{"_index":2267,"title":{},"body":{"index.html":{}}}],["git+https://github.com/steffaan/cordova",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["git@github.com:geotrekce/geotrek",{"_index":2269,"title":{},"body":{"index.html":{}}}],["given",{"_index":1472,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gl",{"_index":485,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":2347,"title":{},"body":{"index.html":{}}}],["globalization",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["globalmapiconsize",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyphs",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["goods",{"_index":2417,"title":{},"body":{"license.html":{}}}],["google",{"_index":2234,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["googleservice",{"_index":2353,"title":{},"body":{"index.html":{}}}],["gradle",{"_index":2204,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graph",{"_index":2440,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1382,"title":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1383,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"overview.html":{}}}],["h",{"_index":1872,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["handle(req",{"_index":1117,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["handlefiltersstate",{"_index":727,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handlefiltersstate(checkstate",{"_index":741,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handler",{"_index":930,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["header",{"_index":919,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1340,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["height",{"_index":604,"title":{},"body":{"components/FilterComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["here",{"_index":2309,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1894,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hidealllabel",{"_index":413,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["hits",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{}}}],["holder",{"_index":2406,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2393,"title":{},"body":{"license.html":{}}}],["html",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["htmlionmodalelement",{"_index":1952,"title":{},"body":{"components/TrekMapPage.html":{}}}],["http",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/functions.html":{}}}],["http_interceptors",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpclientmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1391,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["httpevent",{"_index":1086,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httphandler",{"_index":1083,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpheaders",{"_index":1337,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpinterceptor",{"_index":1087,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpoptions",{"_index":1339,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httprequest",{"_index":1081,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpresponse",{"_index":1088,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://b.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://c.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://my",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://rando",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydratedtrek",{"_index":517,"title":{"interfaces/HydratedTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["hydratedtrek.properties.arrival_city",{"_index":1710,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.cities",{"_index":1712,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure",{"_index":1868,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.departure_city",{"_index":1708,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure_city?.name",{"_index":1867,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.difficulty",{"_index":1699,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.difficulty?.name",{"_index":1869,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.duration",{"_index":1870,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.information_desks.foreach(information_desk",{"_index":1726,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.length",{"_index":1876,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.networks",{"_index":1717,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice",{"_index":1702,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.route",{"_index":1705,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.themes",{"_index":1721,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties?.name",{"_index":1865,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrekproperties",{"_index":518,"title":{"interfaces/HydratedTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["icon",{"_index":454,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":2312,"title":{},"body":{"index.html":{}}}],["iconsize",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":472,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ideally",{"_index":2327,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1092,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.length",{"_index":1096,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.push(id",{"_index":1104,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ignore",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1213,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":1530,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["imgpracticesrc",{"_index":1808,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["imgsrc",{"_index":1809,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["implements",{"_index":401,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["implied",{"_index":2396,"title":{},"body":{"license.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["important",{"_index":2325,"title":{},"body":{"index.html":{}}}],["imports",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["incidental",{"_index":2410,"title":{},"body":{"license.html":{}}}],["including",{"_index":2398,"title":{},"body":{"license.html":{}}}],["increment",{"_index":390,"title":{},"body":{"injectables/CacheService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2409,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1280,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["info.plist",{"_index":2354,"title":{},"body":{"index.html":{}}}],["information",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["information_desk.type",{"_index":1727,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desk_types",{"_index":1728,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desks",{"_index":513,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["informationdesk",{"_index":514,"title":{"interfaces/InformationDesk.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationdesk.municipality",{"_index":1014,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.name",{"_index":1012,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.phone",{"_index":1016,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.postal_code",{"_index":1013,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdeskdetailscomponent",{"_index":113,"title":{"components/InformationDeskDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationdeskpicture",{"_index":998,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationintro",{"_index":546,"title":{"interfaces/InformationIntro.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationitem",{"_index":547,"title":{"interfaces/InformationItem.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informations.service",{"_index":1393,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["informations.service.ts",{"_index":1328,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["informations.service.ts:14",{"_index":1333,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:18",{"_index":1336,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:27",{"_index":1335,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations/more",{"_index":1327,"title":{},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["inherited",{"_index":748,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["initializeapp",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["initialsize",{"_index":414,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["initialstate",{"_index":415,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["injectable",{"_index":298,"title":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":300,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["inner",{"_index":710,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["input",{"_index":434,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["inputs",{"_index":412,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["inside",{"_index":1278,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["install",{"_index":2263,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2255,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2262,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2272,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1120,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["intercept",{"_index":1078,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["intercept(req",{"_index":1080,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["interceptor",{"_index":1075,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1076,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interface",{"_index":467,"title":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["interfaces",{"_index":469,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["internationalization",{"_index":2307,"title":{},"body":{"index.html":{}}}],["interruption",{"_index":2421,"title":{},"body":{"license.html":{}}}],["interval",{"_index":536,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["intervalfilter",{"_index":541,"title":{"interfaces/IntervalFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["intervalfilter(filter",{"_index":632,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["ionic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"dependencies.html":{}}}],["ionic@5.1.0",{"_index":2265,"title":{},"body":{"index.html":{}}}],["ionicmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ionicmodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewdidenter",{"_index":1931,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["ionviewdidleave",{"_index":2011,"title":{},"body":{"components/TreksMapPage.html":{}}}],["ionviewwillenter",{"_index":728,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["ionviewwillleave",{"_index":1574,"title":{},"body":{"components/ProgressComponent.html":{}}}],["ios",{"_index":2207,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["iosandroid",{"_index":2284,"title":{},"body":{"index.html":{}}}],["is_park_centered",{"_index":506,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isalert",{"_index":1827,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["isfilteractive",{"_index":616,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfilteractive(filter",{"_index":634,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfirstcheck",{"_index":2075,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["isininterval",{"_index":666,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isinview",{"_index":2007,"title":{},"body":{"components/TreksMapPage.html":{}}}],["isloading",{"_index":1098,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isloading(id",{"_index":1110,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isoffline",{"_index":572,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isonline",{"_index":719,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["item",{"_index":1348,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{}}}],["item'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["item.module#moreitempagemodule",{"_index":1803,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["item.module.ts",{"_index":1373,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page",{"_index":1376,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page.html",{"_index":1350,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.scss",{"_index":1349,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts",{"_index":1347,"title":{},"body":{"components/MoreItemPage.html":{},"coverage.html":{}}}],["item.page.ts:14",{"_index":1361,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:15",{"_index":1362,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:16",{"_index":1358,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:23",{"_index":1359,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:38",{"_index":1360,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.resolver",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["item.resolver.ts",{"_index":1385,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:15",{"_index":1387,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.resolver.ts:22",{"_index":1390,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.title",{"_index":1400,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item/more",{"_index":1346,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["items",{"_index":416,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/LoaderComponent.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["itemtemplate",{"_index":417,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["j",{"_index":1875,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["js",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(await",{"_index":1676,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(settings",{"_index":1672,"title":{},"body":{"injectables/SettingsService.html":{}}}],["justify",{"_index":1064,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{}}}],["key",{"_index":346,"title":{},"body":{"injectables/CacheService.html":{}}}],["keyboard",{"_index":2214,"title":{},"body":{"dependencies.html":{}}}],["kilometers",{"_index":895,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["km",{"_index":1878,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["kmtonotify",{"_index":892,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["label",{"_index":1306,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["language",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":382,"title":{},"body":{"injectables/CacheService.html":{}}}],["latest",{"_index":2258,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":527,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["layer",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layer.name",{"_index":1036,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layers",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["layersvisibilitycomponent",{"_index":117,"title":{"components/LayersVisibilityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layervisibilitychange",{"_index":1023,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layervisibilitychange(event",{"_index":1027,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layout",{"_index":1253,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1199,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["legend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["length",{"_index":494,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["liability",{"_index":2424,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2407,"title":{},"body":{"license.html":{}}}],["license",{"_index":2363,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":2399,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2318,"title":{},"body":{"index.html":{}}}],["line",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lines",{"_index":709,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["linux",{"_index":2286,"title":{},"body":{"index.html":{}}}],["list",{"_index":403,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["list.component",{"_index":1765,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["list.component.html",{"_index":406,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.scss",{"_index":405,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts",{"_index":400,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":425,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:13",{"_index":428,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:14",{"_index":420,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:15",{"_index":422,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:16",{"_index":424,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:17",{"_index":427,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:19",{"_index":431,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:20",{"_index":432,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:21",{"_index":419,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:25",{"_index":429,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:31",{"_index":430,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list/collapsible",{"_index":399,"title":{},"body":{"components/CollapsibleListComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["literal",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/Poi.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicEvent.html":{},"interfaces/Trek.html":{}}}],["loadchildren",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loaded",{"_index":1963,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loader",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["loader.component.html",{"_index":1039,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1038,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.dismiss",{"_index":1853,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loader.present",{"_index":1850,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadercomponent",{"_index":120,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderstatus",{"_index":1040,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadimages",{"_index":1207,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loadimages.subscribe",{"_index":1227,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loading",{"_index":1041,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loadingcontroller",{"_index":1815,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadingid",{"_index":1109,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids",{"_index":1091,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids.indexof(id",{"_index":1112,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadinginterceptor",{"_index":172,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"overview.html":{}}}],["loadingservice",{"_index":1045,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["loadsettings",{"_index":1637,"title":{},"body":{"injectables/SettingsService.html":{}}}],["loadtreks",{"_index":1440,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["local",{"_index":2217,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["localnotifications",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["located",{"_index":2329,"title":{},"body":{"index.html":{}}}],["location",{"_index":540,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{}}}],["location.latitude",{"_index":981,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["locationprovider",{"_index":965,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["lodash",{"_index":760,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["lodash.clonedeep",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["longitude",{"_index":528,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["loss",{"_index":2418,"title":{},"body":{"license.html":{}}}],["lot",{"_index":2301,"title":{},"body":{"index.html":{}}}],["macos",{"_index":2282,"title":{},"body":{"index.html":{}}}],["make",{"_index":394,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["makina",{"_index":2369,"title":{},"body":{"license.html":{}}}],["map",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["map(([treks",{"_index":690,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((ids",{"_index":1095,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["map(checkedvalue",{"_index":680,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(data",{"_index":2047,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map(filters",{"_index":685,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(touristiccontent",{"_index":1731,"title":{},"body":{"injectables/SettingsService.html":{}}}],["map.module#trekmappagemodule",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map.module#treksmappagemodule",{"_index":1800,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["map.module.ts",{"_index":1997,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page",{"_index":1999,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page.html",{"_index":1927,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.scss",{"_index":1926,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts",{"_index":1925,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["map.page.ts:101",{"_index":1939,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:102",{"_index":2015,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:106",{"_index":1944,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:107",{"_index":2022,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:115",{"_index":2023,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:123",{"_index":1941,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:130",{"_index":2019,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:131",{"_index":1938,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:134",{"_index":2018,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:135",{"_index":1945,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:27",{"_index":2026,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:28",{"_index":2024,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:29",{"_index":1949,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:30",{"_index":1948,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:31",{"_index":1955,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:32",{"_index":1950,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:33",{"_index":1956,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:34",{"_index":1947,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:35",{"_index":1953,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:36",{"_index":1951,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:37",{"_index":1946,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:38",{"_index":1935,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:41",{"_index":2025,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:44",{"_index":2027,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:45",{"_index":1954,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:47",{"_index":2028,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:53",{"_index":1936,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:54",{"_index":2021,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:74",{"_index":2020,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:79",{"_index":2016,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:85",{"_index":2014,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map/trek",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["map/treks",{"_index":1799,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["mapbox",{"_index":484,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":1169,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl.accesstoken",{"_index":1173,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.map",{"_index":1194,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.marker",{"_index":1224,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.navigationcontrol",{"_index":1196,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxoptions",{"_index":483,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig",{"_index":579,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig.center",{"_index":1495,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["mapgenerally",{"_index":2316,"title":{},"body":{"index.html":{}}}],["mapisloaded",{"_index":1142,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["mapisloaded(event",{"_index":1937,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mapisloaded(loaded",{"_index":2017,"title":{},"body":{"components/TreksMapPage.html":{}}}],["maptrek.disablenotification",{"_index":934,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.enablenotification",{"_index":933,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptreksvizcomponent",{"_index":122,"title":{"components/MapTreksVizComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maptrekvizcomponent",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":1532,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TreksMapPage.html":{}}}],["marker",{"_index":1162,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["markerposition",{"_index":1135,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["matching",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":2390,"title":{},"body":{"license.html":{}}}],["mauron85",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["mauron85/cordova",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":668,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["maxlocations",{"_index":967,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["maxsize",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{}}}],["maxzoom",{"_index":1233,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":2400,"title":{},"body":{"license.html":{}}}],["mergefilterstreks",{"_index":2008,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap",{"_index":2030,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap((context",{"_index":2048,"title":{},"body":{"components/TreksMapPage.html":{}}}],["message",{"_index":921,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["met",{"_index":2380,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["meterstonotify",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["millevaches.fr/mobile",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":671,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TrekCardComponent.html":{}}}],["minimaltrek",{"_index":488,"title":{"interfaces/MinimalTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltrekproperties",{"_index":489,"title":{"interfaces/MinimalTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltreks",{"_index":486,"title":{"interfaces/MinimalTreks.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimum",{"_index":2273,"title":{},"body":{"index.html":{}}}],["minzoom",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2247,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2254,"title":{},"body":{"index.html":{}}}],["mobile.git",{"_index":2270,"title":{},"body":{"index.html":{}}}],["modal",{"_index":1980,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modal.dismiss",{"_index":1982,"title":{},"body":{"components/TrekMapPage.html":{}}}],["modal.ondiddismiss",{"_index":2056,"title":{},"body":{"components/TreksMapPage.html":{}}}],["modal.present",{"_index":1990,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalcontroller",{"_index":732,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalctrl",{"_index":737,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["modalpoidetails",{"_index":1929,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mode",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["modification",{"_index":2376,"title":{},"body":{"license.html":{}}}],["module",{"_index":157,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["modules",{"_index":159,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["more'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["more.page",{"_index":1422,"title":{},"body":{"modules/MorePageModule.html":{}}}],["more.page.html",{"_index":1405,"title":{},"body":{"components/MorePage.html":{}}}],["more.page.scss",{"_index":1404,"title":{},"body":{"components/MorePage.html":{}}}],["more/more",{"_index":1802,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["more/more.module",{"_index":1791,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["more/more.module#morepagemodule",{"_index":1801,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["moreinformationintro.title",{"_index":1416,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsintro",{"_index":1407,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsservice",{"_index":1325,"title":{"injectables/MoreInformationsService.html":{}},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["moreitem",{"_index":1352,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.title",{"_index":1368,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitemid",{"_index":1353,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"modules/TabsPageRoutingModule.html":{}}}],["moreitempage",{"_index":128,"title":{"components/MoreItemPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moreitempagemodule",{"_index":1369,"title":{"modules/MoreItemPageModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreitemresolver",{"_index":191,"title":{"guards/MoreItemResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["morepage",{"_index":131,"title":{"components/MorePage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["morepagemodule",{"_index":1417,"title":{"modules/MorePageModule.html":{}},"body":{"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreresolver",{"_index":194,"title":{"guards/MoreResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["ms",{"_index":361,"title":{},"body":{"injectables/CacheService.html":{}}}],["multi",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["multipoint",{"_index":479,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["municipality",{"_index":529,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["native",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["native/background",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["native/file/ngx",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["native/firebase",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"dependencies.html":{}}}],["native/globalization",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["native/globalization/ngx",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["native/ionic",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/local",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["native/network",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["native/network/ngx",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["native/screen",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"dependencies.html":{}}}],["native/social",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/splash",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/zip",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["native/zip/ngx",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["navigatetotrek",{"_index":1143,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigatetotrek(id",{"_index":1600,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigation",{"_index":574,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["navigator",{"_index":2093,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.geolocation.getcurrentposition(position",{"_index":2094,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.language.slice(0",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["navparams",{"_index":735,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TreksOrderComponent.html":{}}}],["nb",{"_index":806,"title":{},"body":{"components/FiltersComponent.html":{}}}],["nbtemporaryfilterstreks",{"_index":720,"title":{},"body":{"components/FiltersComponent.html":{}}}],["necessary",{"_index":652,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["need",{"_index":1201,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["negligence",{"_index":2429,"title":{},"body":{"license.html":{}}}],["network",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["networks",{"_index":511,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["new",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["next",{"_index":1082,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{}}}],["ngmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ngonchanges",{"_index":826,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngonchanges(changes",{"_index":842,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngondestroy",{"_index":730,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngoninit",{"_index":410,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["node.js",{"_index":2260,"title":{},"body":{"index.html":{}}}],["none",{"_index":2043,"title":{},"body":{"components/TreksMapPage.html":{}}}],["nonetwork",{"_index":2009,"title":{},"body":{"components/TreksMapPage.html":{}}}],["notice",{"_index":2385,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["notifications",{"_index":813,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["notifications'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["notifications.component",{"_index":1747,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifications.component.html",{"_index":815,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":814,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":811,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications.component.ts:111",{"_index":841,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:115",{"_index":840,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:119",{"_index":838,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:150",{"_index":848,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:31",{"_index":851,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:32",{"_index":850,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:33",{"_index":853,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:34",{"_index":833,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:35",{"_index":834,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:36",{"_index":835,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:37",{"_index":832,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:40",{"_index":854,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:41",{"_index":852,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:42",{"_index":849,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:47",{"_index":847,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:63",{"_index":844,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:74",{"_index":846,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:84",{"_index":836,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.git",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["notifications/geolocate",{"_index":810,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications/ngx",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["notificationsmodeisactive",{"_index":820,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notificationtext",{"_index":950,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notificationtitle",{"_index":962,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notifiedindex",{"_index":897,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notify",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nowrap",{"_index":1893,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["npm",{"_index":2261,"title":{},"body":{"index.html":{}}}],["null",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["numberofactivefilters",{"_index":664,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksMapPage.html":{}}}],["object",{"_index":1300,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.cache).length",{"_index":365,"title":{},"body":{"injectables/CacheService.html":{}}}],["observable",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"interfaces/TreksService.html":{}}}],["observable.create((observer",{"_index":1208,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["observable.pipe(tap",{"_index":395,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer",{"_index":387,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer.complete",{"_index":1217,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["observer.next",{"_index":1214,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["of('connectionerror",{"_index":1402,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["offline",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["offline/:trekid",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offlinemapconfig",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offlinetreks",{"_index":733,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["offlinetreksservice",{"_index":734,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["offset",{"_index":1259,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["onchanges",{"_index":812,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ondestroy",{"_index":716,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["one",{"_index":1915,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["oninit",{"_index":402,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["online",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinebaseurl",{"_index":2276,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["onlinemapconfig",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinetreks",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["onlinetrekserror",{"_index":1429,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["onlinetreksservice",{"_index":28,"title":{"injectables/OnlineTreksService.html":{}},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["onsameurlnavigation",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["opacity",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["optionnal",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options).pipe",{"_index":372,"title":{},"body":{"injectables/CacheService.html":{}}}],["order",{"_index":539,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["order'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["order.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["order.component.html",{"_index":2073,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.scss",{"_index":2072,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts",{"_index":2071,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:15",{"_index":2083,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:16",{"_index":2082,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:17",{"_index":2078,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:28",{"_index":2079,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:38",{"_index":2081,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.name",{"_index":2098,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.type",{"_index":692,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksOrderComponent.html":{}}}],["order.value",{"_index":693,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["order/treks",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["ordering",{"_index":1668,"title":{},"body":{"injectables/SettingsService.html":{}}}],["orders",{"_index":2076,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["orientation",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["orientation/ngx",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["originaltrek",{"_index":577,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["others",{"_index":2345,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":2430,"title":{},"body":{"license.html":{}}}],["out",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outline",{"_index":1243,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":463,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["outputs",{"_index":456,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["overflow",{"_index":1891,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["overlap",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":2441,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2296,"title":{},"body":{"index.html":{}}}],["package",{"_index":2168,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":1493,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["pages/tabs/tabs.module#tabspagemodule",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/trek",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paint",{"_index":1248,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["parking",{"_index":2313,"title":{},"body":{"index.html":{}}}],["parking_location",{"_index":521,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["particular",{"_index":2402,"title":{},"body":{"license.html":{}}}],["path",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["pathmatch",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["permissions",{"_index":920,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["permitted",{"_index":2377,"title":{},"body":{"license.html":{}}}],["persmissionsconfirm",{"_index":917,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["persmissionsconfirm.present",{"_index":932,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["personal",{"_index":2278,"title":{},"body":{"index.html":{}}}],["phone",{"_index":530,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["photo_url",{"_index":531,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picto",{"_index":1886,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["pictogram",{"_index":544,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picture",{"_index":499,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["picture!.author",{"_index":1525,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture!.legend",{"_index":1524,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture.url",{"_index":1475,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["pictures",{"_index":498,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pipe",{"_index":1118,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["placement",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["platforms",{"_index":2359,"title":{},"body":{"index.html":{}}}],["play",{"_index":2202,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["plugin",{"_index":2188,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["poi",{"_index":136,"title":{"interfaces/Poi.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["poi'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["poi.component.html",{"_index":1498,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.component.scss",{"_index":1497,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.properties.name",{"_index":1526,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0].author",{"_index":1565,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0]?.legend",{"_index":1564,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi_types",{"_index":1561,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poicomponent",{"_index":133,"title":{"components/PoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poidetailscomponent",{"_index":135,"title":{"components/PoiDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poiimg",{"_index":1535,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["point",{"_index":480,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["point(feature.coordinates",{"_index":900,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(fromcoordinates",{"_index":896,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(userlocation",{"_index":656,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point).coordinates",{"_index":1288,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count",{"_index":1247,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count_abbreviated",{"_index":1255,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointer",{"_index":1294,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointreferencelayersproperties",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["points",{"_index":1182,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["points_reference",{"_index":524,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pois",{"_index":550,"title":{"interfaces/Pois.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["popover",{"_index":1976,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popover.dismiss",{"_index":1979,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popovercontroller",{"_index":1934,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popoverctrl",{"_index":1933,"title":{},"body":{"components/TrekMapPage.html":{}}}],["position",{"_index":984,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["position.coords.latitude",{"_index":2096,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["position.coords.longitude",{"_index":2095,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["possibility",{"_index":2435,"title":{},"body":{"license.html":{}}}],["postal_code",{"_index":532,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practical_info",{"_index":551,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice",{"_index":493,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice.id.tostring",{"_index":1215,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices",{"_index":1136,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.foreach((practice",{"_index":1211,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.length",{"_index":1216,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pratiques",{"_index":1527,"title":{},"body":{"components/PoiComponent.html":{}}}],["presentconfirmfeatures",{"_index":1140,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentconfirmfeatures(features",{"_index":1159,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentdeleteconfirm",{"_index":1813,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentdeleteconfirm(isalert",{"_index":1824,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentfilters",{"_index":2012,"title":{},"body":{"components/TreksMapPage.html":{}}}],["presentinformationdeskdetails",{"_index":1932,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentinformationdeskdetails(informationdesk",{"_index":1940,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentpersmissionsconfirm",{"_index":827,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["presentpoidetails",{"_index":830,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["presentpoidetails(poi",{"_index":1943,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentsearch",{"_index":2013,"title":{},"body":{"components/TreksMapPage.html":{}}}],["prevent",{"_index":1054,"title":{},"body":{"components/LoaderComponent.html":{}}}],["previously",{"_index":2360,"title":{},"body":{"index.html":{}}}],["primary",{"_index":2326,"title":{},"body":{"index.html":{}}}],["primarycolor",{"_index":2165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["priority",{"_index":908,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["private",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["proceeding",{"_index":2256,"title":{},"body":{"index.html":{}}}],["procurement",{"_index":2415,"title":{},"body":{"license.html":{}}}],["prod",{"_index":2290,"title":{},"body":{"index.html":{}}}],["production",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":522,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["profits",{"_index":2419,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1074,"title":{},"body":{"components/LoaderComponent.html":{},"components/ProgressComponent.html":{}}}],["progress'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["progress.component.html",{"_index":1572,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progress.component.scss",{"_index":1571,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progressbarwidth",{"_index":1043,"title":{},"body":{"components/LoaderComponent.html":{}}}],["progresscomponent",{"_index":137,"title":{"components/ProgressComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":1942,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["properties",{"_index":302,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["property",{"_index":520,"title":{"interfaces/Property.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["property.values.find(value",{"_index":1696,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyname",{"_index":1652,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyvalue",{"_index":1695,"title":{},"body":{"injectables/SettingsService.html":{}}}],["protected",{"_index":722,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["provide",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2091,"title":{},"body":{"components/TreksOrderComponent.html":{},"index.html":{},"license.html":{}}}],["providedin",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["public",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["publishreplay",{"_index":340,"title":{},"body":{"injectables/CacheService.html":{}}}],["publishreplay(1",{"_index":384,"title":{},"body":{"injectables/CacheService.html":{}}}],["pulse",{"_index":1223,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["purpose",{"_index":2403,"title":{},"body":{"license.html":{}}}],["radio",{"_index":1305,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["radius",{"_index":1268,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["rando",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raster",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["redistribution",{"_index":2373,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":2381,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1575,"title":{},"body":{"components/ProgressComponent.html":{}}}],["refcount",{"_index":341,"title":{},"body":{"injectables/CacheService.html":{}}}],["refresh",{"_index":1354,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["refreshdelay",{"_index":307,"title":{},"body":{"injectables/CacheService.html":{}}}],["regular",{"_index":1257,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["release",{"_index":2205,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["releaseandroid",{"_index":2291,"title":{},"body":{"index.html":{}}}],["releasecustomization",{"_index":2292,"title":{},"body":{"index.html":{}}}],["reload",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remove",{"_index":2357,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":355,"title":{},"body":{"injectables/CacheService.html":{}}}],["represents",{"_index":2317,"title":{},"body":{"index.html":{}}}],["reproduce",{"_index":2388,"title":{},"body":{"license.html":{}}}],["req",{"_index":1085,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["req.method",{"_index":1114,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.urlwithparams",{"_index":1115,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["request",{"_index":358,"title":{},"body":{"injectables/CacheService.html":{}}}],["requests",{"_index":1914,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["require('@turf/distance').default",{"_index":643,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["require('lodash.clonedeep",{"_index":1465,"title":{},"body":{"injectables/OnlineTreksService.html":{},"miscellaneous/variables.html":{}}}],["require('mapbox",{"_index":1170,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":2274,"title":{},"body":{"index.html":{}}}],["res://ic_stat_panorama",{"_index":863,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["res://icon",{"_index":861,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["reserved",{"_index":2372,"title":{},"body":{"license.html":{}}}],["reset",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":1638,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resize",{"_index":1203,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["resolve",{"_index":1379,"title":{},"body":{"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{}}}],["resolve(route",{"_index":1388,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["resources",{"_index":2344,"title":{},"body":{"index.html":{}}}],["resources/icon.png",{"_index":2330,"title":{},"body":{"index.html":{}}}],["resources/splash.png",{"_index":2334,"title":{},"body":{"index.html":{}}}],["resourcesother",{"_index":2343,"title":{},"body":{"index.html":{}}}],["response",{"_index":357,"title":{},"body":{"injectables/CacheService.html":{}}}],["ressources",{"_index":2308,"title":{},"body":{"index.html":{}}}],["result",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2383,"title":{},"body":{"license.html":{}}}],["retry",{"_index":457,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["return",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["returs",{"_index":1473,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["revoke",{"_index":308,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoked",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking(observable",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{}}}],["rgba(189",{"_index":1070,"title":{},"body":{"components/LoaderComponent.html":{}}}],["right",{"_index":1323,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["rights",{"_index":2371,"title":{},"body":{"license.html":{}}}],["rm",{"_index":2361,"title":{},"body":{"index.html":{}}}],["roboto",{"_index":1256,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":925,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["roughly",{"_index":2338,"title":{},"body":{"index.html":{}}}],["route",{"_index":504,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["route.data['offline",{"_index":1900,"title":{},"body":{"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["route.parammap.get('moreitemid",{"_index":1394,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["route.parammap.get('trekid",{"_index":1899,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["router",{"_index":1357,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["routereusestrategy",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["routerlink",{"_index":1810,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["routermodule",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["routermodule.forchild",{"_index":2104,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":1380,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":279,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2283,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1377,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["rxjs",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":482,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["rxjs/internal/observable/of",{"_index":1425,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/observable/throwerror",{"_index":1426,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/subscription",{"_index":2029,"title":{},"body":{"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["rxjs/operators",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksMapPage.html":{}}}],["savefiltersstate",{"_index":1639,"title":{},"body":{"injectables/SettingsService.html":{}}}],["savefiltersstate(filters",{"_index":1655,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate",{"_index":1640,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate(order",{"_index":1657,"title":{},"body":{"injectables/SettingsService.html":{}}}],["scaley(0",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaley(1",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["screen's",{"_index":2336,"title":{},"body":{"index.html":{}}}],["screen/ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["screenorientation",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["screens",{"_index":2332,"title":{},"body":{"index.html":{}}}],["search",{"_index":1592,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["search'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["search(searchvalue",{"_index":1603,"title":{},"body":{"components/SearchComponent.html":{}}}],["search(treks",{"_index":1625,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["search.component.html",{"_index":1594,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1593,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.contentplaceholder",{"_index":1623,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.noresult",{"_index":1622,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.title",{"_index":1620,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcomponent",{"_index":139,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchtreks",{"_index":1597,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchtreksservice",{"_index":1591,"title":{"injectables/SearchTreksService.html":{}},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["searchvalue",{"_index":1605,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["searchvalue.tolowercase",{"_index":1627,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["secondary",{"_index":928,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["sending",{"_index":363,"title":{},"body":{"injectables/CacheService.html":{}}}],["sent",{"_index":377,"title":{},"body":{"injectables/CacheService.html":{}}}],["serverun",{"_index":2280,"title":{},"body":{"index.html":{}}}],["service",{"_index":1093,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.getvalue",{"_index":1099,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.next(isloading",{"_index":1100,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["services",{"_index":2203,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["services.json",{"_index":2352,"title":{},"body":{"index.html":{}}}],["set",{"_index":373,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["setlnglat(coordinates",{"_index":1225,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["setofflinesettings",{"_index":1641,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setting.id",{"_index":1560,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings",{"_index":29,"title":{"interfaces/Settings.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["settings.data",{"_index":1681,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.data.find((data",{"_index":1684,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters",{"_index":1680,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters$.pipe",{"_index":684,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["settings.filters.foreach(filter",{"_index":1682,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.find(setting",{"_index":1559,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings.json",{"_index":1688,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":30,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["settingssub",{"_index":1536,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["setup",{"_index":2281,"title":{},"body":{"index.html":{}}}],["shall",{"_index":2405,"title":{},"body":{"license.html":{}}}],["sharedmodule",{"_index":1741,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedtreksmodule",{"_index":1750,"title":{"modules/SharedTreksModule.html":{}},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shareduimodule",{"_index":171,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharing",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["sharing/ngx",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["showalldata",{"_index":1814,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["showalllabel",{"_index":418,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["showappsettings",{"_index":938,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["showcompass",{"_index":1197,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["showlocationsettings",{"_index":939,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["simplechange",{"_index":855,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["simplechanges",{"_index":843,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["size",{"_index":464,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["slug",{"_index":523,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["smallicon",{"_index":862,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["socialsharing",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["software",{"_index":2392,"title":{},"body":{"license.html":{}}}],["sort",{"_index":617,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(filteredtreks",{"_index":636,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sound",{"_index":859,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sources",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":1884,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["spacing",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2411,"title":{},"body":{"license.html":{}}}],["splash",{"_index":2331,"title":{},"body":{"index.html":{}}}],["splashscreen",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["sqlite",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["square",{"_index":2341,"title":{},"body":{"index.html":{}}}],["src",{"_index":1471,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["src/.../animations.ts",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../geolocate",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":2448,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../map",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../offline",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../online",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unsubscribe.ts",{"_index":2250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../variables.ts",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts",{"_index":2117,"title":{},"body":{"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts:11",{"_index":2120,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:17",{"_index":2119,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:5",{"_index":2118,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/animations.ts",{"_index":2132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/collapsible",{"_index":398,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["src/app/components/connect",{"_index":446,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/filter",{"_index":694,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts",{"_index":583,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts:14",{"_index":590,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:15",{"_index":589,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:16",{"_index":591,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:18",{"_index":588,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:23",{"_index":592,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:32",{"_index":594,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filters/filters.component.ts",{"_index":714,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/components/filters/filters.component.ts:19",{"_index":756,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:20",{"_index":753,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:21",{"_index":752,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:22",{"_index":751,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:23",{"_index":736,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:26",{"_index":754,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:35",{"_index":745,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:39",{"_index":744,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:64",{"_index":742,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:72",{"_index":738,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:77",{"_index":740,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:86",{"_index":739,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:90",{"_index":747,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/geolocate",{"_index":809,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/information",{"_index":992,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/layers",{"_index":1017,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":1037,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:12",{"_index":1049,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":1047,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:14",{"_index":1051,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":1046,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:17",{"_index":1052,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:22",{"_index":1050,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/map",{"_index":1129,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/poi",{"_index":1534,"title":{},"body":{"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts",{"_index":1496,"title":{},"body":{"components/PoiComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts:13",{"_index":1505,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:14",{"_index":1504,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:15",{"_index":1503,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:16",{"_index":1506,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:18",{"_index":1508,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:19",{"_index":1510,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:20",{"_index":1502,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:22",{"_index":1509,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:24",{"_index":1507,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/progress/progress.component.ts",{"_index":1568,"title":{},"body":{"components/ProgressComponent.html":{},"coverage.html":{}}}],["src/app/components/progress/progress.component.ts:12",{"_index":1580,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:13",{"_index":1577,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:15",{"_index":1581,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:17",{"_index":1578,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:24",{"_index":1579,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/search/search.component.ts",{"_index":1590,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:18",{"_index":1609,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:19",{"_index":1608,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:20",{"_index":1598,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:33",{"_index":1602,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:48",{"_index":1599,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:52",{"_index":1604,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:61",{"_index":1601,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:65",{"_index":1607,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/trek",{"_index":1804,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["src/app/components/treks",{"_index":2070,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces.ts",{"_index":470,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/interfaces.ts:248",{"_index":2110,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:249",{"_index":2107,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:250",{"_index":2108,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:251",{"_index":2109,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:252",{"_index":2115,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:253",{"_index":2111,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:254",{"_index":2112,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:255",{"_index":2114,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:256",{"_index":2113,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:257",{"_index":2106,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:258",{"_index":2105,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/pages/more/more",{"_index":1345,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"coverage.html":{}}}],["src/app/pages/more/more.module.ts",{"_index":1421,"title":{},"body":{"modules/MorePageModule.html":{}}}],["src/app/pages/more/more.page.ts",{"_index":1403,"title":{},"body":{"components/MorePage.html":{},"coverage.html":{}}}],["src/app/pages/more/more.page.ts:14",{"_index":1413,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:15",{"_index":1412,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:16",{"_index":1408,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:22",{"_index":1409,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:37",{"_index":1410,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/tabs/tabs.module.ts",{"_index":1787,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/pages/tabs/tabs.page.ts",{"_index":1769,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/pages/tabs/tabs.page.ts:10",{"_index":1773,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/pages/tabs/tabs.routing.module.ts",{"_index":1792,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/pages/trek",{"_index":1921,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks",{"_index":2006,"title":{},"body":{"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks/treks.module.ts",{"_index":2102,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["src/app/pages/treks/treks.page.ts",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["src/app/resolvers/more",{"_index":1384,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts",{"_index":1423,"title":{},"body":{"guards/MoreResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts:15",{"_index":1424,"title":{},"body":{"guards/MoreResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts",{"_index":1895,"title":{},"body":{"guards/TrekContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/trek.resolver.ts:26",{"_index":1896,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts:37",{"_index":1897,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts",{"_index":2000,"title":{},"body":{"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/treks.resolver.ts:13",{"_index":2002,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts:21",{"_index":2003,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/services/cache/cache.service.ts",{"_index":301,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/app/services/cache/cache.service.ts:12",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:13",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:14",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:15",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:16",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:38",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:72",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/filter",{"_index":607,"title":{},"body":{"injectables/FilterTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/geolocate/geolocate.service.ts",{"_index":935,"title":{},"body":{"injectables/GeolocateService.html":{},"coverage.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:18",{"_index":943,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:21",{"_index":952,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:22",{"_index":954,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:26",{"_index":944,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:31",{"_index":945,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:36",{"_index":949,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:68",{"_index":951,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:76",{"_index":946,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:80",{"_index":947,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/loading/loading.service.ts",{"_index":1077,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading/loading.service.ts:12",{"_index":1128,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:14",{"_index":1124,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:28",{"_index":1125,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:34",{"_index":1126,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:44",{"_index":1127,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:53",{"_index":1079,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/loading/loading.service.ts:57",{"_index":1084,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/more",{"_index":1326,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["src/app/services/offline",{"_index":2159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/online",{"_index":1428,"title":{},"body":{"injectables/OnlineTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/search",{"_index":1624,"title":{},"body":{"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts",{"_index":1630,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts:107",{"_index":1651,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:128",{"_index":1646,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:190",{"_index":1649,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:28",{"_index":1661,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:30",{"_index":1662,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:31",{"_index":1664,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:36",{"_index":1666,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:37",{"_index":1642,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:39",{"_index":1663,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:41",{"_index":1653,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:51",{"_index":1660,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:59",{"_index":1644,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:78",{"_index":1647,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:87",{"_index":1656,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:91",{"_index":1659,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:95",{"_index":1654,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/shared",{"_index":1754,"title":{},"body":{"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1745,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/assets/i18n",{"_index":2306,"title":{},"body":{"index.html":{}}}],["src/assets/map/icons",{"_index":2311,"title":{},"body":{"index.html":{}}}],["src/assets/map/zone/zone.geojson",{"_index":2314,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environments.prod.ts",{"_index":2288,"title":{},"body":{"index.html":{}}}],["src/environments/environments.ts",{"_index":2277,"title":{},"body":{"index.html":{}}}],["src/environments/variables.ts",{"_index":2164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/theme/variables.scss",{"_index":2322,"title":{},"body":{"index.html":{}}}],["start",{"_index":1888,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["started",{"_index":2252,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startersrc/environments/environment.ts",{"_index":2299,"title":{},"body":{"index.html":{}}}],["startforeground",{"_index":969,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startlocation",{"_index":975,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.latitude",{"_index":978,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.longitude",{"_index":2090,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["starttracking",{"_index":940,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["starttracking(notificationtext",{"_index":948,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["state",{"_index":1090,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["statements",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":611,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["stationaryradius",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":958,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["status.authorization",{"_index":960,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["status.isrunning",{"_index":961,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["statusbar",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["stoponterminate",{"_index":970,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoptracking",{"_index":941,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["storage",{"_index":1631,"title":{},"body":{"injectables/SettingsService.html":{},"dependencies.html":{}}}],["store",{"_index":2351,"title":{},"body":{"index.html":{}}}],["stores",{"_index":380,"title":{},"body":{"injectables/CacheService.html":{}}}],["street",{"_index":533,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["strict",{"_index":2427,"title":{},"body":{"license.html":{}}}],["string",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":397,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["styleurls",{"_index":404,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["subscribe(([filteredtreks",{"_index":2051,"title":{},"body":{"components/TreksMapPage.html":{}}}],["subscribe((isloading",{"_index":1097,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["subscribe(async",{"_index":916,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["subscribed",{"_index":391,"title":{},"body":{"injectables/CacheService.html":{}}}],["subscription",{"_index":757,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["subscription.unsubscribe",{"_index":2124,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["subscriptions",{"_index":723,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["substitute",{"_index":2416,"title":{},"body":{"license.html":{}}}],["such",{"_index":2436,"title":{},"body":{"license.html":{}}}],["super",{"_index":765,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["super.ngondestroy",{"_index":1187,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["super.ngoninit",{"_index":766,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["support",{"_index":2232,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":2257,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2438,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1251,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{}}}],["tabbar.more",{"_index":1780,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.offline",{"_index":1779,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.treks",{"_index":1778,"title":{},"body":{"components/TabsPage.html":{}}}],["table",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1770,"title":{},"body":{"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["tabs.page",{"_index":1788,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":1772,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":1771,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.routing.module",{"_index":1789,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabspage",{"_index":141,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":1781,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tabspageroutingmodule",{"_index":1785,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":342,"title":{},"body":{"injectables/CacheService.html":{}}}],["take(1",{"_index":389,"title":{},"body":{"injectables/CacheService.html":{}}}],["tap",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["tap((event",{"_index":1119,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["tap(item",{"_index":1396,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["tempfilter.id",{"_index":787,"title":{},"body":{"components/FiltersComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["templateref",{"_index":426,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["temporaryfilter",{"_index":785,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilter.values.find(tempvalue",{"_index":789,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters",{"_index":721,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters).length",{"_index":783,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.find(tempfilter",{"_index":786,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.foreach(filter",{"_index":796,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue.id",{"_index":790,"title":{},"body":{"components/FiltersComponent.html":{}}}],["text",{"_index":904,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":1723,"title":{},"body":{"injectables/SettingsService.html":{}}}],["themes",{"_index":474,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["theory",{"_index":2423,"title":{},"body":{"license.html":{}}}],["this.activefiltersnumber",{"_index":683,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.addsourceslayersevents",{"_index":1230,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.alertcontroller.create",{"_index":918,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.alwaysdisplayeditems",{"_index":440,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.backgroundgeolocation.checkstatus",{"_index":959,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.configure(geolocationconfig",{"_index":973,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.getcurrentlocation",{"_index":976,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.location).subscribe(location",{"_index":979,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.start).subscribe(async",{"_index":974,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showappsettings",{"_index":990,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showlocationsettings",{"_index":991,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.start",{"_index":982,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.stop",{"_index":988,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.baseurl}${this.informationdesk.picture",{"_index":1011,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.cache",{"_index":348,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/pois.geojson",{"_index":1484,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_contents.geojson",{"_index":1485,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_events.geojson",{"_index":1486,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/trek.geojson",{"_index":1483,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages.json",{"_index":1343,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages/${id}.json",{"_index":1344,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.hasownproperty(url",{"_index":364,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[revoked",{"_index":351,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[url",{"_index":370,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.changelayervisibility",{"_index":1030,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.changelayervisibility(event.detail.checked",{"_index":1034,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.checktonotify(coordinates",{"_index":890,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications",{"_index":864,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications$.unsubscribe",{"_index":878,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.close",{"_index":776,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.commonsrc",{"_index":771,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.connectionerror",{"_index":1365,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.createmap",{"_index":1178,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.currentorder",{"_index":2087,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.currentpois",{"_index":1967,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.currentpois.features.find(feature",{"_index":866,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpois.features.map(feature",{"_index":875,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify",{"_index":874,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.findindex",{"_index":898,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.splice(notifiedindex",{"_index":909,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex",{"_index":911,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].id",{"_index":902,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].name",{"_index":905,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition",{"_index":879,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition$.next([0",{"_index":989,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([0.705824",{"_index":986,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([location.longitude",{"_index":980,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([startlocation.longitude",{"_index":977,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.unsubscribe",{"_index":891,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentprogress",{"_index":1583,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentprogress$.unsubscribe",{"_index":1587,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentsearchvalue",{"_index":1616,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currenttrek",{"_index":1965,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.data$.getvalue",{"_index":1693,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(defaultsettings.data",{"_index":1679,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(settings.data",{"_index":1674,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.datasettings.find(data",{"_index":1209,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.deletetrek",{"_index":1863,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.disablegeolocationnotification",{"_index":880,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.enablegeolocationnotification",{"_index":887,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.expandableitems",{"_index":443,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.expanded",{"_index":438,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["this.filter.values.slice(4).foreach((value",{"_index":596,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.filteredtreks",{"_index":1183,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["this.filters",{"_index":778,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters$.next(filters",{"_index":1689,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(defaultsettings",{"_index":1678,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(settings",{"_index":1673,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filtertreks.activefiltersnumber",{"_index":2050,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.filtertreks.getfilteredtreks(this.treks",{"_index":1466,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.firebaseanalytics.setcurrentscreen(`${(route.component",{"_index":1398,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.geolocate.checkauthorization",{"_index":882,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.checkiftrackerisrunning",{"_index":884,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.currentposition$.getvalue",{"_index":1315,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.currentposition$.subscribe(coordinates",{"_index":889,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.geolocate.showappsettings",{"_index":931,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.starttracking",{"_index":1231,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.starttracking(this.trekname",{"_index":885,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.stoptracking",{"_index":1186,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.getsettings().subscribe(async",{"_index":1670,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettreks().subscribe",{"_index":1468,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.getvalueforpropertybyid",{"_index":1700,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('cities",{"_index":1715,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('networks",{"_index":1719,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('practice",{"_index":1703,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('route",{"_index":1706,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('themes",{"_index":1724,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('touristiccontent_categories",{"_index":1736,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.globalization.getpreferredlanguage()).value.slice(0",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hits",{"_index":349,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[revoked",{"_index":352,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[url",{"_index":378,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.http.get(`${this.apiurl}/treks.geojson",{"_index":1482,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.http.get(this.apiurl",{"_index":1687,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.http.get(url",{"_index":371,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hydratedtrek",{"_index":1834,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice.pictogram",{"_index":1839,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgpracticesrc",{"_index":1838,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgsrc",{"_index":1836,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.informationdesk",{"_index":1007,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdesk.picture",{"_index":1009,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdeskpicture",{"_index":1010,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.initializeapp",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initialsize",{"_index":442,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.initialstate",{"_index":439,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.isfirstcheck",{"_index":2088,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.isinview",{"_index":2053,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.isonline",{"_index":767,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.items.length",{"_index":445,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(0",{"_index":441,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(this.initialsize",{"_index":444,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.layers",{"_index":1032,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.loaderstatus",{"_index":1057,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderstatus$.unsubscribe",{"_index":1059,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loading.begin('trek",{"_index":1957,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.begin('treks",{"_index":2032,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.begin(loadingid",{"_index":1116,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.finish",{"_index":1912,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.loading.finish('trek",{"_index":1960,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.finish('treks",{"_index":2059,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.finish(loadingid",{"_index":1121,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.status.pipe(delay(0)).subscribe(status",{"_index":1058,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loadingcontroller.create",{"_index":1848,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.loadingids.getvalue",{"_index":1103,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next",{"_index":1107,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next(ids",{"_index":1105,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe",{"_index":1094,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe(map((loadingids",{"_index":1111,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.localnotifications.haspermission",{"_index":886,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.on('click').subscribe",{"_index":865,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.requestpermission",{"_index":888,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.schedule",{"_index":901,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.setdefaults",{"_index":857,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.location.back",{"_index":1777,"title":{},"body":{"components/TabsPage.html":{},"components/TrekMapPage.html":{}}}],["this.map",{"_index":1179,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addcontrol(new",{"_index":1195,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addimage(value.id",{"_index":1228,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addlayer",{"_index":1240,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('treks",{"_index":1232,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('zone",{"_index":1238,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.easeto",{"_index":1289,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.flyto",{"_index":1316,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getcanvas().style.cursor",{"_index":1293,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getsource('treks",{"_index":1181,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getzoom",{"_index":1277,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.loadimage(`${this.commonsrc}${practice.pictogram",{"_index":1212,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('click",{"_index":1270,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('load",{"_index":1206,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseenter",{"_index":1292,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseleave",{"_index":1295,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.queryrenderedfeatures(e.point",{"_index":1272,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.remove",{"_index":1185,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.resize",{"_index":1205,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig",{"_index":1188,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.mapconfig.maxzoom",{"_index":1234,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig.style",{"_index":1189,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapisloaded(false",{"_index":2044,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.mapisloaded.emit(true",{"_index":1298,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition",{"_index":1218,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.addto(this.map",{"_index":1226,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.setlnglat(coordinates",{"_index":1219,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.maxsize",{"_index":366,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.mergefilterstreks",{"_index":2045,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.modalcontroller.create",{"_index":1986,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.modalcontroller.gettop",{"_index":1981,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalctrl.dismiss",{"_index":798,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(id",{"_index":1618,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(true",{"_index":795,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.modalpoidetails",{"_index":1984,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.dismiss",{"_index":1985,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.ondiddismiss().then",{"_index":1988,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.present",{"_index":1989,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.more.getmoreitembyid(moreitemid).pipe",{"_index":1395,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["this.more.getmoreitems().pipe",{"_index":1427,"title":{},"body":{"guards/MoreResolver.html":{}}}],["this.moreinformationsintro",{"_index":1415,"title":{},"body":{"components/MorePage.html":{}}}],["this.moreitem",{"_index":1366,"title":{},"body":{"components/MoreItemPage.html":{}}}],["this.navigatetotrek(data",{"_index":2057,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.navigatetotrek.emit(feature.properties.id",{"_index":1297,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navigatetotrek.emit(featureid",{"_index":1313,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navparams.get('changelayervisibility",{"_index":1031,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('commonsrc",{"_index":1553,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('informationdesk",{"_index":1008,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.navparams.get('isonline",{"_index":768,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.navparams.get('layers",{"_index":1033,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('offline",{"_index":1552,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('orders",{"_index":2085,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.navparams.get('poi",{"_index":1551,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.nbtemporaryfilterstreks",{"_index":781,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.network.type",{"_index":2042,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.nonetwork",{"_index":2041,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.notificationsmodeisactive",{"_index":881,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.numberofactivefilters",{"_index":2052,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.offline",{"_index":1190,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.offlinetreks",{"_index":1613,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.offlinetreks.currentprogressdownload$.subscribe(val",{"_index":1584,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.offlinetreks.getcommonimgsrc",{"_index":773,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc",{"_index":1522,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc(this.trek",{"_index":1837,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.removetrek(this.trek.properties.id",{"_index":1851,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.treks",{"_index":770,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks",{"_index":1612,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.onlinetreks.getcommonimgsrc",{"_index":772,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc",{"_index":1523,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc(this.trek",{"_index":1840,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.onlinetreks.loadtreks",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onlinetreks.onlinetrekserror$.subscribe(error",{"_index":2040,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.onlinetreks.treks",{"_index":769,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetrekserror$.next(error",{"_index":1470,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.onlinetrekserror$.next(null",{"_index":1467,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.order$.next",{"_index":1690,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.orders",{"_index":2084,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.picture",{"_index":1520,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(9999",{"_index":1774,"title":{},"body":{"components/TabsPage.html":{}}}],["this.platform.backbutton.subscribewithpriority(99999",{"_index":775,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["this.platform.is('android",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.is('ios",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.ready().then(async",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.poi",{"_index":1550,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties",{"_index":1554,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures",{"_index":1555,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures.length",{"_index":1519,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0",{"_index":1521,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0].url",{"_index":1556,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.type",{"_index":1513,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.popoverctrl.gettop",{"_index":1978,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.practices",{"_index":1210,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.practices.values.foreach(practice",{"_index":1264,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentconfirmfeatures(featuresincluster",{"_index":1284,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentdeleteconfirm",{"_index":1845,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentpersmissionsconfirm",{"_index":883,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.presentpoidetails.emit(poi",{"_index":869,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.ref.detectchanges",{"_index":1586,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.refreshdelay",{"_index":360,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit",{"_index":369,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit(revoked",{"_index":396,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.subscribe((revoked",{"_index":347,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.route.data.pipe",{"_index":2046,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.route.data.subscribe",{"_index":1958,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.route.data.subscribe((data",{"_index":1363,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["this.route.data.subscribe(data",{"_index":2033,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.router.navigate",{"_index":1905,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.router.navigate([this.router.url",{"_index":1367,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.trekstool.gettrekdetailsurl(id",{"_index":2058,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.router.url",{"_index":1775,"title":{},"body":{"components/TabsPage.html":{}}}],["this.routerlink",{"_index":1841,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.savefiltersstate(filters",{"_index":1692,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.screenorientation.onchange().subscribe",{"_index":1200,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.searchtreks.search(this.treks.features",{"_index":1617,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setofflinesettings",{"_index":1669,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settings.data$.subscribe(settings",{"_index":1558,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settings.filters",{"_index":688,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.filters$.subscribe(filters",{"_index":777,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.gethydratedtrek(this.trek",{"_index":1835,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.settings.loadsettings",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.settings.order$).pipe",{"_index":689,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.order$.subscribe(order",{"_index":2086,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.savefiltersstate(this.temporaryfilters$.getvalue",{"_index":794,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.saveorderstate('default",{"_index":2092,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.saveorderstate(event.detail.value",{"_index":2089,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settingsservice.gethydratedtrek(trek",{"_index":1909,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingsservice.gettouristiccategorieswithfeatures",{"_index":1911,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingssub",{"_index":1557,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settingssub.unsubscribe",{"_index":1563,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.splashscreen.hide",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status.subscribe",{"_index":1101,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.statusbar.stylelightcontent",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get(`settings",{"_index":1677,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.set('settings",{"_index":1671,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.subscriptions",{"_index":2121,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.foreach((subscription",{"_index":2122,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.push",{"_index":774,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.subscriptions$$.push(this.mergefilterstreks",{"_index":2054,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.temporaryfilters$).subscribe",{"_index":780,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(filters",{"_index":779,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(temporaryfilters",{"_index":793,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.touristiccategorieswithfeatures",{"_index":1969,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.translate",{"_index":912,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.translate.get('geolocate.notificationtitle').topromise",{"_index":963,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.translate.get('maptreks.treksalert').subscribe(async",{"_index":1307,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.translate.get('trekcard').topromise",{"_index":1847,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.translate.getdefaultlang",{"_index":1342,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["this.translate.setdefaultlang(defaultlanguage",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.treks",{"_index":1615,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treks$.getvalue",{"_index":1487,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks$.next(data",{"_index":1469,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.trekstool",{"_index":2034,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.getcommonimgsrc",{"_index":2039,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.gettreksurl",{"_index":2037,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.treksurl",{"_index":2036,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekurl",{"_index":1973,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.typeimgsrc",{"_index":1517,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.typepois",{"_index":1512,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.typepois.values.find(typepoi",{"_index":1515,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.valuechange.emit",{"_index":601,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["throw",{"_index":1283,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throwerror",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["throwerror(error",{"_index":393,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["thumbnail",{"_index":519,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["tiles",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiles/{z}/{x}/{y}.png",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tilesize",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":375,"title":{},"body":{"injectables/CacheService.html":{}}}],["title",{"_index":455,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["todo",{"_index":367,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["toggleexpandables",{"_index":411,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["toolbar.filters",{"_index":2060,"title":{},"body":{"components/TreksMapPage.html":{}}}],["toolbar.ordertitle",{"_index":2097,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["toolbar.search",{"_index":2061,"title":{},"body":{"components/TreksMapPage.html":{}}}],["top",{"_index":1198,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{}}}],["topo",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2428,"title":{},"body":{"license.html":{}}}],["touristiccategorie",{"_index":556,"title":{"interfaces/TouristicCategorie.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccategorieswithfeatures",{"_index":580,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["touristiccategorieswithfeatures.push",{"_index":1738,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccategorywithfeatures",{"_index":557,"title":{"interfaces/TouristicCategoryWithFeatures.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontent",{"_index":554,"title":{"interfaces/TouristicContent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["touristiccontent.properties.category",{"_index":1732,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontentlayersproperties",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontents",{"_index":553,"title":{"interfaces/TouristicContents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontents.features",{"_index":1730,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontents.features.filter",{"_index":1740,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristicevent",{"_index":559,"title":{"interfaces/TouristicEvent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristicevents",{"_index":558,"title":{"interfaces/TouristicEvents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trackfilters",{"_index":729,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters(index",{"_index":746,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tracktrek",{"_index":1596,"title":{},"body":{"components/SearchComponent.html":{}}}],["tracktrek(index",{"_index":1606,"title":{},"body":{"components/SearchComponent.html":{}}}],["trad",{"_index":903,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["trad.cancelbutton",{"_index":1310,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad.confirmbutton",{"_index":1311,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad.title",{"_index":1309,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad['geolocate.asklocatepermission",{"_index":922,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.cancel",{"_index":924,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.open",{"_index":929,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["transform",{"_index":2064,"title":{},"body":{"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":603,"title":{},"body":{"components/FilterComponent.html":{}}}],["transition(':enter",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["translate/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forchild",{"_index":1381,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forroot",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["translateparams",{"_index":805,"title":{},"body":{"components/FiltersComponent.html":{}}}],["translateservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{}}}],["translationtrekcard",{"_index":1846,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.askdelete",{"_index":1859,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.cancelbutton",{"_index":1861,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.confirmbutton",{"_index":1860,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletelabel",{"_index":1862,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletetitle",{"_index":1858,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletioninprogress",{"_index":1849,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.errorwhiledeleting",{"_index":1856,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.trekisdelete",{"_index":1855,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trash",{"_index":1879,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["trek",{"_index":127,"title":{"interfaces/Trek.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trek.bbox",{"_index":1491,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.details.contact",{"_index":1567,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.details.informationdesk.website",{"_index":1015,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["trek.details.usefulinformation",{"_index":1566,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.downloadalert.loading",{"_index":1588,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.downloadalert.storage",{"_index":1589,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.features.find(feature",{"_index":1488,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.arrival_city",{"_index":1709,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities",{"_index":1711,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities.map",{"_index":1713,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.departure_city",{"_index":1707,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.difficulty",{"_index":1698,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.first_picture",{"_index":1474,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.first_picture.url",{"_index":1476,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.information_desks",{"_index":1725,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.name",{"_index":1621,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{}}}],["trek.properties.name.tolowercase().includes(searchvalue",{"_index":1629,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["trek.properties.networks",{"_index":1716,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.networks.map",{"_index":1718,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.practice",{"_index":1701,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.route",{"_index":1704,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes",{"_index":1720,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes.map",{"_index":1722,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trekarrowlayerproperties",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekcardcomponent",{"_index":143,"title":{"components/TrekCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekcontext",{"_index":576,"title":{"interfaces/TrekContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekcontextresolver",{"_index":206,"title":{"guards/TrekContextResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["trekdetailspage",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekdetailspagemodule",{"_index":1917,"title":{"modules/TrekDetailsPageModule.html":{}},"body":{"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekid",{"_index":1447,"title":{},"body":{"injectables/OnlineTreksService.html":{},"guards/TrekContextResolver.html":{},"interfaces/TreksService.html":{}}}],["treklinelayerproperties",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekmappage",{"_index":146,"title":{"components/TrekMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekmappagemodule",{"_index":1993,"title":{"modules/TrekMapPageModule.html":{}},"body":{"modules/TrekMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekname",{"_index":829,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trekproperties",{"_index":497,"title":{"interfaces/TrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekremoved",{"_index":1854,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.departure",{"_index":1866,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks.features",{"_index":645,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.filter(trek",{"_index":1628,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.module",{"_index":1923,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{}}}],["treks.module.ts",{"_index":1755,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["treks.page",{"_index":2103,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["treks.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["treks.service.ts",{"_index":609,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.service.ts:102",{"_index":1449,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:109",{"_index":625,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:111",{"_index":1451,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:113",{"_index":627,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:117",{"_index":619,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:120",{"_index":1453,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:125",{"_index":629,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:129",{"_index":1446,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:138",{"_index":1444,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:15",{"_index":639,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:17",{"_index":623,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:27",{"_index":1463,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:28",{"_index":1461,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:30",{"_index":1464,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:31",{"_index":1462,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:32",{"_index":1442,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:43",{"_index":1460,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:45",{"_index":638,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:56",{"_index":1456,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:63",{"_index":1443,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:67",{"_index":1459,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:71",{"_index":635,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:75",{"_index":631,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:79",{"_index":1458,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:83",{"_index":1457,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:85",{"_index":633,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:9",{"_index":1626,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.service.ts:93",{"_index":1455,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:97",{"_index":621,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks/filter",{"_index":608,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/offline",{"_index":764,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/online",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/search",{"_index":1611,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["treks/treks.module",{"_index":1790,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["treks/treks.page",{"_index":1793,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["treksbystep",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekscontext",{"_index":582,"title":{"interfaces/TreksContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekscontextresolver",{"_index":208,"title":{"guards/TreksContextResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["treksmappage",{"_index":148,"title":{"components/TreksMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treksmappagemodule",{"_index":2066,"title":{"modules/TreksMapPageModule.html":{}},"body":{"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksorderchange",{"_index":2077,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksorderchange(event",{"_index":2080,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksordercomponent",{"_index":149,"title":{"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekspage",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["trekspagemodule",{"_index":1786,"title":{"modules/TreksPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksservice",{"_index":560,"title":{"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treksservice.getcommonimgsrc",{"_index":1910,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getmapconfigfortrekbyid(trek",{"_index":1908,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getpoisfortrekbyid(trekid",{"_index":1902,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiccontentsfortrekbyid(trekid",{"_index":1903,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiceventsfortrekbyid(trekid",{"_index":1904,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(trekid",{"_index":1901,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["trekssource",{"_index":1180,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekssource.setdata",{"_index":1184,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekstool",{"_index":578,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["trekstool.treks$.subscribe(treks",{"_index":1614,"title":{},"body":{"components/SearchComponent.html":{}}}],["treksurl",{"_index":2010,"title":{},"body":{"components/TreksMapPage.html":{}}}],["trekurl",{"_index":1930,"title":{},"body":{"components/TrekMapPage.html":{}}}],["trekzoom",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('expandcollapse",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe(trekremoved",{"_index":1852,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["try",{"_index":1977,"title":{},"body":{"components/TrekMapPage.html":{}}}],["ts",{"_index":653,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["turf/distance",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["turf/helpers",{"_index":641,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["two",{"_index":1913,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2446,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeimgsrc",{"_index":1499,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepoi.id",{"_index":1516,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois",{"_index":1500,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois.values.find(typepoi",{"_index":1562,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["types/lodash.clonedeep",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["types/mapbox",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["ui.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ui.module.ts",{"_index":1763,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":673,"title":{},"body":{"injectables/FilterTreksService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"injectables/SettingsService.html":{}}}],["units",{"_index":894,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["unsubscribe",{"_index":715,"title":{"classes/UnSubscribe.html":{}},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(subscription",{"_index":2123,"title":{},"body":{"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(this.mergefilterstreks",{"_index":2055,"title":{},"body":{"components/TreksMapPage.html":{}}}],["unsubscribe:11",{"_index":750,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:17",{"_index":749,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:5",{"_index":758,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["uppercase",{"_index":801,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["url",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":475,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["use",{"_index":2304,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1667,"title":{},"body":{"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["usedthe",{"_index":2324,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["usefirebase",{"_index":2355,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userlocation",{"_index":637,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["val",{"_index":1585,"title":{},"body":{"components/ProgressComponent.html":{}}}],["value",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["value'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["value.checked",{"_index":600,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.checked).length",{"_index":663,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.checked).map(checkedvalue",{"_index":675,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.component",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["value.component.html",{"_index":697,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.scss",{"_index":696,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts",{"_index":695,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["value.component.ts:10",{"_index":701,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:11",{"_index":700,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:12",{"_index":699,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:16",{"_index":702,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:19",{"_index":705,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.id",{"_index":791,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.image",{"_index":1229,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["value.interval",{"_index":679,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.name",{"_index":708,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value/filter",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/FilterValueComponent.html":{},"coverage.html":{}}}],["valuechange",{"_index":587,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["valuechanged",{"_index":586,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuechanged(undefined",{"_index":593,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuecheckchanged",{"_index":698,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["valuecheckchanged($event",{"_index":703,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["values",{"_index":537,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["var",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["variable",{"_index":2133,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2449,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2259,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vibrate",{"_index":858,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["visibility",{"_index":1019,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["visibility.component",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["visibility.component.html",{"_index":1021,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.scss",{"_index":1020,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts",{"_index":1018,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["visibility.component.ts:10",{"_index":1029,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:11",{"_index":1025,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:15",{"_index":1026,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:20",{"_index":1028,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility/layers",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["viz",{"_index":1132,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["viz.component",{"_index":1749,"title":{},"body":{"modules/SharedModule.html":{}}}],["viz.component.html",{"_index":1134,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.scss",{"_index":1133,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts",{"_index":1131,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viz.component.ts:150",{"_index":1152,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:301",{"_index":1160,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:31",{"_index":1161,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:32",{"_index":1163,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:33",{"_index":1164,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:340",{"_index":1154,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:35",{"_index":1148,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:36",{"_index":1149,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:37",{"_index":1147,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:38",{"_index":1146,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:39",{"_index":1150,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:41",{"_index":1151,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:42",{"_index":1145,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:57",{"_index":1157,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:74",{"_index":1158,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:84",{"_index":1153,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz/map",{"_index":1130,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["warranties",{"_index":2397,"title":{},"body":{"license.html":{}}}],["way",{"_index":2432,"title":{},"body":{"license.html":{}}}],["website",{"_index":534,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["webview",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["webview/ngx",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["whether",{"_index":2425,"title":{},"body":{"license.html":{}}}],["white",{"_index":1892,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["whitelist",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":712,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["window.settimeout",{"_index":1204,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["windows",{"_index":2285,"title":{},"body":{"index.html":{}}}],["within",{"_index":2340,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":362,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":1962,"title":{},"body":{"components/TrekMapPage.html":{}}}],["wrap",{"_index":1889,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["x",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"interfaces/TreksService.html":{}}}],["z",{"_index":1067,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["zip",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["zone",{"_index":1241,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["zone.js",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["zonelayerproperties",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoneoutlinelayerproperties",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, translate: TranslateService, globalization: Globalization, onlineTreks: OnlineTreksService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalization\n                                                  \n                                                        \n                                                                    Globalization\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '@env/environment';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private translate: TranslateService,\n    private globalization: Globalization,\n    private onlineTreks: OnlineTreksService,\n    private settings: SettingsService,\n    ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      let defaultLanguage;\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        defaultLanguage = (await this.globalization.getPreferredLanguage()).value.slice(0, 2);\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n      } else {\n        defaultLanguage = navigator.language.slice(0, 2);\n      }\n\n      // we assume that availableLanguage[0] is default language if user language is not available\n      if (environment.availableLanguage && environment.availableLanguage.length > 0) {\n        if (environment.availableLanguage.indexOf(defaultLanguage) === -1) {\n          defaultLanguage = environment.availableLanguage[0];\n        }\n      } else {\n        // or 'fr' if array is empty\n        defaultLanguage = 'fr';\n      }\n\n      this.translate.setDefaultLang(defaultLanguage);\n\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nAppModule -->\n\nFilterValueComponent->AppModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nAppModule -->\n\nFiltersComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nAppModule -->\n\nSharedUiModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FiltersComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoadingInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { LoadingInterceptor } from '@app/services/loading/loading.service';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\n\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { ProgressComponent } from '@app/components/progress/progress.component';\nimport { LayersVisibilityComponent } from '@app/components/layers-visibility/layers-visibility.component';\n\nimport { FilterValueComponent } from './components/filter-value/filter-value.component';\nimport { TreksOrderComponent } from './components/treks-order/treks-order.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FiltersComponent,\n    PoiDetailsComponent,\n    SearchComponent,\n    ProgressComponent,\n    FilterComponent,\n    FilterValueComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  entryComponents: [\n    FiltersComponent,\n    PoiDetailsComponent,\n    SearchComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    IonicModule.forRoot({ mode: 'md', animated: true }),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n    IonicStorageModule.forRoot(),\n    SharedUiModule,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    File,\n    Zip,\n    WebView,\n    BackgroundGeolocation,\n    LocalNotifications,\n    ScreenOrientation,\n    Globalization,\n    SocialSharing,\n    Network,\n    FirebaseAnalytics,\n    MoreResolver,\n    MoreItemResolver,\n    TrekContextResolver,\n    TreksContextResolver,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'app', pathMatch: 'full' },\n  {\n    path: 'app',\n    loadChildren: './pages/tabs/tabs.module#TabsPageModule',\n  },\n  {\n    path: 'app/map/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n  },\n  {\n    path: 'app/map-offline/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Public\n                                hits\n                            \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                refreshDelay\n                            \n                            \n                                    Public\n                                revoke\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                revoking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            revoking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoking(observable: Observable, revoked?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    revoked\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 4 * 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            revoke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, publishReplay, refCount, take, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n\n  private cache: { [key: string]: Observable } = {};\n  private refreshDelay = 4 * 60 * 60 * 1000;\n  private maxSize = 200;\n  public revoke: EventEmitter = new EventEmitter();\n  public hits: { [key: string]: number } = {};\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.revoke.subscribe((revoked: string | null) => {\n      if (!revoked) {\n        this.cache = {};\n        this.hits = {};\n      } else {\n        delete this.cache[revoked];\n        delete this.hits[revoked];\n      }\n    });\n  }\n\n  /*\n   * gets an observable\n   * that broadcasts a ReplaySubject\n   * which emits the response of a get request\n   * during this.refreshDelay ms without sending a new http request\n   */\n  public get(url: string, options: any): Observable {\n    if (!this.cache.hasOwnProperty(url)) {\n      if (Object.keys(this.cache).length >= this.maxSize) {\n        // TODO: do not revoke everything\n        this.revoke.emit();\n      }\n      this.cache[url] = this.http.get(url, options).pipe(\n        // set hits to 0 each time request is actually sent\n        tap(() => {\n          this.hits[url] = 0;\n        }),\n        // create a ReplaySubject that stores and emit last response during delay\n        publishReplay(1, this.refreshDelay),\n        // broadcast ReplaySubject\n        refCount(),\n        // complete each observer after response has been emitted\n        take(1),\n        // increment hits each time request is subscribed\n        tap(() => {\n          const hits = this.hits[url];\n          this.hits[url] = hits ? hits + 1 : 1;\n        }),\n        catchError((error) => {\n          delete this.cache[url];\n          return throwError(error)\n        })\n      );\n    }\n    return this.cache[url];\n  }\n\n  /*\n   Make the observable revoke the cache when it emits\n   */\n  public revoking(observable: Observable, revoked?: string | null): Observable {\n    return observable.pipe(tap(() => {\n      this.revoke.emit(revoked);\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsibleListComponent.html":{"url":"components/CollapsibleListComponent.html","title":"component - CollapsibleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsibleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/collapsible-list/collapsible-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapsible-list\n            \n\n            \n                styleUrls\n                ./collapsible-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collapsible-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alwaysDisplayedItems\n                            \n                            \n                                    Public\n                                expandableItems\n                            \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleExpandables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideAllLabel\n                            \n                            \n                                initialSize\n                            \n                            \n                                initialState\n                            \n                            \n                                items\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                showAllLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialSize\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialState\n                    \n                \n                \n                    \n                        Type :     \"expanded\" | \"collapsed\"\n\n                    \n                \n                \n                    \n                        Default value : 'collapsed'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpandables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpandables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alwaysDisplayedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandableItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { expandCollapse } from '@app/components/animations';\n\n@Component({\n  selector: 'app-collapsible-list',\n  templateUrl: './collapsible-list.component.html',\n  styleUrls: ['./collapsible-list.component.scss'],\n  animations: [expandCollapse],\n})\nexport class CollapsibleListComponent implements OnInit {\n  @Input() items: T[];\n  @Input() showAllLabel: string;\n  @Input() hideAllLabel: string;\n  @Input() initialSize = 5;\n  @Input() initialState: 'expanded' | 'collapsed' = 'collapsed';\n  @Input() itemTemplate: TemplateRef;\n\n  public alwaysDisplayedItems: T[] = [];\n  public expandableItems: T[] = [];\n  public expanded = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.expanded = this.initialState === 'expanded';\n    this.alwaysDisplayedItems = this.items.slice(0, this.initialSize);\n    this.expandableItems = this.items.slice(this.initialSize, this.items.length);\n  }\n\n  public toggleExpandables() {\n    this.expanded = !this.expanded;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n 0\">\n  \n    \n      \n      \n    \n  \n  \n    \n      {{ showAllLabel }}\n    \n    \n      {{ hideAllLabel }}\n    \n  \n\n\n    \n\n    \n                \n                    ./collapsible-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     0\">                                    {{ showAllLabel }}              {{ hideAllLabel }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollapsibleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectErrorComponent.html":{"url":"components/ConnectErrorComponent.html","title":"component - ConnectErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConnectErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connect-error/connect-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-error\n            \n\n            \n                styleUrls\n                ./connect-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        retry\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-connect-error',\n  templateUrl: './connect-error.component.html',\n  styleUrls: ['./connect-error.component.scss'],\n})\nexport class ConnectErrorComponent  {\n  @Input() public title = '';\n  @Input() public content = '';\n  @Input() public icon = '';\n  @Input() public buttonText = '';\n  @Output() public retry = new EventEmitter();\n\n  constructor() {}\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      {{title}}\n    \n  \n  \n    \n      {{content}}\n    \n  \n  \n    \n      \n        {{buttonText}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./connect-error.component.scss\n                \n                .icon-size {\n  font-size: 4em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{title}}                  {{content}}                          {{buttonText}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainsFilter.html":{"url":"interfaces/ContainsFilter.html","title":"interface - ContainsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSetting.html":{"url":"interfaces/DataSetting.html","title":"interface - DataSetting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSetting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hideAllLabel\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        showAllLabel\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideAllLabel\n                                    \n                                \n                                \n                                    \n                                        hideAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllLabel\n                                    \n                                \n                                \n                                    \n                                        showAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\" | \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\" | \"interval\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     FilterValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { expandCollapse } from '@app/components/animations';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n  animations: [expandCollapse]\n})\nexport class FilterComponent implements OnInit {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  public expanded: boolean;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.filter.values.slice(4).forEach((value) => {\n      // expand filter if an expandable value is already checked\n      if (value.checked) {\n        this.expanded = true;\n      }\n    });\n  }\n\n  public valueChanged({ checked, value }: { checked: boolean, value: FilterValue }) {\n    this.valueChange.emit({ checked: checked, value: value });\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ filter.name }}\n  \n\n  \n    \n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .expandable {\n  transition: height .5s;\n  height: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.name }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterTreksService.html":{"url":"injectables/FilterTreksService.html","title":"injectable - FilterTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter-treks/filter-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeFiltersNumber$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                containsFilter\n                            \n                            \n                                    Static\n                                filter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedIdForFilter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedInterval\n                            \n                            \n                                    Public\n                                getFilteredTreks\n                            \n                            \n                                    Private\n                                    Static\n                                getNumberOfActiveFilters\n                            \n                            \n                                    Private\n                                    Static\n                                intervalFilter\n                            \n                            \n                                    Private\n                                    Static\n                                isFilterActive\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter-treks/filter-treks.service.ts:117\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsFilter(filter: ContainsFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                ContainsFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(treks: MinimalTreks | null, filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTreks | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedIdForFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedIdForFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedInterval\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedInterval(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFilteredTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredTreks(treks$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getNumberOfActiveFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumberOfActiveFilters(filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            intervalFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intervalFilter(filter: IntervalFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IntervalFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isFilterActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFilterActive(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(filteredTreks: MinimalTrek[], order: Order, userLocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filteredTreks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeFiltersNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter-treks/filter-treks.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { point } from '@turf/helpers';\n\nimport { ContainsFilter, Filter, IntervalFilter, MinimalTrek, MinimalTreks, Order } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\nconst distance = require('@turf/distance').default;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterTreksService {\n  public activeFiltersNumber$: Observable;\n\n  public static filter(treks: MinimalTreks | null, filters: Filter[] | null): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n\n    let filteredFeatures = treks.features;\n\n    if (filters) {\n      filters.forEach(filter => {\n        filteredFeatures = filteredFeatures.filter(feature => {\n          if (!FilterTreksService.isFilterActive(filter)) {\n            return true;\n          }\n          if (filter.type === 'contains') {\n            return FilterTreksService.containsFilter(filter as ContainsFilter, feature);\n          } else if (filter.type === 'interval') {\n            return FilterTreksService.intervalFilter(filter as IntervalFilter, feature);\n          } else {\n            // TODO: not necessary but ts  {\n      // Sort by user location\n      if (order === 'location' && userLocation && userLocation !== null) {\n        const distanceFromTrekA = distance(point(a.geometry.coordinates), point(userLocation));\n        const distanceFromTrekB = distance(point(b.geometry.coordinates), point(userLocation));\n\n        if (distanceFromTrekA  distanceFromTrekB) {\n          return 1;\n        }\n        return 0;\n      }\n      // Default order (alphabetically)\n      if (a.properties.name  b.properties.name) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  private static isFilterActive(filter: Filter): boolean {\n    return filter.values.filter(value => value.checked).length > 0;\n  }\n\n  private static getNumberOfActiveFilters(filters: Filter[] | null): number {\n    let numberOfActiveFilters = 0;\n    if (!!filters) {\n      filters.forEach(filter => {\n        numberOfActiveFilters += FilterTreksService.getCheckedIdForFilter(filter).length;\n      });\n    }\n    return numberOfActiveFilters;\n  }\n\n  private static intervalFilter(filter: IntervalFilter, feature: MinimalTrek) {\n    let isInInterval = false;\n    FilterTreksService.getCheckedInterval(filter).forEach(([min, max]: [number, number]) => {\n      const criterionValue: number = feature.properties[filter.id];\n      if (criterionValue >= min && criterionValue  (feature.properties[filter.id] as any).indexOf(filterValue) !== -1,\n        ) !== undefined\n      );\n    } else {\n      return FilterTreksService.getCheckedIdForFilter(filter).indexOf(feature.properties[filter.id] as any) !== -1;\n    }\n  }\n\n  private static getCheckedIdForFilter(filter: Filter): number[] {\n    return filter.values.filter(value => value.checked).map(checkedValue => checkedValue.id);\n  }\n\n  private static getCheckedInterval(filter: Filter): [number, number][] {\n    return filter.values\n      .filter(value => !!value.interval && value.checked)\n      .map(checkedValue => checkedValue.interval) as [number, number][];\n  }\n\n  constructor(private settings: SettingsService) {\n    this.activeFiltersNumber$ = settings.filters$.pipe(\n      map(filters => FilterTreksService.getNumberOfActiveFilters(filters)),\n    );\n  }\n\n  public getFilteredTreks(treks$: Observable): Observable {\n    return combineLatest(treks$, this.settings.filters$, this.settings.order$).pipe(\n      map(([treks, filters, order]) => {\n        if (treks && filters && order) {\n          return FilterTreksService.sort(FilterTreksService.filter(treks, filters), order.type, order.value);\n        } else {\n          return [];\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterValue.html":{"url":"interfaces/FilterValue.html","title":"interface - FilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checked\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        interval\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterValueComponent.html":{"url":"components/FilterValueComponent.html","title":"component - FilterValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter-value/filter-value.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-value\n            \n\n            \n                styleUrls\n                ./filter-value.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-value.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueCheckChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         FilterValue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueCheckChanged($event: CustomEvent, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            CustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter-value',\n  templateUrl: './filter-value.component.html',\n  styleUrls: ['./filter-value.component.scss'],\n})\nexport class FilterValueComponent implements OnInit {\n  @Input() value: FilterValue;\n  @Input() commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n  public valueCheckChanged($event: CustomEvent, value: FilterValue) {\n    this.valueChange.emit({ checked: $event.detail.checked, value: value });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ value.name }}\n  \n\n    \n\n    \n                \n                    ./filter-value.component.scss\n                \n                .no-lines {\n    --inner-border-width: 0px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ value.name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filters/filters.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                isOnline\n                            \n                            \n                                    Public\n                                nbTemporaryFiltersTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                temporaryFilters$\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilters\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                eraseFilters\n                            \n                            \n                                    Public\n                                handleFiltersState\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                trackFilters\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, settings: SettingsService, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, navParams: NavParams, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            eraseFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eraseFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilters(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOnline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nbTemporaryFiltersTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temporaryFilters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\nimport { cloneDeep } from 'lodash';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { Filter, FilterValue, MinimalTreks } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends UnSubscribe implements OnInit, OnDestroy {\n  public temporaryFilters$ = new BehaviorSubject([]);\n  public nbTemporaryFiltersTreks = 0;\n  public isOnline: boolean;\n  public commonSrc: string;\n  public filters: any[];\n  constructor(\n    private modalCtrl: ModalController,\n    public settings: SettingsService,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewWillEnter() {\n    this.isOnline = this.navParams.get('isOnline');\n    const treks$ = this.isOnline ? this.onlineTreks.treks$ : this.offlineTreks.treks$;\n    this.commonSrc = this.isOnline ? this.onlineTreks.getCommonImgSrc() : this.offlineTreks.getCommonImgSrc();\n\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      this.settings.filters$.subscribe(filters => {\n        this.filters = filters || [];\n        this.temporaryFilters$.next(filters || []);\n      }),\n      combineLatest(treks$, this.temporaryFilters$).subscribe(\n        ([treks, temporaryFilters]: [MinimalTreks | null, Filter[]]) => {\n          if (!!treks) {\n            this.nbTemporaryFiltersTreks = FilterTreksService.filter(treks, temporaryFilters).length;\n          } else {\n            this.nbTemporaryFiltersTreks = 0;\n          }\n        },\n      ),\n    );\n  }\n\n  public handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue): void {\n    const temporaryFilters = cloneDeep(this.temporaryFilters$.getValue());\n    const temporaryFilter = temporaryFilters.find(tempFilter => tempFilter.id === filter.id) as Filter;\n    const filterValue = temporaryFilter.values.find(tempValue => tempValue.id === value.id) as FilterValue;\n    filterValue.checked = checkState;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public applyFilters(): void {\n    this.settings.saveFiltersState(this.temporaryFilters$.getValue());\n    this.modalCtrl.dismiss(true);\n  }\n\n  public eraseFilters(): void {\n    const temporaryFilters = cloneDeep(this.temporaryFilters$.getValue());\n    temporaryFilters.forEach(filter => {\n      filter.values.forEach(value => (value.checked = false));\n    });\n    this.filters = temporaryFilters;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public trackFilters(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'filters.title' | translate | uppercase }}\n    \n      \n        {{ 'filters.erase' | translate }}\n      \n    \n  \n\n\n\n  \n    \n      \n      \n    \n  \n\n\n\n  \n    \n    filters.zeroresult\n    filters.oneresult\n     1\" translate\n      [translateParams]=\"{ nb: nbTemporaryFiltersTreks }\">filters.results\n  \n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .full-width {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'filters.title\\' | translate | uppercase }}                  {{ \\'filters.erase\\' | translate }}                                              filters.zeroresult    filters.oneresult     1\" translate      [translateParams]=\"{ nb: nbTemporaryFiltersTreks }\">filters.results  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeolocateNotificationsComponent.html":{"url":"components/GeolocateNotificationsComponent.html","title":"component - GeolocateNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeolocateNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geolocate-notifications\n            \n\n            \n                styleUrls\n                ./geolocate-notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geolocate-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                clicklocalNotifications$\n                            \n                            \n                                currentPoisToNotify\n                            \n                            \n                                    Private\n                                currentPosition$\n                            \n                            \n                                    Public\n                                localNotifications\n                            \n                            \n                                notificationsModeIsActive\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeNotificationsMode\n                            \n                            \n                                checkToNotify\n                            \n                            \n                                disableGeolocationNotification\n                            \n                            \n                                enableGeolocationNotification\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentPersmissionsConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPois\n                            \n                            \n                                trekName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                presentPoiDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, localNotifications: LocalNotifications, alertController: AlertController, geolocate: GeolocateService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localNotifications\n                                                  \n                                                        \n                                                                    LocalNotifications\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPois\n                    \n                \n                \n                    \n                        Type :         Pois\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trekName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        presentPoiDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeNotificationsMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeNotificationsMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkToNotify\n                        \n                        \n                    \n                \n            \n            \n                \ncheckToNotify(fromCoordinates: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromCoordinates\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \ndisableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \nenableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPersmissionsConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPersmissionsConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clicklocalNotifications$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPoisToNotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalNotifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsModeIsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Subscription } from 'rxjs';\nimport { point } from '@turf/helpers';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst distance = require('@turf/distance').default;\n\nimport { Pois } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-geolocate-notifications',\n  templateUrl: './geolocate-notifications.component.html',\n  styleUrls: ['./geolocate-notifications.component.scss'],\n})\nexport class GeolocateNotificationsComponent implements OnInit, OnChanges, OnDestroy {\n  currentPoisToNotify: any[];\n  clicklocalNotifications$: Subscription;\n  notificationsModeIsActive = false;\n  @Input() currentPois: Pois;\n  @Input() trekName: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  private currentPosition$: Subscription;\n\n  constructor(\n    public platform: Platform,\n    public localNotifications: LocalNotifications,\n    public alertController: AlertController,\n    private geolocate: GeolocateService,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.localNotifications.setDefaults({\n        vibrate: true,\n        sound: true,\n        foreground: true,\n        icon: 'res://icon',\n        smallIcon: 'res://ic_stat_panorama',\n      });\n      this.clicklocalNotifications$ = this.localNotifications.on('click').subscribe(({ data }) => {\n        const poi = this.currentPois.features.find(feature => feature.properties.id === data.id);\n        this.presentPoiDetails.emit(poi);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    if (changesCurrentPois.currentValue && !changesCurrentPois.previousValue) {\n      this.currentPoisToNotify = this.currentPois.features.map(feature => ({\n        id: feature.properties.id,\n        name: feature.properties.name,\n        coordinates: feature.geometry.coordinates,\n      }));\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.clicklocalNotifications$) {\n      this.clicklocalNotifications$.unsubscribe();\n    }\n\n    if (this.currentPosition$) {\n      this.disableGeolocationNotification();\n    }\n  }\n\n  async changeNotificationsMode() {\n    if (!this.notificationsModeIsActive) {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        if (!(await this.geolocate.checkAuthorization())) {\n          this.presentPersmissionsConfirm();\n        } else {\n          if (!(await this.geolocate.checkIfTrackerIsRunning())) {\n            this.geolocate.startTracking(this.trekName);\n          }\n          if (await this.localNotifications.hasPermission()) {\n            this.notificationsModeIsActive = true;\n            this.enableGeolocationNotification();\n          } else {\n            await this.localNotifications.requestPermission();\n          }\n        }\n      } else {\n        this.geolocate.startTracking(this.trekName);\n        this.notificationsModeIsActive = true;\n        this.enableGeolocationNotification();\n      }\n    } else {\n      this.notificationsModeIsActive = false;\n      this.disableGeolocationNotification();\n    }\n  }\n\n  enableGeolocationNotification(): void {\n    this.currentPosition$ = this.geolocate.currentPosition$.subscribe(coordinates => this.checkToNotify(coordinates));\n  }\n\n  disableGeolocationNotification(): void {\n    this.currentPosition$.unsubscribe();\n  }\n\n  checkToNotify(fromCoordinates: number[]) {\n    const kmToNotify = environment.metersToNotify / 1000;\n    const options = {\n      units: 'kilometers',\n    };\n    const from = point(fromCoordinates);\n    const notifiedIndex = this.currentPoisToNotify.findIndex(\n      feature => distance(from, point(feature.coordinates), options)  {\n          this.localNotifications.schedule({\n            id: this.currentPoisToNotify[notifiedIndex].id,\n            title: trad,\n            text: this.currentPoisToNotify[notifiedIndex].name,\n            data: {\n              id: this.currentPoisToNotify[notifiedIndex].id,\n            },\n            channel: `channel${this.currentPoisToNotify[notifiedIndex].id}`,\n            priority: 2,\n          });\n\n          this.currentPoisToNotify.splice(notifiedIndex, 1);\n        });\n      } else {\n        console.log('Poi', this.currentPoisToNotify[notifiedIndex]);\n      }\n    }\n  }\n\n  async presentPersmissionsConfirm() {\n    await this.translate\n      .get(['geolocate.askLocatePermission', 'geolocate.cancel', 'geolocate.open'])\n      .subscribe(async trad => {\n        const persmissionsConfirm = await this.alertController.create({\n          header: 'Permissions',\n          message: trad['geolocate.askLocatePermission'],\n          buttons: [\n            {\n              text: trad['geolocate.cancel'],\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: trad['geolocate.open'],\n              handler: () => {\n                this.geolocate.showAppSettings();\n              },\n            },\n          ],\n        });\n\n        await persmissionsConfirm.present();\n      });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ 'mapTrek.enableNotification' | translate }}\n\n\n\n  \n  {{ 'mapTrek.disableNotification' | translate }}\n\n\n    \n\n    \n                \n                    ./geolocate-notifications.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'mapTrek.enableNotification\\' | translate }}    {{ \\'mapTrek.disableNotification\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeolocateNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocateService.html":{"url":"injectables/GeolocateService.html","title":"injectable - GeolocateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeolocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocate/geolocate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundGeolocation\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuthorization\n                            \n                            \n                                    Async\n                                checkIfTrackerIsRunning\n                            \n                            \n                                showAppSettings\n                            \n                            \n                                showLocationSettings\n                            \n                            \n                                    Async\n                                startTracking\n                            \n                            \n                                stopTracking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backgroundGeolocation: BackgroundGeolocation, platform: Platform, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAuthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkIfTrackerIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfTrackerIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAppSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowAppSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking(notificationText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \nstopTracking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backgroundGeolocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BackgroundGeolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  BackgroundGeolocation,\n  BackgroundGeolocationConfig,\n  BackgroundGeolocationEvents,\n  BackgroundGeolocationLocationProvider,\n} from '@ionic-native/background-geolocation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocateService {\n  public currentPosition$: BehaviorSubject = new BehaviorSubject(null);\n\n  constructor(\n    public backgroundGeolocation: BackgroundGeolocation,\n    public platform: Platform,\n    private translate: TranslateService,\n  ) {}\n\n  async checkAuthorization() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.authorization !== 0;\n  }\n\n  async checkIfTrackerIsRunning() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.isRunning;\n  }\n\n  async startTracking(notificationText: string) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const notificationTitle: string = await this.translate.get('geolocate.notificationTitle').toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider: BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        maxLocations: 10,\n        startForeground: true,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText,\n        ...environment.backgroundGeolocation,\n      };\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.start).subscribe(async () => {\n        const startLocation = await this.backgroundGeolocation.getCurrentLocation();\n        this.currentPosition$.next([startLocation.longitude, startLocation.latitude]);\n      });\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.location).subscribe(location => {\n        this.currentPosition$.next([location.longitude, location.latitude]);\n      });\n\n      this.backgroundGeolocation.start();\n    } else {\n      // fake position for browser dev\n      this.currentPosition$.next([0.705824, 44.410157]);\n    }\n  }\n\n  stopTracking() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.backgroundGeolocation.stop();\n    }\n\n    this.currentPosition$.next([0, 0]);\n  }\n\n  showAppSettings() {\n    this.backgroundGeolocation.showAppSettings();\n  }\n\n  showLocationSettings() {\n    this.backgroundGeolocation.showLocationSettings();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrek.html":{"url":"interfaces/HydratedTrek.html","title":"interface - HydratedTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         HydratedTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrekProperties.html":{"url":"interfaces/HydratedTrekProperties.html","title":"interface - HydratedTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        accessibilities\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        ambiance\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        networks\n                                \n                                \n                                        parking_location\n                                \n                                \n                                        pictures\n                                \n                                \n                                            Optional\n                                        points_reference\n                                \n                                \n                                        practice\n                                \n                                \n                                        profile\n                                \n                                \n                                        route\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                                \n                                        themes\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ambiance\n                                    \n                                \n                                \n                                    \n                                        ambiance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking_location\n                                    \n                                \n                                \n                                    \n                                        parking_location:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points_reference\n                                    \n                                \n                                \n                                    \n                                        points_reference:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationDesk.html":{"url":"interfaces/InformationDesk.html","title":"interface - InformationDesk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationDesk\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        municipality\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        photo_url\n                                \n                                \n                                        picture\n                                \n                                \n                                        postal_code\n                                \n                                \n                                        street\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        municipality\n                                    \n                                \n                                \n                                    \n                                        municipality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url\n                                    \n                                \n                                \n                                    \n                                        photo_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postal_code\n                                    \n                                \n                                \n                                    \n                                        postal_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number | Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number | Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationDeskDetailsComponent.html":{"url":"components/InformationDeskDetailsComponent.html","title":"component - InformationDeskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationDeskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-desk-details/information-desk-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-desk-details\n            \n\n            \n                styleUrls\n                ./information-desk-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-desk-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                informationDesk\n                            \n                            \n                                informationDeskPicture\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDesk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationDesk\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDeskPicture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { InformationDesk } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-information-desk-details',\n  templateUrl: './information-desk-details.component.html',\n  styleUrls: ['./information-desk-details.component.scss'],\n})\nexport class InformationDeskDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  informationDesk: InformationDesk;\n  informationDeskPicture = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.informationDesk = this.navParams.get('informationDesk');\n    if (this.informationDesk && this.informationDesk.picture) {\n      this.informationDeskPicture = `${this.baseUrl}${this.informationDesk.picture}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ informationDesk.name }}\n  \n\n\n\n  \n    \n    \n      \n      \n      {{ informationDesk.postal_code }} {{ informationDesk.municipality }}\n      \n         {{ 'trek.details.informationDesk.website' | translate }}  -\n         Email  -\n        {{ informationDesk.phone }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./information-desk-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ informationDesk.name }}                              {{ informationDesk.postal_code }} {{ informationDesk.municipality }}               {{ \\'trek.details.informationDesk.website\\' | translate }}  -         Email  -        {{ informationDesk.phone }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationDeskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationIntro.html":{"url":"interfaces/InformationIntro.html","title":"interface - InformationIntro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationIntro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationItem.html":{"url":"interfaces/InformationItem.html","title":"interface - InformationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntervalFilter.html":{"url":"interfaces/IntervalFilter.html","title":"interface - IntervalFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntervalFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayersVisibilityComponent.html":{"url":"components/LayersVisibilityComponent.html","title":"component - LayersVisibilityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayersVisibilityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layers-visibility/layers-visibility.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layers-visibility\n            \n\n            \n                styleUrls\n                ./layers-visibility.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layers-visibility.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLayerVisibility\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                layerVisibilityChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layerVisibilityChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerVisibilityChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLayerVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-layers-visibility',\n  templateUrl: './layers-visibility.component.html',\n  styleUrls: ['./layers-visibility.component.scss'],\n})\nexport class LayersVisibilityComponent {\n  changeLayerVisibility: any;\n  layers: any;\n\n  constructor(private navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.changeLayerVisibility = this.navParams.get('changeLayerVisibility');\n    this.layers = this.navParams.get('layers');\n  }\n\n  public layerVisibilityChange(event: any) {\n    this.changeLayerVisibility(event.detail.checked, event.detail.value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ layer.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./layers-visibility.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ layer.name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayersVisibilityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Private\n                                loaderStatus$\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                progressBarWidth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        condition\n                    \n                \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressBarWidth\n                    \n                \n                \n                    \n                        Default value : '50%'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { delay } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnDestroy {\n  @Input() public progressBarWidth = '50%';\n  @Input() public condition: boolean | null = null;\n  public loaderStatus: Boolean;\n  private loaderStatus$: Subscription;\n\n  constructor(public loading: LoadingService) {\n    // add delay to prevent expression has changed after it was checked\n    this.loaderStatus$ = this.loading.status.pipe(delay(0)).subscribe(status => (this.loaderStatus = status));\n  }\n\n  ngOnDestroy(): void {\n    this.loaderStatus$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadingIds\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                begin\n                            \n                            \n                                finish\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            begin\n                        \n                        \n                    \n                \n            \n            \n                \nbegin(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finish\n                        \n                        \n                    \n                \n            \n            \n                \nfinish(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoading\n                        \n                        \n                    \n                \n            \n            \n                \nisLoading(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTreksVizComponent.html":{"url":"components/MapTreksVizComponent.html","title":"component - MapTreksVizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapTreksVizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-treks-viz\n            \n\n            \n                styleUrls\n                ./map-treks-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-treks-viz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                markerPosition\n                            \n                            \n                                    Private\n                                practices\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSourcesLayersEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                    Public\n                                flyToUserLocation\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                presentConfirmFeatures\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                dataSettings\n                            \n                            \n                                filteredTreks\n                            \n                            \n                                mapConfig\n                            \n                            \n                                offline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, screenOrientation: ScreenOrientation, platform: Platform, translate: TranslateService, geolocate: GeolocateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        screenOrientation\n                                                  \n                                                        \n                                                                    ScreenOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSettings\n                    \n                \n                \n                    \n                        Type :         DataSetting[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredTreks\n                    \n                \n                \n                    \n                        Type :     MinimalTrek[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Type :     MapboxOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mapIsLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateToTrek\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSourcesLayersEvents\n                        \n                        \n                    \n                \n            \n            \n                \naddSourcesLayersEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            flyToUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flyToUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:340\n                \n            \n\n\n            \n                \n                    Fly to user location else fitbounds to trek\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirmFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmFeatures(features: Feature[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                            Feature[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Marker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            practices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataSetting\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport { GeoJSONSource, GeoJSONSourceRaw, Map, MapboxOptions, Marker } from 'mapbox-gl';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { MinimalTrek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '../abstract/unsubscribe';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-treks-viz',\n  templateUrl: './map-treks-viz.component.html',\n  styleUrls: ['./map-treks-viz.component.scss'],\n})\nexport class MapTreksVizComponent extends UnSubscribe implements OnChanges, OnDestroy {\n  private map: Map;\n  private markerPosition: Marker;\n  private practices: DataSetting;\n\n  @Input() public filteredTreks: MinimalTrek[] | null = null;\n  @Input() public mapConfig: MapboxOptions;\n  @Input() public dataSettings: DataSetting[];\n  @Input() public commonSrc: string;\n  @Input() public offline: Boolean;\n\n  @Output() public navigateToTrek = new EventEmitter();\n  @Output() public mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private alertController: AlertController,\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private translate: TranslateService,\n    private geolocate: GeolocateService,\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTreks: SimpleChange = changes.filteredTreks;\n    if (changesCurrentTreks.currentValue && !changesCurrentTreks.previousValue) {\n      this.createMap();\n    } else {\n      if (this.map) {\n        const treksSource = this.map.getSource('treks-points') as GeoJSONSource;\n        if (treksSource && this.filteredTreks) {\n          treksSource.setData({\n            type: 'FeatureCollection',\n            features: this.filteredTreks,\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap() {\n    if (this.mapConfig && this.mapConfig.style) {\n      if (this.offline && (this.platform.is('ios') || this.platform.is('android'))) {\n        (this.mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.commonSrc + (environment.offlineMapConfig.style as any).sources['tiles-background'].tiles[0];\n      }\n\n      this.map = new mapboxgl.Map({\n        ...this.mapConfig,\n        container: 'map-treks',\n      });\n\n      this.map.addControl(new mapboxgl.NavigationControl({ showCompass: false }), 'top-left');\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize ...\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          }),\n        );\n      }\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create((observer: any) => {\n          const practices: DataSetting | undefined = this.dataSettings.find(data => data.id === 'practice');\n          if (practices) {\n            this.practices = practices;\n            practices.values.forEach((practice, index: number) => {\n              this.map.loadImage(`${this.commonSrc}${practice.pictogram}`, (error: any, image: any) => {\n                observer.next({ id: practice.id.toString(), image });\n                if (index + 1 === practices.values.length) {\n                  observer.complete();\n                }\n              });\n            });\n          }\n        });\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$.subscribe(coordinates => {\n            if (coordinates) {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates as any);\n              } else {\n                const el = document.createElement('div');\n                el.className = 'pulse';\n                this.markerPosition = new mapboxgl.Marker({ element: el }).setLngLat(coordinates);\n                this.markerPosition.addTo(this.map);\n              }\n            }\n          }),\n          loadImages.subscribe({\n            next: value => this.map.addImage(value.id, value.image),\n            complete: () => {\n              this.addSourcesLayersEvents();\n              this.geolocate.startTracking('');\n            },\n          }),\n        );\n      });\n    }\n  }\n\n  addSourcesLayersEvents() {\n    this.map.addSource('treks-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: this.filteredTreks,\n      },\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50,\n    } as GeoJSONSourceRaw);\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: 'assets/map/zone/zone.geojson',\n    });\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint,\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: {\n        'text-color': '#fff',\n      },\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 16,\n        'text-offset': [0, 0.1],\n      },\n    });\n\n    const circleColorExpression: any[] = [];\n    circleColorExpression.push('match');\n    circleColorExpression.push(['get', 'practice']);\n    this.practices.values.forEach(practice => {\n      circleColorExpression.push(practice.id);\n      circleColorExpression.push(practice.color);\n    });\n    circleColorExpression.push(environment.map.clusterPaint['circle-color']);\n\n    this.map.addLayer({\n      id: 'trek-point',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        ...environment.map.clusterPaint,\n        'circle-color': circleColorExpression as any,\n        'circle-radius': 16,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'trek-point-icon',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['get', 'practice'],\n        'icon-size': environment.map.globalMapIconSize,\n      },\n    });\n\n    this.map.on('click', 'clusters-circle', e => {\n      const features = this.map.queryRenderedFeatures(e.point, {\n        layers: ['clusters-circle'],\n      });\n\n      const featureProperties = features[0].properties;\n      if (!!featureProperties) {\n        const clusterId = featureProperties.cluster_id;\n\n        if (this.map.getZoom() === this.mapConfig.maxZoom) {\n          // no more zoom, display features inside cluster\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterLeaves(\n            featureProperties.cluster_id,\n            Infinity,\n            0,\n            (err: any, featuresInCluster: Feature[]) => {\n              if (err) {\n                throw err;\n              }\n              this.presentConfirmFeatures(featuresInCluster as Feature[]);\n            },\n          );\n        } else {\n          // zoom to next cluster expansion\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterExpansionZoom(\n            clusterId,\n            (err: any, zoom: number) => {\n              if (err) {\n                return;\n              }\n              const coordinates = (features[0].geometry as Point).coordinates;\n              this.map.easeTo({\n                center: [coordinates[0], coordinates[1]],\n                zoom: zoom,\n              });\n            },\n          );\n        }\n      }\n    });\n\n    this.map.on('mouseenter', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.map.on('click', 'trek-point', e => {\n      const feature = this.map.queryRenderedFeatures(e.point, {\n        layers: ['trek-point'],\n      })[0];\n      if (!!feature.properties) {\n        this.navigateToTrek.emit(feature.properties.id);\n      }\n    });\n\n    this.map.on('mouseenter', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.mapIsLoaded.emit(true);\n  }\n  async presentConfirmFeatures(features: Feature[]) {\n    const featuresRadio: Object[] = []; // can't import AlertOption\n\n    features.forEach((feature, index: number) => {\n      featuresRadio.push({\n        name: feature.properties.name,\n        type: 'radio',\n        label: feature.properties.name,\n        value: feature.properties.id,\n        checked: index === 0,\n      });\n    });\n\n    await this.translate.get('mapTreks.treksAlert').subscribe(async trad => {\n      const alert = await this.alertController.create({\n        header: trad.title,\n        inputs: featuresRadio,\n        buttons: [\n          {\n            text: trad.cancelButton,\n            role: 'cancel',\n            cssClass: 'secondary',\n          },\n          {\n            text: trad.confirmButton,\n            handler: featureId => {\n              this.navigateToTrek.emit(featureId);\n            },\n          },\n        ],\n      });\n\n      await alert.present();\n    });\n  }\n\n  /**\n   * Fly to user location else fitbounds to trek\n   */\n  public flyToUserLocation(): void {\n    const userLocation = this.geolocate.currentPosition$.getValue();\n    if (userLocation) {\n      this.map.flyTo({\n        center: userLocation,\n        animate: false,\n        zoom: environment.trekZoom.zoom,\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./map-treks-viz.component.scss\n                \n                .options-button-container {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 24px;\n  top: 24px;\n  z-index: 5;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapTreksVizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrek.html":{"url":"interfaces/MinimalTrek.html","title":"interface - MinimalTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         MinimalTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MinimalTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrekProperties.html":{"url":"interfaces/MinimalTrekProperties.html","title":"interface - MinimalTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessibilities\n                                \n                                \n                                        departure\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        first_picture\n                                \n                                \n                                        id\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        practice\n                                \n                                \n                                        themes\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_picture\n                                    \n                                \n                                \n                                    \n                                        first_picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTreks.html":{"url":"interfaces/MinimalTreks.html","title":"interface - MinimalTreks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTreks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     MinimalTrek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreInformationsService.html":{"url":"injectables/MoreInformationsService.html","title":"injectable - MoreInformationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MoreInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/more-informations/more-informations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMoreItemById\n                            \n                            \n                                    Public\n                                getMoreItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: CacheService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItemById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItemById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InformationIntro, InformationItem } from '@app/interfaces/interfaces';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MoreInformationsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  constructor(private cache: CacheService, private translate: TranslateService) {}\n\n  public getMoreItems(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages.json`, httpOptions);\n  }\n\n  public getMoreItemById(id: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages/${id}.json`, httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoreItemPage.html":{"url":"components/MoreItemPage.html","title":"component - MoreItemPage","body":"\n                   \n\n\n\n\n\n  Components\n  MoreItemPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more-item/more-item.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more-item\n            \n\n            \n                styleUrls\n                ./more-item.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more-item.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectionError\n                            \n                            \n                                moreItem\n                            \n                            \n                                moreItemId\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationItem } from '@app/interfaces/interfaces';\n\n\n@Component({\n  selector: 'app-more-item',\n  templateUrl: './more-item.page.html',\n  styleUrls: ['./more-item.page.scss'],\n})\nexport class MoreItemPage extends UnSubscribe implements OnInit, OnDestroy {\n  moreItem: InformationItem;\n  moreItemId: number;\n  connectionError = false;\n\n  constructor(\n    private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data) => {\n        const item = data['item'] as (InformationItem | 'connectionError');\n        if (item === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreItem = item;\n        }\n      })\n    );\n  }\n\n  refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ moreItem.title }}\n  \n\n\n  \n  \n  \n  \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more-item.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ moreItem.title }}                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoreItemPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoreItemPageModule.html":{"url":"modules/MoreItemPageModule.html","title":"module - MoreItemPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MoreItemPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more-item/more-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoreItemPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { MoreItemPage } from './more-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoreItemPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      item: MoreItemResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule, TranslateModule.forChild()],\n  declarations: [MoreItemPage],\n})\nexport class MoreItemPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreItemResolver.html":{"url":"guards/MoreItemResolver.html","title":"guard - MoreItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more-item.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more-item.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/more-item.resolver.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { InformationItem } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreItemResolver implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const moreItemId = +(route.paramMap.get('moreItemId'));\n    return this.more.getMoreItemById(moreItemId).pipe(\n      tap(item => {\n        if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n          this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name} ${item.title}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorePage.html":{"url":"components/MorePage.html","title":"component - MorePage","body":"\n                   \n\n\n\n\n\n  Components\n  MorePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more\n            \n\n            \n                styleUrls\n                ./more.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                connectionError\n                            \n                            \n                                moreInformationsIntro\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreInformationsIntro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationIntro[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '@env/environment';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationIntro } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.page.html',\n  styleUrls: ['./more.page.scss'],\n})\nexport class MorePage extends UnSubscribe implements OnInit {\n  moreInformationsIntro: InformationIntro[];\n  connectionError = false;\n  public appName: string = environment.appName;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const items: InformationIntro[] | 'connectionError' = data.items;\n        if (items === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreInformationsIntro = items;\n        }\n      })\n    );\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n\n\n\n  \n  \n  \n\n  \n    \n      \n        \n          {{ moreInformationIntro.title }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}                                       {{ moreInformationIntro.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MorePageModule.html":{"url":"modules/MorePageModule.html","title":"module - MorePageModule","body":"\n                   \n\n\n\n\n    Modules\n    MorePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_MorePageModule_imports\n\n\n\n\nMorePage\n\nMorePage\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MorePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MorePage } from './more.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    component: MorePage,\n    resolve: {\n      items: MoreResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule, TranslateModule.forChild()],\n  declarations: [MorePage],\n})\nexport class MorePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreResolver.html":{"url":"guards/MoreResolver.html","title":"guard - MoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { InformationIntro } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreResolver implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve = (route: ActivatedRouteSnapshot) =>\n    this.more.getMoreItems().pipe(\n      tap(() => {\n        if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n          this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineTreksService.html":{"url":"injectables/OnlineTreksService.html","title":"injectable - OnlineTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OnlineTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online-treks/online-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                filteredTreks$\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreksError$\n                            \n                            \n                                    Public\n                                treks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCommonImgSrc\n                            \n                            \n                                    Public\n                                getMapConfigForTrekById\n                            \n                            \n                                    Public\n                                getMinimalTrekById\n                            \n                            \n                                    Public\n                                getPoisForTrekById\n                            \n                            \n                                    Public\n                                getTouristicContentsForTrekById\n                            \n                            \n                                    Public\n                                getTouristicEventsForTrekById\n                            \n                            \n                                    Public\n                                getTrekById\n                            \n                            \n                                    Public\n                                getTrekDetailsUrl\n                            \n                            \n                                    Public\n                                getTrekImageSrc\n                            \n                            \n                                    Public\n                                getTrekMapUrl\n                            \n                            \n                                    Private\n                                getTreks\n                            \n                            \n                                    Public\n                                getTreksMapUrl\n                            \n                            \n                                    Public\n                                getTreksUrl\n                            \n                            \n                                    Public\n                                loadTreks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cache: CacheService, filterTreks: FilterTreksService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapConfigForTrekById(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinimalTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinimalTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoisForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicContentsForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicEventsForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekDetailsUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekMapUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreksError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { environment } from '@env/environment';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnlineTreksService implements TreksService {\n  public offline = false;\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public onlineTreksError$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private cache: CacheService,\n    private filterTreks: FilterTreksService,\n    private translate: TranslateService,\n  ) {\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n  }\n\n  public loadTreks() {\n    this.onlineTreksError$.next(null);\n    this.getTreks().subscribe(\n      data => {\n        this.treks$.next(data);\n      },\n      error => {\n        this.onlineTreksError$.next(error);\n      },\n    );\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      return environment.onlineBaseUrl + (!!picture ? picture.url : trek.properties.first_picture.url);\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    return `${environment.onlineBaseUrl}`;\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks';\n  }\n\n  public getTrekDetailsUrl(trekId: number): string {\n    return `/app/tabs/treks/trek-details/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number): string {\n    return `/app/map/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n\n    return this.http.get(`${this.apiUrl}/treks.geojson`, httpOptions);\n  }\n\n  public getTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/trek.geojson`, httpOptions);\n  }\n\n  public getPoisForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/pois.geojson`, httpOptions);\n  }\n\n  public getTouristicContentsForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/touristic_contents.geojson`, httpOptions);\n  }\n\n  public getTouristicEventsForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/touristic_events.geojson`, httpOptions);\n  }\n\n  public getMinimalTrekById(trekId: number): MinimalTrek | undefined {\n    const trek = this.treks$.getValue();\n    if (!!trek) {\n      return trek.features.find(feature => feature.properties.id === trekId);\n    } else {\n      return undefined;\n    }\n  }\n\n  public getMapConfigForTrekById(trek: Trek): MapboxOptions {\n    const mapConfig: MapboxOptions = { ...cloneDeep(environment.onlineMapConfig), zoom: environment.trekZoom.zoom };\n    (mapConfig as any).bounds = trek.bbox as [number, number, number, number];\n    (mapConfig as any).fitBoundsOptions = { padding: { top: 100, bottom: 100, left: 100, right: 100 } };\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        legend\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiComponent.html":{"url":"components/PoiComponent.html","title":"component - PoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi/poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi\n            \n\n            \n                styleUrls\n                ./poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                offline\n                            \n                            \n                                poi\n                            \n                            \n                                typePois\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi/poi.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        poi\n                    \n                \n                \n                    \n                        Type :         Poi\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typePois\n                    \n                \n                \n                    \n                        Type :         DataSetting | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi/poi.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Picture, Poi, Trek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-poi',\n  templateUrl: './poi.component.html',\n  styleUrls: ['./poi.component.scss'],\n})\nexport class PoiComponent implements OnChanges {\n  @Input() public poi: Poi;\n  @Input() public offline = false;\n  @Input() public commonSrc: string;\n  @Input() public typePois: DataSetting | undefined;\n\n  public baseUrl = environment.onlineBaseUrl;\n  public picture: Picture | null = null;\n  public typeImgSrc: string | null = null;\n\n  constructor(public offlineTreks: OfflineTreksService, public onlineTreks: OnlineTreksService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.poi) {\n      if (this.typePois && this.poi.properties.type) {\n        const currentTypePoi = this.typePois.values.find(typePoi => typePoi.id === this.poi.properties.type);\n        if (currentTypePoi) {\n          this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n        }\n      }\n\n      if (this.poi.properties.pictures.length > 0) {\n        this.picture = this.poi.properties.pictures[0];\n        if (this.offline) {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.offlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        } else {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.onlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        }\n      } else {\n        this.picture = null;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ picture!.legend }}\n      ({{ picture!.author }})\n    \n  \n  \n    \n      \n      \n        {{ poi.properties.name }}\n      \n    \n  \n  \n    \n      \n        \n      \n    \n\n    \n      \n        Information pratiques\n        \n      \n    \n\n    \n      \n        Contact\n        \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi.component.scss\n                \n                .card-header-container {\n  align-items: flex-end;\n  display: flex;\n  .img-header {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ picture!.legend }}      ({{ picture!.author }})                                {{ poi.properties.name }}                                                            Information pratiques                                    Contact                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiDetailsComponent.html":{"url":"components/PoiDetailsComponent.html","title":"component - PoiDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi-details/poi-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi-details\n            \n\n            \n                styleUrls\n                ./poi-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                poi\n                            \n                            \n                                    Public\n                                poiImg\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                settingsSub\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams, settings: SettingsService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poiImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { Poi, Picture, Trek } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-poi-details',\n  templateUrl: './poi-details.component.html',\n  styleUrls: ['./poi-details.component.scss'],\n})\nexport class PoiDetailsComponent {\n  public offline = false;\n  public baseUrl = environment.onlineBaseUrl;\n  public poi: Poi;\n  public poiImg = '';\n  public typeImgSrc: string | null = null;\n  public settingsSub: Subscription;\n  public picture: Picture | null = null;\n  public commonSrc: string;\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navParams: NavParams,\n    public settings: SettingsService,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n  ) {}\n\n  ionViewWillEnter() {\n    this.poi = this.navParams.get('poi');\n    this.offline = this.navParams.get('offline');\n    this.commonSrc = this.navParams.get('commonSrc');\n\n    if (\n      this.poi &&\n      this.poi.properties &&\n      this.poi.properties.pictures &&\n      this.poi.properties.pictures.length > 0 &&\n      this.poi.properties.pictures[0].url\n    ) {\n      this.picture = this.poi.properties.pictures[0];\n      if (this.offline) {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.offlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n        };\n      } else {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.onlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n        };\n      }\n    } else {\n      this.picture = null;\n    }\n\n    this.settingsSub = this.settings.data$.subscribe(settings => {\n      if (settings) {\n        const typePois = settings.find(setting => setting.id === 'poi_types');\n\n        if (typePois && this.poi.properties.type) {\n          const currentTypePoi = typePois.values.find(typePoi => typePoi.id === this.poi.properties.type);\n          if (currentTypePoi) {\n            this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n          }\n        }\n      }\n    });\n  }\n\n  close(): void {\n    this.settingsSub.unsubscribe();\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ poi.properties.name }}\n  \n\n\n\n  \n    \n      \n      \n        \n        {{ poi.properties.pictures[0]?.legend }}\n        ({{ poi.properties.pictures[0].author }})\n      \n    \n\n    \n      \n        \n          \n        \n      \n\n      \n        \n          trek.details.usefulInformation\n          \n        \n      \n\n      \n        \n          trek.details.contact\n          \n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi-details.component.scss\n                \n                .card-legend {\n  align-items: flex-end;\n  display: flex;\n  .img-legend {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ poi.properties.name }}                                    {{ poi.properties.pictures[0]?.legend }}        ({{ poi.properties.pictures[0].author }})                                                                            trek.details.usefulInformation                                                trek.details.contact                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pois.html":{"url":"interfaces/Pois.html","title":"interface - Pois","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pois\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressComponent.html":{"url":"components/ProgressComponent.html","title":"component - ProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/progress/progress.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress\n            \n\n            \n                styleUrls\n                ./progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentProgress\n                            \n                            \n                                    Private\n                                currentProgress$\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentProgress$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  changeDetection: ChangeDetectionStrategy.Default,\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss'],\n})\nexport class ProgressComponent {\n  public currentProgress: number;\n  private currentProgress$: Subscription;\n\n  constructor(public offlineTreks: OfflineTreksService, private ref: ChangeDetectorRef) {}\n\n  ionViewWillEnter(): void {\n    this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(val => {\n      this.currentProgress = val;\n      this.ref.detectChanges();\n    });\n  }\n\n  ionViewWillLeave(): void {\n    this.currentProgress$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ 'trek.downloadAlert.loading' | translate }}\n        \n        \n          \n          \n        \n      \n      \n        \n          \n          \n            {{ 'trek.downloadAlert.storage' | translate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./progress.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'trek.downloadAlert.loading\\' | translate }}                                                                                                {{ \\'trek.downloadAlert.storage\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Property.html":{"url":"interfaces/Property.html","title":"interface - Property","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Property\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SearchTreksService\n                \n            \n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentSearchValue\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Private\n                                treks\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                navigateToTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Public\n                                trackTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, searchTreks: SearchTreksService, navParams: NavParams, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchTreks\n                                                  \n                                                        \n                                                                        SearchTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackTrek(index: number, element: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentSearchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTreks | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\n\nimport { MinimalTrek, MinimalTreks, Trek } from '@app/interfaces/interfaces';\nimport { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\n\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchTreksService],\n})\nexport class SearchComponent extends UnSubscribe implements OnInit {\n  public filteredTreks: MinimalTrek[] = [];\n  public currentSearchValue: string;\n  private treks: MinimalTreks | null = null;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private searchTreks: SearchTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    const isOnline = this.navParams.get('isOnline');\n    const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      treksTool.treks$.subscribe(treks => {\n        this.treks = treks;\n        this.filteredTreks = [];\n      }),\n    );\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public search(searchValue: string): void {\n    this.currentSearchValue = searchValue;\n    if (this.treks) {\n      this.filteredTreks = this.searchTreks.search(this.treks.features, searchValue);\n    } else {\n      this.filteredTreks = [];\n    }\n  }\n\n  public navigateToTrek(id: number) {\n    this.modalCtrl.dismiss(id);\n  }\n\n  public trackTrek(index: number, element: Trek): number | null {\n    return element ? element.properties.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'search.title' | translate | uppercase }}\n  \n  \n    \n    \n  \n\n\n\n   0; else loading\">\n    \n      \n        \n        {{ trek.properties.name }}\n      \n    \n  \n\n  \n    \n      \n        \n          {{ 'search.noResult' | translate }}\n        \n        \n          {{ 'search.contentPlaceHolder' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'search.title\\' | translate | uppercase }}                 0; else loading\">                          {{ trek.properties.name }}                                          {{ \\'search.noResult\\' | translate }}                          {{ \\'search.contentPlaceHolder\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchTreksService.html":{"url":"injectables/SearchTreksService.html","title":"injectable - SearchTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-treks/search-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(treks: MinimalTrek[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search-treks/search-treks.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { MinimalTrek } from '@app/interfaces/interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchTreksService {\n  public search(treks: MinimalTrek[], searchValue: string): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n    if (!searchValue) {\n      return treks;\n    }\n    searchValue = searchValue.toLowerCase();\n    return treks.filter(trek => {\n      return trek.properties.name.toLowerCase().includes(searchValue);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         DataSetting[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataSetting[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Public\n                                filters$\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                order$\n                            \n                            \n                                    Public\n                                storage\n                            \n                            \n                                    Public\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFilters\n                            \n                            \n                                    Public\n                                getHydratedTrek\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getTouristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                getValueForPropertyById\n                            \n                            \n                                    Public\n                                loadSettings\n                            \n                            \n                                    Public\n                                resetFilters\n                            \n                            \n                                    Public\n                                saveFiltersState\n                            \n                            \n                                    Public\n                                saveOrderState\n                            \n                            \n                                    Private\n                                    Async\n                                setOfflineSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: Storage, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings/settings.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilters(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHydratedTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHydratedTrek(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HydratedTrek\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicCategoriesWithFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicCategoriesWithFeatures(touristicContents: TouristicContents)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touristicContents\n                                    \n                                                TouristicContents\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TouristicCategoryWithFeatures[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueForPropertyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueForPropertyById(propertyName: string, id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Property | InformationDesk | TouristicCategorie | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFiltersState(filters: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveOrderState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrderState(order: Order, geolocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    geolocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setOfflineSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOfflineSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            order$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({\n    type: 'default',\n    value: undefined,\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([0, 0])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  Trek,\n  Filter,\n  Settings,\n  DataSetting,\n  HydratedTrek,\n  Property,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  TouristicCategorie,\n  Order,\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public filters$ = new BehaviorSubject(null);\n  public order$ = new BehaviorSubject({\n    type: 'default',\n    value: undefined,\n  });\n  // User location, used for ordering treks by distance\n  public userLocation$ = new BehaviorSubject([0, 0]);\n  public data$ = new BehaviorSubject(null);\n\n  constructor(public http: HttpClient, public storage: Storage, private translate: TranslateService) {}\n\n  public loadSettings() {\n    this.setOfflineSettings();\n\n    this.getSettings().subscribe(async settings => {\n      await this.storage.set('settings', JSON.stringify(settings));\n      this.filters$.next(this.getFilters(settings));\n      this.data$.next(settings.data);\n    });\n  }\n\n  private async setOfflineSettings() {\n    const defaultSettings = JSON.parse(await this.storage.get(`settings`));\n    if (defaultSettings) {\n      this.filters$.next(this.getFilters(defaultSettings));\n      this.data$.next(defaultSettings.data);\n    }\n  }\n\n  private getFilters(settings: Settings) {\n    const filters: Filter[] = [];\n    if (settings && settings.filters && settings.data) {\n      settings.filters.forEach(filter => {\n        const currentDataSetting = settings.data.find((data: DataSetting) => data.id === filter.id);\n        if (currentDataSetting) {\n          filter = { ...filter, ...currentDataSetting, values: [] };\n          filter.values = currentDataSetting.values.map(value => ({\n            ...value,\n            checked: false,\n          }));\n          filters.push(filter);\n        }\n      });\n    }\n\n    return filters;\n  }\n\n  public getSettings(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.http.get(this.apiUrl + '/settings.json', httpOptions);\n  }\n\n  public saveFiltersState(filters: Filter[]): void {\n    this.filters$.next(filters);\n  }\n\n  public saveOrderState(order: Order, geolocation?: number[]): void {\n    this.order$.next({ type: order, value: geolocation });\n  }\n\n  public resetFilters(): void {\n    let filters = cloneDeep(this.filters$.getValue());\n    if (!!filters) {\n      filters.forEach(filter => {\n        filter.values.forEach(value => (value.checked = false));\n      });\n    } else {\n      filters = [];\n    }\n    this.saveFiltersState(filters);\n  }\n\n  private getValueForPropertyById(\n    propertyName: string,\n    id: number | string,\n  ): Property | InformationDesk | TouristicCategorie | string {\n    const dataSetting = this.data$.getValue();\n\n    if (dataSetting) {\n      const property = dataSetting.find(data => data.id === propertyName);\n      if (property) {\n        const propertyValue = property.values.find(value => value.id === id);\n        if (propertyValue) {\n          return propertyValue;\n        } else {\n          return { id: -1, name: '' };\n        }\n      }\n    }\n\n    return { id: -1, name: '' };\n  }\n\n  public getHydratedTrek(trek: Trek): HydratedTrek {\n    const hydratedTrek: HydratedTrek = cloneDeep(trek) as any;\n\n    if (trek.properties.difficulty) {\n      hydratedTrek.properties.difficulty = this.getValueForPropertyById(\n        'difficulty',\n        trek.properties.difficulty,\n      ) as Property;\n    }\n\n    if (trek.properties.practice) {\n      hydratedTrek.properties.practice = this.getValueForPropertyById('practice', trek.properties.practice) as Property;\n    }\n\n    if (trek.properties.route) {\n      hydratedTrek.properties.route = this.getValueForPropertyById('route', trek.properties.route) as Property;\n    }\n\n    if (trek.properties.departure_city) {\n      hydratedTrek.properties.departure_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.departure_city,\n      ) as Property;\n    }\n\n    if (trek.properties.arrival_city) {\n      hydratedTrek.properties.arrival_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.arrival_city,\n      ) as Property;\n    }\n\n    if (trek.properties.cities) {\n      hydratedTrek.properties.cities = trek.properties.cities.map(\n        city => this.getValueForPropertyById('cities', city) as Property,\n      );\n    }\n\n    if (trek.properties.networks) {\n      hydratedTrek.properties.networks = trek.properties.networks.map(\n        network => this.getValueForPropertyById('networks', network) as Property,\n      );\n    }\n\n    if (trek.properties.themes) {\n      hydratedTrek.properties.themes = trek.properties.themes.map(\n        theme => this.getValueForPropertyById('themes', theme) as Property,\n      );\n    }\n\n    if (trek.properties.information_desks) {\n      hydratedTrek.properties.information_desks.forEach(information_desk => {\n        information_desk.type = this.getValueForPropertyById(\n          'information_desk_types',\n          information_desk.type as number,\n        ) as Property;\n      });\n    }\n\n    return hydratedTrek;\n  }\n\n  public getTouristicCategoriesWithFeatures(touristicContents: TouristicContents): TouristicCategoryWithFeatures[] {\n    const touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[] = [];\n    const categories = touristicContents.features\n      .map(touristicContent => touristicContent.properties.category)\n      .filter((v, i, a) => a.indexOf(v) === i);\n    categories.forEach(categoryId => {\n      const category = this.getValueForPropertyById('touristiccontent_categories', categoryId) as TouristicCategorie;\n      touristicCategoriesWithFeatures.push({\n        id: categoryId,\n        name: category ? category.name : '',\n        features: touristicContents.features.filter(\n          touristicContent => touristicContent.properties.category === categoryId,\n        ),\n      });\n    });\n    return touristicCategoriesWithFeatures;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { GeolocateNotificationsComponent } from '@app/components/geolocate-notifications/geolocate-notifications.component';\nimport { MapTrekVizComponent } from '@app/components/map-trek-viz/map-trek-viz.component';\nimport { MapTreksVizComponent } from '@app/components/map-treks-viz/map-treks-viz.component';\n\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n  imports: [CommonModule, IonicModule, TranslateModule.forChild()],\n  exports: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedTreksModule.html":{"url":"modules/SharedTreksModule.html","title":"module - SharedTreksModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedTreksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PoiComponent } from '@app/components/poi/poi.component';\nimport { TrekCardComponent } from '@app/components/trek-card/trek-card.component';\n\n@NgModule({\n  declarations: [PoiComponent, TrekCardComponent],\n  imports: [CommonModule, IonicModule, RouterModule, TranslateModule.forChild()],\n  exports: [PoiComponent, TrekCardComponent],\n})\nexport class SharedTreksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapsibleListComponent } from '@app/components/collapsible-list/collapsible-list.component';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectErrorComponent } from '@app/components/connect-error/connect-error.component';\nimport { LoaderComponent } from '@app/components/loader/loader.component';\n\n@NgModule({\n  declarations: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n  imports: [CommonModule, IonicModule, RouterModule],\n  exports: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tabs/tabs.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss'],\n})\nexport class TabsPage {\n  constructor(private platform: Platform, private router: Router, private location: Location) {\n    this.platform.backButton.subscribeWithPriority(9999, () => {\n      const url = this.router.url;\n      if (url !== '/app/tabs/treks' && url !== '/app/tabs/treks-offline' && url !== '/app/tabs/more') {\n        this.location.back();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'tabbar.treks' | translate }}\n    \n    \n      \n      {{ 'tabbar.offline' | translate }}\n    \n    \n      \n      {{ 'tabbar.more' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'tabbar.treks\\' | translate }}                    {{ \\'tabbar.offline\\' | translate }}                    {{ \\'tabbar.more\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MorePageModule\n                        \n                        \n                            SharedUiModule\n                        \n                        \n                            TabsPageRoutingModule\n                        \n                        \n                            TreksPageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\nimport { TabsPageRoutingModule } from './tabs.routing.module';\nimport { TreksPageModule } from '../treks/treks.module';\nimport { MorePageModule } from '../more/more.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n    TreksPageModule,\n    MorePageModule,\n    TranslateModule.forChild(),\n    SharedUiModule,\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { TreksPage } from '../treks/treks.page';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'treks',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n          },\n        ],\n      },\n      {\n        path: 'treks-offline',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            data: { offline: true },\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true },\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n            data: { offline: true },\n          },\n        ],\n      },\n      {\n        path: 'more',\n        children: [\n          {\n            path: '',\n            loadChildren: '../more/more.module#MorePageModule',\n          },\n          {\n            path: ':moreItemId',\n            loadChildren: '../more/more-item/more-item.module#MoreItemPageModule',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: '',\n    redirectTo: '/app/tabs/treks',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TabsPageRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategorie.html":{"url":"interfaces/TouristicCategorie.html","title":"interface - TouristicCategorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategoryWithFeatures.html":{"url":"interfaces/TouristicCategoryWithFeatures.html","title":"interface - TouristicCategoryWithFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategoryWithFeatures\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContent.html":{"url":"interfaces/TouristicContent.html","title":"interface - TouristicContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContents.html":{"url":"interfaces/TouristicContents.html","title":"interface - TouristicContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvent.html":{"url":"interfaces/TouristicEvent.html","title":"interface - TouristicEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvents.html":{"url":"interfaces/TouristicEvents.html","title":"interface - TouristicEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trek.html":{"url":"interfaces/Trek.html","title":"interface - Trek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Trek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         TrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekCardComponent.html":{"url":"components/TrekCardComponent.html","title":"component - TrekCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrekCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trek-card/trek-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-card\n            \n\n            \n                styleUrls\n                ./trek-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hydratedTrek\n                            \n                            \n                                    Public\n                                imgPracticeSrc\n                            \n                            \n                                    Public\n                                imgSrc\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                routerLink\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickDeleteConfirm\n                            \n                            \n                                    Private\n                                    Async\n                                deleteTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                presentDeleteConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                offline\n                            \n                            \n                                showAllData\n                            \n                            \n                                trek\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, loadingController: LoadingController, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, settings: SettingsService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trek-card/trek-card.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trek\n                    \n                \n                \n                    \n                        Type :         Trek\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickDeleteConfirm($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            deleteTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTrek()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            presentDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentDeleteConfirm(isAlert?: boolean, alertMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAlert\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alertMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hydratedTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HydratedTrek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgPracticeSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routerLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Trek, HydratedTrek, Picture } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trek-card',\n  templateUrl: './trek-card.component.html',\n  styleUrls: ['./trek-card.component.scss'],\n})\nexport class TrekCardComponent implements OnInit {\n  @Input() public trek: Trek;\n  @Input() public offline = false;\n  @Input() public showAllData: boolean;\n  public hydratedTrek: HydratedTrek;\n  public imgSrc: string;\n  public routerLink: string;\n  public imgPracticeSrc: string;\n\n  constructor(\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    public settings: SettingsService,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    this.hydratedTrek = this.settings.getHydratedTrek(this.trek);\n    if (this.offline) {\n      this.imgSrc = this.offlineTreks.getTrekImageSrc(this.trek);\n      this.imgPracticeSrc = this.offlineTreks.getTrekImageSrc(\n        {} as Trek,\n        {\n          url: this.hydratedTrek.properties.practice.pictogram,\n        } as Picture,\n      );\n    } else {\n      this.imgSrc = this.onlineTreks.getTrekImageSrc(this.trek);\n      this.imgPracticeSrc = this.onlineTreks.getTrekImageSrc(\n        {} as Trek,\n        {\n          url: this.hydratedTrek.properties.practice.pictogram,\n        } as Picture,\n      );\n    }\n\n    this.routerLink = `/app/tabs/treks${this.offline ? '-offline' : ''}/trek-details/${this.trek.properties.id}`;\n  }\n\n  public clickDeleteConfirm($event: Event) {\n    $event.stopPropagation();\n    this.presentDeleteConfirm();\n  }\n\n  private async deleteTrek() {\n    const translationTrekCard = await this.translate.get('trekCard').toPromise();\n\n    const loader = await this.loadingController.create({\n      message: translationTrekCard.deletionInProgress,\n    });\n    await loader.present();\n\n    this.offlineTreks.removeTrek(this.trek.properties.id, true).subscribe(trekRemoved => {\n      loader.dismiss();\n      this.presentDeleteConfirm(\n        true,\n        trekRemoved ? translationTrekCard.trekIsDelete : translationTrekCard.errorWhileDeleting,\n      );\n    });\n  }\n\n  private async presentDeleteConfirm(isAlert?: boolean, alertMsg?: string) {\n    const translationTrekCard = await this.translate.get('trekCard').toPromise();\n    const deleteConfirm = await this.alertController.create({\n      header: translationTrekCard.deleteTitle,\n      message: isAlert ? alertMsg : translationTrekCard.askDelete,\n      buttons: isAlert\n        ? [translationTrekCard.confirmButton]\n        : [\n            {\n              text: translationTrekCard.cancelButton,\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: translationTrekCard.deleteLabel,\n              handler: () => {\n                this.deleteTrek();\n              },\n            },\n          ],\n    });\n\n    await deleteConfirm.present();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n  \n    \n    \n      {{ hydratedTrek.properties?.name }}\n    \n  \n  \n    \n      \n        {{ 'treks.departure' | translate }}\n        \n          {{ hydratedTrek.properties.departure_city?.name }}\n        \n        {{ hydratedTrek.properties.departure }}\n      \n      \n        \n          \n        \n        {{ hydratedTrek.properties.difficulty?.name }}\n        \n          {{ hydratedTrek.properties.duration | number: '1.0-0' }}h 0\"\n            >{{ 60 * (hydratedTrek.properties.duration % 1).toFixed(1) }}min\n        \n        = 24 && showAllData\">\n          {{ hydratedTrek.properties.duration / 24 | number: '1.0-0' }}j\n        \n        \n          {{ hydratedTrek.properties.length / 1000 | number: '1.2-2' }} km\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-card.component.scss\n                \n                .trash-button {\n  position: absolute;\n  z-index: 10;\n  top: 12px;\n  right: 12px;\n}\n\n.extand-card {\n  height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.picto-practice {\n  max-width: 24px;\n  max-height: 24px;\n}\n\n.extra-content-card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ hydratedTrek.properties?.name }}                          {{ \\'treks.departure\\' | translate }}                  {{ hydratedTrek.properties.departure_city?.name }}                {{ hydratedTrek.properties.departure }}                                              {{ hydratedTrek.properties.difficulty?.name }}                  {{ hydratedTrek.properties.duration | number: \\'1.0-0\\' }}h 0\"            >{{ 60 * (hydratedTrek.properties.duration % 1).toFixed(1) }}min                = 24 && showAllData\">          {{ hydratedTrek.properties.duration / 24 | number: \\'1.0-0\\' }}j                          {{ hydratedTrek.properties.length / 1000 | number: \\'1.2-2\\' }} km                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekContext.html":{"url":"interfaces/TrekContext.html","title":"interface - TrekContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonSrc\n                                \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        originalTrek\n                                \n                                \n                                        pois\n                                \n                                \n                                        touristicCategoriesWithFeatures\n                                \n                                \n                                        touristicContents\n                                \n                                \n                                        touristicEvents\n                                \n                                \n                                        trek\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonSrc\n                                    \n                                \n                                \n                                    \n                                        commonSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     MapboxOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MapboxOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalTrek\n                                    \n                                \n                                \n                                    \n                                        originalTrek:         Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Pois\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pois\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicCategoriesWithFeatures\n                                    \n                                \n                                \n                                    \n                                        touristicCategoriesWithFeatures:         TouristicCategoryWithFeatures[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicCategoryWithFeatures[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicContents\n                                    \n                                \n                                \n                                    \n                                        touristicContents:         TouristicContents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicEvents\n                                    \n                                \n                                \n                                    \n                                        touristicEvents:         TouristicEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trek\n                                    \n                                \n                                \n                                    \n                                        trek:         HydratedTrek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TrekContextResolver.html":{"url":"guards/TrekContextResolver.html","title":"guard - TrekContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TrekContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/trek.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, router: Router, settingsService: SettingsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/trek.resolver.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/trek.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Pois,\n  Trek,\n  HydratedTrek,\n  TrekContext,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class TrekContextResolver implements Resolve {\n  constructor(\n    private loading: LoadingService,\n    private offlineTreks: OfflineTreksService,\n    private onlineTreks: OnlineTreksService,\n    private router: Router,\n    private settingsService: SettingsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const trekId = +(route.paramMap.get('trekId'));\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n    return forkJoin(\n      treksService.getTrekById(trekId),\n      treksService.getPoisForTrekById(trekId),\n      treksService.getTouristicContentsForTrekById(trekId),\n      treksService.getTouristicEventsForTrekById(trekId),\n    ).pipe(\n      map(\n        ([trek, pois, touristicContents, touristicEvents]: [\n          Trek | null,\n          Pois,\n          TouristicContents,\n          TouristicEvents\n        ]): TrekContext | null => {\n          if (trek === null) {\n            this.router.navigate(['/']);\n            console.error('No trek found: ', trekId);\n            return null;\n          } else {\n            const mapConfig: MapboxOptions = treksService.getMapConfigForTrekById(trek, offline);\n            const hydratedTrek: HydratedTrek = this.settingsService.getHydratedTrek(trek);\n            const commonSrc = treksService.getCommonImgSrc();\n            const touristicCategoriesWithFeatures = this.settingsService.getTouristicCategoriesWithFeatures(\n              touristicContents,\n            );\n\n            if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n              this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}  ${trek.properties.name}`);\n            }\n\n            return {\n              treksTool: treksService,\n              offline: offline,\n              originalTrek: trek,\n              trek: hydratedTrek,\n              pois,\n              touristicContents,\n              touristicCategoriesWithFeatures,\n              touristicEvents,\n              mapConfig,\n              commonSrc,\n            };\n          }\n        },\n      ),\n      catchError((error: HttpErrorResponse) => {\n        this.loading.finish(); // there are two requests. finish loading if one fails\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekDetailsPageModule.html":{"url":"modules/TrekDetailsPageModule.html","title":"module - TrekDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekDetailsPageModule_imports\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-details/trek-details.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TrekDetailsPage } from './trek-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    },\n    component: TrekDetailsPage,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedTreksModule, SharedUiModule,\n    TranslateModule.forChild(),\n  ],\n  declarations: [\n    TrekDetailsPage,\n  ],\n})\nexport class TrekDetailsPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekMapPage.html":{"url":"components/TrekMapPage.html","title":"component - TrekMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrekMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/trek-map/trek-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-map\n            \n\n            \n                styleUrls\n                ./trek-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                connectionError\n                            \n                            \n                                    Public\n                                currentPois\n                            \n                            \n                                    Public\n                                currentTrek\n                            \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                modalPoiDetails\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                touristicCategoriesWithFeatures\n                            \n                            \n                                    Public\n                                trekUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                presentInformationDeskDetails\n                            \n                            \n                                    Public\n                                    Async\n                                presentPoiDetails\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, modalController: ModalController, route: ActivatedRoute, router: Router, settings: SettingsService, platform: Platform, popoverCtrl: PopoverController, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/trek-map/trek-map.page.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInformationDeskDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInformationDeskDetails(informationDesk: InformationDesk)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    informationDesk\n                                    \n                                                InformationDesk\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentPoiDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPoiDetails(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPois\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pois\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HydratedTrek | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalPoiDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLIonModalElement | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicCategoryWithFeatures[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trekUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ModalController, Platform, PopoverController } from '@ionic/angular';\n\nimport { MapboxOptions } from 'mapbox-gl';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport {\n  HydratedTrek,\n  Poi,\n  Pois,\n  TrekContext,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n} from '@app/interfaces/interfaces';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-trek-map',\n  templateUrl: './trek-map.page.html',\n  styleUrls: ['./trek-map.page.scss'],\n})\nexport class TrekMapPage extends UnSubscribe implements OnDestroy {\n  public currentTrek: HydratedTrek | null = null;\n  public currentPois: Pois;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public loader = true;\n  public trekUrl = '';\n  public connectionError = false;\n  public modalPoiDetails: HTMLIonModalElement | null;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public offline = false;\n\n  constructor(\n    private loading: LoadingService,\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public settings: SettingsService,\n    private platform: Platform,\n    private popoverCtrl: PopoverController,\n    private location: Location\n  ) {\n    super();\n  }\n\n  ionViewDidEnter(): void {\n    this.loading.begin('trek-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe(\n        (data: Data): void => {\n          const context: TrekContext | 'connectionError' = data.context;\n          if (context === 'connectionError') {\n            this.connectionError = true;\n            this.loading.finish('trek-map'); // if there is a connection error, map won't be loaded\n          } else {\n            this.connectionError = false;\n            this.offline = context.offline;\n            this.currentTrek = context.trek;\n            this.currentPois = context.pois;\n            this.touristicCategoriesWithFeatures = context.touristicCategoriesWithFeatures;\n            this.mapConfig = context.mapConfig;\n            this.commonSrc = context.treksTool.getCommonImgSrc();\n            this.trekUrl = context.treksTool.getTrekDetailsUrl((this.currentTrek as any).properties.id);\n          }\n        },\n      ),\n    );\n\n    if (this.platform.is('android')) {\n      this.subscriptions$$.push(\n        this.platform.backButton.subscribeWithPriority(99999, async () => {\n          // close popover\n          try {\n            const popover = await this.popoverCtrl.getTop();\n            if (popover) {\n              popover.dismiss();\n              return;\n            }\n\n            const modal = await this.modalController.getTop();\n            if (modal) {\n              modal.dismiss();\n              return;\n            }\n\n            this.location.back();\n          } catch (error) {\n          }\n        })\n      )\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  public async presentPoiDetails(poi: Poi): Promise {\n    if (this.modalPoiDetails) {\n      await this.modalPoiDetails.dismiss();\n    }\n\n    this.modalPoiDetails = await this.modalController.create({\n      component: PoiDetailsComponent,\n      componentProps: { poi, offline: this.offline, commonSrc: this.commonSrc },\n    });\n\n    this.modalPoiDetails.onDidDismiss().then(() => {\n      this.modalPoiDetails = null;\n    });\n\n    return await this.modalPoiDetails.present();\n  }\n\n  public async presentInformationDeskDetails(informationDesk: InformationDesk): Promise {\n    const modal = await this.modalController.create({\n      component: InformationDeskDetailsComponent,\n      componentProps: { informationDesk },\n    });\n    return await modal.present();\n  }\n\n  public mapIsLoaded(event: Event): void {\n    this.loading.finish('trek-map');\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ currentTrek!.properties.name }}\n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-map.page.scss\n                \n                .bottom-container {\n  z-index: 8;\n  position: absolute;\n  bottom: 0;\n  padding: 5%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ currentTrek!.properties.name }}                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekMapPageModule.html":{"url":"modules/TrekMapPageModule.html","title":"module - TrekMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TrekMapPageModule_imports\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-map/trek-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TrekMapPage } from './trek-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrekMapPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n  ],\n  declarations: [TrekMapPage],\n})\nexport class TrekMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekProperties.html":{"url":"interfaces/TrekProperties.html","title":"interface - TrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MinimalTrekProperties\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        duration\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        networks\n                                \n                                \n                                        pictures\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksContext.html":{"url":"interfaces/TreksContext.html","title":"interface - TreksContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TreksContextResolver.html":{"url":"guards/TreksContextResolver.html","title":"guard - TreksContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TreksContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/treks.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/treks.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/treks.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nimport { TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\n@Injectable()\nexport class TreksContextResolver implements Resolve {\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n    const mapConfig =\n      offline && (this.platform.is('ios') || this.platform.is('android'))\n        ? environment.offlineMapConfig\n        : environment.onlineMapConfig;\n\n    if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n      this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}`);\n    }\n\n    return of({\n      treksTool: treksService,\n      offline: offline,\n      mapConfig,\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksMapPage.html":{"url":"components/TreksMapPage.html","title":"component - TreksMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TreksMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/treks-map/treks-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                FilterTreksService\n                \n            \n\n\n            \n                selector\n                app-treks-map\n            \n\n            \n                styleUrls\n                ./treks-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Public\n                                isInView\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Private\n                                mergeFiltersTreks$\n                            \n                            \n                                    Public\n                                noNetwork\n                            \n                            \n                                    Public\n                                numberOfActiveFilters\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                treksUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ionViewDidLeave\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentFilters\n                            \n                            \n                                    Public\n                                    Async\n                                presentSearch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, filterTreks: FilterTreksService, modalController: ModalController, onlineTreks: OnlineTreksService, router: Router, route: ActivatedRoute, settings: SettingsService, network: Network, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(loaded: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loaded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInView\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeFiltersTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberOfActiveFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { environment } from '@env/environment';\nimport { unsubscribe, UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { MinimalTrek, TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, mergeMap, first } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-treks-map',\n  templateUrl: './treks-map.page.html',\n  styleUrls: ['./treks-map.page.scss'],\n  providers: [FilterTreksService],\n})\nexport class TreksMapPage extends UnSubscribe implements OnInit, OnDestroy {\n  private mergeFiltersTreks$: Subscription;\n  public filteredTreks: MinimalTrek[];\n  public numberOfActiveFilters: string;\n  public offline: boolean;\n  private treksTool: TreksService;\n  public isInView = false;\n  public treksUrl: string;\n  public appName: string = environment.appName;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public currentPosition$: Subscription;\n  public noNetwork = false;\n\n  constructor(\n    public loading: LoadingService,\n    private filterTreks: FilterTreksService,\n    private modalController: ModalController,\n    public onlineTreks: OnlineTreksService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public settings: SettingsService,\n    private network: Network,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.loading.begin('treks-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe(data => {\n        const context: TreksContext = data.context;\n        this.offline = context.offline;\n        this.treksTool = context.treksTool;\n        this.treksUrl = this.treksTool.getTreksUrl();\n        this.mapConfig = cloneDeep(context.mapConfig);\n        this.commonSrc = this.treksTool.getCommonImgSrc();\n      }),\n      this.onlineTreks.onlineTreksError$.subscribe(error => {\n        if (!!error) {\n          this.loading.finish(); // if there was a connection error, map could not be loaded\n        }\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  ionViewWillEnter(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n\n  ionViewDidEnter(): void {\n    this.mapIsLoaded(false);\n    this.mergeFiltersTreks$ = combineLatest(\n      this.route.data.pipe(\n        first(),\n        map(data => data.context),\n        mergeMap((context: TreksContext) => context.treksTool.filteredTreks$),\n      ),\n      this.filterTreks.activeFiltersNumber$,\n    ).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n      this.numberOfActiveFilters = numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n      this.filteredTreks = filteredTreks;\n      this.isInView = true;\n    });\n    this.subscriptions$$.push(this.mergeFiltersTreks$);\n  }\n\n  ionViewDidLeave(): void {\n    this.isInView = false;\n    unsubscribe(this.mergeFiltersTreks$);\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public mapIsLoaded(loaded: boolean): void {\n    if (loaded) {\n      this.loading.finish('treks-map');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n   0)\n    \"\n  >\n    \n      \n        \n          \n            {{ 'toolbar.filters' | translate }} {{ numberOfActiveFilters }}\n          \n            {{ 'toolbar.search' | translate }}\n        \n      \n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-map.page.scss\n                \n                .custom-button {\n  width: 100px;\n  text-transform: capitalize;\n}\n\n.button-margin-left {\n  margin-left: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}      0)    \"  >                                        {{ \\'toolbar.filters\\' | translate }} {{ numberOfActiveFilters }}                      {{ \\'toolbar.search\\' | translate }}                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksMapPageModule.html":{"url":"modules/TreksMapPageModule.html","title":"module - TreksMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule_imports\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks-map/treks-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TreksMapPage } from './treks-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TreksMapPage,\n    resolve: {\n      context: TreksContextResolver\n    }\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedModule, SharedUiModule, TranslateModule.forChild()],\n  declarations: [TreksMapPage],\n})\nexport class TreksMapPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksOrderComponent.html":{"url":"components/TreksOrderComponent.html","title":"component - TreksOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreksOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/treks-order/treks-order.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treks-order\n            \n\n            \n                styleUrls\n                ./treks-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-order.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentOrder\n                            \n                            \n                                isFirstCheck\n                            \n                            \n                                orders\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                    Async\n                                treksOrderChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams, settings: SettingsService, platform: Platform, backgroundGeolocation: BackgroundGeolocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            treksOrderChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    treksOrderChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirstCheck\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\nimport { NavParams, Platform } from '@ionic/angular';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Order } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-treks-order',\n  templateUrl: './treks-order.component.html',\n  styleUrls: ['./treks-order.component.scss'],\n})\nexport class TreksOrderComponent extends UnSubscribe {\n  orders: any;\n  currentOrder: Order;\n  isFirstCheck = true;\n\n  constructor(\n    private navParams: NavParams,\n    private settings: SettingsService,\n    private platform: Platform,\n    private backgroundGeolocation: BackgroundGeolocation,\n  ) {\n    super();\n  }\n\n  ionViewWillEnter() {\n    this.orders = this.navParams.get('orders');\n\n    this.subscriptions$$.push(\n      this.settings.order$.subscribe(order => {\n        this.currentOrder = order.type;\n      }),\n    );\n  }\n\n  public async treksOrderChange(event: any) {\n    if (!this.isFirstCheck) {\n      if (event.detail.value === 'location') {\n        if (this.platform.is('ios') || this.platform.is('android')) {\n          const startLocation = await this.backgroundGeolocation.getCurrentLocation();\n          if (startLocation) {\n            this.settings.saveOrderState(event.detail.value, [startLocation.longitude, startLocation.latitude]);\n          } else {\n            // If location not provided, reset default order\n            this.settings.saveOrderState('default');\n          }\n        } else if ('geolocation' in navigator) {\n          navigator.geolocation.getCurrentPosition(position => {\n            this.settings.saveOrderState(event.detail.value, [position.coords.longitude, position.coords.latitude]);\n          });\n        }\n      } else {\n        this.settings.saveOrderState(event.detail.value);\n      }\n    } else this.isFirstCheck = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'toolbar.orderTitle' | translate }}\n    \n    \n      {{ order.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-order.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'toolbar.orderTitle\\' | translate }}              {{ order.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksPageModule.html":{"url":"modules/TreksPageModule.html","title":"module - TreksPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\ncluster_TreksPageModule_imports\n\n\n\n\nTreksPage\n\nTreksPage\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks/treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { RouterModule } from '@angular/router';\nimport { TreksPage } from './treks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedTreksModule,\n    SharedUiModule,\n    RouterModule.forChild([]),\n    TranslateModule.forChild(),\n  ],\n  declarations: [TreksPage],\n})\nexport class TreksPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksService.html":{"url":"interfaces/TreksService.html","title":"interface - TreksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filteredTreks$\n                                \n                                \n                                        offline\n                                \n                                \n                                        treks$\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCommonImgSrc\n                                \n                                \n                                    getMapConfigForTrekById\n                                \n                                \n                                    getPoisForTrekById\n                                \n                                \n                                    getTouristicContentsForTrekById\n                                \n                                \n                                    getTouristicEventsForTrekById\n                                \n                                \n                                    getTrekById\n                                \n                                \n                                    getTrekDetailsUrl\n                                \n                                \n                                    getTrekImageSrc\n                                \n                                \n                                    getTrekMapUrl\n                                \n                                \n                                    getTreksMapUrl\n                                \n                                \n                                    getTreksUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetMapConfigForTrekById(trek: Trek, isOffline: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isOffline\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoisForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicContentsForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicEventsForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekDetailsUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekMapUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredTreks$\n                                    \n                                \n                                \n                                    \n                                        filteredTreks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treks$\n                                    \n                                \n                                \n                                    \n                                        treks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnSubscribe.html":{"url":"classes/UnSubscribe.html","title":"class - UnSubscribe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnSubscribe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/abstract/unsubscribe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nexport class UnSubscribe implements OnInit, OnDestroy {\n  protected subscriptions$$: Subscription[];\n\n  constructor() {\n    this.subscriptions$$ = [];\n  }\n\n  ngOnInit() {\n    if (!!this.subscriptions$$) {\n      this.subscriptions$$ = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$$.forEach((subscription: Subscription) => unsubscribe(subscription));\n    this.subscriptions$$ = [];\n  }\n\n}\n\nexport function unsubscribe(subscription: Subscription) {\n  if (subscription && subscription.unsubscribe) {\n    subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            class\n            UnSubscribe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            function\n            unsubscribe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/animations.ts\n            \n            variable\n            expandCollapse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/collapsible-list/collapsible-list.component.ts\n            \n            component\n            CollapsibleListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/connect-error/connect-error.component.ts\n            \n            component\n            ConnectErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter-value/filter-value.component.ts\n            \n            component\n            FilterValueComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            component\n            GeolocateNotificationsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/information-desk-details/information-desk-details.component.ts\n            \n            component\n            InformationDeskDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/layers-visibility/layers-visibility.component.ts\n            \n            component\n            LayersVisibilityComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            component\n            MapTrekVizComponent\n            \n                6 %\n                (2/29)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            component\n            MapTreksVizComponent\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/poi-details/poi-details.component.ts\n            \n            component\n            PoiDetailsComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/poi/poi.component.ts\n            \n            component\n            PoiComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/progress/progress.component.ts\n            \n            component\n            ProgressComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/trek-card/trek-card.component.ts\n            \n            component\n            TrekCardComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/treks-order/treks-order.component.ts\n            \n            component\n            TreksOrderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            ContainsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            DataSetting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            FilterValue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrekProperties\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationDesk\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationIntro\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationItem\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            IntervalFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrekProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTreks\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Poi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Pois\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Property\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Settings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategorie\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategoryWithFeatures\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Trek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekContext\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekProperties\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/more/more-item/more-item.page.ts\n            \n            component\n            MoreItemPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/more/more.page.ts\n            \n            component\n            MorePage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/trek-details/trek-details.page.ts\n            \n            component\n            TrekDetailsPage\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/pages/trek-map/trek-map.page.ts\n            \n            component\n            TrekMapPage\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/pages/treks-map/treks-map.page.ts\n            \n            component\n            TreksMapPage\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/pages/treks/treks.page.ts\n            \n            component\n            TreksPage\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/resolvers/more-item.resolver.ts\n            \n            guard\n            MoreItemResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/more.resolver.ts\n            \n            guard\n            MoreResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/trek.resolver.ts\n            \n            guard\n            TrekContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/treks.resolver.ts\n            \n            guard\n            TreksContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            injectable\n            FilterTreksService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/geolocate/geolocate.service.ts\n            \n            injectable\n            GeolocateService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/more-informations/more-informations.service.ts\n            \n            injectable\n            MoreInformationsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            injectable\n            OfflineTreksService\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            injectable\n            OnlineTreksService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/search-treks/search-treks.service.ts\n            \n            injectable\n            SearchTreksService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/variables.ts\n            \n            variable\n            primaryColor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/background-geolocation : ^5.8.0\n        \n            @ionic-native/core : ^5.8.0\n        \n            @ionic-native/file : ^5.8.0\n        \n            @ionic-native/firebase-analytics : ^5.8.0\n        \n            @ionic-native/globalization : ^5.8.0\n        \n            @ionic-native/ionic-webview : ^5.8.0\n        \n            @ionic-native/local-notifications : ^5.8.0\n        \n            @ionic-native/network : ^5.8.0\n        \n            @ionic-native/screen-orientation : ^5.8.0\n        \n            @ionic-native/social-sharing : ^5.8.0\n        \n            @ionic-native/splash-screen : ^5.8.0\n        \n            @ionic-native/status-bar : ^5.8.0\n        \n            @ionic-native/zip : ^5.8.0\n        \n            @ionic/angular : ^4.6.0\n        \n            @ionic/storage : ^2.2.0\n        \n            @mauron85/cordova-plugin-background-geolocation : ^3.0.3\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @turf/distance : ^6.0.1\n        \n            @turf/helpers : ^6.1.4\n        \n            @types/lodash.clonedeep : ^4.5.6\n        \n            @types/mapbox-gl : ^0.51.7\n        \n            cordova-android : 8.0.0\n        \n            cordova-android-play-services-gradle-release : 3.0.0\n        \n            cordova-ios : 5.0.1\n        \n            cordova-plugin-badge : ^0.8.8\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : 6.0.1\n        \n            cordova-plugin-globalization : 1.11.0\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^3.1.2\n        \n            cordova-plugin-local-notification : git+https://github.com/Steffaan/cordova-plugin-local-notifications.git\n        \n            cordova-plugin-mauron85-background-geolocation : 3.0.1\n        \n            cordova-plugin-network-information : 2.0.1\n        \n            cordova-plugin-screen-orientation : 3.0.1\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-plugin-x-socialsharing : 5.4.4\n        \n            cordova-plugin-zip : 3.1.0\n        \n            cordova-sqlite-storage : 3.0.0\n        \n            cordova-support-android-plugin : ^1.0.1\n        \n            cordova-support-google-services : 1.3.1\n        \n            core-js : ^2.6.9\n        \n            es6-promise-plugin : 4.2.2\n        \n            lodash.clonedeep : ^4.5.0\n        \n            mapbox-gl : ^0.53.1\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            unsubscribe   (src/.../unsubscribe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/components/abstract/unsubscribe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGeotrek Mobile\nINSTALLATION\nBefore proceeding, make sure the latest version of Node.js and npm are installed\nnpm install -g ionic@5.1.0\n\nnpm install -g cordova@9.0.0\n\ngit clone git@github.com:GeotrekCE/Geotrek-mobile.git\n\ncd Geotrek-mobile\n\nnpm installRUN THE APP IN THE BROWSER\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.ts' with your personal api url\nionic serveRUN THE APP ON DEVICE\niOS\nNeed iOS environment setup available only on macOS\nionic cordova run iosAndroid\nNeed Android environment setup available on Windows, macOS and Linux\nionic cordova run androidBUILD RELEASE APP\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.prod.ts' with your personal api url\niOS\nionic cordova build ios --prod --releaseAndroid\nionic cordova build android --prod --releaseCUSTOMIZATION OPTIONS\nYou can find below all available options. You can easily overwrite them to customize your app.\nconfig.xml\nApp id\nApp name\nGeotrek Startersrc/environments/environment.ts & environment.prod.ts\nYou can overwrite a lot of options inside these files:AppName (header of the app) , availableLanguage, api url, map options and more\nenvironment.prod.ts will be use for developmentenvironment.prod.ts will be use for release app\nsrc/assets/i18n\nYou can find all the internationalization ressources here (by default Fr and En)\nsrc/assets/map/icons/\nLocal icons to display on the map, like departure or parking icon\nsrc/assets/map/zone/zone.geojson\nGeosjon to display on the mapGenerally represents the limits of the geographical area of the application\nsrc/theme/variables.scss\nColors that will be usedThe most important point here is the primary color to customize your application\nicons and splashscreen\n\nThe source image for icons should ideally be at least 1024×1024px and located in resources/icon.png\n\nThe source image for splash screens should ideally be at least 2732×2732px and located in resources/splash.png. For best results, the splash screen's artwork should roughly fit within a square (1200×1200px) at the center of the image.\n\n\nThen you just have to run\nionic cordova resourcesOther resources\n\nAll others resources are provided by the api\nWe download a global package for offline mode when user downloads his first trek\n\nFirebase Analytics Configuration\nIn order to use Firebase analytics, you had to create a Firebase App.\n\nThen store google-services.json and GoogleService-Info.plist in ./Analytics/\nIn config.xml, add\n\n\n    \n    ...\n  \n  \n    \n    ...\n  \n\nSet true to useFirebase variable in environment files\n\nRemove Firebase Analytics\nIn order to build the app without Firebase you had to\n\nSet false to useFirebase variable in environment files\n\nRun this list of command\n(If you add platforms previously, be sure to delete them)\n\n\n```\n    ionic cordova platform rm android\nionic cordova platform rm ios\n\nionic cordova plugin rm cordova-plugin-firebase-analytics\n\nionic cordova plugin rm cordova-android-play-services-gradle-release\n\nionic cordova plugin rm cordova-support-google-services\n\nionic cordova plugin rm cordova-support-android-plugin\n\nionic cordova platform add android\n\nionic cordova platform build android```\nDocumentation\nAccess to extensive documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2019, Makina Corpus\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoreItemPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MorePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedTreksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nAppModule -->\n\nFilterValueComponent->AppModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nAppModule -->\n\nFiltersComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nAppModule -->\n\nSharedUiModule->AppModule\n\n\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nMorePage\n\nMorePage\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nTreksPage\n\nTreksPage\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    29 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        40 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    Order\n                \n            \n            \n                \n                        \"default\" | \"location\" | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneDeep   (src/.../offline-treks.service.ts)\n                        \n                        \n                            cloneDeep   (src/.../online-treks.service.ts)\n                        \n                        \n                            distance   (src/.../filter-treks.service.ts)\n                        \n                        \n                            distance   (src/.../geolocate-notifications.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            expandCollapse   (src/.../animations.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-trek-viz.component.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-treks-viz.component.ts)\n                        \n                        \n                            primaryColor   (src/.../variables.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/offline-treks/offline-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/online-treks/online-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/filter-treks/filter-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: true,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    addSoustractMaxBounds: 0.01,\n    iconSize: 1, // check your icon size, ideally it would be 48px*48px\n    globalMapIconSize: 1,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5,\n      },\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff',\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1],\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12,\n        },\n      },\n    },\n    touristicContentLayersProperties: {\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1,\n        },\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: false,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://rando-millevaches.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    addSoustractMaxBounds: 0.01,\n    iconSize: 1, // check your icon size, ideally it would be 48px*48px\n    globalMapIconSize: 1,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5,\n      },\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff',\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1],\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12,\n        },\n      },\n    },\n    touristicContentLayersProperties: {\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1,\n        },\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            expandCollapse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : trigger('expandCollapse', [\n    transition(':enter', [\n      style({ transform: 'scaleY(0)' }),\n      animate('250ms ease-out', style({ transform: 'scaleY(1)' }))\n    ]),\n    transition(':leave', [\n      style({ transform: 'scaleY(1)' }),\n      animate('250ms ease-in', style({ transform: 'scaleY(0)' }))\n    ])\n  ])\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/environments/variables.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            primaryColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#898083'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
